(10) sl sv st no andecomp.f90                   |allocate(plan_identifier(0:max_number_of_plans_to_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(plan_object_function_value(0:max_number_of_plans_to_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(plan_has_mut_exc_units(0:max_number_of_plans_to_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(plan_option_sequence(50, max_number_of_plans_to_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(option_pointr(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(option_ann_units(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(avail_annual_units(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(option_avail_units(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(avail_cum_units(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(option_cap(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(option_loading_type(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(option_is_active(active_options), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(plan_being_tested(50), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(depth_best_plans(option_depth, depth_plans_2_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(depth_plan_objective_value(depth_plans_2_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(plans_2_test_at_next_depth(option_depth, max_plans_2_test), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(depth_best_plans(option_depth, depth_plans_2_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(depth_plan_objective_value(depth_plans_2_save), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(plans_2_test_at_next_depth(option_depth, max_plans_2_test), stat=i4st)|
(10) sl sv st no andecomp.f90                   |allocate(temp_bad_array(option_depth, max_bad_plans), stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(maint_rq_da_dec(n_active_units),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(maint_weight(n_active_units),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(order_dec(n_active_units),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(opt_range_ofs(n_active_units),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(opt_range_dur(n_active_units),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(hrstostate(0:1,12*max_fo_per_month),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(so_beg_moda(2,nunits),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(so_end_moda(2,nunits),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(fo_beg_hr(max_fo_per_month,12,nunits),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(fo_end_hr(max_fo_per_month,12,nunits),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(pd_beg_hr(max_pd_per_month,12,nunits),stat=i4st)|
(10) sl sv st no clm_objt.f90                   |allocate(pd_end_hr(max_pd_per_month,12,nunits),stat=i4st)|
(10) sl sv st no cn_objt.f90                    |allocate(escalation_vector(for_all_options), stat=astat)|
(10) sl sv st no cn_objt.f90                    |allocate(base_option_list(base_options), stat=allocstat)|
(10) sl sv st no cn_objt.f90                    |allocate(cycl_option_list(cycle_options), stat=allocstat)|
(10) sl sv st no cn_objt.f90                    |allocate(peak_option_list(peak_options), stat=allocstat)|
(10) sl sv st no cn_objt.f90                    |allocate(load_option_list(peak_reduc_options), stat=allocstat)|
(10) sl sv st no cn_objt.f90                    |allocate(fill_option_list(fill_options), stat=allocstat)|
(10) sl sv st no cn_objt.f90                    |allocate(active_option_list(total_active_options), stat=allocstat)|
(10) sl sv st no el_objt.f90                    |allocate(temp_retired_unit_no(20), stat=allocstat)|
(10) sl sv st no el_objt.f90                    |allocate(temp_retired_off_line(20), stat=allocstat)|
(10) sl sv st no facalg.f90                     |allocate(ioffacalgs(nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(x         (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(corg      (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(cmod      (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(glb       (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(lub       (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(capacity  (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(equivavail(nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(unitowning(nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(blockpos  (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxrow    (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxcycled (nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxicovers(nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(blockofsameunitas(nvr,2),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(varofdisprank(nvr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxrhs    (naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxcovers (naux,nvraux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(acolumn   (naux,nvraux),stat=as) ! data varies 1st across rows|
(10) sl sv st no facalg.f90                     |allocate(prevstate(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(varstate(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(prevbdirow(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(basisdirow(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(prevbkyvar(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(basiskyvar(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(fctowning(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(keyvar(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(d(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(phi(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(dualvar(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(bkowns(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(bindsetowns(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(testsetowns(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(wouldbezero(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(varinfctorder(nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(vfofirstinfct(0:nvar),stat=as) ! 0 allows room for invalidfacet|
(10) sl sv st no facalg.f90                     |allocate(bnkinrow(naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxdualmult(naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxcolumn(naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(dcolumn(naux,naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(dorgrow(naux,naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(dinvrow(naux,naux),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(varcumul(nkappa,-1:nvar),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(auxcoeff(nvarub),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(cflb    (nvarub),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(cfub    (nvarub),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(blockdispcost(nunits,2),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(blockheatrate(nunits,2),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(arrayold(nrows,nrows),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(jmarginal(limunknowns),stat=as) ! need to count even if fctvoidofdj|
(10) sl sv st no facalg.f90                     |allocate(grayorder(0:supigr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(holdorder(0:supigr),stat=as)|
(10) sl sv st no facalg.f90                     |allocate(grayorder(0:supigr),stat=as)|
(10) sl sv st no fe_objt.f90                    |allocate(pointr_record(0:1024),stat=error) ! save pointr_record|
(10) sl sv st no fuelused.f90                   |allocate(first_time_for_this(0:max_fuel_price_series),stat=error)|
(10) sl sv st no fuelused.f90                   |allocate(fuel_price_pointr(0:max_fuel_price_series),stat=error)|
(10) sl sv st no lpsolver.f90                   |allocate(bmatrix(0:msup,0:msup)    ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(bmatinv(0:msup,0:msup)    ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(swapvector (0:msup)       ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(phi(0:msup)               ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(yj (0:msup)               ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(yk (0:msup)               ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(z_c(0:nsup)               ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(zstar_c(0:nsup)           ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(zorg_c(0:nsup)            ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(gmatrix(0:sirank,0:sirank),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(gmatluf(0:sirank,0:sirank),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(upperbounded(0:nsup)    ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(symmetriclimits(0:nsup) ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(lineend(0:1,0:siline)   ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(basiscol(0:msup)        ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(basispos(0:nsup)        ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(b(0:sicons)             ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(c(0:nsup)               ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(ub(0:nsup)              ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(xb(0:msup)              ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(constrtrow(0:nsup)      ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(yline(0:siline)         ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(ej(0:msup)              ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(consrhs(0:sicons)       ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(segweight(0:nsup)       ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(currlimit(0:1,0:siline) ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(amatrix(0:sicons,0:nsup),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(linename(0:siline)      ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(cb(0:msup)           ,stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(nodevoltage(0:sinode),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(nodecurrent(0:sinode),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(bmatluf(0:msup,0:msup),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(pivotrow      (0:msup),stat=as)|
(10) sl sv st no lpsolver.f90                   |allocate(supmaginrow   (0:msup),stat=as)|
