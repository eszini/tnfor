Parametro encontrado: -v 
Parametro encontrado: -opciones 
Arg:  0  s:|./tfor| 
Arg:  1  s:|-v| 
Arg:  2  s:|-opciones=d5i1| 
Arg:  3  s:|-debug=1| 
Arg:  4  s:|-zap=9| 
Arg:  5  s:|-exec=9| 
Arg:  6  s:|-opt=1| 
Arg:  7  s:|-inp=lr1| 
Arg:  8  s:|-dato=repo4| 
Arg:  9  s:|-out=list_allocate.txt| 
Arg: 10  s:|-ou2=zfor.txt| 
Arg: 11  s:|-ou3=zf90.txt| 
Arg: 12  s:|-ou4=plan.txt| 
Arg: 13  s:|-aux=lfor.txt| 
Arg: 14  s:|-log=lf90.txt| 
Arg: 15  s:|-ou5=mapa.txt| 
Arg: 16  s:|-ou6=error.txt| 
Arch de config solicit :  0 (ffcfg)  
Cantidad de argumentos :  0          


Argumentos despues de correspondientes gp_init ... 

cantidad de args : 17  
arg( 0) |./tfor| 
arg( 1) |-v| 
arg( 2) |-opciones=d5i1| 
arg( 3) |-debug=1| 
arg( 4) |-zap=9| 
arg( 5) |-exec=9| 
arg( 6) |-opt=1| 
arg( 7) |-inp=lr1| 
arg( 8) |-dato=repo4| 
arg( 9) |-out=list_allocate.txt| 
arg(10) |-ou2=zfor.txt| 
arg(11) |-ou3=zf90.txt| 
arg(12) |-ou4=plan.txt| 
arg(13) |-aux=lfor.txt| 
arg(14) |-log=lf90.txt| 
arg(15) |-ou5=mapa.txt| 
arg(16) |-ou6=error.txt| 
Programa    : ./tfor
Param tipo 2: -v
Param tipo 3: -opciones=d5i1
Param tipo 3: -debug=1
Param tipo 3: -zap=9
Param tipo 3: -exec=9
Param tipo 3: -opt=1
Param tipo 3: -inp=lr1
Param tipo 3: -dato=repo4
Param tipo 3: -out=list_allocate.txt
Param tipo 3: -ou2=zfor.txt
Param tipo 3: -ou3=zf90.txt
Param tipo 3: -ou4=plan.txt
Param tipo 3: -aux=lfor.txt
Param tipo 3: -log=lf90.txt
Param tipo 3: -ou5=mapa.txt
Param tipo 3: -ou6=error.txt


[2025/02/12 07:09:04] ((+)) proceso main


Uso cfg arc       :  0
Cantidad de par   : 16
Cantidad de par 1 :  0
Cantidad de par 2 :  1
Cantidad de par 3 : 15
Cantidad de par 4 :  0

Uso cfg arc       :  0
Cantidad de par   : 16
Cantidad de par 1 :  0
Cantidad de par 2 :  1
Cantidad de par 3 : 15
Cantidad de par 4 :  0

Parametro   0     : ./tfor
Parametro   1     : -v
Parametro   2     : -opciones=d5i1
Parametro   3     : -debug=1
Parametro   4     : -zap=9
Parametro   5     : -exec=9
Parametro   6     : -opt=1
Parametro   7     : -inp=lr1
Parametro   8     : -dato=repo4
Parametro   9     : -out=list_allocate.txt
Parametro  10     : -ou2=zfor.txt
Parametro  11     : -ou3=zf90.txt
Parametro  12     : -ou4=plan.txt
Parametro  13     : -aux=lfor.txt
Parametro  14     : -log=lf90.txt
Parametro  15     : -ou5=mapa.txt
Parametro  16     : -ou6=error.txt


[2025/02/12 07:09:04] ((+)) abro_files

[2025/02/12 07:09:04] ((-)) abro_files

[2025/02/12 07:09:04] ((+)) proceso principal

[2025/02/12 07:09:04] ((+)) exec9

Archivo a cargar:  |repo1/p1.f90|
[2025/02/12 07:09:04] ((+)) qfv_load

  0 |!     ******************************************************************|
  1 |!     COAL_VECTOR_OBJ.F90|
  2 |!     Copyright(c)  2000|
  3 |!|
  4 |!     Created: 12/23/2010 1:42:47 PM|
  5 |!     Author : MARK S GERBER|
  6 |!     Last change: MSG 10/12/2011 4:36:42 PM|
  7 |!     ******************************************************************|
  8 ||
  9 |      MODULE COAL_ESCALATIONS_MAKEBIN_INPUTS|
 10 |         CHARACTER (LEN=50) :: COMMENT|
 11 |         REAL (KIND=4) :: VALUES_30(0:30)|
 12 |         CHARACTER (LEN=40) :: DESCRIPTION|
 13 |         INTEGER (KIND=2) :: START_MONTH,END_MONTH, &|
 14 |                             GROWTH_RATE_YEAR|
 15 |         INTEGER (KIND=4) :: VECTOR_NO|
 16 |         CHARACTER (LEN=2) :: VECTOR_TYPE|
 17 |         CHARACTER (LEN=2), PARAMETER :: DATA_FILE_CODE="CZ"|
 18 |         CHARACTER (LEN=36), PARAMETER :: FILE_TYPE= &|
 19 |                                  'Coal Model Demand & Escalation Rates'|
 20 |! COAL_ESCALATIONS_READ_DATA|
 21 |         INTEGER (KIND=2), PARAMETER :: COAL_ESCALATIONS_LRECL=512 ! OUT|
 22 |         CHARACTER (LEN=40), PARAMETER :: &|
 23 |               COAL_ESCA_BIN_FILE_NAME ="COAL_ESCALATIONS.BIN"|
 24 |         LOGICAL (KIND=4), SAVE ::  COAL_ESCALATIONS_FILE_EXISTS=.FALSE.|
 25 |         CHARACTER (LEN=2), SAVE :: &|
 26 |                                PROCESS_COAL_ESCA_FILE_OL='BC'|
 27 |         INTEGER (KIND=2), SAVE :: ESCALATIONS_VECTOR_BASEFILE=0, &|
 28 |                                   ESCALATIONS_VECTOR_OVERLAY=0|
 29 |         INTEGER (KIND=4), SAVE :: MAX_VECTOR_NO_BASEFILE=0, &|
 30 |                                   MAX_VECTOR_NO_OVERLAY=0|
 31 |      END MODULE COAL_ESCALATIONS_MAKEBIN_INPUTS|
 32 |      MODULE COAL_ESCALATION_VECTORS_DATA|
 33 |         INTEGER (KIND=4), ALLOCATABLE ,SAVE :: COAL_VECTOR_MAP(:)|
 34 |         REAL (KIND=4), ALLOCATABLE, SAVE :: COAL_VECTOR_VALUES(:,:)|
 35 |         LOGICAL (KIND=1), ALLOCATABLE, SAVE :: &|
 36 |                                            COAL_VECTOR_TYPE_IS_VALUE(:)|
 37 |         INTEGER (KIND=4) :: MaxVectorNum|
 38 |      END MODULE|
 39 |!***********************************************************************|
 40 |!|
 41 |!|
 42 |      SUBROUTINE COAL_ESCALATIONS_MAKEBIN(BASE_FILE_NAME)  ! ENTERY NAME|
 43 |!|
 44 |!***********************************************************************|
 45 |!|
 46 |!|
 47 |      USE COAL_ESCALATIONS_MAKEBIN_INPUTS|
 48 |        use end_routine|
 49 |!      USE COAL_cnw_FILES_READ_INPUT|
 50 |!|
 51 |! SIMULATION VARIABLES|
 52 |!|
 53 |         INTEGER (KIND=2) ::   UNIT_NUM=10,INUNIT,IREC,DELETE,I|
 54 |         INTEGER (KIND=4) :: IOS|
 55 |         CHARACTER (LEN=256) :: BASE_FILE_NAME,OVERLAY_FAMILY_NAME, &|
 56 |                                FILE_NAME,OUTPUT_DIRECTORY, &|
 57 |                                BASE_FILE_DIRECTORY,SCREEN_OUTPUT|
 58 |!         LOGICAL (KIND=4) :: FILE_EXISTS|
 59 |         CHARACTER (LEN=1) :: Active="Y"|
 60 |! DECLARATION FOR DBREAD COMMON BLOCK|
 61 |         CHARACTER (len=1024) :: RECLN|
 62 |! **********************************************************************|
 63 |!|
 64 |      SCREEN_OUTPUT = TRIM(FILE_TYPE)//'-'//BASE_FILE_NAME|
 65 |!      CALL MG_LOCATE_WRITE(16,30,SCREEN_OUTPUT,0,0)|
 66 |      FILE_NAME = TRIM(BASE_FILE_DIRECTORY())// &|
 67 |                      DATA_FILE_CODE//"B"//TRIM(BASE_FILE_NAME )//".DAT"|
 68 |      INQUIRE(FILE=FILE_NAME,EXIST=COAL_ESCALATIONS_FILE_EXISTS)|
 69 |      MAX_VECTOR_NO_BASEFILE = 0|
 70 |      IF(COAL_ESCALATIONS_FILE_EXISTS) THEN|
 71 |!|
 72 |         OPEN(10,FILE=FILE_NAME,STATUS="OLD")|
 73 |         OPEN(11,FILE=TRIM(OUTPUT_DIRECTORY())//"BC"// &|
 74 |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &|
 75 |                                ACCESS="DIRECT",STATUS="UNKNOWN", &|
 76 |                                RECL=COAL_ESCALATIONS_LRECL)|
 77 |!|
 78 |!|
 79 |         IREC = 0|
 80 |         READ(10,*) DELETE|
 81 |         DO ! TABLES|
 82 |            DO ! TABLE RECORDS|
 83 |               READ(10,'(A)',IOSTAT=IOS) RECLN|
 84 |!|
 85 |               IF(IOS /= 0) EXIT ! END OF FILE|
 86 |!|
 87 |               IF(RECLN(1:1) == '7') THEN ! END OF TABLE ! EXIT AT BOTTO|
 88 |                  EXIT ! GO TO NEXT TABLE|
 89 |               ENDIF|
 90 |!|
 91 |               VALUES_30 = -9999.|
 92 |               VALUES_30(0) = 0.|
 93 |               START_MONTH = 0|
 94 |               END_MONTH = 0|
 95 |               RECLN = TRIM(RECLN)//',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'|
 96 |               READ(RECLN,*,IOSTAT=IOS) DELETE, &|
 97 |                                        DESCRIPTION,VECTOR_NO, &|
 98 |                                        VECTOR_TYPE,GROWTH_RATE_YEAR, &|
 99 |                                        VALUES_30, &|
100 |                                        COMMENT,START_MONTH,END_MONTH|
101 |!|
102 |               IF(IOS /= 0) THEN|
103 |                  WRITE(4,*) TRIM(RECLN)|
104 |                  call end_program("Stop: coal_vector_obj CVO1")|
105 |               ENDIF|
106 |               IREC = IREC + 1|
107 |               DO I = 1, 30|
108 |                  IF(VALUES_30(I) == -9999.) THEN|
109 |                     VALUES_30(I) = VALUES_30(I-1)|
110 |                  ENDIF|
111 |               ENDDO|
112 |               IF(DELETE < 8) THEN|
113 |                  ESCALATIONS_VECTOR_BASEFILE = &|
114 |                                         ESCALATIONS_VECTOR_BASEFILE + 1|
115 |                  MAX_VECTOR_NO_BASEFILE = MAX(VECTOR_NO, &|
116 |                                                 MAX_VECTOR_NO_BASEFILE)|
117 |               ENDIF|
118 |               WRITE(11,REC=IREC) DELETE, &|
119 |                                  VECTOR_NO, &|
120 |                                  VECTOR_TYPE,GROWTH_RATE_YEAR, &|
121 |                                  VALUES_30, &|
122 |                                  START_MONTH,END_MONTH|
123 ||
124 |            ENDDO ! TABLE RECORDS|
125 |            IF(IOS /= 0) EXIT|
126 |         ENDDO ! READ TABLES|
127 |         CLOSE(10)|
128 |         CLOSE(11)|
129 |      ENDIF|
130 |      RETURN|
131 |      END|
132 |! **********************************************************************|
133 |      LOGICAL FUNCTION READ_COAL_ESCALATION_FILE(BASE_YEAR)|
134 |         USE COAL_ESCALATIONS_MAKEBIN_INPUTS|
135 |         USE COAL_ESCALATION_VECTORS_DATA|
136 |         CHARACTER (LEN=256) :: OUTPUT_DIRECTORY|
137 |         INTEGER (KIND=4) :: IOS|
138 |         integer (kind=2) :: iArray,DELETE,IREC,nArray,Yr,BASE_YEAR|
139 ||
140 |         READ_COAL_ESCALATION_FILE = COAL_ESCALATIONS_FILE_EXISTS|
141 |         IF(COAL_ESCALATIONS_FILE_EXISTS) THEN|
142 |            IF(PROCESS_COAL_ESCA_FILE_OL == 'OL') THEN|
143 |               nArray = ESCALATIONS_VECTOR_OVERLAY|
144 |               MaxVectorNum = MAX_VECTOR_NO_OVERLAY|
145 |            ELSE|
146 |               nArray = ESCALATIONS_VECTOR_BASEFILE|
147 |               MaxVectorNum = MAX_VECTOR_NO_BASEFILE|
148 |            ENDIF|
149 |! ALLOCATE ARRAYS|
150 |            IF(ALLOCATED(COAL_VECTOR_MAP)) THEN|
151 |               DEALLOCATE (COAL_VECTOR_MAP)|
152 |            ENDIF|
153 |            IF(.NOT. ALLOCATED(COAL_VECTOR_MAP)) THEN|
154 |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))|
155 |            ENDIF|
156 |            IF(ALLOCATED(COAL_VECTOR_TYPE_IS_VALUE)) THEN|
157 |               DEALLOCATE (COAL_VECTOR_TYPE_IS_VALUE, &|
158 |                              COAL_VECTOR_VALUES)|
159 |            ENDIF|
160 |            IF(.NOT. ALLOCATED(COAL_VECTOR_TYPE_IS_VALUE)) THEN|
161 |               ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray), &|
162 |                         COAL_VECTOR_VALUES(31,-1:nArray))|
163 |            ENDIF|
164 |            COAL_VECTOR_TYPE_IS_VALUE = .FALSE.|
165 |            COAL_VECTOR_VALUES = 0.|
166 |            COAL_VECTOR_MAP = 0.|
167 |!|
168 |            OPEN(10,FILE=TRIM(OUTPUT_DIRECTORY())// &|
169 |              PROCESS_COAL_ESCA_FILE_OL// &|
170 |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &|
171 |                                  ACCESS="DIRECT",STATUS="UNKNOWN", &|
172 |                                    RECL=COAL_ESCALATIONS_LRECL)|
173 |            IREC = 0|
174 |            iArray = 1|
175 |            DO|
176 |               IREC = IREC + 1|
177 |               READ(10,REC=IREC,IOSTAT=IOS) DELETE, &|
178 |                                            VECTOR_NO,VECTOR_TYPE, &|
179 |                                            GROWTH_RATE_YEAR, &|
180 |                                            VALUES_30, &|
181 |                                            START_MONTH,END_MONTH|
182 |               IF(IOS /= 0) EXIT|
183 |               IF(DELETE > 7) CYCLE|
184 |               COAL_VECTOR_MAP(VECTOR_NO) = iArray|
185 |               IF(INDEX(VECTOR_TYPE,'V') /= 0) THEN|
186 |                  COAL_VECTOR_TYPE_IS_VALUE(iArray) = .TRUE.|
187 |                  GROWTH_RATE_YEAR = GROWTH_RATE_YEAR - BASE_YEAR|
188 |                  IF(GROWTH_RATE_YEAR > 0 .AND. &|
189 |                                             GROWTH_RATE_YEAR < 31) THEN|
190 |                     COAL_VECTOR_VALUES(31,iArray) = VALUES_30(30)/100.|
191 |!|
192 |                     DO Yr = GROWTH_RATE_YEAR, 30|
193 |                        VALUES_30(Yr) = VALUES_30(Yr-1) * &|
194 |                                                 (1.+VALUES_30(Yr)/100.)|
195 |                     ENDDO|
196 |                  ELSE|
197 |                     IF(VALUES_30(30-1) /= 0.) THEN|
198 |                        COAL_VECTOR_VALUES(30+1,iArray) = -1. + &|
199 |                                           VALUES_30(30)/VALUES_30(30-1)|
200 |                     ELSE|
201 |                        COAL_VECTOR_VALUES(30+1,iArray) = 0.|
202 |                     ENDIF|
203 |                  ENDIF|
204 |                  COAL_VECTOR_VALUES(1:30,iArray) = VALUES_30(1:30)|
205 |               ELSE|
206 |                  COAL_VECTOR_VALUES(1:30,iArray) = VALUES_30(1:30)/100.|
207 |                  COAL_VECTOR_VALUES(30+1,iArray) = &|
208 |                                           COAL_VECTOR_VALUES(30,iArray)|
209 |               ENDIF|
210 |! AFTER ALL IS DONE|
211 |               iArray = iArray + 1|
212 |               IF(iArray > nArray) EXIT|
213 |            ENDDO|
214 ||
215 |            CLOSE(10)|
216 |         ENDIF|
217 |      END FUNCTION|
218 |! ***********************************************************************|
219 |      LOGICAL FUNCTION RETURN_COAL_VECTOR(R_VECTOR_VALUES,R_VECTOR_NO)|
220 |! ***********************************************************************|
221 |         USE COAL_ESCALATION_VECTORS_DATA|
222 |         REAL (KIND=4) :: R_VECTOR_VALUES(*)|
223 |         INTEGER (KIND=4) :: R_VECTOR_NO,I4|
224 ||
225 |! THE VALUES FOR A VECTOR ARE RETURN FOR THE AVAILABLE DATA YEARS|
226 |!|
227 |         IF(-1 <= R_VECTOR_NO .AND. R_VECTOR_NO <= MaxVectorNum) THEN|
228 |            I4 = COAL_VECTOR_MAP(R_VECTOR_NO)|
229 |            RETURN_COAL_VECTOR = COAL_VECTOR_TYPE_IS_VALUE(I4)|
230 |            IF(COAL_VECTOR_TYPE_IS_VALUE(I4)) THEN|
231 |               R_VECTOR_VALUES(1:30) = COAL_VECTOR_VALUES(1:30,I4)|
232 |            ELSE|
233 |               R_VECTOR_VALUES(1:30)=1.+COAL_VECTOR_VALUES(1:30,I4)|
234 |            ENDIF|
235 |         ELSE|
236 |            RETURN_COAL_VECTOR = .TRUE.|
237 |            R_VECTOR_VALUES(1:30) = 0.|
238 |            WRITE(4,*) "Coal Escalation vector",R_VECTOR_NO, &|
239 |                                                      ' does not exist.'|
240 |         ENDIF|
241 |      RETURN|
242 |      END|
243 |!***********************************************************************|
244 |      SUBROUTINE COAL_ESCALATIONS_MAKEOVL(OVERLAY_FILE_NAME)|
245 |!***********************************************************************|
246 |!|
247 |!|
248 |      USE COAL_ESCALATIONS_MAKEBIN_INPUTS|
249 |!|
250 |! SIMULATION VARIABLES|
251 |!|
252 |         INTEGER (KIND=2) ::   UNIT_NUM=10,INUNIT,IREC,DELETE|
253 |         INTEGER (KIND=4) :: IOS|
254 |         CHARACTER (LEN=*) :: OVERLAY_FILE_NAME|
255 |         CHARACTER (LEN=256) :: FILE_NAME,OUTPUT_DIRECTORY|
256 |         LOGICAL (KIND=4) :: DATA_FILE_EXISTS|
257 |! DECLARATION FOR DBREAD COMMON BLOCK|
258 |         CHARACTER (len=1024) :: RECLN|
259 |! **********************************************************************|
260 |!|
261 |      FILE_NAME=TRIM(OUTPUT_DIRECTORY())//DATA_FILE_CODE//"O"// &|
262 |                                        TRIM(OVERLAY_FILE_NAME)//".DAT"|
263 |      INQUIRE(FILE=FILE_NAME,EXIST=DATA_FILE_EXISTS)|
264 |      IF(DATA_FILE_EXISTS .AND. COAL_ESCALATIONS_FILE_EXISTS) THEN|
265 |         MAX_VECTOR_NO_OVERLAY = 0|
266 |         ESCALATIONS_VECTOR_OVERLAY = 0|
267 |         INUNIT = 12|
268 |         IF(PROCESS_COAL_ESCA_FILE_OL == 'BC') THEN|
269 |            OPEN(11,FILE=TRIM(OUTPUT_DIRECTORY())//"BC"// &|
270 |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &|
271 |                                     ACCESS="DIRECT",STATUS="UNKNOWN", &|
272 |                                            RECL=COAL_ESCALATIONS_LRECL)|
273 |            INUNIT = 11|
274 |         ENDIF|
275 |         OPEN(12,FILE=TRIM(OUTPUT_DIRECTORY())//"OL"// &|
276 |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &|
277 |                                      ACCESS="DIRECT",STATUS="UNKNOWN", &|
278 |                                            RECL=COAL_ESCALATIONS_LRECL)|
279 |!|
280 |         OPEN(10,FILE=FILE_NAME)|
281 |         READ(10,*) DELETE|
282 |!|
283 |         READ(10,'(A)',IOSTAT=IOS) RECLN|
284 |         DO WHILE(RECLN(1:1) == '7')  ! END OF OVERLAY TABLE|
285 |            READ(10,'(A)',IOSTAT=IOS) RECLN|
286 |         ENDDO|
287 |!|
288 |         IREC = 0|
289 |         DO|
290 |            IREC = IREC + 1|
291 |            READ(INUNIT,REC=IREC,IOSTAT=IOS)DELETE, &|
292 |                                  VECTOR_NO, &|
293 |                                  VECTOR_TYPE,GROWTH_RATE_YEAR, &|
294 |                                  VALUES_30, &|
295 |                                  START_MONTH,END_MONTH|
296 |            IF(IOS /= 0) EXIT|
297 |            RECLN = TRIM(RECLN)//',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'|
298 |            READ(RECLN,*,IOSTAT=IOS) DELETE, &|
299 |                                        DESCRIPTION,VECTOR_NO, &|
300 |                                        VECTOR_TYPE,GROWTH_RATE_YEAR, &|
301 |                                        VALUES_30, &|
302 |                                        COMMENT,START_MONTH,END_MONTH|
303 |            READ(10,'(A)',IOSTAT=IOS) RECLN|
304 |            DO WHILE(RECLN(1:1) == '7')  ! END OF OVERLAY TABLE|
305 |               READ(10,'(A)',IOSTAT=IOS) RECLN|
306 |            ENDDO|
307 |            IF(DELETE < 8) THEN|
308 |               ESCALATIONS_VECTOR_OVERLAY = &|
309 |                                          ESCALATIONS_VECTOR_OVERLAY + 1|
310 |               MAX_VECTOR_NO_OVERLAY = MAX(VECTOR_NO, &|
311 |                                                  MAX_VECTOR_NO_OVERLAY)|
312 |            ENDIF|
313 |            WRITE(12,REC=IREC) DELETE, &|
314 |                               VECTOR_NO, &|
315 |                               VECTOR_TYPE,GROWTH_RATE_YEAR, &|
316 |                               VALUES_30, &|
317 |                               START_MONTH,END_MONTH|
318 |         ENDDO|
319 |         CLOSE(10)|
320 |         CLOSE(12)|
321 |         IF(PROCESS_COAL_ESCA_FILE_OL == 'BC') CLOSE(11)|
322 |         PROCESS_COAL_ESCA_FILE_OL = 'OL'|
323 |      ENDIF|
324 |      RETURN|
325 |      END|
326 |!|
327 |      SUBROUTINE RESET_VECTORS_OL()|
328 |      USE COAL_ESCALATIONS_MAKEBIN_INPUTS|
329 |         PROCESS_COAL_ESCA_FILE_OL = 'BC'|
330 |      RETURN|
331 |      END|
332 ||
Cantidad de lineas en source ql       :    333


[2025/02/12 07:09:04] ((-)) qfv_load

Archivo cargado:    333 |repo1/p1.f90|

load:     0   332 |p1.f90|
Cantidad de archivos cargados :      1 
Cantidad de lineas cargadas   :    333 



Comprobando integridad de la carga: 

i:     0  |!     ******************************************************************| 
i:     1  |!     COAL_VECTOR_OBJ.F90| 
i:     2  |!     Copyright(c)  2000| 
i:     3  |!| 
i:     4  |!     Created: 12/23/2010 1:42:47 PM| 
i:     5  |!     Author : MARK S GERBER| 
i:     6  |!     Last change: MSG 10/12/2011 4:36:42 PM| 
i:     7  |!     ******************************************************************| 
i:     8  || 
i:     9  |      MODULE COAL_ESCALATIONS_MAKEBIN_INPUTS| 
i:    10  |         CHARACTER (LEN=50) :: COMMENT| 
i:    11  |         REAL (KIND=4) :: VALUES_30(0:30)| 
i:    12  |         CHARACTER (LEN=40) :: DESCRIPTION| 
i:    13  |         INTEGER (KIND=2) :: START_MONTH,END_MONTH, &| 
i:    14  |                             GROWTH_RATE_YEAR| 
i:    15  |         INTEGER (KIND=4) :: VECTOR_NO| 
i:    16  |         CHARACTER (LEN=2) :: VECTOR_TYPE| 
i:    17  |         CHARACTER (LEN=2), PARAMETER :: DATA_FILE_CODE="CZ"| 
i:    18  |         CHARACTER (LEN=36), PARAMETER :: FILE_TYPE= &| 
i:    19  |                                  'Coal Model Demand & Escalation Rates'| 
i:    20  |! COAL_ESCALATIONS_READ_DATA| 
i:    21  |         INTEGER (KIND=2), PARAMETER :: COAL_ESCALATIONS_LRECL=512 ! OUT| 
i:    22  |         CHARACTER (LEN=40), PARAMETER :: &| 
i:    23  |               COAL_ESCA_BIN_FILE_NAME ="COAL_ESCALATIONS.BIN"| 
i:    24  |         LOGICAL (KIND=4), SAVE ::  COAL_ESCALATIONS_FILE_EXISTS=.FALSE.| 
i:    25  |         CHARACTER (LEN=2), SAVE :: &| 
i:    26  |                                PROCESS_COAL_ESCA_FILE_OL='BC'| 
i:    27  |         INTEGER (KIND=2), SAVE :: ESCALATIONS_VECTOR_BASEFILE=0, &| 
i:    28  |                                   ESCALATIONS_VECTOR_OVERLAY=0| 
i:    29  |         INTEGER (KIND=4), SAVE :: MAX_VECTOR_NO_BASEFILE=0, &| 
i:    30  |                                   MAX_VECTOR_NO_OVERLAY=0| 
i:    31  |      END MODULE COAL_ESCALATIONS_MAKEBIN_INPUTS| 
i:    32  |      MODULE COAL_ESCALATION_VECTORS_DATA| 
i:    33  |         INTEGER (KIND=4), ALLOCATABLE ,SAVE :: COAL_VECTOR_MAP(:)| 
i:    34  |         REAL (KIND=4), ALLOCATABLE, SAVE :: COAL_VECTOR_VALUES(:,:)| 
i:    35  |         LOGICAL (KIND=1), ALLOCATABLE, SAVE :: &| 
i:    36  |                                            COAL_VECTOR_TYPE_IS_VALUE(:)| 
i:    37  |         INTEGER (KIND=4) :: MaxVectorNum| 
i:    38  |      END MODULE| 
i:    39  |!***********************************************************************| 
i:    40  |!| 
i:    41  |!| 
i:    42  |      SUBROUTINE COAL_ESCALATIONS_MAKEBIN(BASE_FILE_NAME)  ! ENTERY NAME| 
i:    43  |!| 
i:    44  |!***********************************************************************| 
i:    45  |!| 
i:    46  |!| 
i:    47  |      USE COAL_ESCALATIONS_MAKEBIN_INPUTS| 
i:    48  |        use end_routine| 
i:    49  |!      USE COAL_cnw_FILES_READ_INPUT| 
i:    50  |!| 
i:    51  |! SIMULATION VARIABLES| 
i:    52  |!| 
i:    53  |         INTEGER (KIND=2) ::   UNIT_NUM=10,INUNIT,IREC,DELETE,I| 
i:    54  |         INTEGER (KIND=4) :: IOS| 
i:    55  |         CHARACTER (LEN=256) :: BASE_FILE_NAME,OVERLAY_FAMILY_NAME, &| 
i:    56  |                                FILE_NAME,OUTPUT_DIRECTORY, &| 
i:    57  |                                BASE_FILE_DIRECTORY,SCREEN_OUTPUT| 
i:    58  |!         LOGICAL (KIND=4) :: FILE_EXISTS| 
i:    59  |         CHARACTER (LEN=1) :: Active="Y"| 
i:    60  |! DECLARATION FOR DBREAD COMMON BLOCK| 
i:    61  |         CHARACTER (len=1024) :: RECLN| 
i:    62  |! **********************************************************************| 
i:    63  |!| 
i:    64  |      SCREEN_OUTPUT = TRIM(FILE_TYPE)//'-'//BASE_FILE_NAME| 
i:    65  |!      CALL MG_LOCATE_WRITE(16,30,SCREEN_OUTPUT,0,0)| 
i:    66  |      FILE_NAME = TRIM(BASE_FILE_DIRECTORY())// &| 
i:    67  |                      DATA_FILE_CODE//"B"//TRIM(BASE_FILE_NAME )//".DAT"| 
i:    68  |      INQUIRE(FILE=FILE_NAME,EXIST=COAL_ESCALATIONS_FILE_EXISTS)| 
i:    69  |      MAX_VECTOR_NO_BASEFILE = 0| 
i:    70  |      IF(COAL_ESCALATIONS_FILE_EXISTS) THEN| 
i:    71  |!| 
i:    72  |         OPEN(10,FILE=FILE_NAME,STATUS="OLD")| 
i:    73  |         OPEN(11,FILE=TRIM(OUTPUT_DIRECTORY())//"BC"// &| 
i:    74  |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &| 
i:    75  |                                ACCESS="DIRECT",STATUS="UNKNOWN", &| 
i:    76  |                                RECL=COAL_ESCALATIONS_LRECL)| 
i:    77  |!| 
i:    78  |!| 
i:    79  |         IREC = 0| 
i:    80  |         READ(10,*) DELETE| 
i:    81  |         DO ! TABLES| 
i:    82  |            DO ! TABLE RECORDS| 
i:    83  |               READ(10,'(A)',IOSTAT=IOS) RECLN| 
i:    84  |!| 
i:    85  |               IF(IOS /= 0) EXIT ! END OF FILE| 
i:    86  |!| 
i:    87  |               IF(RECLN(1:1) == '7') THEN ! END OF TABLE ! EXIT AT BOTTO| 
i:    88  |                  EXIT ! GO TO NEXT TABLE| 
i:    89  |               ENDIF| 
i:    90  |!| 
i:    91  |               VALUES_30 = -9999.| 
i:    92  |               VALUES_30(0) = 0.| 
i:    93  |               START_MONTH = 0| 
i:    94  |               END_MONTH = 0| 
i:    95  |               RECLN = TRIM(RECLN)//',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'| 
i:    96  |               READ(RECLN,*,IOSTAT=IOS) DELETE, &| 
i:    97  |                                        DESCRIPTION,VECTOR_NO, &| 
i:    98  |                                        VECTOR_TYPE,GROWTH_RATE_YEAR, &| 
i:    99  |                                        VALUES_30, &| 
i:   100  |                                        COMMENT,START_MONTH,END_MONTH| 
i:   101  |!| 
i:   102  |               IF(IOS /= 0) THEN| 
i:   103  |                  WRITE(4,*) TRIM(RECLN)| 
i:   104  |                  call end_program("Stop: coal_vector_obj CVO1")| 
i:   105  |               ENDIF| 
i:   106  |               IREC = IREC + 1| 
i:   107  |               DO I = 1, 30| 
i:   108  |                  IF(VALUES_30(I) == -9999.) THEN| 
i:   109  |                     VALUES_30(I) = VALUES_30(I-1)| 
i:   110  |                  ENDIF| 
i:   111  |               ENDDO| 
i:   112  |               IF(DELETE < 8) THEN| 
i:   113  |                  ESCALATIONS_VECTOR_BASEFILE = &| 
i:   114  |                                         ESCALATIONS_VECTOR_BASEFILE + 1| 
i:   115  |                  MAX_VECTOR_NO_BASEFILE = MAX(VECTOR_NO, &| 
i:   116  |                                                 MAX_VECTOR_NO_BASEFILE)| 
i:   117  |               ENDIF| 
i:   118  |               WRITE(11,REC=IREC) DELETE, &| 
i:   119  |                                  VECTOR_NO, &| 
i:   120  |                                  VECTOR_TYPE,GROWTH_RATE_YEAR, &| 
i:   121  |                                  VALUES_30, &| 
i:   122  |                                  START_MONTH,END_MONTH| 
i:   123  || 
i:   124  |            ENDDO ! TABLE RECORDS| 
i:   125  |            IF(IOS /= 0) EXIT| 
i:   126  |         ENDDO ! READ TABLES| 
i:   127  |         CLOSE(10)| 
i:   128  |         CLOSE(11)| 
i:   129  |      ENDIF| 
i:   130  |      RETURN| 
i:   131  |      END| 
i:   132  |! **********************************************************************| 
i:   133  |      LOGICAL FUNCTION READ_COAL_ESCALATION_FILE(BASE_YEAR)| 
i:   134  |         USE COAL_ESCALATIONS_MAKEBIN_INPUTS| 
i:   135  |         USE COAL_ESCALATION_VECTORS_DATA| 
i:   136  |         CHARACTER (LEN=256) :: OUTPUT_DIRECTORY| 
i:   137  |         INTEGER (KIND=4) :: IOS| 
i:   138  |         integer (kind=2) :: iArray,DELETE,IREC,nArray,Yr,BASE_YEAR| 
i:   139  || 
i:   140  |         READ_COAL_ESCALATION_FILE = COAL_ESCALATIONS_FILE_EXISTS| 
i:   141  |         IF(COAL_ESCALATIONS_FILE_EXISTS) THEN| 
i:   142  |            IF(PROCESS_COAL_ESCA_FILE_OL == 'OL') THEN| 
i:   143  |               nArray = ESCALATIONS_VECTOR_OVERLAY| 
i:   144  |               MaxVectorNum = MAX_VECTOR_NO_OVERLAY| 
i:   145  |            ELSE| 
i:   146  |               nArray = ESCALATIONS_VECTOR_BASEFILE| 
i:   147  |               MaxVectorNum = MAX_VECTOR_NO_BASEFILE| 
i:   148  |            ENDIF| 
i:   149  |! ALLOCATE ARRAYS| 
i:   150  |            IF(ALLOCATED(COAL_VECTOR_MAP)) THEN| 
i:   151  |               DEALLOCATE (COAL_VECTOR_MAP)| 
i:   152  |            ENDIF| 
i:   153  |            IF(.NOT. ALLOCATED(COAL_VECTOR_MAP)) THEN| 
i:   154  |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
i:   155  |            ENDIF| 
i:   156  |            IF(ALLOCATED(COAL_VECTOR_TYPE_IS_VALUE)) THEN| 
i:   157  |               DEALLOCATE (COAL_VECTOR_TYPE_IS_VALUE, &| 
i:   158  |                              COAL_VECTOR_VALUES)| 
i:   159  |            ENDIF| 
i:   160  |            IF(.NOT. ALLOCATED(COAL_VECTOR_TYPE_IS_VALUE)) THEN| 
i:   161  |               ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray), &| 
i:   162  |                         COAL_VECTOR_VALUES(31,-1:nArray))| 
i:   163  |            ENDIF| 
i:   164  |            COAL_VECTOR_TYPE_IS_VALUE = .FALSE.| 
i:   165  |            COAL_VECTOR_VALUES = 0.| 
i:   166  |            COAL_VECTOR_MAP = 0.| 
i:   167  |!| 
i:   168  |            OPEN(10,FILE=TRIM(OUTPUT_DIRECTORY())// &| 
i:   169  |              PROCESS_COAL_ESCA_FILE_OL// &| 
i:   170  |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &| 
i:   171  |                                  ACCESS="DIRECT",STATUS="UNKNOWN", &| 
i:   172  |                                    RECL=COAL_ESCALATIONS_LRECL)| 
i:   173  |            IREC = 0| 
i:   174  |            iArray = 1| 
i:   175  |            DO| 
i:   176  |               IREC = IREC + 1| 
i:   177  |               READ(10,REC=IREC,IOSTAT=IOS) DELETE, &| 
i:   178  |                                            VECTOR_NO,VECTOR_TYPE, &| 
i:   179  |                                            GROWTH_RATE_YEAR, &| 
i:   180  |                                            VALUES_30, &| 
i:   181  |                                            START_MONTH,END_MONTH| 
i:   182  |               IF(IOS /= 0) EXIT| 
i:   183  |               IF(DELETE > 7) CYCLE| 
i:   184  |               COAL_VECTOR_MAP(VECTOR_NO) = iArray| 
i:   185  |               IF(INDEX(VECTOR_TYPE,'V') /= 0) THEN| 
i:   186  |                  COAL_VECTOR_TYPE_IS_VALUE(iArray) = .TRUE.| 
i:   187  |                  GROWTH_RATE_YEAR = GROWTH_RATE_YEAR - BASE_YEAR| 
i:   188  |                  IF(GROWTH_RATE_YEAR > 0 .AND. &| 
i:   189  |                                             GROWTH_RATE_YEAR < 31) THEN| 
i:   190  |                     COAL_VECTOR_VALUES(31,iArray) = VALUES_30(30)/100.| 
i:   191  |!| 
i:   192  |                     DO Yr = GROWTH_RATE_YEAR, 30| 
i:   193  |                        VALUES_30(Yr) = VALUES_30(Yr-1) * &| 
i:   194  |                                                 (1.+VALUES_30(Yr)/100.)| 
i:   195  |                     ENDDO| 
i:   196  |                  ELSE| 
i:   197  |                     IF(VALUES_30(30-1) /= 0.) THEN| 
i:   198  |                        COAL_VECTOR_VALUES(30+1,iArray) = -1. + &| 
i:   199  |                                           VALUES_30(30)/VALUES_30(30-1)| 
i:   200  |                     ELSE| 
i:   201  |                        COAL_VECTOR_VALUES(30+1,iArray) = 0.| 
i:   202  |                     ENDIF| 
i:   203  |                  ENDIF| 
i:   204  |                  COAL_VECTOR_VALUES(1:30,iArray) = VALUES_30(1:30)| 
i:   205  |               ELSE| 
i:   206  |                  COAL_VECTOR_VALUES(1:30,iArray) = VALUES_30(1:30)/100.| 
i:   207  |                  COAL_VECTOR_VALUES(30+1,iArray) = &| 
i:   208  |                                           COAL_VECTOR_VALUES(30,iArray)| 
i:   209  |               ENDIF| 
i:   210  |! AFTER ALL IS DONE| 
i:   211  |               iArray = iArray + 1| 
i:   212  |               IF(iArray > nArray) EXIT| 
i:   213  |            ENDDO| 
i:   214  || 
i:   215  |            CLOSE(10)| 
i:   216  |         ENDIF| 
i:   217  |      END FUNCTION| 
i:   218  |! ***********************************************************************| 
i:   219  |      LOGICAL FUNCTION RETURN_COAL_VECTOR(R_VECTOR_VALUES,R_VECTOR_NO)| 
i:   220  |! ***********************************************************************| 
i:   221  |         USE COAL_ESCALATION_VECTORS_DATA| 
i:   222  |         REAL (KIND=4) :: R_VECTOR_VALUES(*)| 
i:   223  |         INTEGER (KIND=4) :: R_VECTOR_NO,I4| 
i:   224  || 
i:   225  |! THE VALUES FOR A VECTOR ARE RETURN FOR THE AVAILABLE DATA YEARS| 
i:   226  |!| 
i:   227  |         IF(-1 <= R_VECTOR_NO .AND. R_VECTOR_NO <= MaxVectorNum) THEN| 
i:   228  |            I4 = COAL_VECTOR_MAP(R_VECTOR_NO)| 
i:   229  |            RETURN_COAL_VECTOR = COAL_VECTOR_TYPE_IS_VALUE(I4)| 
i:   230  |            IF(COAL_VECTOR_TYPE_IS_VALUE(I4)) THEN| 
i:   231  |               R_VECTOR_VALUES(1:30) = COAL_VECTOR_VALUES(1:30,I4)| 
i:   232  |            ELSE| 
i:   233  |               R_VECTOR_VALUES(1:30)=1.+COAL_VECTOR_VALUES(1:30,I4)| 
i:   234  |            ENDIF| 
i:   235  |         ELSE| 
i:   236  |            RETURN_COAL_VECTOR = .TRUE.| 
i:   237  |            R_VECTOR_VALUES(1:30) = 0.| 
i:   238  |            WRITE(4,*) "Coal Escalation vector",R_VECTOR_NO, &| 
i:   239  |                                                      ' does not exist.'| 
i:   240  |         ENDIF| 
i:   241  |      RETURN| 
i:   242  |      END| 
i:   243  |!***********************************************************************| 
i:   244  |      SUBROUTINE COAL_ESCALATIONS_MAKEOVL(OVERLAY_FILE_NAME)| 
i:   245  |!***********************************************************************| 
i:   246  |!| 
i:   247  |!| 
i:   248  |      USE COAL_ESCALATIONS_MAKEBIN_INPUTS| 
i:   249  |!| 
i:   250  |! SIMULATION VARIABLES| 
i:   251  |!| 
i:   252  |         INTEGER (KIND=2) ::   UNIT_NUM=10,INUNIT,IREC,DELETE| 
i:   253  |         INTEGER (KIND=4) :: IOS| 
i:   254  |         CHARACTER (LEN=*) :: OVERLAY_FILE_NAME| 
i:   255  |         CHARACTER (LEN=256) :: FILE_NAME,OUTPUT_DIRECTORY| 
i:   256  |         LOGICAL (KIND=4) :: DATA_FILE_EXISTS| 
i:   257  |! DECLARATION FOR DBREAD COMMON BLOCK| 
i:   258  |         CHARACTER (len=1024) :: RECLN| 
i:   259  |! **********************************************************************| 
i:   260  |!| 
i:   261  |      FILE_NAME=TRIM(OUTPUT_DIRECTORY())//DATA_FILE_CODE//"O"// &| 
i:   262  |                                        TRIM(OVERLAY_FILE_NAME)//".DAT"| 
i:   263  |      INQUIRE(FILE=FILE_NAME,EXIST=DATA_FILE_EXISTS)| 
i:   264  |      IF(DATA_FILE_EXISTS .AND. COAL_ESCALATIONS_FILE_EXISTS) THEN| 
i:   265  |         MAX_VECTOR_NO_OVERLAY = 0| 
i:   266  |         ESCALATIONS_VECTOR_OVERLAY = 0| 
i:   267  |         INUNIT = 12| 
i:   268  |         IF(PROCESS_COAL_ESCA_FILE_OL == 'BC') THEN| 
i:   269  |            OPEN(11,FILE=TRIM(OUTPUT_DIRECTORY())//"BC"// &| 
i:   270  |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &| 
i:   271  |                                     ACCESS="DIRECT",STATUS="UNKNOWN", &| 
i:   272  |                                            RECL=COAL_ESCALATIONS_LRECL)| 
i:   273  |            INUNIT = 11| 
i:   274  |         ENDIF| 
i:   275  |         OPEN(12,FILE=TRIM(OUTPUT_DIRECTORY())//"OL"// &| 
i:   276  |                                TRIM(COAL_ESCA_BIN_FILE_NAME), &| 
i:   277  |                                      ACCESS="DIRECT",STATUS="UNKNOWN", &| 
i:   278  |                                            RECL=COAL_ESCALATIONS_LRECL)| 
i:   279  |!| 
i:   280  |         OPEN(10,FILE=FILE_NAME)| 
i:   281  |         READ(10,*) DELETE| 
i:   282  |!| 
i:   283  |         READ(10,'(A)',IOSTAT=IOS) RECLN| 
i:   284  |         DO WHILE(RECLN(1:1) == '7')  ! END OF OVERLAY TABLE| 
i:   285  |            READ(10,'(A)',IOSTAT=IOS) RECLN| 
i:   286  |         ENDDO| 
i:   287  |!| 
i:   288  |         IREC = 0| 
i:   289  |         DO| 
i:   290  |            IREC = IREC + 1| 
i:   291  |            READ(INUNIT,REC=IREC,IOSTAT=IOS)DELETE, &| 
i:   292  |                                  VECTOR_NO, &| 
i:   293  |                                  VECTOR_TYPE,GROWTH_RATE_YEAR, &| 
i:   294  |                                  VALUES_30, &| 
i:   295  |                                  START_MONTH,END_MONTH| 
i:   296  |            IF(IOS /= 0) EXIT| 
i:   297  |            RECLN = TRIM(RECLN)//',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'| 
i:   298  |            READ(RECLN,*,IOSTAT=IOS) DELETE, &| 
i:   299  |                                        DESCRIPTION,VECTOR_NO, &| 
i:   300  |                                        VECTOR_TYPE,GROWTH_RATE_YEAR, &| 
i:   301  |                                        VALUES_30, &| 
i:   302  |                                        COMMENT,START_MONTH,END_MONTH| 
i:   303  |            READ(10,'(A)',IOSTAT=IOS) RECLN| 
i:   304  |            DO WHILE(RECLN(1:1) == '7')  ! END OF OVERLAY TABLE| 
i:   305  |               READ(10,'(A)',IOSTAT=IOS) RECLN| 
i:   306  |            ENDDO| 
i:   307  |            IF(DELETE < 8) THEN| 
i:   308  |               ESCALATIONS_VECTOR_OVERLAY = &| 
i:   309  |                                          ESCALATIONS_VECTOR_OVERLAY + 1| 
i:   310  |               MAX_VECTOR_NO_OVERLAY = MAX(VECTOR_NO, &| 
i:   311  |                                                  MAX_VECTOR_NO_OVERLAY)| 
i:   312  |            ENDIF| 
i:   313  |            WRITE(12,REC=IREC) DELETE, &| 
i:   314  |                               VECTOR_NO, &| 
i:   315  |                               VECTOR_TYPE,GROWTH_RATE_YEAR, &| 
i:   316  |                               VALUES_30, &| 
i:   317  |                               START_MONTH,END_MONTH| 
i:   318  |         ENDDO| 
i:   319  |         CLOSE(10)| 
i:   320  |         CLOSE(12)| 
i:   321  |         IF(PROCESS_COAL_ESCA_FILE_OL == 'BC') CLOSE(11)| 
i:   322  |         PROCESS_COAL_ESCA_FILE_OL = 'OL'| 
i:   323  |      ENDIF| 
i:   324  |      RETURN| 
i:   325  |      END| 
i:   326  |!| 
i:   327  |      SUBROUTINE RESET_VECTORS_OL()| 
i:   328  |      USE COAL_ESCALATIONS_MAKEBIN_INPUTS| 
i:   329  |         PROCESS_COAL_ESCA_FILE_OL = 'BC'| 
i:   330  |      RETURN| 
i:   331  |      END| 
i:   332  || 

e_name:  nl |0| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
Trabajo con ... (f90) |p1.f90|
e_name:  nl |1| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |2| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |3| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |4| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |5| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |6| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |7| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |8| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |9| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |10| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |11| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |12| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |13| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |14| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |15| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |16| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |17| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |18| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |19| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |20| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |21| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |22| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |23| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |24| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |25| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |26| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |27| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |28| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |29| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |30| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |31| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |32| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |33| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |34| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |35| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |36| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |37| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |38| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |39| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |40| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |41| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |42| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |43| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |44| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |45| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |46| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |47| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |48| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |49| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |50| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |51| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |52| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |53| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |54| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |55| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |56| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |57| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |58| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |59| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |60| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |61| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |62| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |63| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |64| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |65| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |66| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |67| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |68| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |69| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |70| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |71| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |72| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |73| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |74| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |75| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |76| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |77| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |78| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |79| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |80| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |81| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |82| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |83| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |84| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |85| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |86| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |87| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |88| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |89| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |90| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |91| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |92| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |93| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |94| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |95| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |96| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |97| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |98| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |99| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |100| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |101| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |102| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |103| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |104| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |105| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |106| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |107| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |108| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |109| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |110| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |111| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |112| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |113| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |114| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |115| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |116| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |117| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |118| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |119| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |120| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |121| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |122| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |123| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |124| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |125| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |126| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |127| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |128| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |129| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |130| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |131| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |132| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |133| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |134| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |135| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |136| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |137| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |138| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |139| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |140| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |141| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |142| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |143| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |144| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |145| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |146| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |147| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |148| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |149| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |150| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |151| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |152| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |153| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |154| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
allocate: |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  paso 1 - primer palabra es allocate          
tiene_multiple_vars:  s           |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  b0          |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  st1 st2 st3 |1,0,0| 
tiene_multiple_vars:  paso 2 - si hay blancos corro la linea          
tiene_multiple_vars:  s           |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  st1 st2 st3 |1,0,0| 
tiene_multiple_vars:  paso 3 - el ultimo caracter salvo blanco es )           
tiene_multiple_vars:  s           |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  st1 st2 st3 |1,1,0| 
tiene_multiple_vars:  p1 p2       |23,56|  
tiene_multiple_vars:  b0[p1]      |(| 
tiene_multiple_vars:  b0[p2]      |)| 
tiene_multiple_vars:  paso 4 - caracteres especificos entre ( y )          
tiene_multiple_vars:  s           |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  st1 st2 st3 |1,1,1| 
tiene_multiple_vars:  p1 p2       |23,56|  
tiene_multiple_vars:  b0[p1]      |(| 
tiene_multiple_vars:  b0[p2]      |)| 
tiene_multiple_vars:  paso 5 - hay comas sin estar entre    ( y )  
tiene_multiple_vars:  s           |               allocate (coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
tiene_multiple_vars:  st1 st2 st3 |1,1,1,0| 
tiene_multiple_vars:  p1 p2       |23,56|  
tiene_multiple_vars:  b0[p1]      |(| 
tiene_multiple_vars:  b0[p2]      |)| 
tiene_multiple_vars:  paso 5           
tiene_multiple_vars:  f_res      |0| 
tiene_multiple_vars:  ----- 
tiene_multiple_vars: if .. f_res 0 s: |               allocate (coal_vector_map(-1:maxvectornum))|
tiene_multiple_vars:  ----- 
ex9_p1: voy a entrar a chg_alloc_t06  i: 154 b1: |               allocate (coal_vector_map(-1:maxvectornum))| 
e_name:  nl |0| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |332| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
chg_alloc_t06: entro a busco_pri_l pf: 0 uf: 332 nf_alloc: 154 
busco_pri_l: loop for con i: 154 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               allocate (coal_vector_map(-1:maxvectornum))|  
busco_pri_l: loop for con i: 154 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: i: 154 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: entro a tiene function  con |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: sali de tiene function  con f_res 0 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: pie de loop for ... i: 154
busco_pri_l: loop for con i: 153 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(.not. allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 153 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: i: 153 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 153
busco_pri_l: loop for con i: 152 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 152 |            endif| 
busco_pri_l: i: 152 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 152
busco_pri_l: loop for con i: 151 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               deallocate (coal_vector_map)|  
busco_pri_l: loop for con i: 151 |               deallocate (coal_vector_map)| 
busco_pri_l: i: 151 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: entro a tiene function  con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene function  con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: pie de loop for ... i: 151
busco_pri_l: loop for con i: 150 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 150 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: i: 150 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 150
busco_pri_l: loop for con i: 149 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |! allocate arrays|  
busco_pri_l: loop for con i: 149 |! allocate arrays| 
busco_pri_l: i: 149 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 149
busco_pri_l: loop for con i: 148 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 148 |            endif| 
busco_pri_l: i: 148 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 148
busco_pri_l: loop for con i: 147 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_basefile|  
busco_pri_l: loop for con i: 147 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: i: 147 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: pie de loop for ... i: 147
busco_pri_l: loop for con i: 146 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_basefile|  
busco_pri_l: loop for con i: 146 |               narray = escalations_vector_basefile| 
busco_pri_l: i: 146 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: pie de loop for ... i: 146
busco_pri_l: loop for con i: 145 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            else|  
busco_pri_l: loop for con i: 145 |            else| 
busco_pri_l: i: 145 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            else| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            else| 
busco_pri_l: entro a tiene function  con |            else| 
busco_pri_l: sali de tiene function  con f_res 0 |            else| 
busco_pri_l: pie de loop for ... i: 145
busco_pri_l: loop for con i: 144 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_overlay|  
busco_pri_l: loop for con i: 144 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: i: 144 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: pie de loop for ... i: 144
busco_pri_l: loop for con i: 143 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_overlay|  
busco_pri_l: loop for con i: 143 |               narray = escalations_vector_overlay| 
busco_pri_l: i: 143 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: pie de loop for ... i: 143
busco_pri_l: loop for con i: 142 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(process_coal_esca_file_ol == 'ol') then|  
busco_pri_l: loop for con i: 142 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: i: 142 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: entro a tiene function  con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: pie de loop for ... i: 142
busco_pri_l: loop for con i: 141 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         if(coal_escalations_file_exists) then|  
busco_pri_l: loop for con i: 141 |         if(coal_escalations_file_exists) then| 
busco_pri_l: i: 141 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: entro a tiene function  con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene function  con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: pie de loop for ... i: 141
busco_pri_l: loop for con i: 140 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         read_coal_escalation_file = coal_escalations_file_exists|  
busco_pri_l: loop for con i: 140 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: i: 140 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: entro a tiene function  con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene function  con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: pie de loop for ... i: 140
busco_pri_l: loop for con i: 139 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: ||  
busco_pri_l: loop for con i: 139 || 
busco_pri_l: i: 139 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 139
busco_pri_l: loop for con i: 138 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year|  
busco_pri_l: loop for con i: 138 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: i: 138 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: entro a tiene function  con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: pie de loop for ... i: 138
busco_pri_l: loop for con i: 137 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=4) :: ios|  
busco_pri_l: loop for con i: 137 |         integer (kind=4) :: ios| 
busco_pri_l: i: 137 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: entro a tiene function  con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: pie de loop for ... i: 137
busco_pri_l: loop for con i: 136 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         character (len=256) :: output_directory|  
busco_pri_l: loop for con i: 136 |         character (len=256) :: output_directory| 
busco_pri_l: i: 136 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: entro a tiene function  con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene function  con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: pie de loop for ... i: 136
busco_pri_l: loop for con i: 135 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalation_vectors_data|  
busco_pri_l: loop for con i: 135 |         use coal_escalation_vectors_data| 
busco_pri_l: i: 135 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: entro a tiene function  con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: pie de loop for ... i: 135
busco_pri_l: loop for con i: 134 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalations_makebin_inputs|  
busco_pri_l: loop for con i: 134 |         use coal_escalations_makebin_inputs| 
busco_pri_l: i: 134 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: entro a tiene function  con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: pie de loop for ... i: 134
busco_pri_l: loop for con i: 133 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      logical function read_coal_escalation_file(base_year)|  
busco_pri_l: loop for con i: 133 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: i: 133 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: entro a tiene function  con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene function  con f_res 1 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: pie de loop for ... i: 133
busco_pri_l: f_res: 1 
busco_pri_l: ----- 
chg_alloc_t06: sali de busco_pri_l pf: 0 uf: 332 nf_alloc: 154 
chg_alloc_t06: sali de busco_pri_l pri_l: 133 mod_type: 2 
chg_alloc_t06: sali de busco_pri_l pri_l: 133 |      LOGICAL FUNCTION READ_COAL_ESCALATION_FILE(BASE_YEAR)| 
PPP7 k 12 s[k]   32 
PPP7 k 13 s[k] c 99 
PPP7 k 14 s[k] o 111 
PPP7 k 15 s[k] a 97 
PPP7 k 16 s[k] l 108 
PPP7 k 17 s[k] _ 95 
PPP7 k 18 s[k] e 101 
PPP7 k 19 s[k] s 115 
PPP7 k 20 s[k] c 99 
PPP7 k 21 s[k] a 97 
PPP7 k 22 s[k] l 108 
PPP7 k 23 s[k] a 97 
PPP7 k 24 s[k] t 116 
PPP7 k 25 s[k] i 105 
PPP7 k 26 s[k] o 111 
PPP7 k 27 s[k] n 110 
PPP7 k 28 s[k] s 115 
PPP7 k 29 s[k] _ 95 
PPP7 k 30 s[k] m 109 
PPP7 k 31 s[k] a 97 
PPP7 k 32 s[k] k 107 
PPP7 k 33 s[k] e 101 
PPP7 k 34 s[k] b 98 
PPP7 k 35 s[k] i 105 
PPP7 k 36 s[k] n 110 
PPP7 k 37 s[k] _ 95 
PPP7 k 38 s[k] i 105 
PPP7 k 39 s[k] n 110 
PPP7 k 40 s[k] p 112 
PPP7 k 41 s[k] u 117 
PPP7 k 42 s[k] t 116 
PPP7 k 43 s[k] s 115 
PPP7 k 12 s[k]   32 
PPP7 k 13 s[k] c 99 
PPP7 k 14 s[k] o 111 
PPP7 k 15 s[k] a 97 
PPP7 k 16 s[k] l 108 
PPP7 k 17 s[k] _ 95 
PPP7 k 18 s[k] e 101 
PPP7 k 19 s[k] s 115 
PPP7 k 20 s[k] c 99 
PPP7 k 21 s[k] a 97 
PPP7 k 22 s[k] l 108 
PPP7 k 23 s[k] a 97 
PPP7 k 24 s[k] t 116 
PPP7 k 25 s[k] i 105 
PPP7 k 26 s[k] o 111 
PPP7 k 27 s[k] n 110 
PPP7 k 28 s[k] _ 95 
PPP7 k 29 s[k] v 118 
PPP7 k 30 s[k] e 101 
PPP7 k 31 s[k] c 99 
PPP7 k 32 s[k] t 116 
PPP7 k 33 s[k] o 111 
PPP7 k 34 s[k] r 114 
PPP7 k 35 s[k] s 115 
PPP7 k 36 s[k] _ 95 
PPP7 k 37 s[k] d 100 
PPP7 k 38 s[k] a 97 
PPP7 k 39 s[k] t 116 
PPP7 k 40 s[k] a 97 
hacer_lugar         : pf 0 uf 332 linea 136 q_lin 3 new_uf 335   
hacer_lugar         : agrego linea al final k 333   
hacer_lugar         : agrego linea al final k 334   
hacer_lugar         : agrego linea al final k 335   
hacer_lugar         : corro lin desde 335 a 139 tot 197 lin   
hacer_lugar         : vacio lin desde 136 a 138 tot 3 lin   
hacer_lugar         : listado de lineas 0 a 335   
hacer_lugar         : salgo   
hacer_lugar         : -----   

busco_use_miscmod:  entro a tiene_miscmod  i: 133 |      logical function read_coal_escalation_file(base_year)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 134 |         use coal_escalations_makebin_inputs| 
busco_use_miscmod:  entro a tiene_miscmod  i: 135 |         use coal_escalation_vectors_data| 
busco_use_miscmod:  entro a tiene_miscmod  i: 136 |      use allocate_vars| 
busco_use_miscmod:  entro a tiene_miscmod  i: 139 |         character (len=256) :: output_directory| 
busco_use_miscmod:  entro a tiene_miscmod  i: 140 |         integer (kind=4) :: ios| 
busco_use_miscmod:  entro a tiene_miscmod  i: 141 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_use_miscmod:  entro a tiene_miscmod  i: 143 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_use_miscmod:  entro a tiene_miscmod  i: 144 |         if(coal_escalations_file_exists) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 145 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 146 |               narray = escalations_vector_overlay| 
busco_use_miscmod:  entro a tiene_miscmod  i: 147 |               maxvectornum = max_vector_no_overlay| 
busco_use_miscmod:  entro a tiene_miscmod  i: 148 |            else| 
busco_use_miscmod:  entro a tiene_miscmod  i: 149 |               narray = escalations_vector_basefile| 
busco_use_miscmod:  entro a tiene_miscmod  i: 150 |               maxvectornum = max_vector_no_basefile| 
busco_use_miscmod:  entro a tiene_miscmod  i: 151 |            endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 153 |            if(allocated(coal_vector_map)) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 154 |               deallocate (coal_vector_map)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 155 |            endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 156 |            if(.not. allocated(coal_vector_map)) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 157 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_use_miscmod:  entro a tiene_miscmod  i: 158 |            endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 159 |            if(allocated(coal_vector_type_is_value)) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 160 |               deallocate (coal_vector_type_is_value, &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 161 |                              coal_vector_values)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 162 |            endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 163 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 164 |               allocate (coal_vector_type_is_value(-1:narray), &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 165 |                         coal_vector_values(31,-1:narray))| 
busco_use_miscmod:  entro a tiene_miscmod  i: 166 |            endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 167 |            coal_vector_type_is_value = .false.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 168 |            coal_vector_values = 0.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 169 |            coal_vector_map = 0.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 171 |            open(10,file=trim(output_directory())// &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 172 |              process_coal_esca_file_ol// &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 173 |                                trim(coal_esca_bin_file_name), &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 174 |                                  access="direct",status="unknown", &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 175 |                                    recl=coal_escalations_lrecl)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 176 |            irec = 0| 
busco_use_miscmod:  entro a tiene_miscmod  i: 177 |            iarray = 1| 
busco_use_miscmod:  entro a tiene_miscmod  i: 178 |            do| 
busco_use_miscmod:  entro a tiene_miscmod  i: 179 |               irec = irec + 1| 
busco_use_miscmod:  entro a tiene_miscmod  i: 180 |               read(10,rec=irec,iostat=ios) delete, &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 181 |                                            vector_no,vector_type, &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 182 |                                            growth_rate_year, &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 183 |                                            values_30, &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 184 |                                            start_month,end_month| 
busco_use_miscmod:  entro a tiene_miscmod  i: 185 |               if(ios /= 0) exit| 
busco_use_miscmod:  entro a tiene_miscmod  i: 186 |               if(delete > 7) cycle| 
busco_use_miscmod:  entro a tiene_miscmod  i: 187 |               coal_vector_map(vector_no) = iarray| 
busco_use_miscmod:  entro a tiene_miscmod  i: 188 |               if(index(vector_type,'v') /= 0) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 189 |                  coal_vector_type_is_value(iarray) = .true.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 190 |                  growth_rate_year = growth_rate_year - base_year| 
busco_use_miscmod:  entro a tiene_miscmod  i: 191 |                  if(growth_rate_year > 0 .and. &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 192 |                                             growth_rate_year < 31) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 193 |                     coal_vector_values(31,iarray) = values_30(30)/100.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 195 |                     do yr = growth_rate_year, 30| 
busco_use_miscmod:  entro a tiene_miscmod  i: 196 |                        values_30(yr) = values_30(yr-1) * &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 197 |                                                 (1.+values_30(yr)/100.)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 198 |                     enddo| 
busco_use_miscmod:  entro a tiene_miscmod  i: 199 |                  else| 
busco_use_miscmod:  entro a tiene_miscmod  i: 200 |                     if(values_30(30-1) /= 0.) then| 
busco_use_miscmod:  entro a tiene_miscmod  i: 201 |                        coal_vector_values(30+1,iarray) = -1. + &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 202 |                                           values_30(30)/values_30(30-1)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 203 |                     else| 
busco_use_miscmod:  entro a tiene_miscmod  i: 204 |                        coal_vector_values(30+1,iarray) = 0.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 205 |                     endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 206 |                  endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 207 |                  coal_vector_values(1:30,iarray) = values_30(1:30)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 208 |               else| 
busco_use_miscmod:  entro a tiene_miscmod  i: 209 |                  coal_vector_values(1:30,iarray) = values_30(1:30)/100.| 
busco_use_miscmod:  entro a tiene_miscmod  i: 210 |                  coal_vector_values(30+1,iarray) = &| 
busco_use_miscmod:  entro a tiene_miscmod  i: 211 |                                           coal_vector_values(30,iarray)| 
busco_use_miscmod:  entro a tiene_miscmod  i: 212 |               endif| 
busco_use_miscmod:  entro a tiene_miscmod  i: 214 |               iarray = iarray + 1| 
busco_use_miscmod:  entro a tiene_miscmod  i: 215 |               if(iarray > narray) exit| 
busco_use_miscmod:  entro a tiene_miscmod  i: 216 |            enddo| 
busco_use_miscmod:  f_res: 0 
busco_use_miscmod:  ------ 

ex9_p1: sale de        chg_alloc_t06  i: 154 b1: |               allocate (coal_vector_map(-1:maxvectornum))| 
e_name:  nl |0| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |335| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
busco_pri_l: loop for con i: 157 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               allocate (coal_vector_map(-1:maxvectornum))|  
busco_pri_l: loop for con i: 157 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: i: 157 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: entro a tiene function  con |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: sali de tiene function  con f_res 0 |               allocate (coal_vector_map(-1:maxvectornum))| 
busco_pri_l: pie de loop for ... i: 157
busco_pri_l: loop for con i: 156 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(.not. allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 156 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: i: 156 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 156
busco_pri_l: loop for con i: 155 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 155 |            endif| 
busco_pri_l: i: 155 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 155
busco_pri_l: loop for con i: 154 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               deallocate (coal_vector_map)|  
busco_pri_l: loop for con i: 154 |               deallocate (coal_vector_map)| 
busco_pri_l: i: 154 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: entro a tiene function  con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene function  con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: pie de loop for ... i: 154
busco_pri_l: loop for con i: 153 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 153 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: i: 153 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 153
busco_pri_l: loop for con i: 152 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |! allocate arrays|  
busco_pri_l: loop for con i: 152 |! allocate arrays| 
busco_pri_l: i: 152 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 152
busco_pri_l: loop for con i: 151 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 151 |            endif| 
busco_pri_l: i: 151 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 151
busco_pri_l: loop for con i: 150 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_basefile|  
busco_pri_l: loop for con i: 150 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: i: 150 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: pie de loop for ... i: 150
busco_pri_l: loop for con i: 149 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_basefile|  
busco_pri_l: loop for con i: 149 |               narray = escalations_vector_basefile| 
busco_pri_l: i: 149 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: pie de loop for ... i: 149
busco_pri_l: loop for con i: 148 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            else|  
busco_pri_l: loop for con i: 148 |            else| 
busco_pri_l: i: 148 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            else| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            else| 
busco_pri_l: entro a tiene function  con |            else| 
busco_pri_l: sali de tiene function  con f_res 0 |            else| 
busco_pri_l: pie de loop for ... i: 148
busco_pri_l: loop for con i: 147 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_overlay|  
busco_pri_l: loop for con i: 147 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: i: 147 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: pie de loop for ... i: 147
busco_pri_l: loop for con i: 146 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_overlay|  
busco_pri_l: loop for con i: 146 |               narray = escalations_vector_overlay| 
busco_pri_l: i: 146 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: pie de loop for ... i: 146
busco_pri_l: loop for con i: 145 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(process_coal_esca_file_ol == 'ol') then|  
busco_pri_l: loop for con i: 145 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: i: 145 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: entro a tiene function  con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: pie de loop for ... i: 145
busco_pri_l: loop for con i: 144 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         if(coal_escalations_file_exists) then|  
busco_pri_l: loop for con i: 144 |         if(coal_escalations_file_exists) then| 
busco_pri_l: i: 144 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: entro a tiene function  con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene function  con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: pie de loop for ... i: 144
busco_pri_l: loop for con i: 143 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         read_coal_escalation_file = coal_escalations_file_exists|  
busco_pri_l: loop for con i: 143 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: i: 143 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: entro a tiene function  con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene function  con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: pie de loop for ... i: 143
busco_pri_l: loop for con i: 142 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: ||  
busco_pri_l: loop for con i: 142 || 
busco_pri_l: i: 142 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 142
busco_pri_l: loop for con i: 141 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year|  
busco_pri_l: loop for con i: 141 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: i: 141 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: entro a tiene function  con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: pie de loop for ... i: 141
busco_pri_l: loop for con i: 140 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=4) :: ios|  
busco_pri_l: loop for con i: 140 |         integer (kind=4) :: ios| 
busco_pri_l: i: 140 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: entro a tiene function  con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: pie de loop for ... i: 140
busco_pri_l: loop for con i: 139 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         character (len=256) :: output_directory|  
busco_pri_l: loop for con i: 139 |         character (len=256) :: output_directory| 
busco_pri_l: i: 139 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: entro a tiene function  con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene function  con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: pie de loop for ... i: 139
busco_pri_l: loop for con i: 138 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |     |  
busco_pri_l: loop for con i: 138 |     | 
busco_pri_l: i: 138 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 138
busco_pri_l: loop for con i: 137 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      use miscmod|  
busco_pri_l: loop for con i: 137 |      use miscmod| 
busco_pri_l: i: 137 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      use miscmod| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      use miscmod| 
busco_pri_l: entro a tiene function  con |      use miscmod| 
busco_pri_l: sali de tiene function  con f_res 0 |      use miscmod| 
busco_pri_l: pie de loop for ... i: 137
busco_pri_l: loop for con i: 136 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      use allocate_vars|  
busco_pri_l: loop for con i: 136 |      use allocate_vars| 
busco_pri_l: i: 136 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      use allocate_vars| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      use allocate_vars| 
busco_pri_l: entro a tiene function  con |      use allocate_vars| 
busco_pri_l: sali de tiene function  con f_res 0 |      use allocate_vars| 
busco_pri_l: pie de loop for ... i: 136
busco_pri_l: loop for con i: 135 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalation_vectors_data|  
busco_pri_l: loop for con i: 135 |         use coal_escalation_vectors_data| 
busco_pri_l: i: 135 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: entro a tiene function  con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: pie de loop for ... i: 135
busco_pri_l: loop for con i: 134 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalations_makebin_inputs|  
busco_pri_l: loop for con i: 134 |         use coal_escalations_makebin_inputs| 
busco_pri_l: i: 134 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: entro a tiene function  con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: pie de loop for ... i: 134
busco_pri_l: loop for con i: 133 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      logical function read_coal_escalation_file(base_year)|  
busco_pri_l: loop for con i: 133 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: i: 133 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: entro a tiene function  con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene function  con f_res 1 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: pie de loop for ... i: 133
busco_pri_l: f_res: 1 
busco_pri_l: ----- 
hacer_lugar         : pf 0 uf 335 linea 158 q_lin 2 new_uf 337   
hacer_lugar         : agrego linea al final k 336   
hacer_lugar         : agrego linea al final k 337   
hacer_lugar         : corro lin desde 337 a 160 tot 178 lin   
hacer_lugar         : vacio lin desde 158 a 159 tot 2 lin   
hacer_lugar         : listado de lineas 0 a 337   
hacer_lugar         : salgo   
hacer_lugar         : -----   

RRR0 paso 1 - rimer palabra es allocate          
RRR1 s           |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR2 b1          |               allocate (coal_vector_map(-1:maxvectornum))| 
RRR3 st1 st2 st3 |1,0,0| 
RRR0 paso 2 - si hay blancos corro la linea          
RRR1 s           |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR2 b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR3 st1 st2 st3 |1,0,0| 
RRR0 paso 3 - el ultimo caracter salvo blanco es )           
RRR1 s           |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR2 b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR3 st1 st2 st3 |1,1,0| 
RRR4 p1 p2       |23,56|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
RRR0 paso 4 - caracteres especificos entre ( y )          
RRR1 s           |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR9 b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR9 st1 st2 st3 |1,1,1| 
RRR4 p1 p2       |23,56|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
RRR0 paso 5 - hay comas sin estar entre    ( y )  
RRRA s           |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR2 b1          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRRA st1 st2 st3 |1,1,1,0| 
RRR4 p1 p2       |23,56|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
ext_var_name p1: 23 ( p2: 56 )
ext_var_name |               allocate(coal_vector_map(-1:maxvectornum))| 
ext_var_name p1 p2 p3, 23 56  1 i 24 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  2 i 25 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  3 i 26 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  4 i 27 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  5 i 28 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  6 i 29 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  7 i 30 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  8 i 31 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56  9 i 32 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 10 i 33 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 11 i 34 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 12 i 35 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 13 i 36 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 14 i 37 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 15 i 38 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 15 i 39 |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR0 paso 5           
RRR7 f_res 1 var: |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR0 paso 1 - rimer palabra es allocate          
RRR1 b0          |               allocate (coal_vector_map(-1:maxvectornum))| 
RRR2 b1          |               ALLOCATE (COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR3 st1 st2 st3 |1,0,0| 
RRR0 paso 2 - si hay blancos corro la linea          
RRR1 b0          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR2 b1          |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR3 st1 st2 st3 |1,0,0| 
RRR0 paso 3 - el ultimo caracter salvo blanco es )           
RRR1 b0          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR2 b1          |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR3 st1 st2 st3 |1,1,0| 
RRR4 p1 p2       |23,56|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
RRR0 paso 4 - caracteres especificos entre ( y )          
RRR1 b0          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR9 b1          |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRR9 st1 st2 st3 |1,1,1| 
RRR4 p1 p2       |23,56|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
RRR0 paso 5 - hay comas sin estar entre    ( y )  
RRRA b0          |               allocate(coal_vector_map(-1:maxvectornum))| 
RRR2 b1          |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
RRRA st1 st2 st3 |1,1,1,0| 
RRR4 p1 p2       |23,56|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
agregar_stv   p1: 23 ( p2: 56 )
agregar_stv |               allocate(coal_vector_map(-1:maxvectornum))| 
agregar_stv |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
ext_var_name p1 p2 p3, 23 56 4231975 i 57  
agregar_stv b0: |               allocate(coal_vector_map(-1:maxvectornum))| 
agregar_stv b1: |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum))| 
agregar_stv b5: |               ALLOCATE(COAL_VECTOR_MAP(-1:MaxVectorNum),stat=stv_er)| 
RRR0 paso 5           
RRR7 f_res 1 var: |               allocate(coal_vector_map(-1:maxvectornum))| 
e_name:  nl |160| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |161| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |162| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |163| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |164| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |165| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |166| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
allocate: |               allocate (coal_vector_type_is_value(-1:narray), &| 
tiene_multiple_vars:  paso 1 - primer palabra es allocate          
tiene_multiple_vars:  s           |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  b0          |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  st1 st2 st3 |1,0,0| 
tiene_multiple_vars:  paso 2 - si hay blancos corro la linea          
tiene_multiple_vars:  s           |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  st1 st2 st3 |1,0,0| 
tiene_multiple_vars:  paso 3 - el ultimo caracter salvo blanco es )           
tiene_multiple_vars:  s           |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  st1 st2 st3 |1,1,0| 
tiene_multiple_vars:  p1 p2       | 8,78|  
tiene_multiple_vars:  b0[p1]      |(| 
tiene_multiple_vars:  b0[p2]      |)| 
tiene_multiple_vars:  paso 4 - caracteres especificos entre ( y )          
tiene_multiple_vars:  s           |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  st1 st2 st3 |1,1,1| 
tiene_multiple_vars:  p1 p2       | 8,78|  
tiene_multiple_vars:  b0[p1]      |(| 
tiene_multiple_vars:  b0[p2]      |)| 
tiene_multiple_vars:  paso 5 - hay comas sin estar entre    ( y )  
tiene_multiple_vars:  s           |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
tiene_multiple_vars:  st1 st2 st3 |1,1,1,1| 
tiene_multiple_vars:  p1 p2       | 8,78|  
tiene_multiple_vars:  b0[p1]      |(| 
tiene_multiple_vars:  b0[p2]      |)| 
tiene_multiple_vars:  paso 5           
tiene_multiple_vars:  f_res      |1| 
tiene_multiple_vars:  ----- 
tiene_multiple_vars: if .. f_res 1 s: |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))|
tiene_multiple_vars:  ----- 
e_name:  nl |0| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
busco_pri_l: loop for con i: 166 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               allocate (coal_vector_type_is_value(-1:narray), &|  
busco_pri_l: loop for con i: 166 |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: i: 166 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: sali de tiene subrutina con f_res 0 |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: entro a tiene function  con |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: sali de tiene function  con f_res 0 |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: pie de loop for ... i: 166
busco_pri_l: loop for con i: 165 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(.not. allocated(coal_vector_type_is_value)) then|  
busco_pri_l: loop for con i: 165 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: i: 165 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: entro a tiene function  con |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: pie de loop for ... i: 165
busco_pri_l: loop for con i: 164 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 164 |            endif| 
busco_pri_l: i: 164 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 164
busco_pri_l: loop for con i: 163 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |                              coal_vector_values)|  
busco_pri_l: loop for con i: 163 |                              coal_vector_values)| 
busco_pri_l: i: 163 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |                              coal_vector_values)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |                              coal_vector_values)| 
busco_pri_l: entro a tiene function  con |                              coal_vector_values)| 
busco_pri_l: sali de tiene function  con f_res 0 |                              coal_vector_values)| 
busco_pri_l: pie de loop for ... i: 163
busco_pri_l: loop for con i: 162 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               deallocate (coal_vector_type_is_value, &|  
busco_pri_l: loop for con i: 162 |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: i: 162 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: sali de tiene subrutina con f_res 0 |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: entro a tiene function  con |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: sali de tiene function  con f_res 0 |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: pie de loop for ... i: 162
busco_pri_l: loop for con i: 161 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(allocated(coal_vector_type_is_value)) then|  
busco_pri_l: loop for con i: 161 |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: i: 161 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: entro a tiene function  con |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: pie de loop for ... i: 161
busco_pri_l: loop for con i: 160 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 160 |            endif| 
busco_pri_l: i: 160 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 160
busco_pri_l: loop for con i: 159 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |     |  
busco_pri_l: loop for con i: 159 |     | 
busco_pri_l: i: 159 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 159
busco_pri_l: loop for con i: 158 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               call check_alloc("p1:0001","coal_vector_map",stv_er)|  
busco_pri_l: loop for con i: 158 |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: i: 158 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: entro a tiene function  con |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: sali de tiene function  con f_res 0 |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: pie de loop for ... i: 158
busco_pri_l: loop for con i: 157 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)|  
busco_pri_l: loop for con i: 157 |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: i: 157 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: entro a tiene function  con |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: sali de tiene function  con f_res 0 |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: pie de loop for ... i: 157
busco_pri_l: loop for con i: 156 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(.not. allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 156 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: i: 156 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 156
busco_pri_l: loop for con i: 155 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 155 |            endif| 
busco_pri_l: i: 155 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 155
busco_pri_l: loop for con i: 154 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               deallocate (coal_vector_map)|  
busco_pri_l: loop for con i: 154 |               deallocate (coal_vector_map)| 
busco_pri_l: i: 154 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: entro a tiene function  con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene function  con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: pie de loop for ... i: 154
busco_pri_l: loop for con i: 153 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 153 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: i: 153 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 153
busco_pri_l: loop for con i: 152 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |! allocate arrays|  
busco_pri_l: loop for con i: 152 |! allocate arrays| 
busco_pri_l: i: 152 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 152
busco_pri_l: loop for con i: 151 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 151 |            endif| 
busco_pri_l: i: 151 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 151
busco_pri_l: loop for con i: 150 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_basefile|  
busco_pri_l: loop for con i: 150 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: i: 150 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: pie de loop for ... i: 150
busco_pri_l: loop for con i: 149 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_basefile|  
busco_pri_l: loop for con i: 149 |               narray = escalations_vector_basefile| 
busco_pri_l: i: 149 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: pie de loop for ... i: 149
busco_pri_l: loop for con i: 148 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            else|  
busco_pri_l: loop for con i: 148 |            else| 
busco_pri_l: i: 148 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            else| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            else| 
busco_pri_l: entro a tiene function  con |            else| 
busco_pri_l: sali de tiene function  con f_res 0 |            else| 
busco_pri_l: pie de loop for ... i: 148
busco_pri_l: loop for con i: 147 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_overlay|  
busco_pri_l: loop for con i: 147 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: i: 147 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: pie de loop for ... i: 147
busco_pri_l: loop for con i: 146 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_overlay|  
busco_pri_l: loop for con i: 146 |               narray = escalations_vector_overlay| 
busco_pri_l: i: 146 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: pie de loop for ... i: 146
busco_pri_l: loop for con i: 145 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(process_coal_esca_file_ol == 'ol') then|  
busco_pri_l: loop for con i: 145 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: i: 145 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: entro a tiene function  con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: pie de loop for ... i: 145
busco_pri_l: loop for con i: 144 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         if(coal_escalations_file_exists) then|  
busco_pri_l: loop for con i: 144 |         if(coal_escalations_file_exists) then| 
busco_pri_l: i: 144 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: entro a tiene function  con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene function  con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: pie de loop for ... i: 144
busco_pri_l: loop for con i: 143 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         read_coal_escalation_file = coal_escalations_file_exists|  
busco_pri_l: loop for con i: 143 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: i: 143 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: entro a tiene function  con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene function  con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: pie de loop for ... i: 143
busco_pri_l: loop for con i: 142 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: ||  
busco_pri_l: loop for con i: 142 || 
busco_pri_l: i: 142 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 142
busco_pri_l: loop for con i: 141 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year|  
busco_pri_l: loop for con i: 141 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: i: 141 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: entro a tiene function  con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: pie de loop for ... i: 141
busco_pri_l: loop for con i: 140 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=4) :: ios|  
busco_pri_l: loop for con i: 140 |         integer (kind=4) :: ios| 
busco_pri_l: i: 140 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: entro a tiene function  con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: pie de loop for ... i: 140
busco_pri_l: loop for con i: 139 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         character (len=256) :: output_directory|  
busco_pri_l: loop for con i: 139 |         character (len=256) :: output_directory| 
busco_pri_l: i: 139 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: entro a tiene function  con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene function  con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: pie de loop for ... i: 139
busco_pri_l: loop for con i: 138 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |     |  
busco_pri_l: loop for con i: 138 |     | 
busco_pri_l: i: 138 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 138
busco_pri_l: loop for con i: 137 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      use miscmod|  
busco_pri_l: loop for con i: 137 |      use miscmod| 
busco_pri_l: i: 137 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      use miscmod| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      use miscmod| 
busco_pri_l: entro a tiene function  con |      use miscmod| 
busco_pri_l: sali de tiene function  con f_res 0 |      use miscmod| 
busco_pri_l: pie de loop for ... i: 137
busco_pri_l: loop for con i: 136 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      use allocate_vars|  
busco_pri_l: loop for con i: 136 |      use allocate_vars| 
busco_pri_l: i: 136 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      use allocate_vars| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      use allocate_vars| 
busco_pri_l: entro a tiene function  con |      use allocate_vars| 
busco_pri_l: sali de tiene function  con f_res 0 |      use allocate_vars| 
busco_pri_l: pie de loop for ... i: 136
busco_pri_l: loop for con i: 135 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalation_vectors_data|  
busco_pri_l: loop for con i: 135 |         use coal_escalation_vectors_data| 
busco_pri_l: i: 135 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: entro a tiene function  con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: pie de loop for ... i: 135
busco_pri_l: loop for con i: 134 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalations_makebin_inputs|  
busco_pri_l: loop for con i: 134 |         use coal_escalations_makebin_inputs| 
busco_pri_l: i: 134 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: entro a tiene function  con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: pie de loop for ... i: 134
busco_pri_l: loop for con i: 133 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      logical function read_coal_escalation_file(base_year)|  
busco_pri_l: loop for con i: 133 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: i: 133 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: entro a tiene function  con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene function  con f_res 1 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: pie de loop for ... i: 133
busco_pri_l: f_res: 1 
busco_pri_l: ----- 
PPP7 k 12 s[k]   32 
PPP7 k 13 s[k] c 99 
PPP7 k 14 s[k] o 111 
PPP7 k 15 s[k] a 97 
PPP7 k 16 s[k] l 108 
PPP7 k 17 s[k] _ 95 
PPP7 k 18 s[k] e 101 
PPP7 k 19 s[k] s 115 
PPP7 k 20 s[k] c 99 
PPP7 k 21 s[k] a 97 
PPP7 k 22 s[k] l 108 
PPP7 k 23 s[k] a 97 
PPP7 k 24 s[k] t 116 
PPP7 k 25 s[k] i 105 
PPP7 k 26 s[k] o 111 
PPP7 k 27 s[k] n 110 
PPP7 k 28 s[k] s 115 
PPP7 k 29 s[k] _ 95 
PPP7 k 30 s[k] m 109 
PPP7 k 31 s[k] a 97 
PPP7 k 32 s[k] k 107 
PPP7 k 33 s[k] e 101 
PPP7 k 34 s[k] b 98 
PPP7 k 35 s[k] i 105 
PPP7 k 36 s[k] n 110 
PPP7 k 37 s[k] _ 95 
PPP7 k 38 s[k] i 105 
PPP7 k 39 s[k] n 110 
PPP7 k 40 s[k] p 112 
PPP7 k 41 s[k] u 117 
PPP7 k 42 s[k] t 116 
PPP7 k 43 s[k] s 115 
PPP7 k 12 s[k]   32 
PPP7 k 13 s[k] c 99 
PPP7 k 14 s[k] o 111 
PPP7 k 15 s[k] a 97 
PPP7 k 16 s[k] l 108 
PPP7 k 17 s[k] _ 95 
PPP7 k 18 s[k] e 101 
PPP7 k 19 s[k] s 115 
PPP7 k 20 s[k] c 99 
PPP7 k 21 s[k] a 97 
PPP7 k 22 s[k] l 108 
PPP7 k 23 s[k] a 97 
PPP7 k 24 s[k] t 116 
PPP7 k 25 s[k] i 105 
PPP7 k 26 s[k] o 111 
PPP7 k 27 s[k] n 110 
PPP7 k 28 s[k] _ 95 
PPP7 k 29 s[k] v 118 
PPP7 k 30 s[k] e 101 
PPP7 k 31 s[k] c 99 
PPP7 k 32 s[k] t 116 
PPP7 k 33 s[k] o 111 
PPP7 k 34 s[k] r 114 
PPP7 k 35 s[k] s 115 
PPP7 k 36 s[k] _ 95 
PPP7 k 37 s[k] d 100 
PPP7 k 38 s[k] a 97 
PPP7 k 39 s[k] t 116 
PPP7 k 40 s[k] a 97 
PPP7 k  9 s[k]   32 
PPP7 k 10 s[k] a 97 
PPP7 k 11 s[k] l 108 
PPP7 k 12 s[k] l 108 
PPP7 k 13 s[k] o 111 
PPP7 k 14 s[k] c 99 
PPP7 k 15 s[k] a 97 
PPP7 k 16 s[k] t 116 
PPP7 k 17 s[k] e 101 
PPP7 k 18 s[k] _ 95 
PPP7 k 19 s[k] v 118 
PPP7 k 20 s[k] a 97 
PPP7 k 21 s[k] r 114 
PPP7 k 22 s[k] s 115 
PPP7 k  9 s[k]   32 
PPP7 k 10 s[k] m 109 
PPP7 k 11 s[k] i 105 
PPP7 k 12 s[k] s 115 
PPP7 k 13 s[k] c 99 
PPP7 k 14 s[k] m 109 
PPP7 k 15 s[k] o 111 
PPP7 k 16 s[k] d 100 
e_name:  nl |0| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |337| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
busco_pri_l: loop for con i: 166 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               allocate (coal_vector_type_is_value(-1:narray), &|  
busco_pri_l: loop for con i: 166 |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: i: 166 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: sali de tiene subrutina con f_res 0 |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: entro a tiene function  con |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: sali de tiene function  con f_res 0 |               allocate (coal_vector_type_is_value(-1:narray), | 
busco_pri_l: pie de loop for ... i: 166
busco_pri_l: loop for con i: 165 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(.not. allocated(coal_vector_type_is_value)) then|  
busco_pri_l: loop for con i: 165 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: i: 165 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: entro a tiene function  con |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(.not. allocated(coal_vector_type_is_value)) then| 
busco_pri_l: pie de loop for ... i: 165
busco_pri_l: loop for con i: 164 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 164 |            endif| 
busco_pri_l: i: 164 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 164
busco_pri_l: loop for con i: 163 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |                              coal_vector_values)|  
busco_pri_l: loop for con i: 163 |                              coal_vector_values)| 
busco_pri_l: i: 163 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |                              coal_vector_values)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |                              coal_vector_values)| 
busco_pri_l: entro a tiene function  con |                              coal_vector_values)| 
busco_pri_l: sali de tiene function  con f_res 0 |                              coal_vector_values)| 
busco_pri_l: pie de loop for ... i: 163
busco_pri_l: loop for con i: 162 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               deallocate (coal_vector_type_is_value, &|  
busco_pri_l: loop for con i: 162 |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: i: 162 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: sali de tiene subrutina con f_res 0 |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: entro a tiene function  con |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: sali de tiene function  con f_res 0 |               deallocate (coal_vector_type_is_value, | 
busco_pri_l: pie de loop for ... i: 162
busco_pri_l: loop for con i: 161 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(allocated(coal_vector_type_is_value)) then|  
busco_pri_l: loop for con i: 161 |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: i: 161 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: entro a tiene function  con |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(allocated(coal_vector_type_is_value)) then| 
busco_pri_l: pie de loop for ... i: 161
busco_pri_l: loop for con i: 160 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 160 |            endif| 
busco_pri_l: i: 160 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 160
busco_pri_l: loop for con i: 159 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |     |  
busco_pri_l: loop for con i: 159 |     | 
busco_pri_l: i: 159 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 159
busco_pri_l: loop for con i: 158 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               call check_alloc("p1:0001","coal_vector_map",stv_er)|  
busco_pri_l: loop for con i: 158 |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: i: 158 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: entro a tiene function  con |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: sali de tiene function  con f_res 0 |               call check_alloc("p1:0001","coal_vector_map",stv_er)| 
busco_pri_l: pie de loop for ... i: 158
busco_pri_l: loop for con i: 157 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)|  
busco_pri_l: loop for con i: 157 |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: i: 157 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: entro a tiene function  con |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: sali de tiene function  con f_res 0 |               allocate(coal_vector_map(-1:maxvectornum),stat=stv_er)| 
busco_pri_l: pie de loop for ... i: 157
busco_pri_l: loop for con i: 156 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(.not. allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 156 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: i: 156 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(.not. allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 156
busco_pri_l: loop for con i: 155 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 155 |            endif| 
busco_pri_l: i: 155 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 155
busco_pri_l: loop for con i: 154 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               deallocate (coal_vector_map)|  
busco_pri_l: loop for con i: 154 |               deallocate (coal_vector_map)| 
busco_pri_l: i: 154 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: entro a tiene function  con |               deallocate (coal_vector_map)| 
busco_pri_l: sali de tiene function  con f_res 0 |               deallocate (coal_vector_map)| 
busco_pri_l: pie de loop for ... i: 154
busco_pri_l: loop for con i: 153 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(allocated(coal_vector_map)) then|  
busco_pri_l: loop for con i: 153 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: i: 153 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: entro a tiene function  con |            if(allocated(coal_vector_map)) then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(allocated(coal_vector_map)) then| 
busco_pri_l: pie de loop for ... i: 153
busco_pri_l: loop for con i: 152 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |! allocate arrays|  
busco_pri_l: loop for con i: 152 |! allocate arrays| 
busco_pri_l: i: 152 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 152
busco_pri_l: loop for con i: 151 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            endif|  
busco_pri_l: loop for con i: 151 |            endif| 
busco_pri_l: i: 151 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            endif| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            endif| 
busco_pri_l: entro a tiene function  con |            endif| 
busco_pri_l: sali de tiene function  con f_res 0 |            endif| 
busco_pri_l: pie de loop for ... i: 151
busco_pri_l: loop for con i: 150 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_basefile|  
busco_pri_l: loop for con i: 150 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: i: 150 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_basefile| 
busco_pri_l: pie de loop for ... i: 150
busco_pri_l: loop for con i: 149 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_basefile|  
busco_pri_l: loop for con i: 149 |               narray = escalations_vector_basefile| 
busco_pri_l: i: 149 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_basefile| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_basefile| 
busco_pri_l: pie de loop for ... i: 149
busco_pri_l: loop for con i: 148 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            else|  
busco_pri_l: loop for con i: 148 |            else| 
busco_pri_l: i: 148 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            else| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            else| 
busco_pri_l: entro a tiene function  con |            else| 
busco_pri_l: sali de tiene function  con f_res 0 |            else| 
busco_pri_l: pie de loop for ... i: 148
busco_pri_l: loop for con i: 147 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               maxvectornum = max_vector_no_overlay|  
busco_pri_l: loop for con i: 147 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: i: 147 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: entro a tiene function  con |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               maxvectornum = max_vector_no_overlay| 
busco_pri_l: pie de loop for ... i: 147
busco_pri_l: loop for con i: 146 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |               narray = escalations_vector_overlay|  
busco_pri_l: loop for con i: 146 |               narray = escalations_vector_overlay| 
busco_pri_l: i: 146 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene subrutina con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: entro a tiene function  con |               narray = escalations_vector_overlay| 
busco_pri_l: sali de tiene function  con f_res 0 |               narray = escalations_vector_overlay| 
busco_pri_l: pie de loop for ... i: 146
busco_pri_l: loop for con i: 145 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |            if(process_coal_esca_file_ol == 'ol') then|  
busco_pri_l: loop for con i: 145 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: i: 145 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: entro a tiene function  con |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: sali de tiene function  con f_res 0 |            if(process_coal_esca_file_ol == 'ol') then| 
busco_pri_l: pie de loop for ... i: 145
busco_pri_l: loop for con i: 144 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         if(coal_escalations_file_exists) then|  
busco_pri_l: loop for con i: 144 |         if(coal_escalations_file_exists) then| 
busco_pri_l: i: 144 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: entro a tiene function  con |         if(coal_escalations_file_exists) then| 
busco_pri_l: sali de tiene function  con f_res 0 |         if(coal_escalations_file_exists) then| 
busco_pri_l: pie de loop for ... i: 144
busco_pri_l: loop for con i: 143 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         read_coal_escalation_file = coal_escalations_file_exists|  
busco_pri_l: loop for con i: 143 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: i: 143 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: entro a tiene function  con |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: sali de tiene function  con f_res 0 |         read_coal_escalation_file = coal_escalations_file_exists| 
busco_pri_l: pie de loop for ... i: 143
busco_pri_l: loop for con i: 142 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: ||  
busco_pri_l: loop for con i: 142 || 
busco_pri_l: i: 142 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 142
busco_pri_l: loop for con i: 141 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year|  
busco_pri_l: loop for con i: 141 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: i: 141 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: entro a tiene function  con |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=2) :: iarray,delete,irec,narray,yr,base_year| 
busco_pri_l: pie de loop for ... i: 141
busco_pri_l: loop for con i: 140 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         integer (kind=4) :: ios|  
busco_pri_l: loop for con i: 140 |         integer (kind=4) :: ios| 
busco_pri_l: i: 140 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: entro a tiene function  con |         integer (kind=4) :: ios| 
busco_pri_l: sali de tiene function  con f_res 0 |         integer (kind=4) :: ios| 
busco_pri_l: pie de loop for ... i: 140
busco_pri_l: loop for con i: 139 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         character (len=256) :: output_directory|  
busco_pri_l: loop for con i: 139 |         character (len=256) :: output_directory| 
busco_pri_l: i: 139 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: entro a tiene function  con |         character (len=256) :: output_directory| 
busco_pri_l: sali de tiene function  con f_res 0 |         character (len=256) :: output_directory| 
busco_pri_l: pie de loop for ... i: 139
busco_pri_l: loop for con i: 138 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |     |  
busco_pri_l: loop for con i: 138 |     | 
busco_pri_l: i: 138 f_proceso: 0 
busco_pri_l: pie de loop for ... i: 138
busco_pri_l: loop for con i: 137 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      use miscmod|  
busco_pri_l: loop for con i: 137 |      use miscmod| 
busco_pri_l: i: 137 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      use miscmod| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      use miscmod| 
busco_pri_l: entro a tiene function  con |      use miscmod| 
busco_pri_l: sali de tiene function  con f_res 0 |      use miscmod| 
busco_pri_l: pie de loop for ... i: 137
busco_pri_l: loop for con i: 136 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      use allocate_vars|  
busco_pri_l: loop for con i: 136 |      use allocate_vars| 
busco_pri_l: i: 136 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      use allocate_vars| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      use allocate_vars| 
busco_pri_l: entro a tiene function  con |      use allocate_vars| 
busco_pri_l: sali de tiene function  con f_res 0 |      use allocate_vars| 
busco_pri_l: pie de loop for ... i: 136
busco_pri_l: loop for con i: 135 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalation_vectors_data|  
busco_pri_l: loop for con i: 135 |         use coal_escalation_vectors_data| 
busco_pri_l: i: 135 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: entro a tiene function  con |         use coal_escalation_vectors_data| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalation_vectors_data| 
busco_pri_l: pie de loop for ... i: 135
busco_pri_l: loop for con i: 134 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |         use coal_escalations_makebin_inputs|  
busco_pri_l: loop for con i: 134 |         use coal_escalations_makebin_inputs| 
busco_pri_l: i: 134 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene subrutina con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: entro a tiene function  con |         use coal_escalations_makebin_inputs| 
busco_pri_l: sali de tiene function  con f_res 0 |         use coal_escalations_makebin_inputs| 
busco_pri_l: pie de loop for ... i: 134
busco_pri_l: loop for con i: 133 
busco_pri_l: voy a strcpy  
busco_pri_l: voy a trim_end_f90 b1: |      logical function read_coal_escalation_file(base_year)|  
busco_pri_l: loop for con i: 133 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: i: 133 f_proceso: 1 
busco_pri_l: entro a tiene subrutina con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene subrutina con f_res 0 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: entro a tiene function  con |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: sali de tiene function  con f_res 1 |      logical function read_coal_escalation_file(base_year)| 
busco_pri_l: pie de loop for ... i: 133
busco_pri_l: f_res: 1 
busco_pri_l: ----- 
ZZZ21 b0     :   |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
ZZZ21 b1     :   |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
ZZZ21 p1     :   8 ( 
ZZZ21 p2     :  78 ) 
ZZZ21 ------- 
ZZZ21 0 |(null)| 
ZZZ q_vars: 200 |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
hacer_lugar         : pf 0 uf 337 linea 168 q_lin 2 new_uf 339   
hacer_lugar         : agrego linea al final k 338   
hacer_lugar         : agrego linea al final k 339   
hacer_lugar         : corro lin desde 339 a 170 tot 170 lin   
hacer_lugar         : vacio lin desde 168 a 169 tot 2 lin   
hacer_lugar         : listado de lineas 0 a 339   
hacer_lugar         : salgo   
hacer_lugar         : -----   

RRR0 paso 1 - rimer palabra es allocate          
RRR1 s           |ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR2 b1          |allocate (coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
RRR3 st1 st2 st3 |1,0,0| 
RRR0 paso 2 - si hay blancos corro la linea          
RRR1 s           |ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR2 b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
RRR3 st1 st2 st3 |1,0,0| 
RRR0 paso 3 - el ultimo caracter salvo blanco es )           
RRR1 s           |ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR2 b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
RRR3 st1 st2 st3 |1,1,0| 
RRR4 p1 p2       | 8,78|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
RRR0 paso 4 - caracteres especificos entre ( y )          
RRR1 s           |ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR9 b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
RRR9 st1 st2 st3 |1,1,1| 
RRR4 p1 p2       | 8,78|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
RRR0 paso 5 - hay comas sin estar entre    ( y )  
RRRA s           |ALLOCATE (COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR2 b1          |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
RRRA st1 st2 st3 |1,1,1,1| 
RRR4 p1 p2       | 8,78|  
RRR5 b0[p1]      |(| 
RRR6 b0[p2]      |)| 
ext_var_name p1: 8 ( p2: 78 )
ext_var_name |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
ext_var_name p1 p2 p3,  8 78  1 i  9 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  2 i 10 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  3 i 11 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  4 i 12 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  5 i 13 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  6 i 14 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  7 i 15 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  8 i 16 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78  9 i 17 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 10 i 18 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 11 i 19 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 12 i 20 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 13 i 21 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 14 i 22 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 15 i 23 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 16 i 24 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 17 i 25 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 18 i 26 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 19 i 27 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 20 i 28 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 21 i 29 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 22 i 30 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 23 i 31 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 24 i 32 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 25 i 33 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  8 78 25 i 34 |ALLOCATE(COAL_VECTOR_TYPE_IS_VALUE(-1:nArray),COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR0 paso 5           
RRR7 f_res 1 var: |allocate(coal_vector_type_is_value(-1:narray),coal_vector_values(31,-1:narray))| 
RRR0 paso 3 - el ultimo caracter salvo blanco es )           
RRR1 b0          |                         coal_vector_values(31,-1:narray))| 
RRR2 b1          |                         COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR3 st1 st2 st3 |1,1,0| 
RRR4 p1 p2       | 0,57|  
RRR5 b0[p1]      | | 
RRR6 b0[p2]      |)| 
RRR0 paso 4 - caracteres especificos entre ( y )          
RRR1 b0          |                         coal_vector_values(31,-1:narray))| 
RRR9 b1          |                         COAL_VECTOR_VALUES(31,-1:nArray))| 
RRR9 st1 st2 st3 |1,1,1| 
RRR4 p1 p2       | 0,57|  
RRR5 b0[p1]      | | 
RRR6 b0[p2]      |)| 
RRR0 paso 5 - hay comas sin estar entre    ( y )  
RRRA b0          |                         coal_vector_values(31,-1:narray))| 
RRR2 b1          |                         COAL_VECTOR_VALUES(31,-1:nArray))| 
RRRA st1 st2 st3 |1,1,1,1| 
RRR4 p1 p2       | 0,57|  
RRR5 b0[p1]      | | 
RRR6 b0[p2]      |)| 
agregar_stv   p1: 0   p2: 57 )
agregar_stv |                         coal_vector_values(31,-1:narray))| 
agregar_stv |                         COAL_VECTOR_VALUES(31,-1:nArray))| 
ext_var_name p1 p2 p3,  0 57  1 i 58  
agregar_stv b0: |                         coal_vector_values(31,-1:narray))| 
agregar_stv b1: |                         COAL_VECTOR_VALUES(31,-1:nArray))| 
agregar_stv b5: |                         COAL_VECTOR_VALUES(31,-1:nArray),stat=stv_er)| 
RRR0 paso 5           
RRR7 f_res 1 var: |                         coal_vector_values(31,-1:narray))| 
e_name:  nl |169| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |170| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |171| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |172| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |173| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |174| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |175| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |176| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |177| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |178| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |179| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |180| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |181| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |182| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |183| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |184| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |185| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |186| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |187| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |188| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |189| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |190| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |191| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |192| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |193| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |194| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |195| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |196| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |197| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |198| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |199| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |200| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |201| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |202| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |203| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |204| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |205| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |206| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |207| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |208| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |209| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |210| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |211| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |212| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |213| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |214| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |215| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |216| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |217| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |218| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |219| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |220| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |221| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |222| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |223| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |224| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |225| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |226| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |227| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |228| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |229| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |230| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |231| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |232| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |233| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |234| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |235| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |236| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |237| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |238| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |239| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |240| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |241| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |242| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |243| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |244| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |245| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |246| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |247| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |248| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |249| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |250| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |251| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |252| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |253| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |254| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |255| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |256| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |257| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |258| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |259| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |260| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |261| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |262| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |263| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |264| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |265| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |266| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |267| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |268| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |269| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |270| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |271| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |272| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |273| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |274| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |275| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |276| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |277| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |278| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |279| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |280| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |281| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |282| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |283| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |284| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |285| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |286| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |287| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |288| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |289| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |290| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |291| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |292| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |293| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |294| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |295| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |296| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |297| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |298| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |299| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |300| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |301| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |302| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |303| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |304| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |305| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |306| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |307| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |308| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |309| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |310| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |311| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |312| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |313| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |314| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |315| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |316| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |317| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |318| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |319| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |320| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |321| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |322| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |323| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |324| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |325| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |326| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |327| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |328| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |329| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |330| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |331| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |332| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |333| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |334| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |335| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |336| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |337| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |338| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
e_name:  nl |339| 
e_name:  j  |0| 
e_name:  pf |0| 
e_name:  uf |339| 
e_name:  n  |p1.f90| 
e_name:  if |p1.f90| 
e_name: b1 |p1.f90| 
e_name: b3 |p1.f90| 
e_name: b2 |f90| 
e_name --- 
[2025/02/12 07:09:05] ((+)) mostrar_reportes

Cant de alloc totales                    2 
Cant de alloc totales for con stat       0 
Cant de alloc totales for f90 stat       0 
                                        
Cant de alloc totales for slc            0 
Cant de alloc totales for clc            0 
Cant de alloc totales for sav            0 
Cant de alloc totales for mav            0 
Cant de alloc tot sin cont sing var      0 
Cant de alloc tot con cont sing var      0 
Cant de alloc tot sin cont mult var      0 
Cant de alloc tot con cont mult var      0 
                                        
Cant de alloc totales f90 slc            1 
Cant de alloc totales f90 clc            1 
Cant de alloc totales f90 sav            1 
Cant de alloc totales f90 mav            1 
Cant de alloc tot sin cont sing var      1 
Cant de alloc tot con cont sing var      0 
Cant de alloc tot sin cont mult var      0 
Cant de alloc tot con cont mult var      1 
[2025/02/12 07:09:05] ((-)) mostrar_reportes

[2025/02/12 07:09:05] ((-)) exec9

[2025/02/12 07:09:05] ((-)) proceso principal

[2025/02/12 07:09:05] ((+)) cierro_files

[2025/02/12 07:09:05] ((-)) cierro_files

[2025/02/12 07:09:05] ((-)) proceso main

