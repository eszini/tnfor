/*
 * -----------------------------------------------------------------------------------
 *
 *	chg_alloc_g02
 *
 *
 * -----------------------------------------------------------------------------------
 */


/*
 *	chg_alloc_g02
 *	agregar check alloc de sentencias con allocate tipo 13 
 *	recibe numero de file donde encontro allocate y la linea del allocate
 *
 *	Atenti:
 *	esto corrije un solo allocate x vez !!!
 *
 *	g02 ... grupo para ml,sv ....
 *
 */

int	chg_alloc_g02(num_f,nf_alloc,add_lines,num_alloc)
int	num_f;
int	nf_alloc;
int	*add_lines;
int	num_alloc;
{

	int 	h,i,j,k,k1,k2;
	int	l1,l2;
	int	c1,c2,c3,c4,c5;
	int	f1,f2,f3,f4,f5;
	int	f_proceso;
	int	f_stat;
	int	f_hay_alloc;
	int	f_try;
	int	n_f;
	char	base_name[MAXV];
	char	prog_name[MAXV];
	char	exte_name[MAXV];
	char	src_name[MAXV];
	char	var_name[MAXV];
	char	b0[MAXB];
	char	b1[MAXB];
	char	b2[MAXB];
	char	b3[MAXB];
	char	b4[MAXB];
	char	b5[MAXB];
	char	blanks[64];
	int	pf,uf,nf,qf;
	int	tipo_ext;

	int	pri_l,ult_l;
	int	ult_u,pri_d;	/* ultimo use, primera declaracion */
	int	mod_type;	/* 0 no se, 1 subroutine 2 function */
	int	linea_check;	/* linea en la que hay que poner el check_alloc */
	int	linea_stat;	/* linea donde pongo el stat=stv_er */
	int	agrego_lines;	/* lineas a agregar al final x hacer_lugar */

	char	m0[MSTR];
	char	m1[MSTR];

	memset(b4,'X',MAXB);
	memset(m0,0,MSTR);
	memset(m1,0,MSTR);
	strcpy(base_name,"empty");

	nf = num_f;

	tipo_ext = 0;
	c2 = 0;
	c3 = 0;
	c4 = 0;

	/* primera y ultima linea del fuente */
	pf = (*tb[nf]).pf;
	uf = (*tb[nf]).uf;
	qf = uf - pf +1;


	/* nombre y ext del file  */
	strcpy(prog_name,f_name(pf));
	strcpy(exte_name,e_name(pf));

	if (!strncmp(exte_name,"for",3))
		tipo_ext = 1;

	if (!strncmp(exte_name,"f90",3))
		tipo_ext = 2;


	/* proceso linea i */
	strcpy(b0,(*fnp[nf_alloc]).l );
	strcpy(b1, pasar_a_minusc(b0));

	l2 = strlen(b1);

	f_proceso = 1;
	if (linea_vacia(b1) || es_linea_comentario(b1))
		f_proceso = 0;


	/* solo proceso lineas que no son comentario ni vacias */
	if (f_proceso)
	{	

		if (!busco_pri_l(pf,uf,nf_alloc,&pri_l,&mod_type))
			error(9001);

		if (!busco_ult_l(pf,uf,nf_alloc,&ult_l,mod_type))
			error(9002);

		/* 
		 * chg_alloc_g02
		 *
		 * a partir de aqui ... a hacer los cambios !! 
		 *
		 * 1) correr todo n lineas para abajo 
		 * 2) en la ulitma linea del allocate, agregar  stat= ... var de error 
		 * 3) agregar call check_alloc ...
		 *    con variables :
		 *    identificador (string ... nombre de programa con un numero de allocate )
		 *    nombre de la variable ...	
		 *    variable de error 
		 *    opcional ... extra_info ?? 
		 */

		/*
		 * La linea para ponder use allocate_vars es linea_use
		 * correr todo para abajo una linea desde ahi ...
		 *
		 */

/* EEE */
		agrego_lines=2;
		*add_lines = 0;

		linea_check = nf_alloc;
		linea_stat  = nf_alloc;

		k=0;
		memset(m0,0,MSTR);
		memset(m1,0,MSTR);

		while ( tiene_amper(  (*fnp[linea_check+k]).l )   )
		{

			if (1)
			{
				strcpy(b2, pasar_a_minusc( (*fnp[linea_check+k]).l) );
				strcpy(b2, trim_beg_f90(b2));
				strcpy(b2, trim_end_f90(b2));
				strcpy(b2, trim_blanks(b2));
				strcat(m0,b2);

				strcpy(b3, (*fnp[linea_check+k]).l );
				strcpy(b3, trim_beg_f90(b3));
				strcpy(b3, trim_end_f90(b3));
				strcpy(b3, trim_blanks(b3));
				strcat(m1,b3);
			}
			k++;
		}

		strcpy(b2, pasar_a_minusc( (*fnp[linea_check+k]).l) );
		strcpy(b2, trim_beg_f90(b2));
		strcpy(b2, trim_end_f90(b2));
		strcpy(b2, trim_blanks(b2));
		strcat(m0,b2);

		strcpy(b3, (*fnp[linea_check+k]).l );
		strcpy(b3, trim_beg_f90(b3));
		strcpy(b3, trim_end_f90(b3));
		strcpy(b3, trim_blanks(b3));
		strcat(m1,b3);


					
		linea_stat += k;
		linea_check = linea_stat + 1;

		grabar_mapa(7,0,(*fnp[linea_check]).l,lne(linea_check),lne(pri_l),lne(ult_l));

		hacer_lugar(pf,qf_src-1,linea_check,agrego_lines);

		c5 = n_blanks_beg( (*fnp[nf_alloc]).l );
		memset(blanks,0,sizeof(blanks));
		memset(blanks,32,c5);
	
		strcpy(var_name,extract_var_name( m1 ) );
		strcpy(src_name,b_name(nf));
		memset(b5,0,sizeof(b5));
		sprintf (b5,"(\"%s:%04d\",\"%s\",STV_ER)",src_name,num_alloc,var_name);
		strcpy( (*fnp[linea_check]).l  ,blanks);
		strcat( (*fnp[linea_check]).l  ,"call check_alloc");
		strcat( (*fnp[linea_check]).l  ,b5);

		strcpy( (*fnp[linea_check+1]).l,"     ");

		/* aca tengo que modificar la linea nf_alloc ... 
	  	 * esto va a ser un lio cuando tenga que meter 
		 * lineas compuestas ! 
		 */
/* EEE */
		agregar_stv_2 (linea_stat);

		*add_lines = agrego_lines;
		flag_alloc_ok = 1;

	}

	
	grabar_mapa(0,0,"-",0,0,0);
}


