0!			MSG 11/5/2015 3:25:04 PM
0!			MSG 3/15/2016 7:52:36 PM
0!			MSG 5/22/2016 5:36:58 PM
0!			MSG 6/1/2016 2:44:53 PM
0!			MSG 6/5/2016 9:12:27 PM
0!			MSG 7/24/2015 2:33:17 PM
0!	2024_04_09
0!	2024_04_18
0!	CAPACITY_OPTIONS_ALLOC_VARS.f90
0!	CL_OBJT.FOR
0!	Change log
0!	Changed C commented lines
0!	Changed USE capacity_options_fixed_variables
0!	Files using MODULE:
0!	Format changes were made. 
0!	Line continuation and comments
0!	change log
0!	changed module name size 
0!	from  CAPACITY_OPTIONS_FIXED_VARIABLES
0!	grx_planning_routines.f90
0!	removed/changed continuation lines
0!	to      USE capacity_options_fixed_vars
0!	to    CAPACITY_OPTIONS_FIXED_VARS
0!                                                                      *
0!                                                                      C
0!                                                    LOCAL_PRICE(HOUR)
0!                                               ,PEAK_HOUR,R_MONTH,YEAR)
0!                                         FROM THE CURRENT PLANNING YEAR
0!                                         GREG TURK
0!                                         NOVEMBER 7, 1989
0!                                        DEFERRED FUEL, ACCOUNTS PAYABLE
0!                                        MARKET_PRICE_DELTA,
0!                                        PEAK/OFF-PEAK PRICE MULT
0!                                    IF(P_M == PC_COUNT) THEN
0!                                   105, 110, 150
0!                                   ABB
0!                                  ALLOCATED ON SECOND MONTH
0!                                 STOP
0!                                 TEMP_R1 = 0.
0!                                 TEMP_R2 = 
0!                                 TEMP_TRANSACTION = TEMP_TRANSACTION/5.
0!                                 VENTYX
0!                                ALL RIGHTS RESERVED
0!                               ALL RIGHTS RESERVED
0!                               NEW_DETAILED_REPORTS = .TRUE.
0!                               ON THE COST OF THE ENERGY.
0!                               Q = Q
0!                              ALL RIGHTS RESERVED
0!                              COPYRIGHT (C) 1992
0!                              COPYRIGHT (C) 1996
0!                              ELSE
0!                              ENDIF
0!                              ENDIF ! ALREADY LONG-PATH
0!                              IF(.NOT. PRICE_LAST_MW) THEN
0!                              IF(LONG_PATH_TRANSACTION_PAIR(
0!                              IF(VLI(Q,LAST_Q) < 1 .OR. 
0!                              L_PC = PC_FOR_(L,L_Q,L_P)
0!                              UNIT_AVAIL = UNIT_AVAIL +
0!                              for quarterly dividends & RATE BASE RATES
0!                             ALL RIGHTS RESERVED
0!                             COPYRIGHT (C) 1992
0!                             COPYRIGHT (C) 1996
0!                             PRODUCT_VOLATILITY(0,J) = 0.
0!                             PRODUCT_VOLATILITY(I,J) = I.
0!                             P_M = L_PC 
0!                             STOP
0!                           ALL RIGHTS RESERVED
0!                           ALLOWED_TRANSACTION_PAIR(
0!                           BURESH = .FALSE.
0!                           CALC_CONTRACT_ENERGY
0!                           COPYRIGHT (C) 1988
0!                           COPYRIGHT (C) 1997
0!                           COPYRIGHT (C) 1997-2003
0!                           COPYRIGHT (C) 1999
0!                           COPYRIGHT (C) 2003
0!                           DAILY_MW(HOUR) = TEMP_QUANTITY*UNIT_AVAIL
0!                           DO L = 1, TOTAL_PC_FOR_(L_Q,L_P)
0!                           ENDIF
0!                           ENDIF ! OTHERWISE DON'T RAMP
0!                           HOURS_SINCE_SHUT_DOWN = 0
0!                           HOURS_SINCE_SHUT_DOWN = 6
0!                           HOURS_SINCE_START_UP = 0
0!                           HOURS_SINCE_START_UP = 12
0!                           IF(STRAT_HOURLY_MW(HR,BB) > 0.) THEN
0!                           IF(UNIT_CONTINGENCY(IND) == 'F' .AND.
0!                           LONG_PATH_TRANSACTION_PAIR(
0!                           MAX_PRICE = BUYERS_COST
0!                           MIN_PRICE = SELLERS_COST
0!                           MIN_TRANSACTION = 0.0d0
0!                           OUTAGE_TYPE = NINT(GET_BLOCK_OUTAGE_4_HOUR(
0!                           OUTAGE_TYPE = NINT(GET_BLOCK_OUTAGE_4_HRinYR(
0!                           QX_HOURLY_NO =
0!                           QX_HOURLY_REC = QX_HOURLY_REC + 1
0!                           TEMP_CAP = -LOCAL_QUANTITY(1)
0!                           TEMP_CAP = -LOCAL_QUANTITY(2)
0!                           TEMP_SELLER_TRANSACTION = TEMP_TRANSACTION
0!                           TEMP_TRANSPORTED = 
0!                           UNIT_AVAIL = UNIT_AVAIL +
0!                           UNIT_UP_LAST_HOUR = .FALSE.
0!                           UNIT_UP_LAST_HOUR = .TRUE.
0!                           WRITE(QX_HOURLY_NO,REC=QX_HOURLY_REC)
0!                          ALL RIGHTS RESERVED
0!                          COPYRIGHT (C) 1998
0!                          COPYRIGHT (C) 1999
0!                          COPYRIGHT (C) 2009
0!                          COPYRIGHT (C) 2018
0!                          ENFORCE ALL HOURS STRATEGY
0!                          PRODUCT_FIRST_PERIOD(J) = .FALSE.
0!                          PRODUCT_VOLATILITY(0,J) = 0.
0!                          PRODUCT_VOLATILITY(I,J) = I.
0!                          RENAMED POWER DERIVATIVES
0!                          TRANSACTION WAS NOT BIG ENOUGH. FLAT PART OF THE COST CURVES.
0!                         ALL RIGHTS RESERVED
0!                         COPYRIGHT (C) 1997
0!                         M.S. GERBER & ASSOCIATES, INC.
0!                         SERVICE TRANSACTIONS MODULE
0!                        ALL RIGHTS RESERVED
0!                        ANNUAL_EMIS_COST = 0.0
0!                        B = BLOCK_FOR_OUTAGE_BLOCK(OUTAGE_BLOCK)
0!                        CALL AccumVector(
0!                        CALL AccumVector(DAILY_MW(1),CUR_QUANTITY,24) ! use .ASM version for speed
0!                        CLASS_EMIS_CAP(3,TABLE) = 0.
0!                        CLASS_EMIS_DISPATCH_ADDER(3,TABLE) = 0.
0!                        CLASS_EMIS_STRAT(3,TABLE) = 'N'
0!                        CLASS_MAX_BANK(3,TABLE) = 0.
0!                        CLASS_MIN_BANK(3,TABLE) = 0.
0!                        CLASS_PURCH_CRED_PRICE(3,TABLE) = 0.
0!                        CLASS_SELL_CRED_PRICE(3,TABLE) = 0.
0!                        COPYRIGHT (C) 2006
0!                        C_HOURS = C_HOURS +
0!                        ELSE
0!                        ELSEIF( ABS(TEMP_BUYER_TRANSACTION -
0!                        ELSEIF(TOTAL_DELIVERED_COST(SELLER,BUYER) -
0!                        ENDIF
0!                        ENDIF ! HR > 1
0!                        END_OF_PRICING_GROUPS = .TRUE.
0!                        FAILED_DIAGNOSTICS = .TRUE.
0!                        FINAL_HOURLY_LOAD = FINAL_HOURLY_LOAD -
0!                        HOUR_IN_WEEK = HOUR_IN_WEEK + 1
0!                        HX_HOURLY_NO =
0!                        HX_REPORT_NOT_OPEN = .FALSE.
0!                        HX_REPORT_VARIABLES = 24
0!                        HYBRID_MARKET_ANNUAL_REVENUE =
0!                        HYBRID_MARKET_VOM_COST = ANNUAL_VOM_COST
0!                        IE YOU CAN DO THE TRANSACTION WITHOUT COSTS
0!                        IF(ALLOWED_TRANSACTION_PAIR(
0!                        IF(HR > 1) THEN
0!                        IF(J_AVAILABLE_CAPACITY < -1.d0) THEN
0!                        IF(NUM_OF_BAD_PLANS <= MAX_BAD_PLANS) THEN
0!                        IF(R_UNIT_UP_YESTERDAY) THEN
0!                        IF(STRAT_HOURLY_MW(HR,BB) == 0.) CYCLE
0!                        IF(TEMP_L)
0!                        IF(TEST_CONTINGENCY) THEN
0!                        J = K
0!                        L_P = GET_COAL_GROUP_POSITION(P)
0!                        L_Q = GET_COAL_GROUP_POSITION(Q)
0!                        M.S. GERBER & ASSOCIATES, INC.
0!                        NO_UNIQUE_INTERVALS = NO_UNIQUE_INTERVALS + 1
0!                        P = TEMP_GS_SUPPLY_POSITION(K)
0!                        RECLN = TRIM(RECLN)
0!                        SECOND_BLOCK = OUTAGE_BLOCK_BY_SEGMENT(2,J)
0!                        STATE_POSITION = 1                     
0!                        S_U = INCREASING_VALUE_OF_U(U) ADDED FOR LGE TOOK OUT
0!                        S_U = S_U_FOR_OUTAGE_BLOCK(OUTAGE_BLOCK)
0!                        TEMP_I = NO_START_UP_UNITS + max_fuel_types_tfo
0!                        TEMP_R = 
0!                        TEMP_R = INT_RES_REMAIN(K,M)
0!                        TEMP_R = MIN(INT_RES_REMAIN(K,M),
0!                        TEST_CAP = MIN(TEST_CAP,
0!                        U = UNIT_FOR_OUTAGE_BLOCK(OUTAGE_BLOCK)
0!                        UNIT_AVAIL = 1.0
0!                        WH_LOADS_PER_HOUR(HR_IN_MONTH,TG) = 
0!                        WH_TRANS_MONTHLY_CAPACITY(R_ISEAS,TG) = 
0!                        WH_TRANS_MONTHLY_ENERGY(R_ISEAS,TG) = 
0!                        WRITE(11,*) RECLN
0!                        Z = Z + 1
0!                        if((iMo==2).and.(R_DAYS_IN_YEAR==366)) nDaCMo=29
0!                       ! Nuc Fuel Expense
0!                       ! TMS 3/01/05 INCREASED SIZE TO 8:16
0!                       10 =  WHOLESALE SALES
0!                       11 =  WHOLESALE PURCHASES
0!                       2 = GAS
0!                       3 = OIL
0!                       4 = NUCLEAR
0!                       5 = WATER
0!                       6 = OTHER
0!                       7-9 = RESERVED
0!                       ALL RIGHTS RESERVED
0!                       ANNUAL_EMIS_COST = 0.0
0!                       All rights reserved                            C
0!                       BLOCK STRADDLES WHOLESALE AND RETAIL
0!                       COPYRIGHT (C) 1987
0!                       DSS LAM CONTROL MODULE
0!                       LEFT() =
0!                       LOCAL_HYBRID_MW_CHARGE = 0.0
0!                       LOCAL_HYBRID_MW_DISCHARGE = 0.0
0!                       M.S. GERBER & ASSOCIATES, INC.
0!                       POWER POOLING ROUTINE FOR IE
0!                       PRODUCT_HOURS(J) = PRODUCT_HOURS(J) + 1.
0!                       REVENUES/EXPENSES FOR ASSET ANALYST.
0!                       RIGHT() =
0!                       R_ANNUAL_ENERGY = R_ANNUAL_ENERGY + GpCapyProrated
0!                       R_ANNUAL_ENERGY_REVENUE = R_ANNUAL_ENERGY_REVENUE +
0!                       R_ANNUAL_VARIABLE_COST = R_ANNUAL_VARIABLE_COST +
0!                       STOP
0!                       TEMP_PRODUCT_HOURS = PRODUCT_HOURS(J)
0!                       TRANSACTION WAS TOO BIG.
0!                       if((iHr==SupHrAvail(1)).or.(iHr==SupHrAvail(0)))
0!                       write(*,'("&",i3)')
0!                      !!! PUT INTO TEMP VALUES TO AVOID WIPE-OUT !!!
0!                      "SourceMonth,SourceDay,CalendarMonth,CalendarDay,"
0!                      2 = Harris 1 Replacement
0!                      3 = Total Replacement
0!                      4 = Surplus
0!                      5 = Harris 1 Buyback
0!                      6 = Mayo 1 Buyback
0!                      7 = Total Buyback
0!                      ALL RIGHT RESERVED
0!                      Add writting this report to ghe GRX output
0!                      All Rights Reserved                             C
0!                      MUNICIPAL_OUTPUT                                C
0!                     ! 10: Avg. Generating Cost ($/MWh)
0!                     ! 11: SO2 Emissions (Tons)
0!                     ! 12: NOx Emssions (Tons)
0!                     ! 13: CO2 Emissions (Tons)
0!                     ! 14: Hg Emissions (Tons)
0!                     ! 15: Other Emissions (Tons)
0!                     ! 31 - SO2 emissions cost
0!                     ! 32 - NOx emissions cost
0!                     ! 33 - CO2 emissions cost
0!                     ! 34 - Hg emissions cost
0!                     ! 35 - Other emissions cost
0!                     A = A
0!                     ALLOC_COSTS_BY_UNIT = .FALSE.
0!                     ANNUAL_HYBRID_BATTERY(J) = -HYBRID_BATTERY(TRANS)
0!                     ANNUAL_HYBRID_INDEX(HYBRID_BATTERY(TRANS)) = J
0!                     ANNUAL_PRODUCT_HOURS(J) = ANNUAL_PRODUCT_HOURS(J) +
0!                     AccumArea=AccumArea+TailUQ
0!                     AccumArea=AccumArea-TailUQ
0!                     BATTERY(TRANS) = SCEN_NUM_STOR(TG)
0!                     BEGIN_DATE = 123154
0!                     CALL GET_ANNUAL_NG_BY_REGION_BY_MMBTU(
0!                     CALL GET_DAY_OF_WEEK_IN_MONTH(DAY,R_MONTH,
0!                     COAL_DEMAND_YEAR = COAL_DEMAND_YEAR + 1 ! OUT. 11/25/98. GAT.
0!                     CONSTRAIN_ANNUAL_ENERGY = ANNUAL_ENERGY
0!                     CONSTRAIN_ANNUAL_REVENUE =
0!                     CONSTRAIN_VOM_COST = ANNUAL_VOM_COST
0!                     COPYRIGHT(2001) M.S. GERBER & ASSOCIATES
0!                     CYCLE
0!                     DEPTH_MONTH_LAMBDA(J,INTERVAL) = 
0!                     DEPTH_MONTH_MARGINAL_COST(J,I) = 
0!                     DO HR = 1, 24
0!                     ECBLK = MAX(1,BLKNO(S))
0!                     ECITY_TEST = .TRUE. !!! TEMPORARY !!!
0!                     ELSE
0!                     EL_ANN_CLASS_MARKET_PURCHASE(ASSET_CLASS) =     
0!                     EL_ANN_CLASS_MARKET_REVENUES(ASSET_CLASS) =     
0!                     EL_MON_MDS_MARKET_PURCHASE(ASSET_CLASS,R_ISEAS) =     
0!                     EL_MON_MDS_MARKET_REVENUES(ASSET_CLASS,R_ISEAS) =     
0!                     EMIS_DISPATCH_ADDER_ESC(EMIS_TYPE,TABLE) =  
0!                     ENDDO
0!                     ENDIF
0!                     ENERGY
0!                     ENERGY_DIF = IPUMEN(LPUMP)
0!                     ENERGY_REVENUE
0!                     EXIT
0!                     EXIT !
0!                     EXIT ! LEAVE LOOP (GO TO NEXT TABLE OR EXIT ROUTINE)
0!                     FIRST_CALL_TO_ENDPOINT(OPTION_INDEX) = .FALSE.
0!                     GAS_DEMAND_YEAR = GAS_DEMAND_YEAR + 1 ! OUT. 11/25/98. GAT.
0!                     GAS_ID_2_GSP(GN) = 
0!                     GAS_ID_2_GSP(GN) = STATE_ID_LOOKUP(TEMP_STATE)
0!                     GS_SUPPLY_CAPACITY_CURVE(L,I) = 
0!                     GS_SUPPLY_CAPACITY_CURVE(L,I) = TEMP_R
0!                     HEC_DAILY_RES
0!                     HEC_GEN_BOUGHT
0!                     HEC_GEN_SOLD
0!                     HEC_MARKET_GEN
0!                     HEC_NATIVE_LOAD
0!                     HOURLY_FORWARD_SALE = 
0!                     HOURLY_LAST_DERATE(BLOCK) =
0!                     HOURLY_LAST_STATE(BLOCK) =
0!                     HOURLY_QUANTITY(TRANS) =
0!                     HOURLY_TRANS_GROUP_LOAD_ACTIVE(I) = .FALSE.
0!                     HOURS
0!                     HOUR_END_OF_MONTH = nDaCMo*24 + I - 1
0!                     HOUR_END_OF_MONTH = nDaCMo*24 + I - 2
0!                     HX_HOURLY_REC = HX_HOURLY_REC + 1
0!                     I = I + 1
0!                     IF( TEMP_GS_SUPPLY_COST_CURVE(N) -
0!                     IF(1 == 1) THEN
0!                     IF(ABS(INT_RES_REMAIN(K,M))< 0.00001) EXIT
0!                     IF(ABS(TEMP_R) < 0.00001) EXIT
0!                     IF(CUM_REDUNDANT_TRANSACTION(TWH) > 6) THEN
0!                     IF(GET_TieID_INDEX(L_I,L_J) < 1) CYCLE
0!                     IF(HOURLY_REVENUE 
0!                     IF(HR == 1) THEN
0!                     IF(HX_REPORT_NOT_OPEN) THEN
0!                     IF(I+K-1 > R_DAYS_IN_MONTH) THEN
0!                     IF(INT_RES_REMAIN(K,M) < 0.) THEN
0!                     IF(I_AVAILABLE_CAPACITY < -1.d0) THEN
0!                     IF(LOCAL_STORAGE_PATTERN(TEMP_I2) > 0.0) THEN
0!                     IF(LOOK_AHEAD_MARGIN(-3) >
0!                     IF(MARKET_RESOURCE_COUNTER(S_U) > 0 .OR.
0!                     IF(POKE_CURRENT_CO2_DISPATCH_COST(YR)) THEN
0!                     IF(R_MONTH == LOCAL_PEAK_MONTH) THEN
0!                     IF(STRAT_HOURLY_MW(HR,BB) > 0.) CYCLE
0!                     IF(UNIT_AVAIL > 0.) THEN
0!                     IF(YES_CX_DIAGNOSTIC_REPORTS .AND.
0!                     IF(Z == NUM_OF_PRICING_GROUPS) THEN
0!                     INQUIRE(UNIT=4321,NEXTREC=MON_PW_TRANS_UNIT_REC)
0!                     INQUIRE(UNIT=TRANS_DEPTH_MARKET_UNIT,
0!                     IPL_FAC_DB(6) = IPL_FAC_DB(6) + 
0!                     ISEAS = ISEAS
0!                     J = GET_TRANS_GROUP_INDEX(TGJ)
0!                     K = N ! ?
0!                     LAST_BUY_FOR_TRANSACTION(K) =
0!                     LAST_MW_FOR_TRANSACTION(K) =
0!                     LAST_SELL_FOR_TRANSACTION(K) =
0!                     LOAD_FOR_MC = M_HOURLY_LOAD_B4_SALES(I,HOUR_IN_DAY)
0!                     LOCAL_EXTRACT_IN_DAY(GS) = TEMP_R4
0!                     LOCAL_WHEEL_MULT = 1.0
0!                     LREC = LREC + 365
0!                     LREC = LREC - 366
0!                     L_SELLER = L_SELLER
0!                     M.S. GERBER & ASSOCIATES, INC.
0!                     MONTHLY_ENERGY(IND,MONTH) =
0!                     MONTHLY_ENERGY(IND,R_MONTH) =
0!                     MONTHLY_ENERGY_COST(IND,MONTH) =
0!                     MONTHLY_ENERGY_COST(IND,R_MONTH) =
0!                     MONTHLY_ENERGY_REVENUE(IND,MONTH) =
0!                     MONTHLY_ENERGY_REVENUE(IND,R_MONTH) =
0!                     MONTHLY_GAS_BALANCE(12,R_MONTH,CO) = 
0!                     MONTHLY_GAS_BALANCE(13,R_MONTH,CO) = 
0!                     NG_BTUS_BY_GSP_BY_FUEL(1) = 
0!                     NG_BTUS_BY_GSP_BY_FUEL(3) = 
0!                     NODE(TOTAL_PATHS_FOR_SYSTEM) = I
0!                     NUMBER_OF_PATHS_FOR_I(A_ID) = 
0!                     P = TOTAL_PATHS_FOR_SYSTEM
0!                     PARENT(TOTAL_PATHS_FOR_SYSTEM) = J_PATH(M)
0!                     PATH(TOTAL_PATHS_FOR_SYSTEM) = K
0!                     PEAK
0!                     PURCH_CRED_PRICE_ESC(EMIS_TYPE,TABLE) = 
0!                     RR_OFPEAK_ENRG = RR_OFPEAK_ENRG +
0!                     R_EAS_REVENUE_OFFSET = 0.0
0!                     R_MONTH = R_MONTH
0!                     SELL_CRED_PRICE_ESC(EMIS_TYPE,TABLE) = 
0!                     SORTED_OPTIONS(I) = MUST_RUN_OPTIONS(I)
0!                     START_UP_UNIT(DATA_BASES) =
0!                     STOP
0!                     STOP !
0!                     TEMP_CUSTOMER_NAME = "Electric Generation     "//
0!                     TEMP_I = INT2(THERMAL_UNIT_LINK(TRANS))
0!                     TEMP_I2 = 
0!                     TEMP_I2 = HOUR_END_OF_MONTH
0!                     TEMP_I2 = HOUR_IN_YEAR+I-2
0!                     TEMP_L1 = GET_CUBIC_HEAT_CURVE(UNITNO,
0!                     TEMP_R = 
0!                     TEMP_R = GET_HEAT_RATE_FACTOR(OPTION_INDEX)
0!                     TEMP_R = TEMP_R ! ESTABLISH POINTER STUFF
0!                     TEMP_R = TEMP_R ! ESTABLISH POINTER STUFF. GET_VAR OR ESC?
0!                     TEMP_R1 = TEMP_R1 + IncrHrCurCost(iGP)
0!                     TEMP_STORAGE = GET_NODE_DAILY_STORAGE(GS)
0!                     TEST_CAP = MIN(TEST_CAP,
0!                     TOTAL_ZERO_MW_TRANS_PER_MONTH = 
0!                     TRANS_TIE_REC = TRANS_TIE_REC + 1
0!                     UNIT_CONTRIB =
0!                     UNIT_CONTRIB = 0.
0!                     UNIT_UP_LAST_HOUR(OPTION_INDEX) = CURRENT_STATE
0!                     VOID_LOGICAL =  ANNUAL_GAS_LINK_FORECAST(YEAR)
0!                     WHEEL_PATH(LOCAL_PATH_NUMBER,K) = L2
0!                     WRITE(39,*)"1 , 1 , 1 , 1 ,"
0!                     WRITE(4,*) " "
0!                     WRITE(4,*) "OUTAGES."
0!                     WRITE(4,*) "PROBLEM IN CREATING HOURLY TRANSACTION"
0!                     WRITE(4,*) 'BATTERY ',TRANSACTION_NAME(TRANS),
0!                     WRITE(HX_HOURLY_NO,REC=HX_HOURLY_REC)
0!                     WRITE(OX_HOURLY_NO,REC=OX_HOURLY_REC)
0!                     WRITE(TRANS_TIE_UNIT,REC=TRANS_TIE_REC) 
0!                     call FindTailArea(sngl(PrevCapac+CapIncr))
0!                     if((iMo==2).and.(R_DAYS_IN_YEAR==366)) nDaCMo=29
0!                     if(PrtDetail>2) write(PrtUni,'(1x,2i4,l2,f9.2,4f11.4,a)')
0!                     r8LoadB4 = MAX(0.,GET_TRANS_LOAD_AFTER_EL(HR,I) -
0!                     r8TEMP = MAX(0.,
0!                    ! Nuc Fuel Expense
0!                    CALL TO BLOCK INDICES FOR HOOSIER RESOURCES
0!                    CONVERT THE SERVICE-TRANSACTIONS FILE
0!                    COPYRIGHT (C) 1986
0!                    CostAccum(iGP) = CostAccum(iGP)+GpCapyProrated
0!                    EnergyMWH(iGP) = EnergyMWH(iGP)+GpCapyProrated
0!                    GRX_STORAGE_PATTERN(TRANS_GROUP,HOUR_IN_YEAR) =
0!                    L_F = HOUR_IN_DAY + J_F
0!                    M.S. GERBER & ASSOCIATES, INC.
0!                    MoFrHrUsed(ChronHr(iGP),iDa,iGP)=FracHrCurCost(iGP)
0!                    MoFrHrUsed(iHr,iDa,iGP)=0.0
0!                    NEED TO WEIGHT MAINTENANCE BY HOURS AND CAPACITY
0!                    NOT DEFINED
0!                    NOTE:WILLIAMS PROVISIONS ZERO'D OUT AT BEGINNING OF DAY
0!                    OTHER CONDITIONS
0!                    R_ANNUAL_USAGE(HOUR_IN_YEAR) =
0!                    R_MONTHLY_CAPACITY(HOUR_IN_MONTH) =
0!                    Reduced Output Set                                C
0!                    TEMP_R2 =
0!                    WEEKLY_REFERENCE_ENERGY = WEEKLY_REFERENCE_ENERGY +
0!                    do iHr=1,24
0!                    end do
0!                    if((iHr==SupHrAvail(1)).or.(iHr==SupHrAvail(0)))
0!                    if(PrtDetail>1) write(*,
0!                    write(*,'("&",i3)')
0!                    write(*,'(1x)') ! begin a new output record
0!                    write(*,'(9f6.2)') (CurHrCost (iHr,iGP),iHr=1,nHrAvail(iGP))
0!                    write(*,'(9i6  )') (GpHrRanked(iHr,iGP),iHr=1,nHrAvail(iGP))
0!                   ALL RIGHTS RESERVED
0!                   COPYRIGHT (C) 1985, 1991, 1992
0!                   COPYRIGHT (C) 1986
0!                   COPYRIGHT (C) 1987-2000
0!                   COPYRIGHT (C) 1989-91
0!                   COPYRIGHT (C) 1990
0!                   COPYRIGHT (C) 1992
0!                   COPYRIGHT (C) 1993
0!                   COPYRIGHT (C) 1996
0!                   ENDIF
0!                   GrayOrder(HalfSize+iGray-1)= ! since lower half of GrayOrder<HalfSize ...
0!                   IF(CapFractor < 1. .AND. .FALSE.) THEN
0!                   M.S. GERBER & ASSOCIATES, INC.
0!                   SERVICE TRANSACTIONS ALLOCATION MODULE
0!                   WRITE(MON_PW_TRANS_UNIT_NO,REC=MON_PW_TRANS_UNIT_REC)
0!                   block#2 of capacity=2 with q2=0.3:
0!                   if(PrtDetail>2) write(PrtUni,'(1x,2i4,1x,z4,a)')
0!                   if(PrtDetail>2) write(PrtUni,'(1x,i3,5f10.3,a)')
0!                  ! This is the monthly transact report (monthly thermal units).
0!                  ! This is the monthly transact report, derivatives are active. _Product_ is being reported.
0!                  ! a monthly_trans_report, so document differences.
0!                  ! msgmtrcl Monthly derivatives/renewables
0!                  !msgmtrcl
0!                  !msgmtrcl - total for fiscal (includes deriv. and thermal)
0!                  !msgmtrcl monthly thermal units.  The third write is also
0!                  AC = PURCHASE_ASSET_CLASS_ID(GAS_GROUP)
0!                  ALLOW_MARKET_ARBITRAGE = .TRUE. ! MAKE A SWITCH PER KCPL
0!                  AND CONVERT TO BINARY FORMAT
0!                  ANNUAL_FUEL_REPORT(TRANS,1) = 
0!                  ANNUAL_FUEL_REPORT(TRANS,2) = 
0!                  ANNUAL_HYBRID_BATTERY(TRANS) = HYBRID_BATTERY(TRANS)
0!                  ANNUAL_INTERRUPTIBLE_CAPACITY(TG) =
0!                  ANNUAL_PLANNING_INTERRUPT_CAPACITY(TG) =
0!                  ANNUAL_TG_PEAK(R_ISEAS,0) = 
0!                  ANNUAL_TG_PEAK(R_ISEAS,TG) = 
0!                  ANNUAL_TG_VOLUME(0) = ANNUAL_TG_VOLUME(0) +
0!                  ANNUAL_TG_VOLUME(TG) = ANNUAL_TG_VOLUME(TG) +
0!                  ANNUAL_VARS_Customer_Revenue =
0!                  ANNUAL_VARS_Energy_Revenue =
0!                  ANNUAL_VARS_Peak_Revenue =
0!                  ASSET_CLASS_2_GN(AC) = NUMBER_OF_ACTIVE_GAS_GROUPS
0!                  ASSET_CLASS_GROUPS_INDEX(AC) = MAX_ASSET_CLASS_GROUPS
0!                  ASSET_CLASS_GROUP_2_AC(MAX_ASSET_CLASS_GROUPS) = AC
0!                  BUYERS_LOAD = BUYERS_LOAD + TEMP_TRANSACTION
0!                  BUYERS_LOAD = MAX(M_HOURLY_LOADS(BUYER,HOUR_IN_DAY),
0!                  C = PC_C(PC)
0!                  CALL AccumVector(DAILY_MW(1),SUM_QUANTITY,24) ! use .ASM version for speed
0!                  CALL GET_DAY_OF_WEEK_IN_MONTH(DAY,R_MONTH,
0!                  CALL GET_NEW_MARKET_PRICE_NAME(MARKET_PRICE_NAME)
0!                  CALL GET_NG_BY_REGION_BY_MMBTU(GAS_ID,
0!                  CALL GET_PROD_BY_MK_BY_MWH(MK,PROD_BY_MK_BY_MWH)
0!                  CALL GET_TRANS_PEAK_B4_HYDRO(TEMP_TL_PEAK,1)
0!                  CALL LOCATE(16,16)
0!                  CALL MUNICIPAL_REVENUES(YEAR_LOOP,OPMETH,
0!                  CALL_POSITION(NUM_CALLS(TG),TG) = TRANS
0!                  CAL_MAR_HOURLY_WHOLESALE =
0!                  CAPPED_PRICE(I) = 999999.
0!                  CAPPED_PRICE(I) = GET_PRICE_CAP(I)
0!                  CASH_DISTRIBUTION(:) = CASH_LAG_PERCENTAGES(:) *
0!                  CG = 1
0!                  CHRONOLOGICAL_HOUR(HOUR_IN_FCLOD) =  HOUR_IN_MONTH
0!                  CS_SUPPLY_COST_CURVE(L,I) = TEMP_R
0!                  CURRENT_STATE = .FALSE.
0!                  CYCLE
0!                  C_BY_SYSTEM(L) = 0
0!                  CurHrCost(Rank(iGP),iGP) = LOCAL_PRICE(HOUR_IN_MONTH)
0!                  DAILY_DEMAND(K) = DAILY_DEMAND(K) - TRANQ
0!                  DAILY_INJECT_WITHDRAWAL(I) = 
0!                  DAILY_MW(Hr) =
0!                  DAILY_NODE_VOLUME(L_K) = 
0!                  DAY = DAY
0!                  DAY = HOUR/24
0!                  DAY = HOUR/24 + 1
0!                  DO EMIS_TYPE = 1, NUMBER_OF_EMISSION_TYPES
0!                  DO I = 1, MAX_OUTAGE_BLOCKS
0!                  DO I = 1, NUMBER_OF_DATA_FILES
0!                  DO J_F = 1, 3
0!                  DO K = 2, 2
0!                  DOWHILE(I <= TOTAL_HOURLY_BLOCKS .AND. TEMP_R > .01)
0!                  ELSE
0!                  ELSEIF(HYTYPE(UNIT) == 'P') THEN
0!                  ELSEIF(HYTYPE(UNIT) == 'S') THEN
0!                  ELSEIF(LREC > 366) THEN
0!                  ELSEIF(R_CF >= 
0!                  ELSEIF(R_YEAR+BASE_YEAR == BASIN_START_YEAR(M) .AND.
0!                  ELSEIF(X == 2) THEN
0!                  EMISSION_MARKET_LINK = ASSET_CLASS_NUM
0!                  END DO
0!                  ENDDO
0!                  ENDIF
0!                  ENDIF 
0!                  END_OF_PRICING_GROUPS = .FALSE.
0!                  ENERGY_DIF = SNGL(ENRG2 - ENRG1)
0!                  EXCLUDE_SUB_OCI_EARNINGS = 0.  FE 7/7/04
0!                  EXIT
0!                  FISCAL_EL_MARKET_REVENUE(UNIT,1) = 
0!                  FISCAL_EL_MARKET_REVENUE(UNIT,2) = 
0!                  FOR EACH TRANSACTION GROUP
0!                  FOUND_FIRST_INTERVAL = .TRUE.
0!                  FOUND_FIRST_S = .TRUE.
0!                  FREE_DRIVERS(APP_NUM) = FREE_DRIVERS(APP_NUM)/100.
0!                  FREE_RIDERS(APP_NUM) = FREE_RIDERS(APP_NUM)/100.
0!                  FUEL_PRICE(YR) = FUEL_PRICE(YR) * 
0!                  FUEL_REPORT_VARIABLE_NUMBER = 15
0!                  GS_SUPPLY_CAPACITY_CURVE(L,I) = 
0!                  GS_SUPPLY_COST_CURVE(K,I) = 
0!                  GS_SUPPLY_COST_CURVE(K,I) = 0.0
0!                  GS_SUPPLY_EXTRACT_CURVE(L,I) = 
0!                  HIGH_CAP(I) = MIN(PROPOSED_QUANT_OF_PRODUCT(IND),
0!                  HOURLY_CAPACITY(I,HOUR_IN_DAY) = 0.
0!                  HOURLY_DUMP_CAPACITY(SELLER) = r8TEMP
0!                  HOURLY_FORWARD_SALE = HOURLY_FORWARD_SALE +
0!                  HOURLY_HYDRO = GET_TRANS_HOURLY_HYDRO(HOUR,R_TG) +
0!                  HOURLY_IN_THE_MONEY = .TRUE.
0!                  HOURLY_TRANS_GROUP_GEN_ACTIVE(I) =
0!                  HOURLY_TRANS_GROUP_LOAD_ACTIVE(BUYER) = .TRUE.
0!                  HOURLY_UNSERVED_ENERGY = HOURLY_UNSERVED_ENERGY -
0!                  HOURS_FOR_PRODUCT = 16
0!                  HOURS_FOR_PRODUCT = 24
0!                  HOURS_FOR_PRODUCT = 8
0!                  HOURS_SINCE_SHUT_DOWN = 0
0!                  HOURS_SINCE_START_UP = 12
0!                  HOURS_SINCE_START_UP(OPTION_INDEX) = 0
0!                  HOUR_CONSTRAINT_LIMIT(I,J,K) =
0!                  HOUR_PATH_LIMIT(L1,L2) =
0!                  HOUR_PATH_LIMIT(L2,L1) = 
0!                  HOUR_PATH_LIMIT(L_SELLER,L_BUYER) =
0!                  HOUR_PATH_MW(L1,L2) =
0!                  HOUR_TIE_LOADING(L2,L1) = 
0!                  HYDRO_GROUP_2_GS(NUMBER_OF_HYDRO_GROUPS) =
0!                  I = 1
0!                  I = COAL_LOAD_GROUPS_INDEX(I)
0!                  I = FIRST_TABLE_TG(J)
0!                  I = GET_TRANS_GROUP_INDEX(TG)
0!                  IF( FOUND_FIRST_INTERVAL) THEN
0!                  IF( REPORT_AREA_ACTIVE(I) .AND. 
0!                  IF(.NOT. CLASS_EXISTS(CLASS)) CYCLE
0!                  IF(5 < 4) THEN
0!                  IF(A < 1 .OR. A > TOTAL_START_UP_UNITS) THEN
0!                  IF(ANN_IPL_FAC_DB(2) > .01) THEN
0!                  IF(B == 1 .AND. X == 1) THEN
0!                  IF(CAPACITY_GIVEN_MARKET(R_NEW_POINT,R_I) > 0.d0)THEN
0!                  IF(CHARGE(I+1) == 0) THEN
0!                  IF(COAL_LOAD_GROUP_2_TG(J) == 0) CYCLE
0!                  IF(C_BY_SYSTEM(M) > 0) THEN
0!                  IF(DAILY_GROSS(I) > 0. .AND. RAMP_RATE_ACTIVE) THEN
0!                  IF(DAY_IN_MONTH == 1 .AND. I < 2) THEN
0!                  IF(DEPTH_QUANTITY(I) > 0.1) THEN ! PURCHASE
0!                  IF(DYN_SUPPLY_BASIS_DIFF(I) < -9998.0) THEN
0!                  IF(FILE_EXISTS) CALL ERASEWC(FILE_NAME)
0!                  IF(FIRST_CALL_TO_ENDPOINT(OPTION_INDEX)) THEN
0!                  IF(GRX_RPS_CAPACITY(TRANS,R_YEAR) > 0.01) THEN
0!                  IF(HARD_WIRED_YEAR-LEAD_TIME(I) > BASE_YEAR) 
0!                  IF(HYTYPE(UNIT) == 'B') THEN
0!                  IF(I /= 1) CYCLE
0!                  IF(I > MARGINAL_UNIT_AGAINST_LOAD(0)) THEN
0!                  IF(I > MAX_TRANS_LOADS) CYCLE
0!                  IF(I.GT.IPEAK) I = IPEAK
0!                  IF(INTERVAL < LAMBDA_INTERVAL) THEN
0!                  IF(INT_RES_REMAIN(K,M) < 0.) THEN
0!                  IF(IOS /= 0) EXIT ! END OF FILE
0!                  IF(J > 0) THEN
0!                  IF(LREC <= 0) THEN
0!                  IF(LREC == 0) THEN
0!                  IF(L_SELLER /= R_SELLER .OR. L_BUYER /= R_BUYER) THEN
0!                  IF(MONTHLY_MARKET_COUNTER(MK) == 1 .AND.
0!                  IF(MUST_RUN_OPTIONS(I) > 0) CYCLE
0!                  IF(MW_FOR_TRANSACTION(I) > 100.) THEN
0!                  IF(M_HOURLY_LOADS(I,HOUR_IN_DAY) <= 0.0d0) THEN
0!                  IF(NG_BTUS_BY_GSP_BY_FUEL(1) > 0.1) THEN
0!                  IF(RECORDS_IN_OVERLAY_TABLE == AVAIL_DATA_YEARS) EXIT
0!                  IF(R_MONTH == 2 .AND. 
0!                  IF(R_YEAR > 1) THEN
0!                  IF(SPECIAL_CUSTOMER_TYPE(TRANS) == 'P' .AND.
0!                  IF(STRIKE_FREQUENCY(IND) == 'H') THEN ! ASSUMES HOURLY
0!                  IF(SUPPLY_TYPE(M) == 'L' .AND. 
0!                  IF(TEMP_R < 0.) THEN
0!                  IF(TEMP_TRANSACTION == 0.) THEN
0!                  IF(UNIT_CONTRIB > 1.001) THEN
0!                  IF(UNUSED_ENRG) THEN
0!                  IF(UPPER_TRANS_GROUP > 1) 
0!                  IF(WHEEL_PATH(PATH,K) > 0) THEN
0!                  IF(YEAR == 8 .AND. ISEAS == 11 .AND.
0!                  IF(YES_FIRST_TABLE) THEN
0!                  IF(YES_HOURLY_COMMITMENT) THEN
0!                  IF(YES_REGION_POWER_MAP) THEN
0!                  INCREMENT BY DEFAULT DELTA UNTIL CROSS-OVER INTERVAL
0!                  INC_NON_UTIL_COSTS = TOTAL_PARTICIPANT_COSTS
0!                  INC_SALES_REVENUES = SNGL(GET_TOTAL_SALES_REVENUE())/
0!                  INQUIRE(UNIT=DEPTH_MARKET_UNIT,NEXTREC=TARGET_RECORD)
0!                  INTERVAL_INDEX = 0
0!                  INTERVAL_INDEX(K) = NO_UNIQUE_INTERVALS
0!                  J = HYBRID_INDEX(HYBRID_BATTERY(TRANS))
0!                  J = J
0!                  JDA_GENERATION(L,1) = JDA_GENERATION(L,1) + TEMP_R
0!                  JDA_MARGINAL_COST(L) = JOINT_DISPATCH_ORDER(I,2)
0!                  K = K + 1
0!                  L = L + 1                  
0!                  L1 = L2
0!                  LOCAL_DEPTH_PRICE = 
0!                  LOCAL_DEPTH_QUANTITY = 0.
0!                  LOCAL_EXTRACT_IN_DAY(GS) = 
0!                  LOCAL_HARD_EXTRACT_IN_DAY(GS) = 
0!                  LOCAL_INTERVAL = LOCAL_INTERVAL + 
0!                  LOCAL_MIN_EXTRACT_IN_DAY(GS) =
0!                  LOCAL_QUANT = 999999999999.
0!                  LOCAL_SPREAD_MULT = 1.0
0!                  LOCAL_STORAGE_PATTERN(TEMP_I2) = PATTERN(I+1)
0!                  LOCAL_USAGE(1:800) = R_USAGE(1:800)
0!                  LOCAL_USAGE(1:8784) = R_USAGE(1:8784)
0!                  LOCAL_WHEELING_CHARGE =
0!                  LOCAL_WHEEL_MULT = 1.0
0!                  LOW_CAP(I) = MIN(PUMPING_CAPACITY(IND),
0!                  LREC = IREC + TABLE_DAY_SHIFT(TRANS) + 
0!                  L_BUYER = TRANS_GROUP_POSITION(WHEEL_PATH(PATH,3))
0!                  L_LP = TRANS_GROUP_POSITION(WHEEL_PATH(PATH,2))
0!                  L_MONTHLY_PRICE(HOUR) = DEPTH_PRICE(HOUR)
0!                  L_P = LONG_PATH_TRANSACTION_PAIR(SELLER,BUYER)
0!                  L_SELLER = TRANS_GROUP_POSITION(WHEEL_PATH(PATH,1))
0!                  MARGIN(K) = ONE_DAY_PRICE(HIGH_HOUR(I)) -
0!                  MAX_ASSET_CLASS_GROUPS = MAX_ASSET_CLASS_GROUPS + 1
0!                  MAX_DAILY_EXTRACTION_IN_MONTH(M) =
0!                  MAX_DAILY_EXTRACTION_IN_MONTH(M) = 
0!                  MAX_DAILY_EXTRACTION_IN_MONTH(M) = 999999999.
0!                  MAX_DAILY_EXTRACTION_IN_MONTH(M) = MAX_DAILY_EXTRACTION_RATE(GAS_GROUP)
0!                  MAX_DEPTH_PROFIT = LOCAL_DEPTH_PROFIT
0!                  MAX_ID_NUM = MAX(MAX_ID_NUM,TEMP_ID_NUMBER)
0!                  MIN_ID_NUM = MIN(MIN_ID_NUM,TEMP_ID_NUMBER)
0!                  MIN_ITER_B4_LONG_PATH = 3 * UPPER_TRANS_GROUP
0!                  MK = MAX(1,MARKET_AREA_LOOKUP(
0!                  MONTH = MONTH + 1
0!                  MONTHLY_ENERGY(IND,0) =
0!                  MONTHLY_ENERGY_COST(IND,0) =
0!                  MONTHLY_ENERGY_PRICE(IND) = 0.
0!                  MONTHLY_MARKET_COUNTER(MK) = 
0!                  MONTHLY_PRODUCT_HOURS(IND,0) =
0!                  MONTHLY_STRIKES(IND,0) = MONTHLY_STRIKES(IND,0) + 1
0!                  MONTHLY_TRANS_HOURS(IND,0) =
0!                  MONTHLY_TRANS_HOURS(IND,MONTH) = NINT(C_HOURS) ! generation only
0!                  M_HOURLY_LOAD_B4_SALES(I,HOUR_IN_DAY) = 0.d0
0!                  MonthlyAvail(HOUR_IN_MONTH) =
0!                  N = TEMP_GS_SUPPLY_POSITION(K)
0!                  NGas_VolatilityByHour = 1.0
0!                  NUMBER_OF_HYDRO_GROUPS = NUMBER_OF_HYDRO_GROUPS + 1
0!                  NUM_CALLS(TG) = NUM_CALLS(TG) + 1
0!                  NUM_PUTS(TG) = NUM_PUTS(TG) + 1
0!                  OUTAGE_CAPACITY = OUTAGE_CAPACITY
0!                  OUTAGE_WHOLESALE_ENERGY(OUTAGE_BLOCK,2) =
0!                  OUTAGE_WHOLESALE_REVENUE(OUTAGE_BLOCK,2) =
0!                  PA = TG_2_PLANNING_AREA(TG)
0!                  PEAK_MONTH = GET_PA_PEAK_MONTH(PA)
0!                  POWER_DAILY_VOLUME_BY_MONTH(R_ISEAS,TG) = 
0!                  PRICING_GROUP_BUY_GEN = 0.
0!                  PRODUCT = 5
0!                  PURCHASE_COSTS = PURCHASED_POWER_COSTS(1) +
0!                  PUT_POSITION(NUM_PUTS(TG),TG) = TRANS
0!                  PipeExpansionCapacity(J) = PipeExpansionCapacity(J) +
0!                  READ(10,1000,IOSTAT=IOS) RECLN
0!                  READ(R_LOAD_UNIT,REC=LREC)
0!                  READ_OVERLAY_INPUT = .FALSE.
0!                  REGIONAL_INDEX = FUEL_INDEX*TG
0!                  REPORT_THIS_GROUP(LOCAL_INDEX) = 
0!                  RESERVE_BLOCK = BLOCK
0!                  RESOURCE_ID_TO_UNIT(LOCAL_RESOURCE_ID) = U ! FIRST OCCURANCE
0!                  ROUTINE TO CONVERT CO2_PARAM FILE
0!                  ROUTINE TO CONVERT RPS_PROGRAM FILE
0!                  ROUTINE TO CONVERT TIE CONSTRAINTS FILE
0!                  ROUTINE TO CONVERT TIE PATHS FILE
0!                  ROUTINE TO CONVERT TRAN_EXPS FILE
0!                  ROUTINE TO CONVERT UNIT OUTAGES FILE
0!                  ROUTINE TO CREATE AN ENERGY PRODUCTS FILE
0!                  RR_YEAR = RR_YEAR + 1 ! OUT. 11/25/98. GAT.
0!                  R_ANNUAL_USAGE(HOUR_END_OF_MONTH+I) = PATTERN(I+1)
0!                  R_ANNUAL_USAGE(HOUR_IN_YEAR+I-2) = PATTERN(I+1)
0!                  R_DEPTH_PRICE = LOCAL_DEPTH_PRICE
0!                  R_DEPTH_QUANTITY = LOCAL_DEPTH_QUANTITY
0!                  R_FIRST_S = L
0!                  R_MONTHLY_AVAIL(HOUR_IN_MONTH) =
0!                  R_PRICE(1:800) = LOCAL_PRICE(1:800)
0!                  R_PRICE(1:8784) = LOCAL_PRICE(1:8784)
0!                  SCARCITY_COST(I,HOUR_IN_DAY) = 0.
0!                  STATE_RPS_EXEMPTION = (1.-STATE_RPS_EXEMPTION*0.01)
0!                  SYSTEM_BALANCE = SYSTEM_BALANCE
0!                  SYSTEM_MONTHLY_POSIT(1,13,TG) =
0!                  SYSTEM_MONTHLY_POSIT(1,21,TG) =
0!                  SYSTEM_MONTHLY_POSIT(1,22,TG) =
0!                  SYSTEM_MONTHLY_POSIT(2,13,TG) =
0!                  SYSTEM_MONTHLY_POSIT(2,21,TG) =
0!                  SYSTEM_MONTHLY_POSIT(2,22,TG) =
0!                  SYSTEM_MONTHLY_POSIT(3,13,TG) =
0!                  SYSTEM_MONTHLY_POSIT(3,21,TG) =
0!                  SYSTEM_MONTHLY_POSIT(3,22,TG) =
0!                  SYSTEM_MONTHLY_POSIT(I,16,TG) = 0.
0!                  TEMP2_R = HOURLY_CUST_MARGIN_DB(1,K) ! GENERATION
0!                  TEMP_CAP = 0.
0!                  TEMP_I2 = 
0!                  TEMP_L = TEMP_L
0!                  TEMP_LOAD = TEMP_LOAD
0!                  TEMP_R = 
0!                  TEMP_R = 999999999.
0!                  TEMP_R = MIN(R_CURRENT_PATH_MW,
0!                  TEMP_R = TRANC_DATABASE(L,HOUR,C,8)
0!                  TEMP_R1 = HOUR_TIE_LIMIT(SELLER,BUYER,
0!                  TEMP_R4 = (Storage_Current_Capacity(I) - 
0!                  TEMP_R4 = DAILY_MIN - 
0!                  TEMP_STATE = LOCAL_STATE_PROVINCE_NAME(1:2)
0!                  TEMP_STR = '"'//BASECASE_MARKET_AREA_ID(I)//'"'//
0!                  TEMP_TL_PEAK = GET_TRANS_PEAK_AFTER_EL(1)
0!                  TEMP_TRANSACTION = 0.
0!                  TEMP_TRANSACTION = MAX(0.,TEMP_TRANSACTION -
0!                  TEMP_TWO_DIGIT_NAME = R_MULTI_AREA_NAME
0!                  TEST_CAP = MIN(HIGH_CAP(I),
0!                  TG = GAS_GROUP_ID(TRANS)
0!                  TG = GET_TRANS_GROUP_POSITION(TRANSACTION_GROUP)
0!                  TIES_PER_PAIR(CURRENT_TIE,LAST_TIE) =
0!                  TIE_INDEX(CURRENT_TIE,LAST_TIE,
0!                  TIE_WHEEL_INDEX(CURRENT_TIE,LAST_TIE,
0!                  TOLERANCE = TOLERANCE * 1.2
0!                  TOTAL_MONTHLY_CASH(LAST_MONTH:LAST_MONTH+11,
0!                  TOTAL_MONTHLY_CASH(LAST_MONTH:LAST_MONTH+11,Fuel) =
0!                  TOTAL_MONTHLY_CASH(LAST_MONTH:LAST_MONTH+11,NonFuel) =
0!                  TWH = TWH
0!                  U = UNIT(S) 
0!                  UNIT_2_FUEL_TRANS(TEMP_I) = TRANS
0!                  UNIT_UP_LAST_HOUR = .TRUE.
0!                  USE_MARKET_AREA(LOCAL_INDEX) = 0
0!                  WEEKLY_HYDRO_FORECASTS = 
0!                  WH_YEAR = WH_YEAR + 1 ! OUT. 11/25/98. GAT.
0!                  WRITE(39,*) RefMo,",",RefDay,",",Month,",",Day,","
0!                  WRITE(4,*) " "
0!                  WRITE(4,*) "Asset Class Id = ",
0!                  WRITE(4,*) "BAD NAME IN THE MARKET GROUPS FILE"
0!                  WRITE(4,*) "CUSTOMER GROUP = ",R_CG
0!                  WRITE(4,*) "Duplicate Asset Class Detected in"
0!                  WRITE(4,*) "GAS_NODE Group Name = ",
0!                  WRITE(4,*) "IN TRANSACT FORECAST FILES"
0!                  WRITE(4,*) "LOCAL QUANTITY",TEMP_R
0!                  WRITE(4,*) "LOCAL_PRICE",LOCAL_PRICE
0!                  WRITE(4,*) "LOCAL_X2_COEFFICIENT",LOCAL_X2_COEFFICIENT
0!                  WRITE(4,*) "LOCAL_X_COEFFICIENT",LOCAL_X_COEFFICIENT
0!                  WRITE(4,*) "NAME= ",LOCAL_NAME
0!                  WRITE(4,*) "RESET TABLE INDEX TO 1"
0!                  WRITE(4,*) "R_YEAR",R_YEAR
0!                  WRITE(4,*) "Renumber or accumulate groups."
0!                  WRITE(4,*) "TRANS GROUP = ",R_TG
0!                  WRITE(4,*) "UNABLE TO FIND TABLES FOR RPS DATA"
0!                  WRITE(4,*) "X2 INTERCEPT",LOCAL_X2_INTERCEPT
0!                  WRITE(4,*) "the GAS_NODE Group file."
0!                  WRITE(6,*) BLOCK_1,J
0!                  WRITE(PW_REC,4447) 
0!                  WRITE(TRANS_MRK_UNIT,REC=TRANS_MRK_REC) 
0!                  call NonlinearlyMap(
0!                  endif
0!                  if((FctOwning(j)==nActiveFacets).and.
0!                  if(.not. gas_lp_active) then
0!                  nDaCMo = nDaCMo + DAYS_IN_EACH_MONTH(MONTH)
0!                  nHrAtMin = nHrAtMin+1
0!                  r8TEMP = MAX(0., HOURLY_DUMP_CAPACITY(SELLER) -
0!                 ! END OF TABLE !
0!                 ! TODO: Unit Emissions 1..5 should be named constants.
0!                 ! Transact Production report (msgmopro)
0!                 ! second read
0!                 (LTD Interest Paid + Debt Retirements)
0!                 20 values in it
0!                 24=4!
0!                 72=2*6*6=2!*3!*3!
0!                 => (CUM GROSS MARGIN OF TODAY AND TOMORROW > 0.)
0!                 ALINE_LOAD_DATA 
0!                 ANNUAL_INTERRUPTIBLE_CAPACITY(TG) =
0!                 BUILD AN HOURLY DISPATCH CURVE.
0!                 CALL CLOSE_ASSET_VECTOR_FILE
0!                 CALL EXCHANGE  ! REMOVED 11/15/06 NOT NEEDED DR.G
0!                 CALL LOCATE(12,10)
0!                 CALL LOCATE(9,10)
0!                 CALL OPEN_ASSET_VECTOR_FILE(82)
0!                 CALL RINIT ! 3/10/95 temp fix for reseting base year MSG
0!                 CAPACITY_AFTER_LOSSES = CAPACITY_AFTER_LOSSES +
0!                 CONTRACT I THINK IS TREATED LIKE ENTITLEMENT
0!                 CS(CCS)
0!                 CURRENT_CONTRACT_CAPACITY MAY BE RESET BY
0!                 CURVE ON AN ODD SPACED GRID
0!                 CostAccum(iGP) = CostAccum(iGP)+GpCapyProrated
0!                 CostAccum(iGP)=0.0 ! costs avoided for iGP=0
0!                 ENDIF
0!                 EnergyMWH(iGP) = EnergyMWH(iGP)+GpCapyProrated
0!                 EnergyMWH(iGP)=0.0
0!                 FOLLOWING NERC LOAD DATA FORMAT
0!                 IF(ALLOCATED(POKE_CURRENT_CO2_DISPATCH_COST)) THEN
0!                 IF(YEAR == 1) CALL RINIT
0!                 IN MMTB.
0!                 KeyVar(1)=j ! ... so DualVar will show vars are in economic order
0!                 LOAD CHANGES FOR ANY COMBINATION OF THE THREE DSM
0!                 LOOK_AHEAD_LOGIC = .TRUE.
0!                 Linear mapping above cannot meet all the constraints
0!                 M.S. GERBER & ASSOCIATES, INC.
0!                 MoFrHrUsed(ChronHr(iGP),iDa,iGP)=FracHrCurCost(iGP)
0!                 MoFrHrUsed(iHr,iDa,iGP)=0.0
0!                 NEED TO DIFFERENTIATE BETWEEN FOR AND MOR.
0!                 NEXT_REC = NEXT_REC + 1
0!                 OBSERVATION TO ITS FORECASTED VALUE AND THEN INCLUDE
0!                 OPERATING METHODS.
0!                 OTHER VARIABLES
0!                 PASS TRANS_REV/1000. TO FINANCIAL PER DIANE.
0!                 RECORD THREE CAPACITY ADDED VARIABLES
0!                 REDEFINE WHEEL_PATH TO BE THE TRANSACTION GROUP POSITION
0!                 RESOURCE_CAP(AREA) = UNIT_CAPACITY *
0!                 ROUTINE TO CONVERT CPL CONTRACT FILE
0!                 STARTING IN VERSION 4.0A.
0!                 STOP
0!                 TEST WHETHER THE UNIT IS ONLINE DURING THE YEAR.
0!                 THAN TWENTY POINTS
0!                 THIS EQUATION WILL FIRST TRANSFORM EACH HISTORICAL
0!                 TRANS_MRK_REC = TRANS_MRK_REC + 1
0!                 TRYING TO AVOID REDUNDENCY WITH THE CODE BELOW.
0!                 The vector is a list of pointers to a vector that has
0!                 This reduction of the IREC is to offset the function
0!                 UNIT CALCULATIONS FOR GENERATION
0!                 UNIT INDEXED ARRAY DON'T APPLY
0!                 VOID_INT2 = INCREMENT_HARDWIRED_CT_UNITS()
0!                 VOID_INT2 = INCREMENT_HARDWIRED_LM_UNITS()
0!                 VarState(j)=BasicKey
0!                 VarState(j2)=BoundNB1
0!                 WRITE(6,"('&Muni')")
0!                 WRITE(6,'("&",A)') '   '
0!                 WRITE(6,*) "UNTRAPPED ENERGY PRODUCT IN DAILY OPTIONS"
0!                 WRITE(REPORTING_UNIT_NUMBER,REC=NEXT_REC)
0!                 do iGP=0,1
0!                 do iHr=1,24
0!                 else use the prior TailUQ value computed after de/convolution
0!                 end do
0!                 if((FctOwning(j)==nActiveFacets).and.
0!                 if(.not.Nearly0(LUB(j),0)) ! incr xLoadPoint by derated capacity
0!                 if(PrtDetail>1) write(*,
0!                 if(PrtDetail>1) write(*,'("&",6f5.2,2f5.0)')
0!                 if(PrtDetail>1) write(*,'(1x,3i2,2i3,2f6.2,2f5.2)')
0!                 if(PrtDetail>2) write(PrtUni,'(1x,2i4,1x,z4,a)')
0!                 if(PrtDetail>2) write(PrtUni,'(1x,a,2f11.4,4e14.6)')
0!                 if(PrtDetail>2) write(PrtUni,'(1x,a,2i3,3f13.3)')
0!                 lower bound when it should have interpreted it as zero
0!                 phrase '.and.(RHS>=0.0)' rejected negative noise as a valid
0!                 return ! entry AugmentOrderGray
0!                 that the record offset be added before the read
0!                 write(*,'(1x)') ! begin a new output record
0!                 write(*,'(9f6.2)') (CurHrCost (iHr,iGP),iHr=1,nHrAvail(iGP))
0!                 write(*,'(9i6  )') (GpHrRanked(iHr,iGP),iHr=1,nHrAvail(iGP))
0!                 write(*,'(i3,3f9.2,4f6.3,2f5.0)') iDa,CostAccum,
0!                ! Ignore fractional component when determining variable O&M rate.
0!                6=3!
0!                DEMAND_TARGET =
0!                DO RI = 1, LAST_INCOME_LINE
0!                GLBonPointWithTMC(J,I,TEMP_I1)=NEW_POINT
0!                INFOR IN INIT FILE IS NEEDED FOR NEXT DECISION PLANNING
0!                ROUTINE TO CONVERT CATAWBA CONTRACT FILE
0!                ROUTINE TO CONVERT DAY_TYPE FILE
0!                ROUTINE TO CONVERT ELECT_HOUR_MULT FILE
0!                ROUTINE TO CONVERT GAS_HOUR_MULT FILE
0!                ROUTINE TO CONVERT MARKET_PRICE FILE
0!                ROUTINE TO CONVERT NEW_MARKET_PRICE FILE
0!                ROUTINE TO CONVERT OIL_HOUR_MULT FILE
0!                ROUTINE TO CONVERT REFERENCE_LOAD FILE
0!                ROUTINE TO CONVERT SCENARIO_HOURLY FILE
0!                ROUTINE TO CONVERT TRANSACT TIE FILE
0!                ROUTINE TO READ ENERGY PRODUCTS FILE
0!                XD(2) = LAST_DEMAND_VOLUME
0!                XS(2) =
0!                YD(2) = ! TWO ITERATIONS AGO
0!                YS(2) = ! TWO ITERATIONS AGO
0!               ! TODO: Remove spreadsheet code -- it's unused and
0!               ! probably no longer works.
0!               !msgmtrcl - total
0!               ACTIVE_CONSTRAINT_NUMBER =
0!               ACTIVE_LINK = ACTIVE_LINK + 1
0!               ALLOCATE(FISCAL_CT_CAPACITY(I,2))
0!               ALLOCATE(FISCAL_CT_ENERGY(I,2))
0!               ALLOCATE(FISCAL_CT_FIXED_COST(I,2))
0!               ALLOCATE(FISCAL_CT_MARKET_REVENUE(I,2))
0!               ALLOCATE(FISCAL_CT_SO2_EMIS(I,2))
0!               ALLOCATE(FISCAL_CT_VAR_COST(I,2))
0!               Alto's method of calculating revenues and transfers.   C
0!               BEG_YYMM = BEG_MMDD/100+100*(TEST_YEAR - 1900)
0!               BLOCK = OUTAGE_BLOCK_INDEX(OUTAGE_BLOCK)
0!               CALL GET_INSTALL_CAP_VALUE_LAST_PA(PA,TEMP_R4)
0!               CALL GET_MONTHLY_DUKE_RESERVE_ENERGY(TEMP_ENERGY)
0!               CALL LOCATE(16,16)
0!               CALL LOCATE(3,65)
0!               CALL LOCATE(4,9)
0!               CALL MG_LOCATE_WRITE(12,26,
0!               CALL PUT_TRANS_C_HEAT(
0!               CALL TIMER(SIMTIME)
0!               CAPACITY_ADDED = UNIT_CAP(R_POINTER)
0!               CAPACITY_PLANNING_PEAK = GET_GROUP_PEAK_ON_PEAK_MONTH(TG)
0!               CAPACITY_VALUES(I-1,GAS_GROUP) = 
0!               CG = CUSTOMER_GROUP(I) 
0!               CL_MONTH_NAME(CURRENT_MONTH) = MONTH_NAME(CURRENT_MONTH)
0!               COAL_GROUP = COAL_GROUP + 1
0!               CONGESTION_COST_NOMINAL(I) = 1.0 ! NO ESCALATION
0!               CONSTRAINT_MULT =
0!               CONSTRAINT_MULT = 1.0
0!               COPYRIGHT (C) 1981, 1982, 1983, 1984, 1985, 1991, 1992
0!               CS = GET_COAL_GROUP_INDEX(J)
0!               CURRENT_TIE = TRANS_GROUP_POSITION(TEMP_ID)
0!               CYCLE
0!               C_DEPTH_MARGIN_REC = C_DEPTH_MARGIN_REC + 1
0!               ContigPrices(HrInYr) = R_ANNUAL_MARKET_PRICES(HrInYr)
0!               CurHrCost(Rank(iGP),iGP) = LOCAL_PRICE(HOUR_IN_MONTH)
0!               DAILY_INJECT_WITHDRAWAL(0) = DAILY_INJECT_WITHDRAWAL(0) -
0!               DAILY_INJECT_WITHDRAWAL(I) = DAILY_INJECT_WITHDRAWAL(I) -
0!               DAILY_INJECT_WITHDRAWAL(I) = DAILY_INJECT_WITHDRAWAL(I)/
0!               DAILY_OPTION_REVENUE = 0.
0!               DATA_BASE_BY_HOUR(J,LOCAL_HOUR) = I
0!               DATA_BASE_BY_HOUR(TG,LOCAL_HOUR) = I
0!               DAY = HR/24
0!               DAY_WEEK_REC = RPTREC(DAY_WEEK_UNIT)
0!               DEPTH_MARKET_REC = DEPTH_MARKET_REC + 1
0!               DEPTH_MONTH_MARGINAL_COST(J,INTERVAL) = 
0!               DEPTH_MONTH_PRICE(J,INTERVAL) = 
0!               DO A = 1, TOTAL_START_UP_UNITS
0!               DO AREA = LAST_AREA+1, NUMBER_OF_AREAS
0!               DO DA = 1, DAYS_IN_MONTH
0!               DO I = 1, 12
0!               DO I = 1, MAX_OUTAGE_BLOCKS ! DISPATCH ORDER
0!               DO I = 1, MIN(50,MAX_TRANS_WITHIN_HOUR)
0!               DO I = 1, TOTAL_HOURLY_BLOCKS ! DISPATCH ORDER
0!               DO J = 1,  MAX_CUST_CLASS_GROUPS
0!               DO K = 1, L
0!               DO K = 1, SEASONS_PER_YEAR
0!               DO MO = 1, 12
0!               DO TABLE = 1, MAX_TABLE_NUM 
0!               DOWHILE(K <= 10)
0!               DOWHILE(RECLN(1:1) == '7')  ! END OF OVERLAY TABLE 
0!               EDExcl(j2)=(EqLDur(j2)-EFOR*Duration)/EqAv
0!               ELSE
0!               ELSEIF(MAX_DAILY_EXTRACTION_RATE(M) < -0.1) THEN
0!               ELSEIF(SCENARIO_INDEX == 4) THEN
0!               ELSEIF(STRIKE_FREQUENCY(TRANS) /= 'A') THEN
0!               ELSEIF(TEMP_INTERP_TRANSACTION > 0.d0) THEN ! ADDED FOR SRP. 8/24/99. GAT.
0!               ENDDO
0!               ENDDO                  
0!               ENDDO ! DAYS
0!               ENDDO ! I
0!               ENDIF
0!               END_YYMM = END_MMDD/100+100*(TEST_YEAR - 1900)
0!               ENRGMO(J,HYDRO_UNITS) = ENRGMO(J,EL_ARRAY_POS)
0!               EXP_PURCHASE_POWER_EXPENSE = EXP_PURCHASE_POWER_EXPENSE
0!               EXTRACT_CURVE = EXTRACT_CURVE * 
0!               EXTRACT_CURVE = EXTRACT_CURVE +
0!               E_BTU_CONTENT(I) = 1.0
0!               E_BTU_CONTENT(I) = 1000.0/ BTU_CONTENT
0!               E_BTU_CONTENT(I) = 1000000. / (BTU_CONTENT*42.)
0!               E_BTU_CONTENT(I) = 1000000. / (BTU_CONTENT*55.)
0!               E_BTU_CONTENT(I) = 500.0 / BTU_CONTENT
0!               FIRST_TABLE_TG(GET_COAL_GROUP_POSITION(TG)) = TRANS
0!               FIRST_TABLE_TG(GET_TRANS_GROUP_POSITION(TG)) = TRANS
0!               FISCAL_CT_CAPACITY = 0.
0!               FISCAL_CT_ENERGY = 0.
0!               FISCAL_CT_FIXED_COST = 0.
0!               FISCAL_CT_MARKET_REVENUE = 0.
0!               FISCAL_CT_SO2_EMIS = 0.
0!               FISCAL_CT_VAR_COST = 0.
0!               FIXED_EXPENSE = EXP_FILE_FIXED_EXPENSE
0!               FOR THE AUTOMAINTENANCE SCHEDULER
0!               FOUND_FIRST_INTERVAL = .FALSE.
0!               FUT_PEAK(3,I) = FUT_PEAK(3,I) + 
0!               FUT_PEAK(3,LOCAL_MONTH) = FUT_PEAK(3,LOCAL_MONTH) + 
0!               GAS_GROUP = GAS_GROUP + 1
0!               GET_CONSTRAINT_MULT =
0!               GET_GAS_NODE_STATE_PROVINCE = R_GAS_GROUP
0!               GET_GAS_TRANSPORT_RATE = 0 
0!               GET_GAS_TRANSPORT_RATE = TEMP_R
0!               GET_TRANS_LINE_MULT =
0!               GRX_RPS_CAPACITY(TRANS,R_YEAR) = 0.0 ! 101116
0!               GS = GET_COAL_GROUP_INDEX(J)
0!               GS = GET_GAS_GROUP_INDEX(J)
0!               GS_POS(GS) = J
0!               GS_SUPPLY_CAPACITY_CURVE(K,I) = 
0!               GS_SUPPLY_CAPACITY_CURVE(P,I) = 
0!               GS_SUPPLY_COST_CURVE(K,I) = 
0!               GS_SUPPLY_COST_CURVE(P,I) = 
0!               GT = GET_GAS_LINK_ID(J)
0!               GT_POS(GT) = J
0!               HARD_EXTRACT_RATE = HARD_EXTRACT_RATE *
0!               HARD_EXTRACT_RATE = HARD_EXTRACT_RATE +
0!               HEAT_RATE_FOR_SPREAD(TRANS) =
0!               HIGH_CAP = PROPOSED_QUANT_OF_PRODUCT(IND)
0!               HOURLY_FORWARD_SALE =
0!               HOURLY_GRX_STORAGE = GET_GRX_TRANS_HOURLY_STORAGE(I,
0!               HOURLY_LAST_PRICE(BUYER,HOUR_IN_DAY) =
0!               HOURLY_QUANTITY(TRANS) = GRX_RPS_CAPACITY(TRANS,LOCAL_YR)
0!               HOUR_IN_MONTH = (iDa-1) * 24 + iHr
0!               HOUR_IN_MONTH = (iDa-1)*24 + iHr
0!               HOUR_PATH_LIMIT(L1,L2) = 
0!               HOUR_PATH_MW(L1,L2) = 
0!               I = GET_TRANS_GROUP_INDEX(TG)
0!               I = J ! TEMP. TEST. COAL_LOAD_GROUP_2_TG(J)
0!               I = J ! TEMP. TEST. GAS_LOAD_GROUP_2_TG(J)
0!               I = R_MUST_RUN_OPTIONS(L)
0!               IF (MONTHLY_TRANS_HOURS(TRANS,R_MONTH) > 0.) THEN
0!               IF( ABS(linkfunc(j,1,i) - CONGEST_VECTOR(J)) > .001)THEN
0!               IF(.NOT. FOUND_FIRST_S) THEN
0!               IF(.NOT. VECTOR_IS_VALUE) THEN
0!               IF(1+BASE_YEAR < BASIN_START_YEAR(M)) CYCLE
0!               IF(ABS(HOUR_TIE_LIMIT(SELLER,BUYER,
0!               IF(ABS(M1) < .000000001) M1 = 0.
0!               IF(ABS(MAX_DAILY_EXTRACTION_RATE(M)) < 0.0000001) THEN
0!               IF(ABS(TEMP_STORAGE) > .01) THEN
0!               IF(ASSET_CLASS_GROUPS_INDEX(AC) == 0) THEN
0!               IF(CAPACITY_PLANNING_METHOD() == 'MX'  .AND. 
0!               IF(CLASS < SYSTEM_CLASS_NUM) THEN
0!               IF(C_M < 2) THEN
0!               IF(DAY == 13 .AND. HR == 20) THEN
0!               IF(DEMAND_GROUPS_SATISFIED == MAX_NODES) THEN
0!               IF(DEPTH_PRICE(INTERVAL-1,R_HOUR,R_DAY) > 
0!               IF(DERIVATIVE_TYPE(TRANS) < 4) THEN ! PHYSICAL
0!               IF(EMISSION_MARKET_LINK == -9999) THEN
0!               IF(FILE_EXISTS) THEN 
0!               IF(FILE_ID /= 1) THEN
0!               IF(FILE_SOURCE(I) == 'Ef' ) EFFICIENCY_OPTIONS = 
0!               IF(FROM_AREA(ACTIVE_CONSTRAINT_NUMBER,J) == 0 .OR.
0!               IF(GET_CREATE_HOURLY_PRICE(I)) THEN
0!               IF(GS_SUPPLY_CAPACITY_CURVE(K,I) > 0.0) THEN
0!               IF(HOURLY_DUMP_USED > 0.) THEN
0!               IF(HOURLY_OPTION_VALUE <= 0.) CYCLE
0!               IF(HOURLY_PRICE(TRANS) > HOURLY_COST(TRANS)) THEN
0!               IF(HOUR_TIE_LOADING(L2,L1) > 0.) THEN
0!               IF(HYBRID_BATTERY(TRANS) /= 0) THEN
0!               IF(I > MARGINAL_UNIT_AGAINST_TARGET(0) .AND.
0!               IF(IOS /= 0) EXIT
0!               IF(IOS /= 0) EXIT ! END OF FILE
0!               IF(IOS == 0 .AND. READ_OVERLAY_INPUT) THEN
0!               IF(J > 10) THEN
0!               IF(JOINT_DISPATCH_ORDER(I,2) > .1) THEN
0!               IF(K < 1 .OR. K > 2) CYCLE
0!               IF(LINK_INDEX(R_A,R_B) > 0) THEN
0!               IF(LINK_INDEX(R_B,R_A) > 0) THEN
0!               IF(LOCAL_DEPTH_PROFIT > MAX_DEPTH_PROFIT .OR.
0!               IF(LOCAL_INDEX >= 0 .AND. LOCAL_INDEX < 400) THEN
0!               IF(MAKER_MONTHS <= 0) THEN
0!               IF(NODE_TYPE(L_J) ==1) THEN
0!               IF(NO_UNIQUE_INTERVALS > MAX_UNIQUE_INTERVALS) THEN
0!               IF(NUMBER_OF_RESOURCE_ID(LOCAL_RESOURCE_ID) == 0) THEN
0!               IF(OUTAGES_IN_MONTH_BY_TG(TG)  > 0 .OR. 1 == 1 .OR.
0!               IF(POS_OF_HOURLY_FILE == -9999) POS_OF_HOURLY_FILE = 0
0!               IF(PRICE_TYPE(IND) == 'I') THEN
0!               IF(PROPOSED_RESOURCE_POSITION(TRANS) > 0) THEN ! 052817
0!               IF(READ_OVERLAY_INPUT) READ(10,1000,IOSTAT=IOS) RECLN
0!               IF(RECLN(1:1) == '7' .AND. READ_OVERLAY_INPUT) THEN
0!               IF(RECORDS_IN_OVERLAY_TABLE >= AVAIL_DATA_YEARS) EXIT
0!               IF(R_MONTH == 12 .AND. DAY == 6 .AND. 
0!               IF(R_MONTH == 4 .AND. DAY == 2 .AND. HR == 9) THEN
0!               IF(R_MONTH == LOCAL_PEAK_MONTH) THEN
0!               IF(R_TRANS_SPINNING > 0.) THEN
0!               IF(STEP_4) THEN
0!               IF(STRIKE_FREQUENCY(TRANS) == 'M') THEN
0!               IF(SUPPLY_ACTIVE(L_K)) THEN
0!               IF(SUPPLY_TYPE(M) == 'L') CYCLE ! DON'T INCLUDE LNG HERE
0!               IF(Storage_Current_Capacity(I) - 
0!               IF(TEMP_I2 == 0) EXIT ! END OF LIST
0!               IF(TEMP_LOAD < 0.0 .OR. TEMP_GEN < 0.0) THEN
0!               IF(TEMP_R <= .001) THEN
0!               IF(TG < 1 .OR. TG > 11) RETURN
0!               IF(TG == 0) CYCLE ! THE TRANSACTION DOES NOT HAVE AN ACTIVE TRANSACTION GROUP
0!               IF(TG == 60) CYCLE ! TEMP
0!               IF(TOTAL_HOURLY_BLOCKS > 0) THEN
0!               IF(TRANC_DATABASE(L,HOUR,C,8) > .1) THEN
0!               IF(USE_PRICE_CAPS) THEN
0!               IF(WABASH_IM_NIPSCO_PSI) LAST_AREA = 3
0!               IF(WD_FILE_EXISTS) THEN
0!               IF(WH_FILE_EXISTS .AND. 
0!               IF(YEAR == 19 .AND. R_MONTH == 2 .AND. HR == 28 .AND.
0!               IF(iDa == nDaCMo) THEN
0!               IF(trim(MULTI_AREA_NAME(I)) == 'MEMO') 
0!               IF(trim(OUTAGE_PRODUCT_TYPE(IREC)) == '7x24') THEN
0!               INQUIRE(FILE=FILE_NAME,EXIST=FILE_EXISTS)
0!               INTERCEPT = MINIMUM_MW - SLOPE * LOWER_CF ! ZERO
0!               INTER_CALL_POSITION(NUM_INTER_CALLS(TG),TG) = TRANS
0!               INTER_PUT_POSITION(NUM_INTER_PUTS(TG),TG) = TRANS
0!               INT_HOUR_IN_DAY = 24
0!               INT_HOUR_IN_DAY = REMAIN * 24.
0!               IN_CAPMO(J,HYDRO_UNITS) = IN_CAPMO(J,EL_ARRAY_POS)
0!               IPL_FAC_DB(14) = IPL_FAC_DB(12) - IPL_FAC_DB(13)
0!               IREC = IREC + IREC_OFFSET
0!               K = LOAD_DISPATCH_INDEX(J,R_TG)
0!               K = LOAD_DISPATCH_POSITION(J,R_TG)
0!               KeyVar(1)=j
0!               LAST_AREA = 2
0!               LAST_DB_POINT(I) = NEW_POINT ! CALCULATED BELOW
0!               LINK_INDEX(B_ID,A_ID) = -ACTIVE_LINK ! REVERSE PATH AS NEGATIVE
0!               LINK_PAIR(B_ID,A_ID) = .TRUE.
0!               LOCAL_DEPTH_PRICE = 
0!               LOCAL_DEPTH_PROFIT =  
0!               LOCAL_DEPTH_QUANTITY = 
0!               LOCAL_DEPTH_QUANTITY = DEPTH_QUANTITY(BOTTOM_INTERVAL)
0!               LOCAL_DEPTH_QUANTITY = DEPTH_QUANTITY(TOP_INTERVAL)
0!               LOCAL_RESOURCE_ID = CL_RESOURCE_ID(U)
0!               LOCAL_SPIN = 0.
0!               LOCAL_TIE_FLOW(MARKET_HR) =            
0!               LOCAL_USAGE = 0.0
0!               LOCAL_YEAR = FLOAT(YEAR+BASE_YEAR+1)
0!               LOCAL_YR = R_YEAR - BASE_YEAR
0!               LONG_SHORT = 1.0
0!               L_LP = TRANS_GROUP_POSITION(WHEEL_PATH(K,2))
0!               M = GAS_GROUP_ID_POSITION(J) ! RETURNS GAS_GROUP
0!               M.S. GERBER & ASSOCIATES, INC.
0!               MARGINAL_FUEL_DERIV = TRANS
0!               MARKET_AREA_NAME = BASECASE_MARKET_AREA_ID(TRANS)(1:5)
0!               MAX_BC_CUST_CLASS_ID_NUM = MAX(
0!               MAX_BC_TRANS_CLASS_ID_NUM = MAX(
0!               MAX_PROJECT_ID = MAX(Project_ID(IREC),MAX_PROJECT_ID)
0!               MINIMUM_MW = INTERCEPT + SLOPE * R_MONTHLY_USER_CF(I)
0!               MIN_EXTRACT_RATE = MIN_EXTRACT_RATE *
0!               MIN_EXTRACT_RATE = MIN_EXTRACT_RATE +
0!               MK = 
0!               MK = GET_GAS_GROUP_POSITION(TRANS)
0!               MONTHLY_AC_EXPENSE_ENERGY(ASSET_CLASS,FI,0) = 
0!               MONTHLY_AC_EXPENSE_ENERGY(ASSET_CLASS,FI,MONTH) = 
0!               MONTHLY_CONTINGENT_CAPACITY(TG) =
0!               MONTHLY_ENERGY(IND,1:12) = MONTHLY_ENERGY(IND,1:12) +
0!               MONTHLY_ENERGY_COST(IND,R_MONTH) =
0!               MONTHLY_ENERGY_PRICE(IND) =
0!               MONTHLY_HH_PRICE = MONTHLY_NODE_PRICE(L_J)
0!               MONTHLY_MARKET_COUNTER(MK) = 
0!               MONTHLY_SLOPE = 1.0
0!               MONTHLY_STRIKES(IND,MONTH) =
0!               MONTHLY_TRANS_HOURS(IND,MONTH) =
0!               MONTH_HOURS_STRUCK = 0
0!               MW_AFTER_MAINTENANCE = MWBLOK(BLOCK) ! MOR ELSEWHERE
0!               M_HOURLY_LOAD_B4_SALES(I,HOUR_IN_DAY) =
0!               M_NATIVE_COST(I) = M_NATIVE_COST(I) + 
0!               Maximum_Daily_Withdrawal(I) /
0!               N = TEMP_GS_SUPPLY_POSITION(K)
0!               NEW ENERGY PRODUCTS FILE.
0!               NO_UNIQUE_INTERVALS = 1
0!               NUMBER_OF_RESOURCE_ID(LOCAL_RESOURCE_ID) =
0!               NUM_INTER_CALLS(TG) = NUM_INTER_CALLS(TG) + 1
0!               NUM_INTER_PUTS(TG) = NUM_INTER_PUTS(TG) + 1
0!               NUM_OF_BC_CUST_CLASSES = NUM_OF_BC_CUST_CLASSES + 1
0!               NUM_OF_BC_TRANS_CLASSES = NUM_OF_BC_TRANS_CLASSES + 1
0!               NUM_PUTS(TG) = NUM_PUTS(TG) + 1
0!               NUM_STORAGE_UNITS = 1
0!               NUM_STORAGE_UNITS = INT2(HOURLY_QUANTITY(IND)/
0!               ONE_DAY_PRICE(I+1) = LOCAL_ANN_PRICE(HOUR_IN_YEAR+I)
0!               OPEN(10,'TVA.TXT')
0!               OPEN(10,FILE="MSGDAILYCUSTOMER.RPT")
0!               OPEN(10,FILE="MSGDAILYREGION.RPT")
0!               OPERATING_COSTS(I-1,GAS_GROUP) = 
0!               OUTAGE_B4_MARKET(NEW_POINT) =
0!               OUTAGE_B4_MARKET(NEW_POINT) = CURRENT_BLOCK_NUMBER
0!               P = INTERVAL_INDEX(K)
0!               P = TEMP_GS_SUPPLY_POSITION(1)
0!               PA = TG_2_PLANNING_AREA(I)
0!               PATH_SPREAD_RATE = PATH_SPREAD(CURRENT_PATH)
0!               PA_NAME = "AREA "//LOAD_FILE_CHAR_EXT(PA_INDEX)
0!               PERIOD_EMERGENCY_ENERGY = 0.
0!               PLANNING_RESERVE_MARGIN =
0!               POWER_DAILY_VOLUME_BY_MONTH(R_ISEAS,:) = 0.0
0!               PRODUCT_HOURS(J,INTERVAL) = 
0!               PRODUCT_MARGINAL_COST(J) =
0!               PRODUCT_QUANTITY(J) = PRODUCT_QUANTITY(J) + 
0!               PUMPING_STORAGE_EFFICIENCY(TRANS) =
0!               PUT_POSITION(NUM_PUTS(TG),TG) = TRANS
0!               P_BTU_CONTENT(I) = 1.0
0!               P_BTU_CONTENT(I) = 1000.0/ BTU_CONTENT
0!               P_BTU_CONTENT(I) = 1000000. / (BTU_CONTENT*42.)
0!               P_BTU_CONTENT(I) = 1000000. / (BTU_CONTENT*55.)
0!               P_BTU_CONTENT(I) = 500.0 / BTU_CONTENT
0!               READ(666,REC=IREC) MONTH,FUEL_PRICE
0!               READ(LOAD_UNIT,REC=START_REC) LDE_MONTH,LDE_DAY,LDE_YEAR,
0!               READ(RECLN,*,ERR=200) DELETE,
0!               REAL (kind=4) ::   SOX,NOX1,NOX2,CO2,OTH2,OTH3
0!               RESERVE_APP_PERCENT = RESERVE_APP_PERCENT * 
0!               R_ANNUAL_PRICES(SAVE_HrInYr) = PricesHDM(iHr,iDa,iMo) *
0!               R_COST_CURVE = ANNUAL_SUPPLY_PRICE(GS) + STORAGE_PREMIUM
0!               R_CUM_REVENUES(I) = CUM_REVENUE(I,R_TRANS_GROUP)
0!               R_DAY = R_DAY
0!               R_DEPTH_PRICE = LOCAL_DEPTH_PRICE
0!               R_DEPTH_QUANTITY = LOCAL_DEPTH_QUANTITY
0!               R_DSM_ENER_RESERVE_ALLOCATION(1,CLASS) = 0.
0!               R_DSM_ENER_RESERVE_ALLOCATION(2,CLASS) = 0.
0!               R_DSM_ENER_RESERVE_ALLOCATION(3,CLASS) = 0.
0!               R_DSM_PEAK_RESERVE_ALLOCATION(1,CLASS) =
0!               R_DSM_PEAK_RESERVE_ALLOCATION(2,CLASS) =
0!               R_DSM_PEAK_RESERVE_ALLOCATION(3,CLASS) =
0!               R_EXTRACT_RATE = R_CAPACITY_CURVE / 
0!               R_HARD_EXTRACT_RATE = 1.05*R_EXTRACT_RATE
0!               R_MAX_S = L
0!               R_PRICES(I) = LODDUR(I,R_TRANS_GROUP)
0!               R_TEMP_TRANSACTION = MAX(0.,R_TEMP_TRANSACTION - 
0!               R_TRANSACTION_COMPLETED = .TRUE.
0!               SCENARIO_INDEX = 47
0!               SCENARIO_INDEX = GET_SCENARIO_INDEX(SCENARIO_VARIABLE)
0!               SELL_OR_BUY = -1.
0!               SELL_OR_BUY = 1.
0!               SO2(nUnit) = SO2BlendedRate(iArray)
0!               SO2(nUnit) = TG_FuelTransportCosts(TgID,4)
0!               SPINNING_RESERVE(COAL_GROUP) = 
0!               SPINNING_RESERVE(GAS_GROUP) = 
0!               STATE_2_GAS_REGION_LOOKUP = 106
0!               STATE_2_GAS_REGION_LOOKUP = 279
0!               STOP 'Error in SYSTEM_PEAK_FORECAST. Check MIDAS.ERR
0!               STRICT_MARKET_RESOURCE(S_U) = .FALSE.
0!               SUPPLY_NODE_ACTIVE(K) = 
0!               S_BTU_CONTENT(I) = 1.0
0!               S_BTU_CONTENT(I) = 1000.0/ BTU_CONTENT
0!               S_BTU_CONTENT(I) = 1000000. / (BTU_CONTENT*42.)
0!               S_BTU_CONTENT(I) = 1000000. / (BTU_CONTENT*55.)
0!               S_BTU_CONTENT(I) = 500.0 / BTU_CONTENT
0!               SumOfValuesFor(Month) = SUM(ValuesHourlyByMonth(:,Month))
0!               TABLE_DAY_SHIFT(TRANS) = 0
0!               TARGET_CAPACITY = R_DEPTH_RESOURCES + 
0!               TEMP_CAP = TEMP_CAP +
0!               TEMP_CUST_CLASS_POINTER(CUSTOMER_GROUP) = 1
0!               TEMP_GS_SUPPLY_POSITION(J) = J 
0!               TEMP_I = END_POINT
0!               TEMP_I2 = INT(GET_VAR(TEMP_R4,J,
0!               TEMP_I2 = STATE_ID_LOOKUP(LOCAL_STATE_PROVINCE_NAME)
0!               TEMP_I4 = INT(ANNUAL_HOURS)*INT(UPPER_TRANS_GROUP)
0!               TEMP_ID  = WHEEL_PATH(PATH,J)
0!               TEMP_OUTAGE = 1.0
0!               TEMP_QUANTITY = HOURLY_QUANTITY(IND)
0!               TEMP_QUANTITY = TEMP_QUANTITY * USER_DAY_MULT
0!               TEMP_R = MIN(TEMP_R,R_GENERATION_BY_SEGMENT(I))
0!               TEMP_R = TEMP_R
0!               TEMP_R = TEMP_R + 
0!               TEMP_R2 = SYSTEM_MARKET_BOUGHT(HOUR,R_TG)
0!               TEMP_R4 = DAILY_INJECT_WITHDRAWAL(I) * DAMPENING_FACTOR
0!               TEMP_R4 = Storage_Demand_Allocation(I)
0!               TEMP_R4 = Storage_Demand_Markets(I)
0!               TEMP_TL_HYDRO_MWH = GET_MONTHLY_TL_HYDRO_MWH(I) 
0!               TEMP_TRANSACTION = 
0!               TEMP_TRANSACTION = TEMP_TRANSACTION + HOURLY_DUMP_USED
0!               TEMP_TRANS_CLASS_POINTER(TRANSACTION_GROUP) = 1
0!               TEST_HOUR_TIE_LIMIT(SELLER,BUYER) =
0!               TG = GET_TRANS_FOR_DATA_BASE(I)
0!               TG = GET_TRANS_GROUP_POSITION(TG)
0!               TG = TRANS_LOAD_GROUPS_INDEX(R_TG) 
0!               TOTAL_PRICE_SCALAR = 
0!               TOTAL_PRICE_SCALAR = TOTAL_PRICE_SCALAR * 
0!               TRANS = CUST_CLASS_GROUPS_INDEX(CG) 
0!               TRANS_GROUP = 1
0!               TieID_INDEX(A_ID,B_ID) = TieID(ACTIVE_LINK)     
0!               U = OUTAGE_UNIT_INDEX(OUTAGE_BLOCK)
0!               UNIT_2_FUEL_TRANS(TEMP_I) = TRANS
0!               UNIT_TO_OUTAGE_BLOCK(U,B) = SAVE_OUTAGE_BLOCKS
0!               UNIT_UP_YESTERDAY = .TRUE.
0!               USER_DAY_DATA(HOUR,DAY,R_MONTH,PRODUCT) = WEEKLY_LOAD(J)
0!               USER_DAY_MULT = 1.0
0!               VARIABLE_EXPENSE = EXP_FILE_VARIABLE_EXPENSE
0!               VLI(B_ID,A_ID) = VLI_COUNT
0!               VLI_COUNT = VLI_COUNT + 1
0!               VOID_LOGICAL = ! AGT notes inconsistent order of arguments:
0!               VOID_LOGICAL = UPDATE_PRODUCTION_PARAMETERS(YEAR)
0!               VarState(j)=BasicKey
0!               WHEEL_PATH(PATH,J) = CURRENT_TIE
0!               WRITE(1722,REC=DAY_OF_YEAR)
0!               WRITE(2811,REC=1) F7,INT2(118)
0!               WRITE(4,*) " "
0!               WRITE(4,*) "Duplicate GAS_SUPPLY Group Detected in"
0!               WRITE(4,*) "GAS_SUPPLY Group Name = ",
0!               WRITE(4,*) "Renumber or accumulate groups."
0!               WRITE(4,*) "UNTRAPPED ERROR IN ENERGY ABOVE RESOURCES"
0!               WRITE(4,*) "the GAS_SUPPLY Group file."
0!               WRITE(4,*) 'INTERNAL CONFLICT IN SUPPLY BASIN SIZE'
0!               WRITE(6,"('&',I4/)") BASE_YEAR + YEAR_LOOP
0!               WRITE(6,"('&',I4/)") PLAN_NUMBER
0!               WRITE(6,*) TG,LOCAL_HOUR,SAVE_HOURS_IN_MONTH
0!               WRITE(7101) SIMLINE
0!               WRITE(7101,'(A)') SIMLINE
0!               WRITE(C_DEPTH_MARGIN_UNIT,REC=C_DEPTH_MARGIN_REC) 
0!               WRITE(MARKET_AREA_NAME,*) WD_INDEX(TRANS)
0!               WRITE(SCREEN_MESSAGES,*) 'INVALID MAX_PATHS',MAX_PATHS
0!               analysis.  The output variables were                   C
0!               assume that return vars are base-loaded at their LUB limit, since
0!               call MONTHNonlinearlyMap(
0!               call MakeBound(KeyVar(kBind)) done below, as KeyVar(kBind)=jBind
0!               call SplitBindingFacet(.false.)
0!               developed in January, 1992 based on the City of Palo   C
0!               else
0!               end if
0!               endif
0!               if((InfRHS>RHS*NoiseFactor).and.(RHS>=0.0)) then
0!               if((k<nActiveFacets).or.(x(KeyVar(nActiveFacets))>0.0)
0!               if(PrtDetail>2) write(PrtUni,'(1x,a,5i4,2l2)')
0!               if(VarState(j)==BoundNB0) then
0!               if(abs(WEEKLY_REFERENCE_LOAD(J) - 
0!               if(cMod(j)>cMod(j2)) then ! enkey the most costly var in facet 1 ...
0!               j2=KeyVar(1)
0!               kBind=0 ! shift all facet-indices upward
0!               kBind=FctOwning(jBind)
0!               kInf=2
0!               linkfunc(j,1,i) = CONGEST_VECTOR(J)
0!               r8TEMP = GET_TRANS_LOAD_AFTER_EL(HR,0)
0!               r8TEMP = SYSTEM_HOURLY_LOADS(HR,0)
0!               the pumps have unity availability (no outages are convolved):
0!               write(4,*) CALCULATED_BASE
0!               write(4,*) CALCULATED_PEAK
0!               write(4,*) HOURLY_HYDRO
0!               write(4,*) LOAD_HOURS_IN_PERIOD
0!               write(4,*) TRANS_EL_CAPACITY
0!               write(4,*) TRANS_EL_GENERATION
0!               x(j)=LUB(j)
0!              ! Fifth assignment of Unitno
0!              ! Filenames agree between reference and current
0!              ! First array read - HAS BAD DATA AFTER THIS READ!
0!              ! Second assignment of UNITNO.
0!              ! Transact Production report (msgmopro)
0!              ! third read
0!              (1) PEAK(1) > 20 OR PEAK(1) <= 20
0!              (2) PEAK(2) > 20 OR 0 < PEAK(2) <= 20 OR PEAK(2) = 0
0!              (3) PEAK(1) > PEAK(2) OR PEAK(1) < PEAK(2)
0!              1. MONTHLY_STARTS
0!              12-15 Getcl & deriv new cap - jtr 03132023
0!              2. MONTHLY_STOPS
0!              2/25/93. GAT. REDISTRIBUTE 29TH DAY ENERGY ON LEAP YEARS
0!              3. DAILY_OPTION_STATUS
0!              4. HOURLY, DAILY, WEEKLY, MONTHLY OPERATION OF EACH UNIT
0!              =(1-yDm)*yDn/(1-yDn)
0!              =(1-yDm+yDr)*yDn
0!              =(yDm-yDn)/(1-yDn)
0!              =[yDm*(1-yDn)-(1-yDm)*yDn]/(1-yDn)
0!              ADDED 10/7/98. GAT. TO CAPTURE COAL_SUP COALMISSION 
0!              ADDED 10/7/98. GAT. TO CAPTURE GAS_SUP GASMISSION 
0!              ADDED 10/7/98. GAT. TO CAPTURE TRANSACT TRANSMISSION 
0!              ANNUAL_EMIS_COST = 0.0
0!              BEGINING OF THE DSM FINANCIAL REPORT
0!              BUY MAY STILL HAVE MULTIPLE INTERVALS
0!              CALCULATE AVERAGE MONTHLY CAPACITY
0!              CALCULATE MONTHLY TOTAL CAPACITIES
0!              CALCULATE MONTHLY TOTAL ENERGY
0!              CALL CLS(11,27,32)
0!              CHECK FOR UNIQUE NAME FOR EACH GROUP?
0!              CURRENT DISPATCH LESS NATIVE LOAD (NEED) IS ABOVE 
0!              CostAccum(iGP)=0.0 ! costs avoided for iGP=0
0!              DAILY COAL PRICES
0!              DAILY LINK LOADING
0!              DAILY SINK DEMAND (DONE)
0!              DAILY SOURCE USAGE
0!              DG
0!              DO J=TEMP_I2,MaxCostInGLBonTMC ! range over indices in $/MWh
0!              DailyNetRev(iDa)=amax1(0.0,CostAccum(0)-CostAccum(1))
0!              ELDC AND DETERMINE ENERGY.
0!              END DO
0!              END OF TABLE ! EXIT AT BOTTOM OF IF
0!              ENDIF
0!              EQ1 => E (CONSERVATION METHOD)
0!              EQ21, EQ22 => I (INTERMEDIATE,CYCLING METHOD)
0!              EQ3 => P (PEAK METHOD)
0!              EnergyMWH(iGP)=0.0
0!              FIND THE POINT WHERE THE CURRENT CONTRACT INTERSECTS THE
0!              FUNCTION TO READ VARIABLE UNIT PARAMETERS FOR MIDAS
0!              Hybrid
0!              Hydrogen
0!              IF THE SYSTEM FORECAST PEAK OCCURS ON THE PEAK DAY
0!              IF THE SYSTEM FORECAST PEAK OCCURS ON THE WEEKEND
0!              IF(.NOT. ALLOCATION_ABSOLUTE .AND.
0!              IF(CAP_ALLOCATOR <= 1. .AND.
0!              IF(DERIVATIVE_TYPE(IND) < 4) THEN ! PHYSICAL
0!              IF(ENRG_ALLOCATOR <= 2. .AND.
0!              IF(STRIKES_LIMITED) ! 0,0 below implies monthly optionality
0!              IF(STRIKES_LIMITED) ! 0,0 below implies monthly or annual optionality
0!              INSUFFICIENT NATIVE RESOURCES AVAILABLE TO MEET DEMAND         
0!              LM_CUSTOMERS(I,ACCEPTANCE_NUM) = 0.0
0!              LOAD TOTAL MINIMUM CAPACITY INTO THE
0!              LONG_SHORT = 1.0
0!              LOWEST COST CONTRACT.
0!              NC_EMF_FUEL_BALANCE = 0.
0!              NEED TO GET NUCLEAR FUEL AND EMISSIONS CREDITS ELSEWHERE
0!              NEW_LM_CUSTOMERS(I,ACCEPTANCE_NUM) = 0.0
0!              OF DSM LOADS OF ANY OF THREE OPERATING METHODS
0!              OF THE E AND P METHODS. IT WILL PRODUCE THE SAME
0!              OSW
0!              OVERLAY NAMES.
0!              Offshore Wind
0!              PEAK REDUCTIONS AS P AND E AND WILL PRODUCE ENERGY
0!              PERIOD_EMERGENCY_ENERGY = 0.
0!              PERIOD_EMERGENCY_ENERGY = UNIT_ENERGY * (1.-EA(I))/EA(I)
0!              PERIOD_MAINTENANCE_ENERGY = 0.
0!              PERIOD_MAINTENANCE_ENERGY = RESOURCE_MAKE_UP_ENERGY -
0!              READ(10,*) DELETE
0!              REDUCTIONS HALF WAY BETWEEN P AND E.
0!              R_ANNUAL_PRICES(SAVE_HrInYr) = PricesHDM(iHr,iDa,iMo) *
0!              SELL MAY STILL HAVE MULTIPLE INTERVALS
0!              SO THAT YOU DON'T GO BEYOND THE SECOND DIMENSION?  AGT replies 'no,
0!              SOLUTION WITHIN CURRENT INTERVALS
0!              STOP SEARCH AND BUY THE MAX AT THE MAX PRICE
0!              STRIKES_LIMITED=(STRIKES_AVAILABLE(IND)<=LIM_NBV) ! AGT: why did I do this?
0!              TAKE ALL CL SERVICES FOR FIRST WRITE
0!              TEMP_I2=
0!              TEMP_OFLINE = 100*(R_YEAR-1-1900) + 12
0!              TEMP_OFLINE = 100*(R_YEAR-2-1900) + 12
0!              TEMP_QUANTITY = HOURLY_QUANTITY(IND) ! AGT wonders 'should this vary day-to-day?'
0!              TEMP_R1 = R_ANNUAL_USAGE(iHr)
0!              THE I METHOD IS JUST A LINEAR INTERPOLATION OF
0!              THE TOP END OF THE BUY RANGE
0!              THEN TAKE THE DB VALUE FOR THE EXPENSE
0!              THIS SECTION CALCULATES THE CONTRIBUTION
0!              VAR_VALUE = RETURN_THE_VALUE_FOR(VAR_NUM)
0!              VOID_LOGICAL = AN_DECOMP_REPORT_HEADER()
0!              VOID_LOGICAL = RETURN_RUN_SPEC_SWITCHES(YEAR_LOOP)
0!              but cinitd works as if the array were 1-dimensional; leftmost index
0!              do iGP=0,1
0!              end do
0!              end if
0!              failing the last condition above allows negative STRIKE_VALUEs
0!              if(PrtDetail>0) then
0!              if(PrtDetail>1) write(*,'("&",6f5.2,2f5.0)')
0!              if(PrtDetail>1) write(*,'(1x,3i2,2i3,2f6.2,2f5.2)')
0!              to be saved to satisfy 'minimum-take' requirements
0!              varies most rapidly in Fortran'
0!              write(*,'(i3,3f9.2,4f6.3,2f5.0)') iDa,CostAccum,
0!              write(DbgU,'(3i4,2f9.4,a)') i,iDNod,nNZPSour,
0!              write(DbgU,'(3i4,2f9.4,a)') i,iDNod,nZPNodesRem,
0!             ! become BasicNKy, yet only BasicNKy may be degenerate
0!             ! non-aux jOrdEnt may not enter basis as BasicKey at 0, nor may it
0!             ! prefer retaining #18/24 over #19/25
0!             ! retain the index of the last bound NB1 var
0!             ! skip vars bound at 0 in final facet after InitSort (to save time)
0!             CAPACITY LIMITED MONTHLY REPORT WRITER
0!             CapConv=Capacity(j)
0!             FUEL_CHARGE_RATE = FUEL_COST/ENRG
0!             FUNCTION TO READ VARIABLE UNIT PARAMETERS FOR MIDAS
0!             FctOwning(j)=1
0!             FullBitPattern=2 ! anything but 1, thus unmatchable by ThisBitPattern
0!             FullBitPattern=fGray-1
0!             IF(ASSET_ANALYST_ONLY() .OR.
0!             IF(IOS /= 0) EXIT
0!             IS IT MORE PROFITABLE WITH A START?
0!             LOAD_FUEL_PRICES = .FALSE.
0!             LOAD_FUEL_PRICES = .TRUE.
0!             LkEndUsd(iLink)=min(LkEndUsd(iLink),int(1,1))*2 ! 2=> 'both ends active'
0!             NodePri(i) = R_NODE_PRICE(NodeID(i))
0!             OBJECT BASED FORTRAN FOR UNIT EMISSIONS AND HEAT DATA
0!             ONE WAY BOOTH-BALERIAUX METHOD FOR DSS
0!             SUBROUTINE TO FIND HEAT RATES FOR UNIT BLOCKS
0!             TEMP_TRANSACTION = NINT(TEMP_TRANSACTION)
0!             THE PRODUCTION & INCREMENTAL COST ANALYSIS MODEL (PICAm)
0!             THE REPORT WRITER FOR ENERGY LIMITED UNITS
0!             TRANS_GROUP_POSITION(TRANS_ID) = J
0!             TRANS_ID = GET_TRANS_GROUP_INDEX(J)
0!             WRITES ANNUAL SUMMARY PRODUCTION UNIT REPORT
0!             above restriction is now incorporated in array WouldBeZero
0!             call ChkPriorBlock(1,j,1,.true.,.false.) ! if in facet 1 ...
0!             call ChkPriorBlock(One2,j,nActiveFacets,
0!             call IncludeOutages(CapConv,j,jBlkPair)
0!             else
0!             elseif(kBind/=InvalidFacet) then ! FinalState=BasicKey
0!             elseif(x(j)<GLB(j)) then
0!             end if
0!             if((AccumDj>SmallReal).and.(ThisBitPattern/=FullBitPattern)) then
0!             if((InfRHS>RHS*NoiseFactor).and.((.not.OrdVarEntering).or.
0!             if((PrtDetail>3).or.((PrtDetail>2).and.(InfChr/='-')))then
0!             if(.not.((.not.InitSort).and.(k==nActiveFacets).and.
0!             if(.not.((k==kLp1).and.(k==nActiveFacets).and.(VarState(j)==BoundNB0)
0!             if(FinalState==BasicNKy) then ! jNewlyNKy replaced jBind as BasicNKy
0!             if(PrevUQ<xDischgRem) x(jKey)=xKeyPrev ! neither reduction nor regression is needed
0!             if(PriorBlockLoaded) ! ... first remove effects of its outages
0!             if(PriorBlockLoaded) ! remove effects of its outages
0!             if(VarState(j)==BoundNB1) jBind=j
0!             if(kBind/=InvalidFacet) FctOwning(jOrdEnt)=kBind
0!             if(kInf==1) then ! exclude this BoundNB1 from further consideration
0!             if(x(j)>LUB(j)) then
0!             nGenericTransLinks = ACTIVE_COAL_LINK_IN_BASEFILE(1)
0!             nGenericTransLinks = ACTIVE_COAL_LINK_IN_OVERLAY(1)
0!             since prior to the deduction, x of the UQ server includes these x(j)
0!             xLoadPoint need not be advanced when bAccum accounts for the x(j),
0!             xLoadPoint=xLoadPoint+            x(j)/ Duration ! as if derated
0!             xLoadPtInf=xLoadPtInf+CapConv
0!            !MSGTGRES
0!            123456789012345678901234567890123456
0!            ADDITIONAL_CAPACITY_PERCENT(I,J) =
0!            ADJUSTED_DEMAND = 1.0  / (1.016**(R_YEAR)) ! REMOVED 1.185 FROM DENOM
0!            AI_EL_REMAINING_LIFE(I) = AI_EL_REMAINING_LIFE_SAVE(I)
0!            ALLOCATE(RPS_TRANS_DB(3,400,14,0:12))
0!            ANNUAL_EMIS_COST = 0.0
0!            ANNUAL_MARKET_PRICING = .FALSE.
0!            ANNUAL_MARKET_PRICING = .TRUE.
0!            ANNUAL_MD_MAX_DISPATCHED_CAP(I)= UNIT_CAPACITY_AFTER_LOSSES
0!            ANNUAL_MD_MAX_PURCHASED_CAP(I) = UNIT_CAPACITY
0!            ANNUAL_SURPLUS_OR_DEFICIT = 0.0
0!            ANNUAL_USER_MONTH = 13 ! FOR ANNUAL VALUE
0!            ANN_RPS_INTRA_STATE_SURPLUS = 0.0
0!            ANN_SUM_REPORT_ITEMS(11) = ANN_SUM_REPORT_ITEMS(11) +
0!            ANN_SUM_REPORT_ITEMS(12) = ANN_SUM_REPORT_ITEMS(12) +
0!            AOD_THERMAL_UNIT_VALUE_LIST = .FALSE.
0!            A_ID = GET_COAL_GROUP_POSITION(A_ID)            
0!            A_ID = GET_COAL_GROUP_POSITION(I)
0!            A_ID = GET_GAS_GROUP_POSITION(A_ID)
0!            A_ID = GET_GAS_GROUP_POSITION(A_ID)            
0!            A_ID = GET_GAS_GROUP_POSITION(I)
0!            ActiveDemandUnits = SIZE(CoalDemandLinkToCLPlants)
0!            BAD_ACCEPTANCE_POINTER = .TRUE.
0!            BASE_FILE_DEFINITION = TEMP_BASE_FILE_DEF
0!            B_ID = GET_COAL_GROUP_POSITION(B_ID)
0!            B_ID = GET_GAS_GROUP_POSITION(B_ID)
0!            BlkDbDx = int(MW_AFTER_MAINTENANCE/DB_DX(DATA_BASES)) + 1 ! may be 0
0!            CALCULATES CAPCITY DEPENDENT LOLP
0!            CALL CINITD(ADJUST_BLOCK,INT(SAVE_OUTAGE_BLOCKS+1),0.)
0!            CALL CLS(3,9,74)
0!            CALL ERASE(FILE_NAME)
0!            CALL GET_OUTPUT_MARKET_PRICE_NAME(MARKET_PRICE_NAME)
0!            CALL HYDRO_LOAD_PROB(R_HOURS,
0!            CALL INITIALIZE_HYDRO_LOAD_PROB(NUMBER_OF_HYDRO_GROUPS)
0!            CALL LOCATE(15,15)
0!            CALL LOCATE(3,24)
0!            CALL LOCATE(3,9)
0!            CALL MG_LOCATE_WRITE(12,26,
0!            CALL MG_LOCATE_WRITE(15,9,'Completed Reg. Outage ',
0!            CALL MG_LOCATE_WRITE(15,9,'Completed Reg. PARAM ',
0!            CALL MG_LOCATE_WRITE(15,9,'Processing Reg. Outage',
0!            CALL PUT_TRANS_C_START_UPS(
0!            CALL REAL4_Sort(TEMP_I,
0!            CALL STOP_NOFILE(FILE_TYPE,FILE_NAME)
0!            CALL STORE_END_POINT(END_POINT)
0!            CALL TRANSACT_LOAD_PROB(R_HOURS,
0!            CAL_DAYS_PER_MONTH = DAYS_PER_MONTH
0!            CAPACITY_GIVEN_MARKET(NEW_POINT,I) = 0.
0!            CASE('AR')
0!            CASE('AZ')
0!            CASE('BC')
0!            CASE('FL')
0!            CASE('GA')
0!            CASE('IN')
0!            CASE('LA')
0!            CASE('MI')
0!            CASE('MN')
0!            CASE('MO')
0!            CASE('NE')
0!            CASE('ON')
0!            CASE('PA')
0!            CASE('QB')
0!            CFUB(M) = CFUB(N)
0!            CFUB(N) = 1.
0!            CLASS_NET_ANN_EMIS(EMIS_TYPE) = 
0!            CL_MONTH_NAME(I) = MONTH_NAME(I)
0!            CO = 1
0!            COAL_DEMAND_PLANNING_PEAK(I) = 0.0
0!            COAL_ID = COAL_GROUP_ID(TRANS)
0!            CONGESTION_COST(ACTIVE_LINK,:) =
0!            CONGESTION_PERCENT(ACTIVE_LINK,:) =
0!            COUNT_ID(UNIT_ID(IREC)) = COUNT_ID(UNIT_ID(IREC)) + 1
0!            CT_LOSSES = ENRG * LOSS_RATE/100.
0!            CUM_CAP(DATA_BASES) = CUM_CAP(DATA_BASES) +
0!            CUM_UNIT_UTIL_zero(NEW_POINT,I) =
0!            CURRENT_C_FOR_(L_J,L_K) = C
0!            CostCriterion(1)=AggregateCost
0!            CumDbDx(DATA_BASES)=CumDbDx(DATA_BASES)+BlkDbDx ! rounded sum #intervals
0!            DAILY_AVE_NODE_PRICE = 0.
0!            DAILY_LINK_CF = 0.
0!            DAILY_LINK_PRICE = 0.
0!            DAILY_LINK_VOLUME = 0.
0!            DAILY_MARG_NODE_PRICE = 0.
0!            DAILY_NODE_VOLUME = 0.
0!            DAILY_TIE_LOADING(I,R_HOUR) = MAX(0.d0,
0!            DAY = 1
0!            DAYS_IN_MONTH = R_HOURS_IN_MONTH/24
0!            DAYS_PER_MONTH = INT(HOURS_IN_SEASON/24.)
0!            DAY_WEEK_REC = DAY_WEEK_REC + 1
0!            DO
0!            DO  
0!            DO CLASS = 1, MAX_LOAD_CLASSES
0!            DO CURRENT_MONTH = 1, LAST_SEASON
0!            DO I = 0, R_NUMBER_OF_TRANS_GROUPS
0!            DO I = 1, 12
0!            DO J = -1, NUM_TRANS_GROUPS
0!            DO J = 1, 12
0!            DO J = 1, 168
0!            DO J = 1, MAX_EVENTS_IN_MONTH
0!            DO J = 1, MAX_POINTS_IN_GS
0!            DO J = FIRST_GS(I), FIRST_GS(I)+GROUPS_PER_GS(I)-1
0!            DO K = 1,  NO_UNIQUE_INTERVALS
0!            DO K = 1, 25 
0!            DO K = 1, L
0!            DO K = 1, L 
0!            DO LOCAL_MONTH = 1, 12
0!            DO OUTAGE_BLOCK = 1, SAVE_OUTAGE_BLOCKS
0!            DO PC_COUNT = 1, TOTAL_PC 
0!            DO TEMP_I1=1,3 ! update indexing arrays to NEW_POINT
0!            DO TRANS = 1, LOCAL_ACTIVE_TRANSACTIONS
0!            DO TRANS = 1, R_NUMBER_OF_TRANS_GROUPS
0!            DO TRANS = 1, SAVE_ACTIVE_TRANSACTIONS
0!            DO USER_MONTH = 1, 12
0!            DOLLARS_PER_DEAL_ESC_VECTOR(TRANS)
0!            DOLLARS_PER_MMBTU_ESC_VEC(TRANS)
0!            DOWHILE ( < STUDY_PERIOD)
0!            DOWHILE ((I <= MAX_YEARS_1) .AND. (IOS == 0))
0!            DSM_TO_RESERVE_MARGIN_BY(AREA) =
0!            ECITY = .TRUE.
0!            ELSE
0!            ELSEIF (FIRST_DAY_OF_YEAR < CALENDAR_DAY_OF_WEEK) THEN
0!            ELSEIF(ABS(MAX_DAILY_HARD_LIMIT(CS)) < 0.0000001) THEN
0!            ELSEIF(ABS(MAX_DAILY_HARD_LIMIT(GS)) < 0.0000001) THEN
0!            ELSEIF(DYNAMIC_EXTRACT_RATE(CS)) THEN
0!            ELSEIF(DYNAMIC_EXTRACT_RATE(GS)) THEN
0!            ELSEIF(R_DISPATCH_COST(I) < 
0!            ELSEIF(R_DISPATCH_COST(I) >
0!            ELSEIF(R_MONTH < 4) THEN
0!            ELSEIF(SHIPPING_UNITS == "5") THEN
0!            ELSEIF(SHIPPING_UNITS == "B") THEN
0!            ELSEIF(SHIPPING_UNITS == "M") THEN
0!            ELSEIF(SHIPPING_UNITS == "T") THEN
0!            EL_AI_CAPACITY_RATE(I) = EL_AI_CAPACITY_RATE_SAVE(I)
0!            EL_AI_ENERGY_RATE(I) = EL_AI_ENERGY_RATE_SAVE(I)
0!            EL_OPTION_CHECK = .TRUE.
0!            END DO
0!            ENDDO
0!            ENDDO ! CONDITION TO CONTINUE AGGREGATION
0!            ENDDO ! J
0!            ENDDO ! MONTHS
0!            ENDDO ! TRANSACTIONS
0!            ENDIF
0!            ENDIF ! ALLOCATE ARRAYS MSG
0!            ENDPOINTS_RUN = ENDPOINTS_RUN + 1
0!            END_POINT = END_POINT + 1
0!            ENRG = 0.
0!            ENRG = DISPATCHED_ENERGY / (1. - LOSS_RATE/100.) ! GROSS UP TO TOTAL ENERGY
0!            ENRGCT = ENRGCT + RTEMP_VARCST + RTEMP_FIXED_COST
0!            EQUITY_DEFINITION = 'A'
0!            ERROR = DEALLOCATE_FUEL_INVENTORY_ID()
0!            EXIT
0!            EXTENSION_PERIOD = 0
0!            E_BTU_CONTENT(I) = 1000000./MAX(FLOAT(BTU_CONTENT),1.)
0!            ExpansionCost(ACTIVE_LINK) = ExpansionCost(ACTIVE_LINK-1)
0!            ExpansionCostEscalation(ACTIVE_LINK) = 
0!            FILE_NAME = trim(BASE_FILE_DIRECTORY())//"LDE"//
0!            FILE_OPEN(UNITNO) = .TRUE.
0!            FISCAL_ACTIVE_TRANSACTIONS = 0
0!            FISCAL_SEASON = FISCAL_SEASON_RESET - 1
0!            FISCAL_SEASON = LAST_SEASON
0!            FUEL_CHARGE_RATE = 0.
0!            FUEL_INDEX = 1
0!            FUEL_INDEX = 2
0!            FUEL_INDEX = 3
0!            FUEL_INDEX = 4
0!            FUEL_POINTERS_USED = .FALSE.
0!            FUEL_POINTERS_USED = .TRUE.
0!            FUEL_USE = 1.00
0!            GAS_ID = GAS_GROUP_ID(TRANS)
0!            GAS_SUPPLY_CUM_CAPACITY(:,GS) = 
0!            GAS_SUPPLY_CUM_COST(:,GS) = 
0!            GET_FILE_SOURCE_INDEX = 3
0!            GET_ICAP_REVENUE_MULT = 0.
0!            GET_MONTHLY_REGIONAL_OUTAGE = 
0!            GET_MONTHLY_REGIONAL_OUTAGE = 1.0
0!            GET_SCENARIO_URANIUM_PRICES = 54.0
0!            GS = I ! FROM ABOVE.
0!            GS_SUPPLY_CAPACITY_CURVE(K,GS) = 
0!            GS_SUPPLY_POSITION(:,I) = TEMP_GS_SUPPLY_POSITION(:)
0!            HG = GET_HG_FROM_TG(TG)
0!            HIGH_CAP = PROPOSED_QUANT_OF_PRODUCT(IND)
0!            HOURLY_EUE = 0.
0!            HOURLY_MARKET_PRICE = GET_MARGINAL_COST_AT_MARKET(
0!            HOURLY_OUTPUT_NOT_OPEN = .FALSE.
0!            HOURLY_PRICE_RECONCILE = .TRUE.
0!            HOURS_IN_SEASON = FLOAT(HOURS_IN_PERIOD(MONTH))
0!            HOUR_END_OF_MONTH = HOUR_IN_YEAR + nDaCMo*24 - 2
0!            HUNT FOR THE INTERVAL ABOVE THE THIRD_CAP THAT CONTAINS TEMP_CAP
0!            HYDRO_ANNUAL_FIXED_COST(I) = HYDRO_ANNUAL_FIXED_COST_SAVE(I)
0!            HYDRO_ASSET_CLASS_POINTER(I)=S_HYDRO_ASSET_CLASS_POINTER(I)
0!            HYDRO_FIXED_COST(I) = HYDRO_FIXED_COST_SAVE(I)
0!            HYDRO_OL(FILE_ID) = 'BC'
0!            Half_Point=Start+1
0!            Half_Point=Start-1
0!            ICAP_ANN_DEMAND = 0.0
0!            ICAP_ANN_RESERVE = 0.0
0!            ID_POINTER(ID_NUMBER(I)) = I
0!            ID_TO_RECORD(UNIT_ID(IREC),RECORD_ITEM) = IREC
0!            IF( .NOT. LINK_PAIR(B_ID,A_ID)) THEN
0!            IF( ABS(JDA_GENERATION(0,0)-
0!            IF( CUR_POS /= LOWEST_COST_CONTRACT .AND.
0!            IF(.NOT. ALLOCATED(FISCAL_CT_ENERGY)) THEN
0!            IF(.NOT. COAL_DEMAND_GROUP_ACTIVE(K)) CYCLE
0!            IF(.NOT. HOLD_AN_DECOMP_VALUES) THEN
0!            IF(.NOT. LINK_PAIR(R_A,R_B)) THEN
0!            IF(.NOT. NORTH_AMERICAN_DATABASE .AND. GS == 117) THEN ! UK Supply
0!            IF(ABS(ANNUAL_HYBRID_BATTERY(TRANS)) > 0) CYCLE
0!            IF(ABS(M2) < .000000001) M2 = 0.
0!            IF(ABS(R_ANNUAL_HYBRID_MARKET_ENERGY - TEMP_R4) < 0.01) EXIT
0!            IF(ABS(R_DEPTH_QUANTITY) < .01 ) THEN
0!            IF(ADJUSTED_DEMAND > 0.1) THEN
0!            IF(ADJUST_BLOCK(OUTAGE_BLOCK) == 1.) THEN
0!            IF(BASE_DATE + MO >= HISTORICAL_PRODUCTION_DATE()) EXIT
0!            IF(BTU_CONTENT == 0. .OR. SHIPPING_UNITS == "Q") THEN
0!            IF(BUYER_ID == 0 .AND. SELLER_ID > 0) THEN
0!            IF(CASH_TREATMENT == 'B') LAG_PERIOD = 0.
0!            IF(CASH_TREATMENT == 'N') LAG_PERIOD = -1.
0!            IF(DAILY_INJECT_WITHDRAWAL(I) < 0.0 .AND. 
0!            IF(DAILY_OPTION_VALUE <= 0.) CYCLE
0!            IF(DATA_BASES == 2 .OR. DATA_BASES == 3) THEN
0!            IF(DERIVATIVE_TYPE(TRANS) == 2 .OR.
0!            IF(DETAILED_CONSTRAINTS_ACTIVE) THEN
0!            IF(ENERGY > .1 .AND. MAXIMUM_MW > MINIMUM_MW) THEN
0!            IF(EXPENSE_ASSIGNMENT(TRANS) == LOCAL_ASSIGNMENT(1)) THEN
0!            IF(FILE_IS_OPEN) CLOSE (2811)
0!            IF(FIRST_DAY_OF_YEAR == CALENDAR_DAY_OF_WEEK) THEN 
0!            IF(FISCAL_SEASON_RESET > 1 .AND.
0!            IF(FirstEnergy_Is_Active) THEN
0!            IF(GRX_RPS_CAPACITY(TRANS,LOCAL_YR) > 0.01) THEN
0!            IF(GS_SUPPLY_CAPACITY_CURVE(K,GS) < 0.00001) EXIT
0!            IF(GS_SUPPLY_CAPACITY_CURVE(K,GS) > 0.00001 ) THEN
0!            IF(HOURLY_QUANTITY(TRANS) < 0.001) CYCLE
0!            IF(INDEX(ActiveConstraint,'No') /= 0 .OR.
0!            IF(INDEX(TRIM(HourlyProdFileNames(I)),TRIM(ProductHourlyRefName))/=0) THEN
0!            IF(IOS_BASE /= 0) EXIT
0!            IF(IREC .GT. LRECL) EXIT
0!            IF(L <= 25) THEN ! NO NEED TO AGGREGATE
0!            IF(LAHEY_LF95()) THEN
0!            IF(LINK_PAIR(A_ID,B_ID)) THEN 
0!            IF(LOCAL_DEPTH_QUANTITY < 0.) THEN ! SELL IS QUANTITY
0!            IF(MAX_DATA_BASES /= MAX_DATA_BASES_LAST_ITER) THEN
0!            IF(MAX_S > MAX_POINTS_IN_GS) THEN
0!            IF(NEW_EL_UNIT_ID /= EL_OPTIONS_ID_NUM(I) .OR.
0!            IF(NEW_POINT < TEMP_LAST_POINT)
0!            IF(NORTH_AMERICAN_DATABASE .AND. GS == 121) THEN
0!            IF(NORTH_AMERICAN_DATABASE) THEN
0!            IF(NUM_ANNUAL_CALLS(K) +
0!            IF(OUTAGE_RECORD_ACTIVE /= 'T') CYCLE
0!            IF(OUTAGE_SINGULAR(OUTAGE_BLOCK) < 1.0 .AND.
0!            IF(RATE_CODE(I) == 142021 .OR.
0!            IF(REMAIN < .001) THEN ! SUMMARIZE THE DAY
0!            IF(RESERVE_APP_PERCENT > 0.0001) THEN
0!            IF(R_DAY == 1 .AND. R_HOUR == 17)THEN
0!            IF(R_HOURLY_DUMP_USED  > 0.) THEN
0!            IF(R_MONTH < 3) THEN
0!            IF(R_THIS_YEAR == 2004 .AND. R_MONTH == 1) THEN
0!            IF(R_TRANS_GROUP == 1) THEN
0!            IF(SELLER_ID == 0 .AND. BUYER_ID > 0) THEN
0!            IF(SHRINKAGE_PERCENT > .0001) THEN
0!            IF(SPINNING_UNITS(COAL_GROUP) == 'P' .OR.
0!            IF(SPINNING_UNITS(GAS_GROUP) == 'P' .OR.
0!            IF(TEMP_CUST_CLASS_POINTER(CUSTOMER_GROUP) == 0) THEN
0!            IF(TEMP_I2 > 0) THEN
0!            IF(TEMP_TRANS_CLASS_POINTER(TRANSACTION_GROUP) == 0) THEN
0!            IF(TG_USING_PRICE_DISTN == 1) THEN
0!            IF(TOTAL_FUEL_BEGINNING_MONTH > .0001) THEN
0!            IF(UNIT_CONTINGENCY(TRANS) /= 'N') THEN
0!            IF(USE_MARKET_AREA_REPORT_ID) THEN
0!            IF(USE_TF_FILE) THEN
0!            IF(WHEEL_PATH(ACTIVE_PATH_NUMBER,3) > 0 .AND.
0!            IF(WHOLESALE_SAL_AND_PUR(R_NEW_POINT,1,R_I) > 0.) THEN
0!            IF(YEAR == MAX_SIMULATION_YEARS) THEN
0!            IF(YES_FISCAL_REPORTING .AND.
0!            IF(YES_FISCAL_REPORTING .AND. 
0!            IF(ZONE_B_TO_A_PEAK_TIES(ACTIVE_LINK) > 0. .AND. 
0!            IND = STORAGE_POSITION(TRANS,TRANS_GROUP)
0!            INQUIRE(UNIT=WABASH_REPORT_UNIT_NO,
0!            INTERVAL_AREA = 
0!            INTERVAL_CHECK =
0!            INTERVAL_INDEX = 0
0!            INT_RES_REMAIN(K,GS) = MAX(0.,INT_RES_REMAIN(K,GS) - 
0!            IREC = ALINE_LOAD_DATA(TRANS,R_ISEAS) ! UNNECESSARY?
0!            IREC = IREC + 1
0!            IS_REGIONAL_HYDRO_PARAM_ACTIVE = .TRUE.
0!            J = COAL_GROUP_POSITION(I) ! CAN GET RID IF I INDEX
0!            J = GAS_GROUP_POSITION(I) ! CAN GET RID IF I INDEX
0!            J_PATH(TOTAL_PATHS_FOR_I) = TOTAL_PATHS_FOR_SYSTEM
0!            K = LAST_K(GS)
0!            L = 1
0!            L = L - 1 ! SAVE AS AN ARRAY?
0!            L = MIN(K,R_MAX_OUTAGE_BLOCKS)
0!            LAGGED_HH_PRICE = GET_LAGGED_HH_PRICE()
0!            LAMBDA_PRICE = .TRUE.
0!            LAST_FUEL_PRICE_OL_TYPE(FILE_ID) = 'OL'
0!            LAST_PRICE = 4.46
0!            LAST_THIS_YR_ENERGY(1,R_ISEAS,0) =
0!            LAST_THIS_YR_ENERGY(1,R_ISEAS,TRANS) =
0!            LAST_THIS_YR_PEAK(1,R_ISEAS,0) =
0!            LAST_THIS_YR_PEAK(1,R_ISEAS,TRANS) =
0!            LINE_LOSSES_A_TO_B(ACTIVE_LINK) =
0!            LOAD_BLOCK_VAR = TG_COUNTER(R_TG) + 1 ! INCLUDES WHOLESALE SALES
0!            LOAD_UNIT = 2101
0!            LOCAL_COAL_TRANSPORT_RATE(L_J,L_K) = 
0!            LOCAL_INTERVAL = MINIMUM_INTERVAL
0!            LOCAL_NAME = R_BASECASE_MARKET_AREA_ID
0!            LOCAL_PRICE = FIXED_PRICE(R_TRANS)
0!            LOCAL_PRICE = MARKET_PRICE(R_TRANS)
0!            LOCAL_PRICE(HOUR_IN_MONTH)=
0!            LOSS_RATE = 100. * CT_LOSSES/DISPATCHED_ENERGY
0!            LOW_CAP = PUMPING_CAPACITY(IND)
0!            L_DUMMY=GET_ESC_NRG_GAS_PRICE(LOCAL_YR,R_MONTH,TRANS,
0!            L_I = DAILY_DEMAND_INDEX(I)
0!            L_I = GET_COAL_GROUP_POSITION(I)
0!            MAINT_SCHEDULED_FRACT(K2,JCM)=Z2
0!            MARGINAL_UNIT_INDEX = 0
0!            MARGINAL_UNIT_INDEX = I
0!            MAX_BASE_TRANS_GROUP_NUM = MAX(MAX_BASE_TRANS_GROUP_NUM,
0!            MAX_C_FOR_(L_J,L_K) = GET_MAX_C_FOR_(L_J,L_K,C)
0!            MAX_HOURS = HOURS_IN(R_MONTH) + 1
0!            MAX_OL_TRANS_CLASS_ID_NUM = MAX(
0!            MAX_OVL_TRANS_GROUP_NUM = MAX(MAX_OVL_TRANS_GROUP_NUM,
0!            MAX_UNIQUE_INTERVALS = 25
0!            MINIMUM_INTERVAL = -1. * DEPTH_MARKET_INTERVAL_SIZE * 
0!            MONTHLY_AC_EXPENSE(ASSET_CLASS,3,0) = 
0!            MONTHLY_AC_EXPENSE(ASSET_CLASS,3,R_MONTH) = 
0!            MONTHLY_CONGEST_COST(:,J) = CONGEST_VECTOR(:)
0!            MONTHLY_ENERGY_COST(IND,1:12) = MONTHLY_ENERGY_COST(IND,1:12) +
0!            MONTHLY_TRANS_HOURS(IND,:) = STORAGE_TRANS_HOURS(:)
0!            MONTH_NAMES_LONG = SRP_MONTH_NAMES_LONG
0!            MONTH_NAMES_SHORT = SRP_MONTH_NAMES_SHORT
0!            MONTH_UNIT_START_COST(S_U) =
0!            MON_TRANC_NUM = 49
0!            MSG 2/23/2015 2:23:46 PM
0!            MSG 3/11/2015 9:20:48 PM
0!            MSG 3/11/2015 9:21:32 PM
0!            MSG 3/11/2015 9:21:47 PM
0!            MSG 3/11/2015 9:22:26 PM
0!            MSG 3/11/2015 9:22:57 PM
0!            MSG 3/13/2015 12:40:36 PM
0!            MSG 5/22/2016 5:36:58 PM
0!            MSG 6/5/2016 11:32:55 AM
0!            MSG 6/5/2016 11:42:03 AM
0!            MSG 7/5/2016 11:05:24 AM
0!            MSG 9/15/2015 12:39:45 PM
0!            MSG 9/15/2015 5:58:57 PM
0!            MSG 9/22/2015 1:45:02 PM
0!            MSG 9/22/2015 1:54:24 PM
0!            M_MONTHLY_LOAD_B4_SALES(I) = M_MONTHLY_LOAD_B4_SALES(I) -
0!            MaxFeasCF=(FLOAT(168-nHrAtMin)*WEEKLY_REFERENCE_PEAK +
0!            NEMS_DEFLATOR = 1.944
0!            NEW_FUEL_PRICE(THIS_FUEL_POINTER,MON,LOCAL_YEAR) = 
0!            NEW_POINT = 0
0!            NEW_SCARCITY_LOGIC = .FALSE.
0!            NEW_SCARCITY_LOGIC = ADDITIONAL_CAPACITY_MW(1) > 0. .AND.
0!            NEW_SCARCITY_LOGIC. FOR ARTMAN. 10/25/99. GAT.
0!            NODE_TYPE(L_I) = 1
0!            NUM_OF_OL_TRANS_CLASSES = NUM_OF_OL_TRANS_CLASSES + 1
0!            OPEN(10,FILE=FILE_NAME,ACCESS="SEQUENTIAL")
0!            OUTAGES_ADJUSTED = .FALSE.
0!            OVLY_ACTIVE_EL_OPTIONS(FILE_ID) = 0
0!            PATH(TOTAL_PATHS_FOR_SYSTEM) = I
0!            PC_FOR_(TOTAL_PC_FOR_(L_J,L_K),L_J,L_K) = PC
0!            PEAK_LOAD_MW(JMO)=FUT_PEAK(3,J  )*    Z1+
0!            PEAK_LOAD_MW(JMO)=FUT_PEAK(3,J)
0!            PERIOD_NAME(1) = 'Annual'
0!            PLUS ANY UNUSED FROM PREVIOUS YEARS.
0!            PRICE_LAST_MW = .TRUE.
0!            PROXY FOR CALCULATING A PATTERN
0!            PSEFF(I) = PSEFF_SAVE(I)
0!            P_BTU_CONTENT(I) = 1000000./MAX(FLOAT(BTU_CONTENT),1.)
0!            QUALIFYING_GEN_DB = 0.0
0!            READ(10,*) DELETE,NUMBER_OF_DEFINITIONS
0!            READ_OVERLAY_INPUT = .TRUE.
0!            RECORDS_IN_OVERLAY_TABLE = 0
0!            RECORD_ITEM = COUNT_ID(UNIT_ID(IREC))
0!            REGIONAL_INDEX = TG*FUEL_INDEX
0!            REGIONAL_INDEX = TG*R_FUEL_INDEX
0!            RESET_WARNINGS = .TRUE. ! 110612 TEST
0!            RETURN
0!            RETURNS THE LOLP (Y-AXIS) VALUE FOR A LOAD VALUE
0!            RPS_SURPLUS = 0.0
0!            R_ANNUAL_HYBRID_PROFIT = LOCAL_HYBRID_PROFIT
0!            R_ASSET_CLASS_ID = 0
0!            R_BULK_POWER_MWH = R_BULK_POWER_MWH +
0!            R_CAPACITY_CURVE(K) = INT_RES_REMAIN(K,CS)*1000000.
0!            R_CAPACITY_CURVE(K) = INT_RES_REMAIN(K,GS)*1000000.
0!            R_CAPACITY_SALES = R_CAPACITY_SALES +
0!            R_CLASS_POINTERS(:) = OL_ASSET_CLASS_POINTER(:)
0!            R_COST_CURVE(K) = CS_SUPPLY_COST_CURVE(K,CS)
0!            R_COST_CURVE(K) = GS_SUPPLY_COST_CURVE(K,GS)
0!            R_DATA_BASES = R_DATA_BASES
0!            R_DSM_ENER = 0.
0!            R_DSM_PEAK = 0.
0!            R_DSM_PEAK = DSM_PEAK_RESERVE_ALLOCATION(1,CLASS,MONTH)
0!            R_EXTRACT_RATE =  MAX_DAILY_EXTRACTION_RATE(GS)! MUST DETERMINE A METHOD (PROBABLY A CURVE)
0!            R_FIRST_PERCENT = FIRST_CAPACITY_PERCENT(TRANS_GROUP)
0!            R_HYDRO_CLASS_POINTERS(I) = HYDRO_ASSET_CLASS_POINTER(I)
0!            R_MAX_S = K 
0!            R_MAX_SELL_RESERVE_MARGIN = 0.
0!            R_MONTH = R_MONTH
0!            R_MONTHLY_PRICE(HOUR_IN_MONTH)=
0!            R_NodeCap(I) = DAILY_DEMAND(L_I) 
0!            R_PASS_THOURGH_VALUES(I) = PARM_VALUES(106+I)
0!            R_PRICING_GROUP_QUANT = 0.
0!            R_RM_PURCHASE_FIXED_COST = 0.
0!            R_RM_PURCHASE_VARIABLE_COST = 0.
0!            R_RM_SALE_FIXED_AMOUNT = 0.
0!            R_RM_SALE_VARIABLE_AMOUNT = 0.
0!            R_SECOND_CAP = SECOND_CAPACITY_VALUE(TRANS_GROUP)
0!            R_SECOND_PERCENT = SECOND_CAPACITY_PERCENT(TRANS_GROUP)
0!            R_SUM_REPORT_ITEMS(I) = ANN_SUM_REPORT_ITEMS(I)
0!            R_SUM_REPORT_ITEMS(I) = SUM_REPORT_ITEMS(I)
0!            R_THIRD_CAP = THIRD_CAPACITY_VALUE(TRANS_GROUP)
0!            R_THIRD_PERCENT = THIRD_CAPACITY_PERCENT(TRANS_GROUP)
0!            R_VARIABLES(162+ITEM) = R_VARIABLES(162+ITEM) +
0!            R_VARIABLES(164+ITEM) = R_VARIABLES(164+ITEM) +
0!            R_WO_SDI = WVPA_Member_Rates_without_SDI(0)
0!            R_W_SDI = WVPA_Member_Rates_with_SDI(0)
0!            SALES_MULT = -1.
0!            SALES_MULT = 1.
0!            SAVE_TRANS_LOAD_TABLES = 0 moved outside file loop 4/17/01
0!            SHB_FILE_DIRECTORY = RESULTS_DIRECTORY
0!            STATE_RPS_DB = 0.0
0!            STATE_RPS_REPORT_ACTIVE = TRANSACT_FUEL_REPORT()
0!            STOP
0!            STOP 'See WARNING MESSAGES'
0!            STORE_GEN_BY_HOUR = 0.
0!            STORE_PUMP_BY_HOUR = 0.
0!            STRIKES_AVAILABLE(TRANS) = MAXIMUM_STRIKES(TRANS)
0!            STRIKES_REQUIRED(TRANS) = MINIMUM_STRIKES(TRANS)
0!            SUPP_CAP = PA_PEAK - SEPA_CAP - NEW_RESOURCE_CAP -
0!            S_BTU_CONTENT(I) = 1000000./MAX(FLOAT(BTU_CONTENT),1.)
0!            TARGET_CF = R_MONTHLY_USER_CF(I)
0!            TEMP_GS_SUPPLY_CAPACITY_CURVE = 0.
0!            TEMP_GS_SUPPLY_COST_CURVE = 999999.
0!            TEMP_GS_SUPPLY_COST_CURVE(:) = GS_SUPPLY_COST_CURVE(:,I)
0!            TEMP_I = L
0!            TEMP_I2 = COAL_GROUP_INDEX(R_COAL_GROUP)
0!            TEMP_I2 = GAS_GROUP_INDEX(R_GAS_GROUP)
0!            TEMP_L = CX_DailyOperAnPS3(
0!            TEMP_L = GET_GAS_TRANSPORT_CONGESTION(J,R_YEAR,R_MONTH,
0!            TEMP_R = MIN(R_DEPTH_PRICE,R_DISPATCH_COST(L))
0!            TEMP_R = R_DEPTH_MARGINAL_COST
0!            TEMP_R = R_DEPTH_PRICE
0!            TEMP_R = SO2(nUnit)
0!            TEMP_SPINNING_MWH = TRANS_SPINNING_CAPACITY(I) * 
0!            TEMP_TRANS_CLASS_POINTER(TRANSACTION_GROUP) = 1
0!            TEMP_VOM_RATE = VARIABLE_OM_RATE(I)
0!            TEMP_VOM_RATE = VARIABLE_OM_RATE(I)+
0!            TEST_CAP = MIN(R_ANNUAL_HYBRID_MARKET_ENERGY - TEMP_R4,
0!            TF_PLANNING_PEAK(I) = 0.0
0!            TG = COAL_GROUP_ID(TRANS)
0!            TG = COAL_LOAD_GROUP_2_TG(TRANS) 
0!            TG = GAS_GROUP_ID(TRANS)
0!            TG = GAS_LOAD_GROUP_2_TG(TRANS) 
0!            TG = GET_COAL_GROUP_POSITION(TG)
0!            TG = GET_GAS_GROUP_POSITION(TG)
0!            TG = GET_TRANS_FOR_DATA_BASE(DATA_BASES)
0!            TG = GET_TRANS_GROUP_INDEX(I)
0!            TG = GET_TRANS_GROUP_POSITION(TG)
0!            TG = MARKET_TG
0!            TG = TRANS_GROUP_POSITION(R_TRANS_GROUP)
0!            TG_2_HYDRO_WEEK = GET_TG_2_HYDRO_WEEK(TG)
0!            TOLERANCE = 0.01
0!            TOP_AVE_REVENUE = CUM_REVENUE(HALF_POINT+1,R_ISEAS)/
0!            TOTAL_INTERVAL_AREA = 
0!            TOTAL_NON_COIN_PEAK = TOTAL_NON_COIN_PEAK + TEMP_TL_PEAK
0!            TOTAL_PC_FOR_(L_J,L_K) = TOTAL_PC_FOR_(L_J,L_K) + 1
0!            TOTAL_PRICE_SCALAR = 
0!            TOTAL_RETAINED_CAP_BASE = 593.64
0!            TRANS = ACTIVE_IN_MONTH(IND)
0!            TRANS = UNIT_2_FUEL_TRANS(R_UNIT_ID) ! FROM THE RESOURCE ID LIST
0!            TRANSITION_MARGINAL_COST(NEW_POINT,I,1) = 0.
0!            TRANSITION_MARGINAL_COST(NEW_POINT,I,2) = 0.
0!            TRANSITION_MARGINAL_COST(NEW_POINT,I,3) = 0.
0!            TRANS_HOURLY_HYDRO(HOUR_IN_THE_SEASON,R_TRANS_GROUP) =
0!            TRANS_LOAD_AFTER_EL(HOUR_IN_THE_SEASON,R_TRANS_GROUP) =
0!            TRANS_LOAD_AFTER_EL(HOUR_IN_THE_SEASON,ZERO_GROUP) =
0!            TRANS_LOOP_POS = TRANS
0!            TRANS_PROD_MW_NO = TRANSACT_PROD_MW_RPT_HEADER(
0!            TieDescription(ACTIVE_LINK) = 
0!            TieID(ACTIVE_LINK) = TieID(ACTIVE_LINK-1)
0!            TieID_INDEX(B_ID,A_ID) = TieID(ACTIVE_LINK)     
0!            USER_I = 1
0!            VALUES_2_ZERO =
0!            VAROM(I) = VAROM_SAVE(I)
0!            VOID_LOGICAL = CX_DailyStorePat2()
0!            VOID_LOGICAL = CX_DailyStorePattern()
0!            VOID_LOGICAL = EL_RESET_PRICES()
0!            VOID_LOGICAL = INIT_HOUR_PATH_LIMIT()
0!            WABASH_REPORT_UNIT_REC = WABASH_REPORT_UNIT_REC + 1
0!            WEEKLY_HYDRO_FORECASTS = .FALSE.
0!            WRITE(1722,REC=DAY_OF_YEAR)
0!            WRITE(39,*) " Source Year",FileYear,"Run Year",Calendar_Year
0!            WRITE(39,*)&
0!            WRITE(4,*) "HYDRO MAXIMUM EXCEEDED IN MONTHNONLINEARMAP"
0!            WRITE(4,*) "HYDRO MINIMUM EXCEEDED IN MONTHNONLINEARMAP"
0!            WRITE(4,*) "MAX DAILY RATE",
0!            WRITE(4,*) "TRANSACTION GROUP INDEX = ",R_TRANS_GROUP,
0!            WRITE(4,*) S_BTU_COST_POINTR(I),RETURN_UNITNM(I),OUT_REC,I,
0!            WRITE(6,"('&',I4/)") BASE_YEAR + CURRENT_PLANNING_YEAR
0!            WRITE(6,"('&Year            Simulating Optimum Plan')")
0!            WRITE(6,*) "AN HOURLY OUTAGE WAS DETECTED THAT WAS OUT"
0!            WRITE(6,*) "OF ORDER.  PLEASE CHECK TRANSACT OUTAGE FILE"
0!            WRITE(6,*) "UNKNOWN TYPE OF DAILY OPTION"
0!            WRITE(6,*) LOCAL_HOUR,INT_DAY,CALANDER_DAY_OF_WEEK,
0!            WRITE(DAY_WEEK_UNIT,REC=DAY_WEEK_REC)     
0!            WRITE(FORECAST_YEAR,100)  'Forecast Year: ',BASE_YEAR+YEAR
0!            WRITE(SCREEN_MESSAGES,'(I4)') LOCAL_HOUR
0!            WRITE(WABASH_REPORT_UNIT_NO,REC=WABASH_REPORT_UNIT_REC)
0!            WVPA_MEMBER_ENERGY_SALES = ENERGY_SOLD_WO_SDI(0)/1000.! 751
0!            WVPA_OTHER_FUEL_COST(MO) = 0.
0!            WVPA_OTHER_NON_FUEL_COST(MO) = 0.
0!            WVPA_SDI_ENERGY_SALES =  ENERGY_SOLD_TO_SDI(0)/1000.
0!            YEAR = 1990
0!            ZONE_A(ACTIVE_LINK) = ZONE_B(ACTIVE_LINK-1)
0!            ZONE_A_GROUP_ID(ACTIVE_LINK) =
0!            ZONE_A_TO_B_PEAK_TIES(ACTIVE_LINK) = 
0!            ZONE_B(ACTIVE_LINK) = ZONE_A(ACTIVE_LINK-1)
0!            ZONE_B_GROUP_ID(ACTIVE_LINK) =
0!            ZONE__A_TO_B_OFF_PEAK_TIES(ACTIVE_LINK) =
0!            ZONE__A_TO_B_WHEELING_RATES(ACTIVE_LINK) =
0!            call GasFileNames()
0!            call ps(1,'neg-cost link; see .dbg-file for details')
0!            endif
0!            exit
0!            i = i 
0!            i=iMo*100+iDa
0!            iDNod=DnOfPlnt(iPlnt)
0!            iRout=RnOfLink(iLink)
0!            if(TRIM(Type_of_New_Entry(R_YEAR,PA)) == 'MARGINAL') Then
0!            if(year == 4 .and. r_iseas == 10) then
0!            nHrAtMin=0
0!            result="Coal"
0!            result="Nuclear"
0!            result="Oil"
0!            result="Other"
0!            result="Water"
0!            result="Wholesale Purchases"
0!            result="Wholesale Sales"
0!            result=FT_COAL
0!            result=FT_NUCLEAR
0!            result=FT_OIL
0!            result=FT_OTHER
0!            result=FT_WATER
0!            result=FT_Wholesale_Purchases
0!            result=FT_Wholesale_Sales
0!            return_value=.true.
0!            write(*,'(7i6)') iSup,Gap,i,j,k,p,q
0!            write(DbgU,'(a,3i6,1x,a)')
0!           ! First write
0!           ! Monthly Transact report.
0!           ! TODO:  CHECK FOR DUPLICATE NAME shouldn't be a
0!           ! augment EqLDur by newly base-loaded unit's outages
0!           ! comment. It should be a function call.
0!           ! keep unity-CF BoundNB1's from migrating with their facet's key var
0!           !msgmtrcl
0!           !third read
0!           1. DON'T BRING UNITS DOWN IF THEY ARE GOING TO BE ECONOMIC TOMORROW
0!           1. MUST RUN ON THE FIRST BLOCK
0!           2. IF A UNIT IS DOWN, START MAKE SURE THAT IT DOESN'T VIOLATE MIN DOWN TIME
0!           2. MUST TAKE THE MARKET RESULT
0!           2/11/93. GAT. THIS MOVES INITIALIZE INSIDE THE WRITE Q.
0!           2/8/95 circumvention requires (currently manual) insertion of a
0!           5. HOURLY, DAILY, WEEKLY, MONTHLY PROFITABILITY OF EACH UNIT
0!           6/21/93. GAT. TRAPPED FOR 10.*CONTRACT...
0!           7 days) would not allow the best local combination to be found;
0!           8/27/96 The above problem of keeping CF2<=CF1 in any single unit is
0!           ADD NEW POOLING LOGIC FOR IP, 6/4/91.
0!           ADDED 5/6/92 FOR SURPLUS CONTRACTS
0!           ADD_CAPACITY_TO_DSM_CAP
0!           ALSO TRACKS HOURLY STORAGE MWH/HR AS A LIMIT.
0!           AND THE INDICES TO REMEMBER THE ID'S. THIS WAY, ONLY THE
0!           BEFORE THE MONTH BEGINS, REGARDLESS OF METHOD.
0!           BUY/SELL.  WE THEN SEE IF ITS POSITION ACROSS THE 
0!           Basin Abbrev                 BasnName(iBasn)
0!           BindSetOwns(jBind)=.true. ! valid when BindSetLim was implictly 1
0!           CALCULATE CAPITAL COSTS
0!           CALCULATE HOURLY MARGINAL COST FOR EACH DAY OF THE YEAR
0!           CALL CLOSE_ASSET_VECTOR_FILE
0!           CALL CLOSE_SERVICE_TRANSACTIONS
0!           CALL CL_PLANNING_REMOVALS
0!           CALL CMOVE(TEMP_ASSET_CLASS_POINTER,
0!           CALL GET_DSM_START_YEAR(ACCEPTANCE_NUM,DSM_START_YEAR)
0!           CALL OPEN_ASSET_VECTOR_FILE(82)
0!           CASE ('Gas Supply Costs')
0!           CHANGE OFF LINE YEAR
0!           CLOSE(472)    !PRODUCTION PARAMETERS FILE
0!           COLLECT STATISTICS FOR THE THREE DAY TYPES
0!           COLLECT STATISTICS FOR THE TWO DAY TYPES
0!           COMMITMENT LOGIC.
0!           COMPUTE AVERAGE DAILY ENERGY FOREC & HISTOR THIS DAY TYPE.
0!           CONVERT THE ABOVE TO MARGINAL COSTS IN THE
0!           COPYRIGHT (C) 1983, 84, 85  M.S. GERBER & ASSOCIATES, INC.
0!           COPYRIGHT (C) 1984-88  M.S. GERBER & ASSOCIATES, INC.
0!           COPYRIGHT (C) 1991-92  M.S. GERBER & ASSOCIATES, INC.
0!           CPL_GEN_COST(MO) = CPL_GEN_COST(MO) + CPL_NUC_COST(MO)
0!           CREATE THE SLOPE AND INTERCEPT FOR THE AVE PEAK DAY TYPE
0!           CURRENT DISPATCH ABOVE UPPER END OF DEPTH OF MARKET CURVE
0!           Copyright (c) 1991 M.S. Gerber & Associates, Inc.          C
0!           DAILY AND HOURLY ARRAYS.
0!           DEPTH OF MARKET CURVE. IF SO, WE HAVE A DEPTH OF MARKET
0!           DO I = OPERATION_LIFE + 1 , AVAIL_DATA_YEARS
0!           DO NWKSX7=7,THIS_WIDTH/2,7 ! stop loop at THIS_WIDTH/2
0!           DOES IT CREATE NEW PROBLEMS? POSSIBLY WITH A CONNECTION TO 
0!           DailyNetRev(iDa)=amax1(0.0,CostAccum(0)-CostAccum(1))
0!           DisCapac=DisCapac+Capacity(j)
0!           ELSE
0!           ELSE TAKE THE STRAIGHT LINE UNTIL NPV IS ZERO
0!           ENDDO
0!           ENDFILE(11)
0!           ENDIF
0!           ENSURE THAT RESOURCES ARE TESTED IN ALL REGIONS
0!           Examination of the debugging results shows that aborting the loop
0!           FIND EQUILIBRIUM POINT BETWEEN TO CURVES.  RETURN PRICE.
0!           FIND THE CAPACITY ASSOCIATED WITH CONTRACT_MINIMUM_PROB AND COMPARE
0!           FIND THE SLOPE AND INTERCEPT FOR THE FIRST TWO DAY TYPES
0!           FOR EACH UNIT, WE TEST ITS POSITION WITHIN THE SYSTEM
0!           FUEL PRICE FILE?
0!           GENERATION IS UNCHANGED. REVENUES ASSOCIATED WITH MARKET SALES
0!           HE IS LOOKING AT ONLY THE GENERATION SIDE OF THE BUSINESS.
0!           HOWEVER, LDE*.BIN CONTAINS 366
0!           HPcoef(3)=g2/24.
0!           HPcoef(5)=g1*g1/72.
0!           I KNOW:
0!           IF IN, THEN EXPENSES FOR THE DERIVATIVE ARE CAPTURED IN
0!           IF(.NOT. ASSET_ANALYST_ONLY) THEN
0!           IF(AREA <= LAST_AREA) THEN
0!           IF(CAPACITY_PLANNING_METHOD_VALUE == 'AN' .AND.
0!           IF(CONTRACT_ENERGY(I) /= 0.) THEN
0!           IF(EA(I) > 0. .AND. CL_RESOURCES) THEN
0!           IF(SAVE_BASE_DATE + MO >= HISTORICAL_PRODUCTION_DATE()) EXIT
0!           INCORPORATE ALL CHANGES TO 
0!           IND = R_TRANS ! SINGLE STORAGE EVALUATION
0!           INSIDE THIS ROUTINE WE KNOW THE MARGINAL COST BETWEEN
0!           INTERCHANGE THE ARRAY POSITIONS
0!           MIDAS GOLD MAINTAINS 365 DAYS/YEAR.
0!           NEED A SWITCH TO DEFINE.
0!           NEEDED_RESERVE_MARGIN_CAPACITY(AREA) =
0!           NEOSO(JCM)=NEOSO(JCM)+1
0!           NEXT BEST CL UNIT - CONSTRAINT (4)
0!           NEXT CHEAPEST MARKET .
0!           OF THE GENERATING SYSTEM.
0!           OFF OF THE MOST EXPENSIVE RESOURCE ARE REDUCED.
0!           ONE DAY CYCLING FROM 11 PM TO 10 PM
0!           PASS A PRODUCTION CURVE INTO DEPTH OF MARKET ROUTINE TO
0!           PEAK = PEAK + AREA_FORECAST_CAP(4) +
0!           PEAK_GROWTH_RATE = FORCAST_PEAK(DAY,SEASON) /
0!           READ THE BINARY DATA FILE
0!           RECORD SOLUTION
0!           REVENUES(I) = MONTHLY_DOLLARS(0)
0!           ROUTINE TO CONVERT METAFILE FILES TO DIRECT-ACESS BINARY
0!           ROUTINE TO CREATE OVERLAY FILES
0!           Route Name
0!           SCARCITY FUNCTION
0!           SET OF CF TRANS ARE CREATED ONCE AND REFERENCED MANY TIMES
0!           SOLUTION.  IF NOT, WE KEEP ON LOOKING UNTIL WE ARE AT 
0!           STOP SEARCH AND SELL THE MAX AT THE MIN PRICE
0!           THE LOWER AND UPPER DEPTH OF MARKET BOUNDS.
0!           THE TOP END OF THE DEPTH OF MARKET RANGE.
0!           THEN, HAVE THE AREAS COMPETE WITH THERMAL UNITS FOR NATIVE LOAD
0!           THIS ROUTINE AS AGAIN (IE DOUBLE-COUNTED) WITH CLA_OBJT.FOR
0!           THIS SECTION CHECKS ALL (8) UNIQUE CASES OF:
0!           TO CONSTRAINT (2)
0!           TO MAINTAIN SPEED. THEN PASS THE INDEX VALUE IN ON THE
0!           TO THE BASE PATTERN, THEN PULL IN THE VECTOR OF CF'S
0!           The above formulation, involving differences of powers of small
0!           UNIT_OUT_SCHD(JCM,NEOSO(JCM))=I
0!           VOID_LOGICAL=RETURN_RUN_SPEC_SWITCHES(CURRENT_PLANNING_YEAR)
0!           WARNINGS SECTION
0!           WRITE(*,'(3I5,F9.2)') J,
0!           WRITE(4,*) 'HOURLY MC IS OUT OF RANGE' ! FIX THE DX PROBLEM 2/22/96
0!           a^n - b^n = (a-b) * (a^(n-1) + b*a^(n-2) + ... + a*b^(n-2) + b^(n-1)),
0!           and 0 cost, and using it to split the CF constraint into two; although
0!           at THIS_WIDTH/2 (or even this rounded up to the next multiple of
0!           augment MSF array of monthly fractional outage, NOT after 20021212
0!           by taking advantage of the identity
0!           call AppendI2w5(OutU,BasnID(iBasn)) ! basin names are N.A.
0!           call ChkLoadModel(Monotonic)
0!           call SetCumulModelParams
0!           call cinitd(VarCumul(1,j),I4_nKappa,0.0) DOES I4_nKappa DECREASE AS J INCRESE
0!           call wnai(Zer2,j2)
0!           constraint into a single facet, allowing one var to 'split' the
0!           current distribution except in the vicinity of a near-impulsive
0!           density mode, and hence are used to splice at the endpoints; let
0!           difference slope positive (for valid cumulative probability functions)
0!           do k=1,nKappa   CtMoment[k  ]=CtMoment[k  ]+Slope*(x2^k+1-x1^k+1)/real(k+1)
0!           do k=2,nKappa+1 CtMoment[k-1]=CtMoment[k-1]+Slope*(x2^k-x1^k)/real(k)
0!           dummy variable in the data-file, having small (e.g. 0.001) capacity
0!           else ! area is not binding on jDis; retain x(jDis) from CommitStgPair
0!           end if
0!           energy absorbed by this dummy var could later be assigned to its
0!           for vanishingly small dummies (e.g. 1e-8), yet only when the costs
0!           for which they have equal or decreasing cost
0!           forward or reverse slope, respectively, is exceeded by the slope of
0!           hence, the loop is opened up to the entire range of possibilities
0!           iCol=nNdVar+(iLkUsed-1)*nVpLk+1 ! +nContLoB
0!           if((InfRHS>RHS*NoiseFactor).and.(RHS>=-SmallArea)) then
0!           if((InfRHS>RHS*NoiseFactor).and.(RHS>=0.0)) then
0!           if((x(jKey)<0.0).and..not.InPriorFct) then ! regress once to prior facet
0!           if(.not.FirstItem) call wnaa(',')
0!           if(CFUB(M)>EquivAvail(M)) CFUB(M)=EquivAvail(M)
0!           if(CFUB(N)>EquivAvail(N)) CFUB(N)=EquivAvail(N)
0!           if(Monotonic.or.(nKappa<=2)) exit
0!           if(PrtDetail>0) then
0!           if(SupCost<c(M)) SupCost=c(M)
0!           if(SupcDisch<cMod(j)) SupcDisch=cMod(j)
0!           if(VarState(j)==BoundNB1) then
0!           if(x(j)<GLB(j)) x(j)=GLB(j) ! possible conflict with constraint
0!           inherent in the facet approach (AGT editorial on 1/30/95);
0!           is required to satisfy CF1>CF2
0!           issue is not resolved by initializing OptDual to SmallCost instead
0!           lower bound on the aux slacks (CFLB below); I believe it is a fault
0!           mode acted alone in reducing the weight of the Normal residual;
0!           nKappa=nKappa-1 ! make another attempt using a lower-order model
0!           nearest neighbor at its operating cost, but the technique works even
0!           note that the global mean and sigma above roughly describe the
0!           now considered academic, since we now merge blocks 1 & 2 in cases
0!           numbers, is prone to numerical error; the error may be avoided
0!           of 0, nor by inputting a positive AuxRHS, nor by putting a positive
0!           of those aux constraints which require CF2<=CF1, for example; this
0!           of vars 1 & 2 are non-decreasing; it fails when an economic reversal
0!           other and thus allowing their capacity factors to be equal, even
0!           positive cMod(j) here gives incentive to merge vars of the same aux
0!           rank modes by their excess of y decrease beyond Normal, as if each
0!           remove those points from the modal domain's beginning or end whose
0!           separate the vars having CF1 and CF2 into distinct facets; the
0!           the 0 cost does not match the cost of either real var, the dummy
0!           the leading factor of which is cancelled by the denominator of Slope:
0!           the mode's Normal decr. in y be designated yDn, [Normal weight<1]
0!           the mode's Normal density at endpoints be fz1 and fz2; then
0!           the mode's excess decr. in y be designated yDe,
0!           the mode's raw decrease in y be designated yDm,
0!           the mode's raw increase in z be designated zDm, and
0!           the mode's residual decr.  y be designated yDr,
0!           the residual Normal distribution; this is necessary to keep the net
0!           under a strictly decreasing demand curve; this violates the intent
0!           usage of slack vars does not affect cost; even a small
0!           var does 'split' either var's resultant facet, hence serves to
0!           write(2,'(7i5,2f9.3,a)') nItems,Gap,i,j,k,Ofs(j),Ofs(k),
0!           x(j)=AuxRHS(iAux)/AColumn(iAux,j); ! only aux slacks & UQ are non-zero
0!           yDe=yDm-[(1-yDm)*yDn/(1-yDn)]
0!           yDn=Fz1-Fz2         [change in standard Normal cum. function on z1,z2]
0!           yDn=zDm*(fz1+fz2)/2 [mean density times change in std. Normal deviates]
0!           yDr=(1-yDe)*yDn     [residual=(original wt.-wt. reduction)*(unity yDn)]
0!           yDr=yDm-yDe         [residual=raw-excess deducted]
0!          ! TODO: Suggest iterating or using constants, depending on which
0!          ! TODO: integration
0!          ! is appropriate. UNIT_EMISSIONS, UNIT_EMISSIONS_COST
0!          ALL RIGHTS RESERVED
0!          BETWEEN CUM_UNIT_UTIL AND CAPACITY GIVEN MARKET.
0!          CALL AFTER TRANSACT.
0!          COPYRIGHT (C) 1983, 84, 85  M.S. GERBER & ASSOCIATES, INC.
0!          COPYRIGHT (C) 1984, 85, 86 M.S. GERBER & ASSOCIATES, INC.
0!          COPYRIGHT (C) 1984-88  M.S. GERBER & ASSOCIATES, INC.
0!          COPYRIGHT (C) 1985  M.S. GERBER & ASSOCIATES, INC.
0!          COPYRIGHT (C) 1986  M.S. GERBER & ASSOCIATES, INC.
0!          COPYRIGHT (C) 1991-92  M.S. GERBER & ASSOCIATES, INC.
0!          Copyright (c) 1992 M.S. Gerber & Associates, Inc.           C
0!          ELSE
0!          ENDFILE(11)
0!          ENDIF
0!          HR1=0 ! implying no forced outage this month
0!          Half_Point=1
0!          Half_Point=Trans_Group_Points
0!          HrlyCapUsed(iHr,iDa,iMo,1,iUnit)=BlockCap(1,iMo)
0!          HrlyCapUsed(iHr,iDa,iMo,2,iUnit)=BlockCap(2,iMo)
0!          IF(FUEL_PRICE_OL(FILE_NUMBER) == 'OL' .OR.
0!          IF(PROCESSING_COAL_LINK_FILE_OL(1) == 'OL') THEN
0!          LAST_FUEL_PRICE_OL_TYPE(FILE_NUMBER) =
0!          LinkAvQSeg(iSeg,iLink)=
0!          MAYBE MOVE THIS ROUTINE BACK INTO PRICE MODULE
0!          NodeQtyLim(i) = MAX(0.0,MIN(R_NODE_LIM(NodeID(i)),
0!          OBJECT TO CONVERT DATA FILES TO DIRECT ACESS BINARY
0!          OPEN(11,FILE=trim(OUTPUT_DIRECTORY())//"BCECINT.BIN",
0!          PEAK_LOAD_MW(JMO)=FUT_PEAK(3,JMO)
0!          PRICE FILE.
0!          READ(10,1010,IOSTAT=IOS) RECLN
0!          ROUTINE TO CONVERT METAFILE FILES TO DIRECT-ACESS BINARY
0!          ROUTINE TO CREATE OVERLAY FILES
0!          ROUTINE TO READ FOSSIL DIRECT ACESS BINARY FILES
0!          SUBROUTINE TO CONVERT METAFILE FILES TO DIRECT ACESS BINARY
0!          SUBROUTINE TO FIND OVERLAY FILES
0!          SUBROUTINE TO READ ENERGY LIMITED BINARY DATA FILES
0!          StrikeMMHHH(1,i,iUnit)=ThisMMHHH
0!          StrikeMMHHH(2,i,iUnit)=ThisMMHHH
0!          THIS PERMITS SCENARIO MAKER TO BE ACTIVE FOR THE FUEL
0!          TODO: Determine correct iteration strategy. Previously,
0!          WRITE(3,*) SYMSTOP,'  ',CODE_LOCATION
0!          after the array is resized, but in this model it's impossible
0!          call cmove(a(i),a(j),nB)
0!          call cmove(b(i),b(j),nB)
0!          else if(xError>0.0) then
0!          end if
0!          iLkUsed=nLkUsdAt(iLink)
0!          iPlnt=DNodOfLk(iLink)
0!          iSNod=SNodOfLk(iLink)
0!          if     (xError<0.0) then
0!          if(Feasible) exit ! else try again with relaxed upper-bounds
0!          if(iPlnt<=0) cycle
0!          is being used. It's believed that this will remain correct
0!          piDNod=DNodOfLk(iLink)
0!          piDNod=iDNod
0!          piSNod=iSNod
0!          that meant iterating 1..6. Now the actual array size
0!          to be sure.  -jtr 02052024
0!          write(4,'(i4,i3,4f12.3,2(1x,a))') i,NodeType(i),NodeQty(i),
0!          write(DbgU,'(3i4,2f9.4,a)') i,iNode,NodeType(iNode),
0!          write(DbgU,'(3i7,1x,a)') jVar,iLbV,iUbV,VarDesc(jVar)
0!          write(DbgU,'(a)') ' Quantity or Cost from Mines to Units'
0!          write(DbgU,'(a)') ' Quantity(kTon) from Basins to Units'
0!         !TMS 03/23/05 ADDED FOR EXELON
0!         'no it does not; memory advances as the leftmost index increases first'
0!         (STILL NOT USING YES_TWO_PRB_DIGITS) 
0!         (changed to : CAPACITY_OPTIONS_FIXED_VARS)
0!         .
0!         1. EACH LINE ON THE SUPPLY CURVE CORRESPONDS TO A YEAR GOING FORWARD
0!         2. THE AMOUNT IN THE YEAR THAT IS AVAILABLE IS EQUAL TO THE INCREMENT
0!         3. PREVIOUS YEARS MUST BE CARRIED FORWARD.
0!         4. IF CURRENT YEAR IS EXHUASTED, DO NOT EXTRACT MORE.
0!         5. APPRECIATION IS CUMULATIVE.  
0!         ADJUST OTHER VARIABLES
0!         AGT on 20030429 changed following arrays from REAL to real*8:
0!         ALLOCATE(
0!         ALLOCATE(   NUMBER_OF_ACTIVE_PATHS(I), ! ACTIVE LINKS-1
0!         ALLOCATE(ID_POINTER(MIN_ID_NUM:MAX_ID_NUM))
0!         ALLOCATE(MARGINAL_FUEL_FREQUENCY(MAX_FUEL_TYPES,
0!         ALLOCATE(MONTHLY_FINAL_LOAD(R_MONTH_HOURS))
0!         ALLOCATE(MONTHLY_REFERENCE_LOAD(R_MONTH_HOURS))
0!         ALLOCATE(PLANNING_AREA_2_GN(MAX_COAL_GROUP_INDEX))
0!         ALLOCATE(PLANNING_AREA_2_GN(MAX_GAS_GROUP_INDEX))
0!         ALLOCATE(PLANNING_AREA_2_GS(MAX_GAS_GROUP_INDEX))
0!         ALLOCATE(PLANNING_AREA_2_TG(0:MAX_TRANS_GROUP_INDEX))
0!         ALLOCATE(TRANS_INDEXED_REVENUE(0:MAX_TRANS_LOAD_TABLES))
0!         ALLOWING THE AUTOMATIC MAINTENANCE OUTAGES.
0!         ALSO TRACKS HOURLY STORAGE MWH/HR AS A LIMIT.
0!         AND MONTHLY CALLS TO SUPPLY CURVES.
0!         AND REMOVE POS_MARGIN_FOR_UP_TIME.
0!         AND RESERVE APPRECIATION.
0!         ANNUAL_MD_DISPATCHED_CAP(I) = ANNUAL_MD_DISPATCHED_CAP(I) +
0!         ANNUAL_MD_DISPATCHED_ENRG(I) = ANNUAL_MD_DISPATCHED_ENRG(I) +
0!         ANNUAL_MD_FIXED_CHARGE(I) = ANNUAL_MD_FIXED_CHARGE(I) +
0!         ANNUAL_MD_FUEL_CHARGE(I) = ANNUAL_MD_FUEL_CHARGE(I) + FUEL_COST
0!         ANNUAL_MD_LOSSES(I) = ANNUAL_MD_LOSSES(I) + CT_LOSSES
0!         ANNUAL_MD_PURCHASED_CAP(I) = ANNUAL_MD_PURCHASED_CAP(I) +
0!         ANNUAL_MD_PURCHASED_ENRG(I) = ANNUAL_MD_PURCHASED_ENRG(I)+ENRG
0!         ANNUAL_MD_VARIABLE_CHARGE(I) = ANNUAL_MD_VARIABLE_CHARGE(I) +
0!         ANN_SUM_REPORT_ITEMS(2) = ANN_SUM_REPORT_ITEMS(2) +
0!         ANN_SUM_REPORT_ITEMS(5) = ANN_SUM_REPORT_ITEMS(5) +
0!         AREA_NAME(1) = 'I&M w/o GM'
0!         AREA_NAME(2) = 'NIPSCo    '
0!         AREA_NAME(3) = 'PSI       '
0!         AREA_NAME(4) = 'GM        '
0!         AREA_NAME(5) = 'IP&L      '
0!         AREA_NAME(6) = 'Hoosier   '
0!         AREA_NAME(7) = 'System    '
0!         AUTOMATICALLY REDUCED BELOW IF CAPACITY REVENUES ARE AVAILABLE
0!         AUTO_MAINT_AS_HOURLY = .TRUE.
0!         ArrayInv(1,i:nRows) = 0.0 ! IS THIS CORRECT?  AGT replies 'no; see below'
0!         ArrayInv(:,i)=0.0 ! alternatively, put above the do-i loop:  ArrayInv=0.0
0!         BASE_DATE = (BASE_YEAR() + R_RUN_YEAR - 1900) * 100
0!         BASE_FILE_DIRECTORY = RESULTS_DIRECTORY
0!         BASE_FILE_NAME = COAL_DEMAND_BASE_NAME
0!         BASE_FILE_NAME = GAS_DEMAND_BASE_NAME
0!         BASE_FUEL_RATE(1:6) = 16.3380
0!         BASE_FUEL_RATE(7:12) = 160.3380
0!         BASE_LOAD_RATE = EL_BASE_REVENUE_RATE()
0!         BE SET AT BEGINNING OF EVERY YEAR TO CUT DOWN ON DEALLOCATES
0!         BLENDED_BTU_COST(I) = 
0!         BUYER_ID = TRANS_GROUP_POSITION(R_BUYER)
0!         BUY_BEG_FO_HR_TL = 0
0!         BUY_END_FO_HR_TL = 0
0!         BkOwns(jIWB)=(FctOwning(jIWB)==kIWBnk).and.(VarState(jIWB)==BasicNKy)
0!         CALL AllocateArray(REFERENCE_LOAD_NAME,ActiveDirvs)
0!         CALL AllocateArray(REFERENCE_LOAD_NUMBER,ActiveDirvs)
0!         CALL CINITD(CURRENT_UNIT_UTIL,
0!         CALL CMOVE(SEASON_CONSTRAINT_LIMIT,HOUR_CONSTRAINT_LIMIT,
0!         CALL CMOVE(SEASON_PATH_LIMIT,HOUR_PATH_LIMIT,
0!         CALL CX_TRANS_ANNUAL_USER_MARKET(TRANS_GROUP,LOCAL_ANN_PRICE)
0!         CALL DAYWEEK(INT2(1),INT2(1),LOCAL_YEAR,CALENDAR_DAY_OF_WEEK)
0!         CALL DAYWEEK(MONTH,DAY,YEAR,DAYWEK)
0!         CALL DOES_COAL_DEMAND_FILE_EXIST(COAL_DEMAND_FILE_EXISTS)
0!         CALL DOES_REG_PARAMETER_FILE_EXIST(REG_PARAMS_FILE_EXISTS)
0!         CALL DOES_TF_FILE_EXIST(TF_FILE_EXISTS)
0!         CALL ERROR('Print Screen and e-mail to msg@msgerber.com')
0!         CALL FINDFILE('MSGPLSWT.DAT',FILE_NAME)
0!         CALL FINDFRST(SEARCH_FILE,FILE_NAME)
0!         CALL GET_DAY_OF_WEEK_IN_MONTH(INT2(1),INT2(1),
0!         CALL GET_MAX_COAL_LINKS(MAX_IN_COAL_LINKS) 
0!         CALL GET_MAX_TRANS_BLOCKS_USED(MAX_NBLOK)
0!         CALL GET_MM_DATABASE(Derivative,Demand Cost,
0!         CALL GET_MM_DATABASE(Purchases,Demand Cost,
0!         CALL GET_MM_DATABASE(Services,Demand Cost,  ! this was from the CL model
0!         CALL GET_MM_DATABASE(Services,Fuel Cost,
0!         CALL GET_MM_DATABASE(Services,Non Fuel Cost,
0!         CALL GET_PLANNING_RESERVE_MARGIN(R_PA,RESERVE)
0!         CALL GET_STRANS_TRACKER_INDEX(R_TRANS_NO,TRACKER)
0!         CALL GET_TOTAL_DELIVERY_COST(GENP_ACCUM,TEMP_I2)
0!         CALL INITIALIZE_TRANS_LOAD_PROB(MAX_COAL_LOAD_GROUPS)
0!         CALL LOCATE(17,9)
0!         CALL MG_CLEAR_LINE_WRITE(20,0,79,trim(SCREEN_MESSAGES),
0!         CALL MG_CLEAR_LINE_WRITE(21,0,79,
0!         CALL MG_LOCATE_WRITE(12,26,
0!         CALL MUNI_PF_MAKEBIN
0!         CALL PF_MAKEBIN
0!         CALL ProSymInputData(.FALSE.,ProSym_Data_FILE)
0!         CALL RESET_REGIONAL_OUTAGES_OL
0!         CALL RESET_REGIONAL_PARAMETER_OL
0!         CALL WVPA_ZERO_ACTUAL_DATA_BASE()
0!         CALLING ROUTINES FOR R_MONTHLY_GROUP_REPORT.
0!         CAN BE USED IN PRICING
0!         CAPACITY_OPTIONS_FIXED_VARIABLES
0!         CASE DEFAULT
0!         CHARACTER (LEN=50) :: COMMENT
0!         CLASS_MWH(CLASS) = 0.
0!         CLASS_PEAK(CLASS) = 0.
0!         CLASS_RATES(CLASS) = 0.
0!         CLOSE(10)
0!         CLOSE(2101)
0!         CLOSE(7101)
0!         CLOSE(R_LOAD_UNIT)
0!         CL_MONTH_NAME(LAST_SEASON+1) = 'Annual'
0!         COMMENTED OUT THE TWO LINES BELOW:
0!         COPYRIGHT (C) 1983, 84, 85, 93 M.S. GERBER & ASSOCIATES, INC.
0!         COUNT_ID = 0
0!         CT_LOSSES = LOSSES(I) * SALES_MULT * SEAS_HOURS
0!         CT_MONTHLY_1ST_ENERGY_PRICE(I) +
0!         CURRENT_PATH = BUYER_MARKET_INDEX(R_PATH,R_BUYER)
0!         CapyMW(0) = HOURLY_QUANTITY(IND)
0!         DAILY_PRICE(1:24) = L_MONTHLY_PRICE(HOUR:HOUR+23) !USE TO REPLACE BELOW
0!         DAY = 0
0!         DEALLOCATE( REF_HOURLY_LOAD)
0!         DEALLOCATE(VARIABLE_ACTIVE)
0!         DELIVERY_COST_1 = R_DELIVERY_INDEX_1
0!         DELIVERY_COST_2 = R_DELIVERY_INDEX_2
0!         DELIVERY_COST_3 = R_DELIVERY_INDEX_3
0!         DEMO_QUANTITY(1) = R_QUANTITY - 500.
0!         DEMO_QUANTITY(2) = R_QUANTITY - 250.
0!         DEMO_QUANTITY(3) = R_QUANTITY + 5
0!         DEMO_QUANTITY(4) = R_QUANTITY + 250.
0!         DEMO_QUANTITY(5) = R_QUANTITY + 500.
0!         DEPTH_OF_PATH = 0
0!         DERATE WHEN DETAILED MAINTENANCE = TRUE.
0!         DISPATCHED_ENERGY = ENRG - CT_LOSSES
0!         DISP_BTU_COST(I) = DISP_BTU_COST(I) * FUEL_SCEN_MULT * RTEMP
0!         DO
0!         DO FILE_ID = 0, MAX_EL_FILES-1
0!         DO I = -1, NUM_TRANS_GROUPS
0!         DO I = 1, 1024
0!         DO I = 1, 2 ! WILL BE INDEXED FOR R_TRANS
0!         DO I = 1, 20
0!         DO I = 1, 7
0!         DO I = 1, EL_OPTIONS
0!         DO I = 1, HYDRO_UNITS
0!         DO I = 1, LAST_SEASON
0!         DO I = 1, MAX_COAL_GROUP_NUMBER ! ACTIVE_NODES ! INITIAL (SUPPLY) PATH
0!         DO I = 1, MAX_GAS_GROUP_NUMBER ! ACTIVE_NODES ! INITIAL (SUPPLY) PATH
0!         DO I = 1, MAX_HYDRO_CLASS_ID_NUM
0!         DO I = 1, NUM_STORAGE_NODES
0!         DO I = 1, R_MAX_NODES
0!         DO I =1, NUMBER_OF_ACTIVE_GROUPS
0!         DO IND = 1, MONTHLY_ACTIVE_TRANSACTIONS
0!         DO J = 1, CONSTRAINTS_PER_PAIR(R_SELLER,R_BUYER)
0!         DO J = 1, I-1
0!         DO J = 1, NUM_TRANS_GROUPS
0!         DO K = 1, NUM_OF_TRANS_CLASSES
0!         DO L = 1, POINTS_PER_CS(CS) ! 25 ! THIS NEEDS TO BE REDIMENSIONED. NEED TO 
0!         DO L = 1, POINTS_PER_GS(GS) ! 25 ! THIS NEEDS TO BE REDIMENSIONED. NEED TO 
0!         DO LPEAK = 1, NPEAK
0!         DO L_I = 1, MAX_NODES 
0!         DO MO = 1, 12
0!         DO NEW_POINT = 1, TEMP_LAST_POINT
0!         DO OUTAGE_BLOCK = 1, SAVE_OUTAGE_BLOCKS
0!         DO TRANS = 1, MAX_COAL_LOAD_GROUPS ! EXCLUDING TRANS = 0 (SYSTEM) FOR NOW
0!         DO TRANS = 1, MAX_GAS_LOAD_GROUPS ! EXCLUDING TRANS = 0 (SYSTEM) FOR NOW
0!         DO TRANS = 1, MONTHLY_ACTIVE_TRANSACTIONS
0!         DO TRANS = 1, NUMBER_OF_HYDRO_GROUPS ! EXCLUDING TRANS = 0 (SYSTEM) FOR NOW
0!         DO TRANS = 1, R_NUMBER_OF_TRANS_GROUPS
0!         ELSE
0!         ELSE                           ! SELL
0!         ELSE !
0!         ELSE ! IF(PRODUCTION_PERIODS() == 12) THEN
0!         ELSE ! INJ
0!         ELSE IF(INDEX(BASE_FILE_NAME,'NONE') == 0) THEN
0!         ELSEIF( .NOT. YES_FISCAL_REPORTING) THEN
0!         ELSEIF(FILE_SOURCE(R_POINTER) == 'Ef') THEN
0!         ELSEIF(PRICE_TYPE(R_TRANS) == 'I') THEN
0!         ELSEIF(R_INT4_EMIS_TYPE == 4) THEN
0!         ELSEIF(TEST_MIN >= 75000000.) THEN
0!         END
0!         END DO
0!         END IF
0!         ENDDO
0!         ENDDO ! LOOP FOR TRANSACTION GROUPS
0!         ENDFILE(11)
0!         ENDIF
0!         END_YR_VALUE = ENDYR() ! 070717.
0!         ENERGY_PRODUCTS_PLANNING_ADD = .TRUE.
0!         ENRG = ANNUAL_MD_PURCHASED_ENRG(I)
0!         ENTRY GET_GAS_TRANSPORT_RATE(R_A,R_B,R_YEAR,R_MONTH)
0!         ENTRY GET_PATH_LINK_INFO(R_NODE,R_PATH_NO,R_PARENT_NO)
0!         ERROR = ISERROR()
0!         EXPANSIONS OR CONTRACTION RESOURCES.
0!         FILE_NAME = trim(BASE_FILE_DIRECTORY())//"SHB"//
0!         FIRST FORECAST MONTH.
0!         FREE_FACTOR = (1.-FREE_DRIVERS(ACCEPTANCE_NUM))/
0!         FUEL_BTU_COST(I) = FUEL_BTU_COST(I) * FUEL_SCEN_MULT * RTEMP
0!         FUEL_CHARGE_RATE = 0.
0!         FUEL_COST = (TRANS_VAR_EXP)/ 1000.
0!         FUEL_COST = (TRANS_VAR_EXP-TRANS_REV)/ 1000.
0!         FUEL_COST = ENRG * FUEL_CHARGE_RATE/1000.
0!         FUEL_PRICE_YEARS = MAX_SIMULATION_YEARS + 1
0!         FULL OPPORTUNITY TO RECEIVE VALUE OF REVENUE. SHOULD BE
0!         FixingOvershoots=.false.
0!         FixingOvershoots=.true.
0!         FullBitPattern ! large enough for 32 vars
0!         GAS_DEMAND_FORECAST_FILE = GAS_DEMAND_FORECAST
0!         GET_COALACTION_GROUP_NAME = R_GET_COALACTION_GROUP_NAME
0!         GET_GASACTION_GROUP_NAME = R_GET_GASACTION_GROUP_NAME
0!         GET_HOURLY_PRICE_NAME = R_GET_HOURLY_PRICE_NAME
0!         GET_LAGGED_HH_PRICE = MONTHLY_HH_PRICE
0!         GET_RESOURCE_ID_TO_UNIT = RESOURCE_ID_TO_UNIT(R_ID)
0!         GET_TRANS_GRX_RPS_SUM = .FALSE.
0!         GET_TRANS_RPS_SUM = .FALSE.
0!         GET_WH_MONTH_ENERGY = WH_TRANS_MONTHLY_ENERGY(R_MONTH,R_TG)
0!         GammaNorm(kFTA) incorporates factorial(kFTA+2) in its denominator
0!         GammaNorm(kFTA-2)=EqLCumul(kFTA,0)*z
0!         GammaNorm(kFTA-2)=EqLCumul(kFTA,0)/StdDev**kFTA
0!         GregGetDaysDemand = .TRUE. 
0!         HH_ADJ = MONTHLY_HH_BASIS(R_YEAR,R_MONTH)
0!         HOURLY_DIAGNOSTICS = .FALSE.
0!         HPcoef(2)=g1/6.
0!         HYBRID_MARKET_MW_USAGE = LOCAL_CHRONO_MW_USAGE
0!         HYDRO_LBH_UNIT = HYDRO_LBH_RPT_HEADER(HYDRO_LBH_REC)
0!         I = ACTIVE_LINK
0!         I = R_POINTR, TOTAL_ACTIVE_OPTIONS ! R_POINTR HARD-WIRED TO 1
0!         I = SAVE_ACTIVE_TRANSACTIONS
0!         ID_POINTER = -999
0!         IF (OUTAGE_EVENTS_IN_HOUR(R_HOUR,TG)) THEN
0!         IF( ALLOCATED(HOURLY_HYDRO) ) THEN
0!         IF( ALLOCATED(STRIKES_AVAILABLE) )
0!         IF(.NOT. (CAPACITY_PLANNING_METHOD() == 'MX'  .AND.
0!         IF(.NOT. GAS_ONLY) THEN
0!         IF(.NOT. HORIZONS_ACTIVE) THEN
0!         IF(.NOT. YES_DEPTH_OF_MARKET) RETURN
0!         IF(.NOT. YES_MON_TRANC_REPORT) RETURN
0!         IF(ABS(M1-M2) < .0000001) THEN
0!         IF(ACCEPTANCE_POINTER > MAX_DSM_DEVICE_NUM .OR.
0!         IF(ADD_2_INCOME_STATEMENT == 'T') THEN
0!         IF(ALLOCATED(DEPTH_PRICE)) DEALLOCATE(DEPTH_PRICE)
0!         IF(ALLOCATED(DSM_PEAK_RESERVE_ALLOCATION)) THEN
0!         IF(ALLOCATED(GREG_ENERGY_RESERVE_ALLOCATION)) THEN
0!         IF(ALLOCATED(GRX_RPS_TRANS_DB) .AND. RUN_TRANSACT) THEN
0!         IF(ALLOCATED(HOURLY_HYDRO)) THEN
0!         IF(ALLOCATED(ID_POINTER)) DEALLOCATE(ID_POINTER)
0!         IF(ALLOCATED(MARGINAL_FUEL_FREQUENCY))
0!         IF(ALLOCATED(MONTHLY_FINAL_LOAD)) 
0!         IF(ALLOCATED(MONTHLY_REFERENCE_LOAD)) 
0!         IF(ALLOCATED(NUMBER_OF_ACTIVE_PATHS))
0!         IF(ALLOCATED(OUTAGE_UNIT_UTIL))
0!         IF(ALLOCATED(RPS_TRANS_DB) .AND. RUN_TRANSACT) THEN
0!         IF(ALLOCATED(UNIT_TO_BLOCK))
0!         IF(AREA_PRICE) THEN
0!         IF(BEGIN_EP(TRANS) > 10000) THEN
0!         IF(CNTR_ENERGY_SWITCH(I) == 'O') THEN
0!         IF(COST_NO == 2) THEN
0!         IF(CS_SUPPLY_CAPACITY_CURVE(K,CS) >= 0.00001) THEN
0!         IF(DATA_BASES > 1) THEN
0!         IF(DELETE >= 8) CYCLE
0!         IF(DETAILED_MAINT) THEN ! per GAT 20030120
0!         IF(DISPATCHED_ENERGY > 0.) THEN
0!         IF(EL_GROUP(I)<0 .OR. EL_GROUP(I)>MAX_REPORTING_GROUPS)
0!         IF(END_EP(TRANS) > 10000) THEN
0!         IF(ERROR > 0) THEN
0!         IF(ERROR_FILE_EXISTS) CALL ERASE(STATUS_FILE_NAME)
0!         IF(FIN_EXISTS) CALL RS_MAKEOVL(FIN_FILE)
0!         IF(FISCAL_ONLY) THEN
0!         IF(FISCAL_SEASON_RESET == 1) THEN
0!         IF(GS_SUPPLY_CAPACITY_CURVE(K,GS) >= 0.00001) THEN
0!         IF(HOURLY_OUTPUT_NOT_OPEN) THEN
0!         IF(HYDRO_MONTHLY_ENRG(J) == 0. .AND. MWB == 0.) CYCLE
0!         IF(I /= GIBSON_BACKUP_POINTER) THEN
0!         IF(I > 0) THEN
0!         IF(INDEX(COST_ALLOC_OL,'BC') == 0) CALL COST_SERVICE_ALLOCATORS
0!         IF(IOS == 0) THEN
0!         IF(ISEAS == SAVE_PEAK_MONTH) THEN
0!         IF(LOCAL_DEPTH_QUANTITY == 0.) THEN
0!         IF(MONTH == 11 .AND. DAY == VETERANS) DAYWEK = 8
0!         IF(MONTHLY_ACTIVE_TRANSACTIONS == 0) RETURN
0!         IF(MONTHLY_HOLIDAYS(1) >= 1 .AND.
0!         IF(MONTHLY_HOLIDAYS(11) >= 1 .AND.
0!         IF(MONTHLY_HOLIDAYS(11) >= 2 .AND.
0!         IF(MONTHLY_HOLIDAYS(12) >= 1 .AND.
0!         IF(MONTHLY_HOLIDAYS(7) >= 1 .AND.
0!         IF(MONTHLY_HOLIDAYS(9) >= 1 .AND.
0!         IF(MONTHLY_SYSTEM_TARGET > 0.0) THEN ! WD
0!         IF(NUMBER_OF_HYDRO_GROUPS > 0) THEN
0!         IF(ON_LINE(J) > DATE2 .OR. OFF_LINE(J) < DATE1) CYCLE
0!         IF(PRICE_TYPE(R_TRANS) == 'F') THEN
0!         IF(PRODUCTION_PERIODS() == 1) THEN
0!         IF(REGIONAL_OUTAGES_EXISTS)
0!         IF(REGIONAL_PARAMETER_EXISTS)
0!         IF(REPORT_PRODUCT(TRANS) == 'T') THEN
0!         IF(R_DEPTH_QUANTITY > 0.) THEN ! BUY
0!         IF(R_LOAD > CUM_CAP(R_DATA_BASES) ) THEN
0!         IF(R_YEAR == 1) THEN
0!         IF(SAVE_MONTH == LAST_SEASON) THEN
0!         IF(SAVE_REGIONAL_OUTAGES_STATUS .AND. 
0!         IF(TEMP_TRANS_CLASS_POINTER(TRANSACTION_GROUP) == 0) THEN
0!         IF(TEST_MIN <= 0.) THEN
0!         IF(TOTAL_ANNUAL_CALLS + TOTAL_ANNUAL_PUTS <= 0) RETURN
0!         IF(TRANS_FORECAST_EXISTS) CALL TF_MAKEOVL(TRANS_FORECAST_FILE)
0!         IF(WABASH_IM_NIPSCO_PSI) LAST_AREA = 3
0!         IF(WHOLESALE_SAL_AND_PUR(R_NEW_POINT,1,R_I) > 0.) THEN
0!         IF(YEAR == 8 .AND. R_MONTH == 11) THEN
0!         IF(YES_FISCAL_REPORTING .AND.
0!         IF(trim(FORWARD_OPTION_FILE) /= 'NONE' .AND.
0!         IND = STORAGE_POSITION(TRANS,R_TRANS_GROUP)
0!         INDEP_POINTER = ABS(ANNUAL_HYBRID_BATTERY(IND))
0!         INDEX_OF_PATH_LINK = 0
0!         INDICES, NOT COAL DEMAND INDICES.
0!         INDICES, NOT GAS DEMAND INDICES.
0!         INQUIRE(FILE=STATUS_FILE_NAME,EXIST=ERROR_FILE_EXISTS)
0!         INTEGER (KIND=4) :: Values(24)
0!         IT CAN SET MARGIN IN AI LOGIC.
0!         IT IS THREE CHARACTERS.
0!         J = ACTIVE_NODES
0!         J=J
0!         K = R_YEAR
0!         LAST_AREA = 2
0!         LAST_BLOCK = 1
0!         LAST_GUESS = CURRENT_GUESS
0!         LAST_HOUR_TRANSACTIONS = .TRUE.
0!         LAST_SEASON = PRODUCTION_PERIODS()
0!         LAST_TG = TG
0!         LAST_TWH = MAX_TRANS_WITHIN_HOUR
0!         LINK_LOADING = 0.
0!         LINK_MEMORY = 0
0!         LOAD ALL PRICES AHEAD OF TIME.
0!         LOAD_POINTS = R_LOAD_POINTS
0!         LOCAL_ACTIVE_TRANSACTIONS = ANN_NUM_STOR(TRANS_GROUP)
0!         LOCAL_ACTIVE_TRANSACTIONS = NUM_STORAGE(TRANS_GROUP)
0!         LOCAL_DEPTH_PRICE = 0.
0!         LOCAL_DEPTH_QUANTITY = 0.
0!         LOCAL_PEAK_MONTH = PEAK_MONTH(R_YEAR)
0!         LOCAL_STORAGE_PATTERN = 0.0
0!         LOCAL_YEAR = FLOAT(YEAR+BASE_YEAR)
0!         LOCAL_YR = R_YEAR - BASE_YEAR
0!         LODDUR4(I)=sngl(LODDUR(I))
0!         LOGICAL (KIND=4) :: FILE_EXISTS
0!         LPROB(I,R_HYDRO) = 0.
0!         LPROB4 (I)=sngl(LPROB (I))
0!         LimHrsUse(0)=LimHrsGen
0!         MAINT_SCHEDULED_FRACT(K2,JCM)= ! allow for the possibility of more ...
0!         MARKET_GROUPS_RECORDS = 600
0!         MARKET_PRICE_SCALAR = GET_VAR(MARKET_PRICE_SCALAR,R_YEAR,
0!         MAX_ACTIVE_GAS_LINKS = GET_ACTIVE_LINK_NUMBER()
0!         MAX_COAL_GROUPS = GET_MAX_COAL_GROUPS()
0!         MAX_COUNTRIES = 1
0!         MAX_COUNTRIES = GET_NUM_COUNTRIES()
0!         MAX_GAS_GROUPS = GET_MAX_GAS_GROUPS()
0!         MAX_HOURLY_IMPORT,MAX_HOURLY_EXPORT,HOURLY_TRANSACTION,LAST_HOUR_SELL
0!         MAX_HOURLY_LONG_GAS_LINKS = 0
0!         MAX_HOURLY_LONG_PATHS = 0
0!         MAX_IN_GAS_LINKS = 2 * MAX_IN_GAS_LINKS
0!         MAX_LINK_ID = GET_MAX_LINK_ID()
0!         MAX_NODES = GET_NUMBER_OF_GAS_ACTIVE_GROUPS()
0!         MAX_NODE_ID = GET_MAX_GAS_GROUP_NUMBER()
0!         MAX_POINTS_IN_GS = GET_MAX_POINTS_IN_GS()
0!         MAX_TABLE = 3 + MAX_TIE_GROUPS
0!         MAX_TRANS_GROUPS = GET_MAX_TRANS_GROUPS()
0!         MAX_TRANS_GROUPS_FROM_TG = GET_MAX_TRANS_GROUPS()
0!         MONTH = MAP_MONTH(UTILITY,R_MONTH)
0!         MONTH = MONTH_NAME(R_MONTH)
0!         MONTHLY_ACTIVE_ENERGY_PRODUCTS = .TRUE.
0!         MONTHLY_EMISSIONS_COST = 0.
0!         MONTHLY_HH_PRICE(:) = R_TEMP_12
0!         MONTHLY_OP_FIXED_COST(MONTH) =
0!         MONTH_EMIS_DISPATCH_ADDER = 0.
0!         MONTH_PURCH_CRED_PRICE = 0.
0!         MONTH_SELL_CRED_PRICE = 0.
0!         MULTI_YEAR_ENERGY_PRODUCTS = .TRUE.
0!         MWBLOK(RESERVE_BLOCK) = RESERVE_CAPACITY(1)
0!         MonthlyAvail = 0.
0!         NEED TO CHECK AGAINST HOUR PATH AND TIE CONSTRAINT
0!         NEED TO MAKE SURE THAT IT GETS RESET WITH EACH ITERATION.
0!         NEOSO(JCM)=NEOSO(JCM)+1
0!         NEW_PSCR_ADJ_RATE = NEW_PSCR_ADJ_RATE/1000.
0!         NODE_TYPE = 0
0!         NOTE: GOING FROM PATH TO PC
0!         NUMBER OF INSTANCES OF A PARTICULAR ADDITION.
0!         NUMBER_OF_ACTIVE_COAL_GROUPS = GET_MAX_COAL_GROUPS() 
0!         NUMBER_OF_ACTIVE_DEMAND_NODES = 0
0!         NUMBER_OF_ACTIVE_GAS_GROUPS = GET_MAX_GAS_GROUPS() 
0!         NUMBER_OF_ACTIVE_GROUPS = GET_MAX_COAL_GROUPS() 
0!         NUMBER_OF_ACTIVE_PATHS = 0
0!         NUMBER_OF_ACTIVE_SUPPLY_NODES = 0 
0!         NUM_ACTIVE_START_END = 0
0!         NUM_TRANS = GET_NUM_SCENARIO_TRANSACTIONS()
0!         NUM_TRANS_GROUPS = GET_NUMBER_OF_ACTIVE_GROUPS()
0!         NUNITS = GET_NUNITS()
0!         Note to GAT:  assignment of a single begin-date and end-date to each
0!         ONE DAY CYCLING FROM 11 PM TO 10 PM
0!         OPEN(10,'DAILY_SELL_BUY.TXT')
0!         OPEN_SCENARIO_HOURLY_DEMAND = .FALSE.
0!         OR THE HYBRID GENERATION
0!         OVERHEAD_LENGTH = 28
0!         PC_C = 0
0!         PEAK_LOAD_RATE = EL_PEAK_REVENUE_RATE()
0!         PERIOD = STORED_PERIOD(BEGIN_END,SEASON)
0!         PLANNING_AREA = .FALSE.
0!         PRESCED_ANN_OUT_ALWAYS = .TRUE.
0!         PRICE RESPONSE FOR SAME RESOURCE CHOSEN.
0!         PROBLEM: DEMAND NODES ARE SET-UP ANNUALLY.
0!         PROD_POINTER = VARIABLE IN CAPACITY_OPTIONS FOR A GIVEN I
0!         Place Ith unit's maintenance-fractions in contiguous locations
0!         ProSym_Data_FILE = OVLNAME
0!         PrtDetail=0 ! for normal operation of the model by a customer
0!         PrtDetail=2 ! for debugging details (more)
0!         RATE_TRACKER = FLOAT(TRACKER)
0!         READ(10,1000,IOSTAT=IOS) RECLN
0!         REAL (KIND=4), ALLOCATABLE ::
0!         REAL (KIND=4), ALLOCATABLE :: SO2BlendedRate(:)
0!         REGIONAL_CAPACITY_MARKET = -99999
0!         RETURN
0!         RIGHT NOW IT IS CONDITIONED ON ACTIVE DEMAND AND SUPPLY NODES
0!         RPS_HYDRO_DB = 0.
0!         RUN_DATE = STORED_RUN_DATE
0!         RUN_TIME = STORED_RUN_TIME
0!         R_ANNUAL_PRODUCTION_TARGET = INT_RES_REMAIN(R_YEAR,CS)*1000000.
0!         R_ANNUAL_PRODUCTION_TARGET = INT_RES_REMAIN(R_YEAR,GS)*1000000.
0!         R_BASE_FILE_NAMES(5) = SM_UNITS_S5
0!         R_BASE_FILE_NAMES(6) = SM_UNITS_S6
0!         R_BASE_FILE_NAMES(7) = SM_UNITS_S7
0!         R_BASE_FILE_NAMES(8) = SM_UNITS_S8
0!         R_BASE_FILE_NAMES(9) = SM_UNITS_S9
0!         R_BTU_CONTENT = E_BTU_CONTENT(R_UNIT)
0!         R_BTU_CONTENT = P_BTU_CONTENT(R_UNIT)
0!         R_BTU_CONTENT = S_BTU_CONTENT(R_UNIT)
0!         R_CAPACITY_CURVE = 0.
0!         R_COST_CURVE = 0.
0!         R_EXTRACT_RATE =  MAX_DAILY_EXTRACTION_RATE(CS)! MUST DETERMINE A METHOD (PROBABLY A CURVE)
0!         R_EXTRACT_RATE =  MAX_DAILY_EXTRACTION_RATE(GS)! MUST DETERMINE A METHOD (PROBABLY A CURVE)
0!         R_ErrOrEnd = 0
0!         R_GET_MARGINAL_COST_AT_MARKET =
0!         R_HARD_EXTRACT_RATE = MAX_DAILY_HARD_LIMIT(CS)
0!         R_HARD_EXTRACT_RATE = MAX_DAILY_HARD_LIMIT(GS)
0!         R_HOUR_IN_WEEK = SAVE_HOUR_IN_WEEK + 24
0!         R_INCOME_VARS(:,IPL Monthy OandM Expenses) =
0!         R_MIN_EXTRACT_RATE = MIN_DAILY_LIMIT(CS)
0!         R_MIN_EXTRACT_RATE = MIN_DAILY_LIMIT(GS)
0!         R_MONTHLY_ECONOMY_BOUGHT = MONTHLY_RESERVE_ENERGY(1)
0!         R_MONTHLY_ECONOMY_BOUGHT = RESERVE_CAPACITY(1)
0!         R_MONTHLY_PRICE(iHr)=TEMP_R1
0!         R_NEXT_REC = NEXT_REC + 2
0!         R_NEXT_REC = NEXT_REC + 3
0!         R_NEXT_REC = NEXT_REC + 4
0!         R_NUMBER_OF_RESOURCE_ID = NUMBER_OF_RESOURCE_ID(R_ID)
0!         R_PRICING_GROUP_QUANT = TRANS_LINE_CONSTRAINT(CURRENT_PATH)
0!         R_RR_FILE_USED = SAVE_RR_FILE_USED
0!         R_TEMP_NAME = SAVE_BASE_FILE_NAME
0!         R_WHEELS = MAX_WHEELS
0!         SAVE_HOURS_IN_PERIOD = HOURS_IN_PERIOD(R_MONTH)
0!         SAVE_HOUR_IN_WEEK = R_HOUR_IN_WEEK
0!         SAVE_MONTHLY_PRODUCTS_STATUS = MONTHLY_ACTIVE_ENERGY_PRODUCTS
0!         SAVE_RR_FILE_USED = .TRUE.
0!         SAVE_TARGET_HYDRO_GROUP = TG_FROM_HYDRO_LOAD_GROUP(R_HYDRO)
0!         SCENARIO_ELECTRIC_MULT = 
0!         SCENARIO_MAKER_FILE = SCENARIO_MAKER
0!         SCENARIO_MAKER_OL = 'BC'
0!         SCENARIO_TRANSMISSION_AVAIL =
0!         SCREEN_MESSAGES = 'After Alloc Commit Inside Margn_obj'
0!         SCREEN_MESSAGES = 'Before Alloc Commit Inside Margn_obj'
0!         SEARCH_FILE = trim(SHB_FILE_DIRECTORY)//'SHB*.*'
0!         SELLER_ID = SELLER_TRANSACTION_GROUP(CURRENT_PATH)
0!         SELLER_ID = TRANS_GROUP_POSITION(R_SELLER)
0!         SET_HOUR_LONG_PATH_PARAMS = HOUR_PATH_LIMIT(R_SELLER,R_BUYER)
0!         SO REPLACE IF EXISTS
0!         SO THAT THE GAS POWER DEMAND
0!         STOP
0!         STOP ' '
0!         STOP 'Unmatched unit index in CLM_OBJT'
0!         STRIKE_PRICE
0!         SUM_REPORT_ITEMS(11) = SUM_REPORT_ITEMS(11) +
0!         SUM_REPORT_ITEMS(12) = SUM_REPORT_ITEMS(12) +
0!         SUM_REPORT_ITEMS(19) = SUM_REPORT_ITEMS(19)  ! emission are not active on contracts
0!         SUM_REPORT_ITEMS(2) = SUM_REPORT_ITEMS(2) +
0!         SUM_REPORT_ITEMS(5) = SUM_REPORT_ITEMS(5) +
0!         SYSTEM_NON_PEAK_NC = MAX(SYSTEM_NON_PEAK_NC,TEMP_PEAK)
0!         SYSTEM_NON_PEAK_SC = MAX(SYSTEM_NON_PEAK_SC,TEMP_PEAK)
0!         SYSTEM_PROD_BY_TG_BY_MW = 0.
0!         TEMP_ENRG = R_ENRG * LOCAL_RPS_CONTRIB_PERCENT* 0.01 * 0.001
0!         TEMP_GEN = 999999999.
0!         TEMP_I = GET_DATA_BASE_BY_HOUR(R_TG,DATA_BASE_BY_HOUR)
0!         TEMP_L = MONTHLY_GAS_LINK_INIT(R_YEAR)
0!         TEMP_LAST_POINT = LAST_DB_POINT(I)
0!         TEMP_PEAK = CPL_JURISDICTIONAL_INFOR
0!         TEST_CAP = R_ANNUAL_HYBRID_MARKET_ENERGY
0!         TEST_EPUC = CALC_ANNUAL_GAS_EPUC(R_YEAR,R_MONTH)
0!         TG = 
0!         TG = 1
0!         TG = 1 ! FOR NOW.
0!         TG = GET_TRANS_FOR_DATA_BASE(I)
0!         TG = GET_TRANS_GROUP_POSITION(R_TG)
0!         TG = TG_2_HYDRO_WEEK(R_TG)
0!         THERE APPEARS TO BE A VALID VALUE PASSED FOR ESCALATION RATE.
0!         THIS REMOVES INTRA-MONTH EXTRACT RATE DUE TO RESERVES. 
0!         THIS_YEAR = FLOAT(BASE_YEAR + YEAR)
0!         THIS_YEAR = R_START_YEAR + BASE_YEAR
0!         THIS_YEAR = R_START_YEAR + BASE_YEAR + R_EP_YEARS
0!         TO REPRESENT CUMULATIVE IMPACT ON RESERVES.
0!         TO SMOOTH THE CURVES.
0!         TOTAL_ALL_COSTS = (TRANS_VAR_EXP + TRANS_FIX_EXP)/1000.
0!         TOTAL_ALL_COSTS = -1.*(TRANS_REV - TRANS_VAR_EXP -
0!         TOTAL_ALL_COSTS = ANNUAL_MD_FIXED_CHARGE +
0!         TOTAL_ALL_COSTS = MONTHLY_FIXED_COST + FUEL_COST +
0!         TOTAL_SCARCITY_MW = DB_CAP_AFTER_OUTAGES(I) + CAPACITY_ADDER
0!         TRANS_GROUP = 1
0!         TRANS_HOURLY_HYDRO(HOUR_IN_THE_SEASON,R_TRANS_GROUP) =
0!         TRANS_LOAD_AFTER_EL(HOUR_IN_THE_SEASON,R_TRANS_GROUP) =
0!         TREATMENT IN THE COAL MODEL.
0!         TREATMENT IN THE GAS MODEL.
0!         UNIT_HAS_FUEL_DERIVATIVE =   UNIT_2_FUEL_TRANS(R_UNIT_ID) > 0
0!         UNIT_ID = 0D0
0!         UNIT_NAME = CNTRNM(I)
0!         UNIT_OUT_SCHD(JCM,NEOSO(JCM))=I
0!         UPDATE_HH_PRICE = .TRUE.
0!         UPPER_TRANS_GROUP = GET_NUMBER_OF_ACTIVE_GROUPS()
0!         USE SIZECOM
0!         VALUES_2_ZERO = INT(750*MAX_TRANS_GROUPS)
0!         VARIABLE_NUMBER = 36
0!         VARIABLE_OM_CHARGE = (TRANS_VAR_EXP-TRANS_REV)/ 1000.
0!         VARIABLE_OM_CHARGE = -TRANS_REV / 1000.
0!         VARIABLE_OM_CHARGE = 0.
0!         VOID_LOGICAL =  STORE_GS_SCARCITY_INFO(GAS_GROUPS_RECORDS,
0!         VOID_LOGICAL = GET_GN_COALACTION_GROUP_NAME(R_COAL_GROUP,
0!         VOID_LOGICAL = GET_GN_GASACTION_GROUP_NAME(R_GAS_GROUP,
0!         VOID_LOGICAL = GET_GN_HOURLY_PRICE_NAME(R_COAL_GROUP,
0!         VOID_LOGICAL = GET_GN_HOURLY_PRICE_NAME(R_GAS_GROUP,
0!         VOID_LOGICAL = GET_ONE_TG_PRICE_MULT(
0!         VOID_LOGICAL = READ_REGIONAL_OUTAGES_DATA()
0!         VOID_LOGICAL = WVPA_UPDATE_FUEL_ADJ_RATES(R_MO,     ! tracker removed 5/18/04
0!         VOID_LOGICAL = WVPA_UPDATE_NON_FUEL_ADJ_RATES(R_MO,
0!         VOID_LOGICAL = WVPA_UPDATE_PSCR_ADJ_RATES(NEW_PSCR_ADJ_RATE)
0!         VOID_REAL = EL_CAPACITY_PLANNING_REMOVAL_10()
0!         WABASH_REPORT_UNIT_REC = WABASH_REPORT_UNIT_REC + 1
0!         WHAT IS THE SIGN FOR SHUT DOWN MARGIN I'M ASSUMING NEGATIVE
0!         WHICH ARE ANNUAL.
0!         WRITE(4,*) "BASE EXP PLANT REC = ",BASE_PN_RECORDS
0!         WRITE(4,*) R_COAL_GROUP,COAL_GROUP,
0!         WRITE(4,*) R_GAS_GROUP,GAS_GROUP,
0!         WRITE(6,"('&                        ')")
0!         WRITE(6,"('&Transact C              ')")
0!         WRITE(6,*) "Annual and Monthly Derivatives Mismatch"
0!         WRITE(9,*) I,
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC)
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC+)
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC+1)
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC+2)
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC+3)
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC+4)
0!         WRITE(RPT_UNIT_NUM,REC=NEXT_REC+5)
0!         WRITE(SCREEN_MESSAGES,'(A,I10,A)')
0!         WRITE_DAILY_GAS_LINKS_REPORTS = 
0!         WRITE_TRANC_MONTHLY_SUMMARY = .TRUE.
0!         WVPA_OTHER_FUEL_COST = 0.
0!         YEAR_REC_POS = 0
0!         YES_FISCAL_REPORTING =
0!         YES_MON_TRANC_REPORT = .TRUE.
0!         YR = R_YEAR
0!         above form corresponds to standard definitions of gamma, but we
0!         augment MSF array of monthly fractional outage, NOT after 20021212
0!         call CastAsBoundIfSingular(j,BoundNB1)
0!         call GetDaysDemand(ErrOrEnd,NodeQty)
0!         call MakeBound(jBind) ! always valid for #19 and #25? (980811)
0!         call OpenGNWInpFiles(InpCsvFN)
0!         call ShowStates
0!         call cinitd(ArrayInv(1,i),I4_n,0.0) !THIS WRAPS AS I INCREASES; AGT replies
0!         can expedite the computations by incorporating the i-factorials
0!         derivable: (1.-Z1)= interpolation weight for calendar month J+1
0!         do
0!         do i = 1, nNode
0!         else
0!         else ! for discharge vars (even j)
0!         elseif((k<nActiveFacets).and.(k/=kLvg)) then
0!         end do
0!         end if
0!         end re d() for ordinary (not facet-slack) var entering basis
0!         endif
0!         iBegPt=iEndPt ! probably slower than the statement below
0!         iLink=jVar-nNdVar ! valid iff nVpLk=1
0!         if((AvgDurat(j)>0.0000015).and.(AvgDurat(j)/NoiseFactor>PrevAvg)) then
0!         if((iMo==2).and.(mod(cYr,4)==0)) nDaCMo=29
0!         if(FctOwning(j)>=kInf) then
0!         if(InvObsolete) then
0!         if(PrtDetail>2) write(PrtUni,'(1x,4i4,2l2)')
0!         if(PrtDetail>3) write(PrtUni,'(1x,a)') 'already aligned'
0!         if(PrtDetail>3) write(PrtUni,'(1x,a,2i3,f9.6)')
0!         if(iPlnt<=0) cycle ! after 20110311, unreachable plants have 0 Demand
0!         if(mod(j,2)==1) then ! for return vars (odd j)
0!         if(r_year == 9 .and. r_month == 2) then
0!         if(trim(TEMP_BASE_FILE_DEF) /= '') then
0!         if(x(j)<0.99999*LUB(j)) exit ! no higher facet has a KeyVar with larger CF
0!         incorporate days of prescheduled maintenance in LOAD_ACCUM
0!         j=KeyVar(kLvg)
0!         kLvg=kLvg+1
0!         nDaCMo=DaysInNLYMo(iMo)
0!         stop
0!         that appear in the denominators of the HPcoef's below; note that
0!         unit would preclude use of the MAINT_DIVISIBLE variable below:
0!         write(*,'(2i6,a)') iReq,mReq,' row written' ! to account for slowness
0!         write(u, 6 ,advance='no') rOrg ! but no leading minus was evident in testing
0!         z=z/(real(kFTA)*StdDev) ! perhaps slower than the one-line assignment below
0!        ! **
0!        ! ** Previously set to 51 by JTR for OW, HB, H2, CS but
0!        ! First assignment to UNITNO. Only case where it's assigned from the
0!        ! Get file handle
0!        ! Note from John:  PM passed in argument list is set inside routine.
0!        ! ONLY STORE VALUES IF TRANSACTION TYPE FOUND
0!        ! ONLY WRITE NON-SPECIFIC TRANSACTIONS
0!        ! Prevent spurious Lahey compiler warning about
0!        ! Read TEMP_BASE_FAMILY_NAME from command line
0!        ! TODO: Update for new vars - debugmod
0!        ! TODO: increase variable number? John did that last time but
0!        ! UNIT array. In this case it's iterating to NBLOCK; other cases it's
0!        ! an ID
0!        ! believe that was a mistake.
0!        ! debugmod
0!        ! debugmod - check this value.
0!        ! debugmod - not sure whether variable_numbershould be increased here.
0!        ! int_to_string().
0!        ! is used to determine the length of the record, and it's a count, not
0!        ! it's unclear whether that's appropriate. Ask Greg. variable_number_dsex
0!        ! iterating to NUNITS.
0!        ! perturb Half_Point, as Slope may not be appropriate
0!        ! recompute Slope at the latest Half_Point
0!        ! strike on both blocks of iUnit as if an aggregate
0!        ! use of uninitialized variable in call to
0!        ! variable_number_dsex = 51 ! 03/10/2023, JTR, OW, HB, H2, CS (+8)
0!        (1) MAXIMUM_ENERGY IS VIOLATED, OR
0!        (2) MAXIMUM_CAPACITY IS VIOLATED, OR
0!        (3) ANOTHER CONTRACT IS LOWEST_COST, OR
0!        (4) THE NEXT CL UNIT IS LOWEST_COST
0!        (5) CONTRACTS EVALUATED BEYOND THE END OF THE NEXT CL UNIT
0!        (INELASTIC (UNDEFINED?) DEMAND)
0!        (INELASTIC (UNDEFINED?)SUPPLY)
0!        0. pass Alan an annual initialization routine (# units)
0!        01/06/01. GAT
0!        1. create new varibles in CL file
0!        1/17/95. GAT. MODIFIED AND MOVED INTO SUBROUTIME.
0!        2. create vector of monthly prices for the units
0!        2/14/93. GAT. ADDED FOR HOURLY_AFTER_DSM
0!        5/13/92 ADDED SURPLUS SALE LOGIC
0!        ACCUMULATE INFORMATION FOR ANNUAL REPORTING
0!        AND SET UNIT_UP_YESTERDAY = TRUE
0!        AND THE BUYERS COSTS ARE STILL GREATER THAN THE SELLER.
0!        AND THE SELLERS COSTS ARE STILL LESS THAN THE BUYER.
0!        ARE MADE UP POSSIBLY AFTER THE MINIMUM UP TIME. HOWEVER,
0!        ASSUME FINANCIAL FROM THE ENERGY PRODUCTS FILE
0!        ASSUME PHYSICAL FROM THE CAPACITY LIMITED FILE
0!        BOOK AND TAX ITEMS ARE CALCULATED.                            *
0!        BegError=EndError
0!        CALL CLOSE_ASSET_VECTOR_FILE
0!        CALL DSM_BOOK_DEP_CAL(TOTAL_DSM_CAPITAL,
0!        CALL DSM_TAX_DEP_CAL(TAXLF(DSM_ACCTS),DEPMET(DSM_ACCTS),
0!        CALL GET_VARIABLE_VALUE(VARIABLE_NUMBER,RETURN_VALUE)
0!        CALL OPEN_ASSET_VECTOR_FILE(82)
0!        CALL RINIT ! 8/12/94. GAT. MOVED FROM INSIDE FINANBSE. removed msg 3/2/98
0!        CALL WVPA_CASH_PAYMENTS_RECEIPTS(RUN_YEAR,R_ACTUAL_CASH_VALUES)
0!        CAPACITY LIMITED POINTER LOGIC
0!        CAPACITY REVENUE AND EXPENSE CALC'S
0!        CHECK WHETHER ANY CONTRACTS ARE ECONOMIC
0!        CLASS_NUM = ASSET_CLASS_NUM(SERVICE_TRANS) + 1
0!        COAL_DEMAND_OVERLAY_MASTR_FILE_OPEN = .FALSE.
0!        CONTRACTS SECTION
0!        COPYRIGHT (C) 1982-2003 M.S. GERBER & ASSOCIATES, INC.
0!        COPYRIGHT (c) 1985 M.S. GERBER & ASSOCIATES, INC.
0!        COPYRIGHT (c) 1990 M.S. GERBER & ASSOCIATES, INC.
0!        CREATE A PRINT STRING OF THE TIME.
0!        CUMULATIVE BOOK DEP, AFUDC, CASH INVESTMENT,                  *
0!        DAY TYPES/DATA BASES WILL NOT BE USED.
0!        DECLARATIONS ADDED 20020304 FOR USE IN SAVING BEST STRIKE-VALUES:
0!        DECLARATIONS ADDED 20020723 FOR USE IN ANNUAL_CALL_PUT_CAPACITY:
0!        DETERMINE TOTAL CONTRACT MINIMUMS.
0!        DIVIDEND_PAYOUT = 100.*CSDIV/COMMON_EARNINGS
0!        DO J=1,N_BEST_VALUES ! display in order of decreasing value
0!        DO MO = 0, 12
0!        DO MO = 1, 12
0!        DSM_BOOK_DEP CALCULATES THE BOOK DEPRECIATION/AMORTIZATION    *
0!        DSM_CAPITAL_ITEMS CALCULATES GPV ADDITIONS, ANNUAL BOOK DEP,  *
0!        DSM_FINANCIAL_COSTS CALCULATES THE DSM COSTS THAT ARE         *
0!        Distant=iabs(Half_Point-Start)>1
0!        EASILY LOSE MONEY BEFORE THE END OF THE MIN UP TIME.
0!        ECONOMY INTERCHANGE SECTION
0!        EL_CAPACITY_PLANNING_ADDITIONS = FIRST_YEAR_CAPACITY
0!        EMISSIONS - BASED ON HOURLY MMBTU'S
0!        END DO
0!        ENDDO
0!        ENDFILE(11)
0!        ENDIF
0!        EXPENSED AND CAPTIALIZED.  FOR THE CAPITIALIZED COSTS         *
0!        End of watch ....
0!        EndError=R_Margin_Cost-System_Marginal_Cost(Half_Point,
0!        FOR CAPITIALIZED DSM PROJECTS USING STRAIGHT LINE WITH        *
0!        FUEL INVENTORY - BASED ON HOURLY MMBTU'S
0!        FUNDS_FOR_CONSTRUCTION = 100.*SUM_OPERATIONS/(CE+NF_LEASED)
0!        GAS_DEMAND_OVERLAY_MASTR_FILE_OPEN = .FALSE.
0!        GET COST OF SUPPLYING CAPACITY FOR A "SHORT" SYSTEM.
0!        GET_DATA_BASE = 2
0!        HALF YEAR CONVENTION                                          *
0!        HOUR_IN_MONTH=(iDa-1)*24+iHr ! (iDa==1) => HOUR_IN_MONTH=iHr
0!        Half_Point=Start-nint(xError) ! abs(xError)<0.5 may cause early exit
0!        I = 1
0!        IF CRITERIA MET:
0!        IF EITHER CONDITION OCCURS, ALLOW THE ENTIRE TRANSACTION
0!        IF THE MARGIN ONLY OCCURS WITHIN THE MIN UP TIME, IT CAN STILL
0!        IF THE NEXT UNIT BLOCK IS THE LAST ENERGY SOURCE,
0!        IF(CLASS_BASED_FORECAST() .AND. YEAR == 1) CALL CLS_HIST_SHAPE
0!        IF(INDEX(DEPMET(DSM_ACCTS),'SL') == 0)
0!        IF(IOS == 0) THEN
0!        IF(OPERATION_LIFE > 0 .AND.
0!        IF(TAX_INFO_FILE_EXISTS) CALL TX_INFO_MAKEOVL(TAX_INFO_FILE)
0!        IF(TRANS <= 0) RETURN
0!        INCLUDE TOTALS FOR SUPPLY AND DEMAND
0!        INITIALIZED TO ZERO SO THAT RESOURCES NOT DEFINED BY CERTAIN
0!        INQUIRE(UNIT=FINANCIAL_DRILLING_NO,OPEN=FILE_IS_OPEN)
0!        INTEGER*2 POINTS_IN_CURRENT_CURVE,POINTS_IN_LOAD_CURVE
0!        Initialize values
0!        LOGICAL (kind=1) ::   IS_A_VALID_RPS_PM
0!        MINIMUM DOWN TIME
0!        MINIMUM UP TIME
0!        NET DEFERRED DEBIT ADDITIONS, ANNUAL AMORTIZATIONS,           *
0!        NO CALCULATION NECESSARY. KEEP IN MW'S UNITS.
0!        NO DSM FOR THE PA SYSTEM
0!        NOTE: CONTRACT MINIMUMS WITH CAPACITY FACTOR 0 < X < 1
0!        NodeQtyLim(58) = 0.371 ! during testing (Alaska Prudhoe Bay)
0!        ONLY USED IF CAPACITY IS EXCEEDED BEFORE ENERGY
0!        OPEN(11,FILE=trim(DATA_DRIVE)//"BCFPARM.BIN",ACCESS="DIRECT",
0!        PATTERN WITH DIFFERENT CF'S
0!        PLANNING_TRIGGER = TRIGGER_METHOD_VALUE
0!        PROGRAM TO READ MULTI-TAB INFORMATION FOR THE COAL MODEL
0!        QtySum=0.0
0!        RAMP DOWN
0!        RAMP UP
0!        READ(10,1000,IOSTAT=IOS) RECLN
0!        REAL*4 DELTA_X_FOR_LOAD_CURVE/1./
0!        RESOURCES WANTING TO USE THE 
0!        RETURN_THE_VALUE_FOR = RETURN_VALUE
0!        RootFound=Half_Point==Start
0!        SAVE POINTS_IN_CURRENT_CURVE
0!        SAVE POINTS_IN_LOAD_CURVE
0!        SAVE SAVE_CLASS_NAME
0!        SAVE_COAL_DEMAND_FILE_USED = .FALSE.
0!        SAVE_COAL_DEMAND_FILE_USED = .TRUE.
0!        SAVE_GAS_DEMAND_FILE_USED = .FALSE.
0!        SAVE_GAS_DEMAND_FILE_USED = .TRUE.
0!        SAVE_TF_FILE_USED = .FALSE.
0!        SAVE_TF_FILE_USED = .TRUE.
0!        SEGMENT, AND STOP DISPATCHING THE SYSTEM.
0!        SHOULDN'T IT BE:
0!        SPINNNING, MARKET RESOURCE, RAMPING, FUEL LIMIT, ...
0!        START TOMORROW (THIS IS WHERE IT WOULD BE USEFUL TO KNOW ALL STRATEGIES IN ADVANCE
0!        SUMMARIZE MONTH
0!        SURPLUS CAPACITY AVAILABLE
0!        Slope=(EndError-BegError)/float(Half_Point-Start)
0!        Start=Half_Point
0!        TAKE INTO ACCOUNT PROBLEM WITH PEAK SHIFT ALGORITHM
0!        TAX DEP ADDITIONS, DEFERRED TAXES BASIS                       *
0!        TEMP_CHR = PLANNING_DECISIONS()
0!        TEMP_L = GregGetDaysDemand(ErrOrEnd,NodeQty,nNode)
0!        TEST CRITERIA
0!        TESTING... TESTING... TESTING
0!        TF_OVERLAY_MASTR_FILE_OPEN = .FALSE.
0!        THEN ASSIGN REMAINING ENERGY TO THE FIRST CAPACITY
0!        THEN INTERCHANGES THE ARRAY POSITIONS
0!        THIS SUBROUTINE CONTROLS THE PRODUCTION OF OVERLAY FILES
0!        TO TAKE PLACE.
0!        TOTAL REVENUE AND ENERGY CALC'S
0!        TRANS = 
0!        TRANS = UNIT_2_FUEL_TRANS(R_UNIT_ID) ! FROM THE RESOURCE ID LIST
0!        ThisPriSeg(1:nNzSegs)=MineFunc(1:nNzSegs,1,iSNod)
0!        ThisQtySeg(1:nNzSegs)=MineFunc(1:nNzSegs,0,iSNod)
0!        UNLIMITED NUMBER OF CHARACTERISTICS IN THE MONTH_EVENT_COUNTER
0!        USE THE NEW_PEAK_SHIFT ROUTINE.
0!        USE co2_market_abatement_curves
0!        VARIABLE_VALUE = RETURN_THE_VALUE_FOR(VARIABLE_NUM(VAR_POINTR))
0!        VARIABLE_VALUE(111) = VARIABLE_VALUE(111) - VARIABLE_VALUE(112) VARIABLE CHANGE 9/22/97
0!        VARIABLE_VALUE(112) = -VARIABLE_VALUE(112) !TOTAL AFUDC SIGN CHANGE IS GONE 922/97
0!        WABASH 4 AREA ALLOCATION OF PSI SEASONAL ENERGY
0!        WARN IF LOAD FORECAST SHIFTS PEAK
0!        WARN IF LOAD MANAGEMENT SHIFTS PEAK
0!        WHICH WILL BE HANDLED WHEN AND ONLY WHEN AN EVENT IS REGISTERED.
0!        WRITE(*,'(4I5,F9.2)') J,
0!        WRITE(4,*) "NUMBER OF NODES ",nNode
0!        WRITE(9,1000) 'coincident peak',TOTAL_AREA_COIN_PEAK,
0!        WRITE(9,1000)'Surplus Energy (GWh)',TOTAL_SURPLUS_ENERGY/1000.,
0!        Watch what these values do.
0!        call end_program("dsex:0001 - base_file_definition not set.")
0!        call strup(sWork)
0!        case("COAL")
0!        case("NUCLEAR")
0!        case("OIL")
0!        case("OTHER")
0!        case("WATER")
0!        case("WHOLESALE Purchases")
0!        case("WHOLESALE SALES")
0!        case(FT_COAL)
0!        case(FT_NUCLEAR)
0!        case(FT_OIL)
0!        case(FT_OTHER)
0!        case(FT_WATER)
0!        case(FT_WHOLESALE_PURCHASES)
0!        case(FT_WHOLESALE_SALES)
0!        do iSeg=1,nCCSegs
0!        else
0!        else if(Half_Point>Trans_Group_Points) then
0!        elseif((nBiU==2).and.(AggregateCost<MktPrice)) then
0!        end do
0!        end if
0!        endif
0!        iNode=TNofVar(iLbV) ! should be a Supply node
0!        if     (Half_Point<1) then ! enforce domain restrictions
0!        if((iMo==2).and.(mod(cYr,4)==0)) nDaCMo=29
0!        if(DirectPMs(index)==pm) THEN
0!        if(Half_Point==Start) exit ! no further resolution is possible
0!        if(IndirectPMs(index)==pm) then
0!        if(PrtDetail>2)
0!        if(RootFound .and. Distant) then
0!        if(SegsUsd(iSNod)>0)
0!        if(r4<5000.0) call ps(1,'ERROR: de minimal HeatConAv')
0!        if(r4<=0.0) cycle
0!        if(rOrg<0.0d0) then
0!        piDNod=-1
0!        piSNod=-1
0!        read(OtherField(43),*,err=439,end=439) r4 ! LinkLength in miles
0!        read(OtherField(45),*,err=439) LinkExpLim(iLink) ! in (MMCF/D)/year
0!        write(4,'(2i4,3(1x,a))') k,iOrg(k),
0!        write(4,'(3i6,e12.4)') jVar,zbColOfNze(jVar),zbRowOfNze(jVar),
0!        write(4,'(4i6,a)') i,n,i4Array(i),ThisItem,' II'
0!        write(4,'(i6,e12.4)') jVar,UbValu(jVar)
0!        write(4,'(i6,e12.4)') jVar,cVect(jVar)
0!        write(4,'(i6,i3,e12.4)') jVar,ReVec(jVar),bVect(jVar)
0!        write(9004,'(a,2g15.7)') ' ERROR:  attempt to divide',x,y
0!        write(DbgU,'(1x)')
0!        write(DbgU,'(2i4,4f12.2,a)') j,iNode, ! NodeQty(iNode),
0!        write(DbgU,'(3i4,f9.3,2(1x,a))') iSNod,jVar,nSNod,cVect(jVar),
0!        write(DbgU,'(3i7,1x,a,2f9.1,i5)') jVar,iLbV,iUbV,VarDesc(jVar)
0!        write(DbgU,'(3i7,2a)') jVar,iLbV,iUbV,' ~bV ',VarDesc(jVar)
0!        write(DbgU,'(a,20i6)') ' CCx',(nint(MineFunc(jSeg,0,iSNod)
0!        write(DbgU,'(i5,2f12.2,i3,i5)') iSNod,
0!        write(DbgU,'(i6,2f16.1,2a)') iLbV,LbValu(iLbV),
0!        xError=EndError/Slope
0!       ! After second read
0!       ! index number of the limiting inequality, according to Bloom's paper
0!       ((D**n-n)oP)*(D**n+1)oC = (D**n+1)oP - S(0,j,n-1,B(n,j)*((D**n-j)oP)*
0!       (D**1)oP = P*(D**1)oC.
0!       (D**2)oP = P*(D**2)oC +   ((D**1)oP)*(D**1)oC.
0!       (D**3)oP = P*(D**3)oC + 2*((D**1)oP)*(D**2)oC + ((D**2)oP)*(D**1)oC.
0!       (D**j+1)oC.  Since (D**0)oP = P, dividing through by P yields
0!       (D**n+1)oC = ((D**n+1)oP - S(0,j,n-1,B(n,j)*((D**n-j)oP)*(D**j+1)oC)/P.
0!       (and obscurely Hadley, Linear Programming, Addison-Wesley, p. 49)
0!       (i**-n)*(t,0,D**n)oC(t).  These cumulants are simply the numerator
0!       (t,0,D**n)oP(t) = (i**n)*(the expected value of ((g(x))**n)).  Thus, for
0!       (t,s,D**3)oP(t) = (P(t))*(t,s,D**3)oC(t) + 2*((t,s,D**1)oP(t))*(t,s,D**2)
0!       +      .or.((BlockPos(j)/=0).and.(xLoadPoint+Capacity(j)>BaseLoad))) exit
0!       14       => user terminated (N.A. to this subroutine)
0!       15 or 16 => bomb/crash/error
0!       169 10/10/01 174 11/1/01 175 11/26/01, 185 TMS 04/15/02, 185 GAT
0!       17 or 18 => successful execution
0!       194-196 06/12/03 197 07/17/03 200 10/23/03
0!       2 == DEFINED PURCHASE TO MEET NATIVE LOAD
0!       201-204 ADDED FOR NEW ENERGY PRODUCTS FILES TO PUT THE NUMBER AT 5
0!       205-210 ADDED FOR DB TO EXPAND THE NUMBER OF THERMAL UNIT FILES MSG 7/15/05
0!       211-213 ADDED FOR CAPEX RESULTS MSG 8/3/05
0!       3 == ECONOMY PURCHASE TO MEET NATIVE LOAD
0!       304-306 ADDED BY AT FOR CUSTOM LHC FILES
0!       307-312 ADDED BY DR.G FOR MRX RESOURCE RESULTS.
0!       313-316 ADDED BY DR.G FOR ADDITIONAL ESCALATION FILES
0!       317-320 ADDED BY DR.G FOR ADDITIONAL VARIABLE UNIT PARAMETER FILES
0!       321-331 ADDED BY GREG FOR WORLD LNG ANALYTIC
0!       332     ADDED BY GREG FOR ADVANCED PRICE FORMATION
0!       333     ADDED BY GREG FOR GAS PIPELINE MODELING. 070909.
0!       334     ADDED BY GREG FOR GAS STORAGE. 070909.
0!       362 CO2 PARAM ! 361 COAL CONTRACTS ! THERMAL RETROFIT = 360 ! RPS => 352 cores and machines => 351 LDG placeholder=> 350 U9 => 349, N5=>344, LNG 336-343 ! 072006 303  ! 050406 !93 OVL FILES gat 1/2/01 164 msg 4/16/01 168 7/16/01 MSG, 09/09/07 GAT
0!       4 == ECONOMY SALES WHICH INCREASE LOAD
0!       4/26/02, 187 tms 5/13/02 188 12/23/02 189 MSG 1/14/03 190-193 MSG MAY '03
0!       ALL RIGHTS RESERVED GLOBAL ENERGY DECISIONS
0!       BY THE APPROPRIATE EA's
0!       BinCoeff(j,k) is the combinatorial of j objects taken k at a time, k<=j
0!       BkOwns(jIWB) iff FctOwning(jIWB)==kIWBnk and VarState(jIWB)==BasicNKy
0!       COAL DEMAND CANADA 358
0!       COAL DEMAND US 357
0!       COAL LINKS 355
0!       COAL NODES 354
0!       COAL SUPPLY 356
0!       COAL_MODEL_POINTER_FILE      ! 372  Vector file for coal price model
0!       COMMON /GLOBAL_VARIABLES/ BASE_YEAR,YEAR,END_POINT,STUDY_PERIOD,
0!       Coal Model Generic Units operation data for generic units 375
0!       Coal Model SO2 & Scruber Info ! 373
0!       Coal Model Transportation Links for Generic Units
0!       CommitStgPair to balance with its corresponding return unit in aux equation
0!       DaysInPriorYearsSince1970(1)=366 ! for 1971
0!       Differentiating a second time yields (t,s,D**2)oP(t) = (P(t))*(t,s,D**2)
0!       ELSE
0!       ENDIF
0!       ENTRY TRANS_FORECAST_FILE(R_BASE_FILE_NAMES)
0!       FINDS THE COST CROSSING POINT FOR A CONTRACT AND A CL UNIT
0!       GLBonPointWithTMC = 1
0!       GQB GAS THERMAL 353
0!       IF(J1>365) THEN
0!       IF(OPT_RANGE_DUR(K2)>365) THEN
0!       INTEGER*2 BASE_YEAR,YEAR,END_POINT,STUDY_PERIOD,ENDYR,
0!       INTEGER*2 LAST_AVAILABLE_MONTHLY_YEAR
0!       InitSort=InitSort.and.(
0!       It remains to relate the cumulants of a variable's distribution to a set
0!       K(n+1,x) = M(n+1,x) - S(0,j,n-1,B(n,j)*M(n-j,x)*K(j+1,x)).  Thus a given
0!       Let the natural logarithm of P(t) be denoted by C(t), the nth
0!       Maclaurin series.  The concluding advantage is clear:
0!       NEW DECLARATIONS
0!       Next we divide through by (i**(n+1)) and evaluate at s = 0, understanding
0!       Next, we inductively develop the relationship between K(n,x) and M(n,x).
0!       Note that in both the general and the specific cases the orders of
0!       PARAMETER (LAST_AVAILABLE_MONTHLY_YEAR=5)
0!       Performing the multiplication using logarithms, we note that the
0!       Regs(1)=Z'0601' ! video BIOS function to scroll/clear a window
0!       Regs(2)=AttrByte
0!       Regs(3)=0 ! top row of window, leftmost column
0!       Regs(4)=(24 shl 8).or.79 ! end row of window, rightmost column
0!       Solving for the last term in the summation yields
0!       SplitCrit=0.0 ! .01*SmallArea ! SmallArea proved too conservative in ChkAreaOfBNK
0!       StdDev=dsqrt(dble(EqLCumul(2,0))) ! need EqLCumul to be real*8 for improvement
0!       SupcDisch=0.0 ! largest discharge cost
0!       THE DISPATCHING BLOCKS.  THIS SECTION IS PATTERNED AFTER THE
0!       The characteristic function is described in Theory of Probability
0!       The utility of the characteristic function is clear in the commonly
0!       This provides the opening advantage:  the result has been stated as
0!       UNITS_PASSED = RETURN_CL_FUEL_POINTERS(P_BTU_COST_POINTR,
0!       Using the notation that B(n,j) is the combinatorial (or binomial
0!       Using the rule for differentiating the logarithm of a function, we
0!       WRITE(6,1010) 'Error reading the above record.  Look for',
0!       WRITE(6,1010) trim(RECLN)
0!       a simple sum of the summands' like-order cumulants.  In practice, the
0!       abort optimization in case of pathological cycling
0!       above, if g(z) = z = x+y then the resultant P(t) is the expected value
0!       add dimension to area, due to dx = sigma*dz
0!       after 20040227:
0!       aggregate because they have 0 outage rates and are limited by capacity only;
0!       allocate(InputRate (nVr),stat=AS)
0!       an arithmetic manipulation of two (hypothetically) known functions.
0!       and the square-root of minus one by i, then P(t) is defined
0!       any motion within basis is linear, so all higher-order derivatives vanish
0!       applicable only to single-vector changes, since the prior inverse
0!       appropriate set of cumulants.  The logarithms of the characteristic
0!       are required to characterize the density and cumulative distribution
0!       are the numerator coefficients in the Maclaurin series expansion of P(t) in
0!       as a Maclaurin series expansion whose coefficients are given by the
0!       as a multiple of the density of the Normal function at z
0!       be denoted by M(n,x).  Next, consider the identity which results from
0!       beginning at the upper left, reduce ArrayOld to upper-triangular
0!       by Bernard Harris.  If the random variable is denoted by x, its
0!       by the expected value (over the distribution of x) of EXP(i*t*g(x)).
0!       cVect(iReq)=0.0 ! for infra-nominal
0!       call CkAllocSt('Gray',1)
0!       call CkAllocSt('IRat',0)
0!       call CkAllocSt('IRat',1)
0!       call CkAllocSt('VoDR',1)
0!       call CkAllocSt('jMgn',1)
0!       call HaltWith(0,0,'end of OBFS')
0!       call LimitFacetSize ! to preclude slowness due to 2**n probes in GrayOrder
0!       call cinitb(WouldBeZero,I4_nVar,.false.) ! enable all vars for basis entry
0!       call cinitw(BasisDIRow,I4_nVar,InvalidIndex)
0!       call cinitw(BasisKyVar,I4_nVar,InvalidIndex)
0!       call cinitw(FctOwning,I4_nVar,0) ! perhaps wasted effort re merit-order dispatch
0!       call cinitw(PrevBDIRow,I4_nVar,InvalidIndex)
0!       call cinitw(PrevBKyVar,I4_nVar,InvalidIndex)
0!       call cinitw(VarState,I4_nVar,BoundNB0) ! default implying var j is lower-bound
0!       call intrup(Regs,Z'10')
0!       character InfChr ! useful only if PrtDetail>0
0!       character*10 MethodSR
0!       character*10 StrRHS ! internal file useful only if PrtDetail>0
0!       character*11 Truncation
0!       character*12 MethodGJ
0!       character*2 Warning
0!       character*22 PostInv
0!       character*36 NoBNK
0!       character*4 ChrVS(LimUnknowns),ChrState(0:3)
0!       character*46 NoCompl
0!       character*47 FmtNoPhi1,FmtNoPhi2
0!       characterize the C(t) function, these M(n,x) characterize the P(t) function.
0!       coefficient) of n items taken j at a time, and that S(i,j,k,a) is
0!       coefficients in the Maclaurin series expansion of C(t) in powers of the
0!       commit the return vars and their discharge complements;
0!       complex variable (i*t).  Hence they characterize C(t) whenever the series
0!       concise statements.  Its development was largely dependent on the
0!       considered a linear operator, the resultant P(t) is the product of
0!       converges.
0!       covering jOrg, having PrevState unequal that of jOrg
0!       cumulants of x and y.  Thus, the distribution of the sum variable z
0!       data ChrState/' nB0',' nB1',' Key',' BnK'/
0!       data Factorial/1.,2.,6.,24./ ! the value of n-factorial
0!       data Hermite(0)/1./
0!       data LimitingIneq/18,19,0,24,25,27/
0!       deallocate(GrayOrder,stat=AS)
0!       deallocate(InputRate,stat=AS)
0!       deallocate(VarOfDispRank,stat=AS) ! moved to ObtainBasicFeasibleSolution
0!       deallocate(jMarginal,stat=AS) ! not when using save
0!       decision re k is not arbitrary, as a non-aux var cannot be BasicNKy
0!       denominator yields (t,s,D**1)oP(t) = (P(t))*(t,s,D**1)oC(t).
0!       density function by f(x), an arbitrary function of x by g(x),
0!       derivative at s of C(t) with respect to t by (t,s,D**n)oC(t), and the
0!       derivative.  (D**n+1)oP = S(0,j,n,B(n,j)*((D**n-j)oP)*(D**j+1)oC).
0!       do j=1,nVar
0!       do jIWB=1,nVar ! possibly faster than code above
0!       do while(kLvg<nActiveFacets)
0!       do while(x(nVar)<bAccum) ! offload the penultimate var by the UQ server
0!       each of the candidate discharge vars' x-values has been assigned within
0!       each var j in B0 appears in exactly one aux equation (j is aux slack);
0!       each var j in Bk appears in at least one aux equation, with the
0!       each var j in Bk gets properly placed in BasisDIRow and BNKinRow, even
0!       eliminate any facet if its KeyVar is singular, non-aux, and near LUB or GLB
0!       else
0!       employ a fictitious 'return' plant to offset the assumption of CF=1
0!       encountered problem, called convolution, of describing the distribution of
0!       end do
0!       end do ! iDNod
0!       equivalence (z,Hermite(1)),(c1,GammaNorm(1)),(c2,GammaNorm(2))
0!       exclude BindSet from union (k1) of 2 facets, placing it into k0
0!       expected value of x**n (i.e., the nth-order non-central moment of x)
0!       expressing the characteristic function as a Maclaurin series:
0!       extract abnormal modes from EqLDn0
0!       f4=Annual_Quantity_Limit(iRout) ! currently unused here
0!       for B0 must be completed first (reserving places via BNKinRow) before
0!       form and the new vector NewCol to be inserted in the kth column of
0!       functions of the summands may then by added term-by-term in the
0!       functions, using the Edgeworth expansion routine.
0!       functions.  Each of the three functions' logarithms may be expressed
0!       g(x) = x we have an expression similar in form to that for cumulants
0!       generic cleanup appropriate in all cases:
0!       get d(j), the 1st derivative of x(j) with respect to x(jOrdEnt or jKey);
0!       given above:  M(n,x) = (i**-n)*(t,0,D**n)oP(t).  These non-central moments
0!       have that (t,s,D**1)oC(t) = ((t,s,D**1)oP(t))/P(t).  Clearing the
0!       having now an upper triangular ArrayOld, diagonalize & normalize it
0!       iRow=24
0!       if((k==2).and.(nAux>0)) call HaltWith(kLvg,kLp1,
0!       if(.not.Aligned) call HaltWith(jNKyAAR,nAux,Unplaceable)
0!       if(Optimal) write(PrtUni,'(1x,a,5i3,l2)')'CDD end-critical vars ',
0!       if(iPlnt<=0) cycle ! after 20110311, unreachable plants have 0 Demand
0!       if(kInf>1) call CopyEqLoad0(.false.) ! save EqLDur including prior base-loaded vars' outages
0!       if(kInf>1) call CopyEqLoad0(.true.) ! restore EqLDur including prior base-loaded vars' outages
0!       if(nAux>0) call cinitw(BNKinRow,I4_nAux,InvalidIndex)
0!       implicitly zero and need not be covered in the jFTA-loops below.
0!       impose the most-binding of potentially active constraints:
0!       inclusive, we generalize the above expressions to the (n+1)th-order
0!       increment.  Let z be the sum variable, and x and y be the signed
0!       initialize y to the complementary cumulative Normal function at z,
0!       insisting on one which complements var jNKyToBe (if not AnyConstr)
0!       integer (kind=2) :: nVr ! possibly larger than nVar, which may not yet be known
0!       integer*2 LimitingIneq(0:2,0:1)
0!       integer*2 Order,jm1
0!       integer*2 iBegPt,iEndPt
0!       integer*2 iBlk,iMult,PrevIter !,NBLOK2,UNIT(*),BLKNO(*) (previous declarations suffice)
0!       integer*2 iPass
0!       integer*2 jASM,nASM
0!       integer*2 jCIS,NBaState
0!       integer*2 jCU,kCU,UnplacedBNK
0!       integer*2 jFTA,kFTA
0!       integer*2 jKeyOE,kOE,kOfs
0!       integer*2 jLoadedLast,kPrior0,kPrior1,iMSb,iMarginal,nMarginal,
0!       integer*2 jNKyAAR,jNBaAAR,kAAR
0!       integer*2 jOrg,jCompl,PrStjOrg
0!       integer*2 jPrev,PrevKey,ThisKey,nDifferent,RowChanged
0!       integer*2 jPrevOE ! used to break pathological cycling
0!       integer*2 jPt,jBFS,nStgVar,iLastRetVoDR,kFirm
0!       integer*2 jSC
0!       integer*2 jSkip,jBnk
0!       integer*2 jUnionKey
0!       integer*2 k0,k1
0!       integer*2 k2
0!       integer*2 kFctFR
0!       integer*2 kFctNKAI,jNKyToBe,kNKyToBe
0!       integer*2 kFctSS,jAlt,jNBa,jNKy
0!       integer*2 kIWBnk,jIWB
0!       integer*2 kLFS,nVarsInFct,nNB1sInFct,nVarsIFLim,BindSetLim,
0!       integer*2 kMI,nMI
0!       integer*2 nRows,PivotRow
0!       integer*2 nVrAux ! possibly larger than nVar, which may not yet be known
0!       integer*4 HalfSize,GrayOrder(:),HoldOrder(:), ! temporary storage
0!       integer*4 I4_nBinRow,I4_n
0!       is implicitly characterized by a set of cumulants, each of which is
0!       is simply the sum of the logarithms of the summands' characteristic
0!       items assumed to be known by the caller of MinimizeCost
0!       judged useless after 20070827
0!       kLvg=kInf
0!       local routines which need not be known by FindOptimalCost's caller
0!       logarithm C(t) of the sum variable's characteristic function P(t)
0!       logarithmic equivalent C(t) are of no interest here; only the cumulants
0!       logical*1 Aligned
0!       logical*1 AlignedFR
0!       logical*1 AlignedSS
0!       logical*1 AnyConstr
0!       logical*1 Errant
0!       logical*1 FirstItem
0!       logical*1 FromHold0
0!       logical*1 InvObsolete
0!       logical*1 Monotonic
0!       logical*1 Nearly0
0!       logical*1 NegativeArea
0!       logical*1 OrdVarFinalFct,FctVoidOfDj
0!       logical*1 Partition
0!       logical*1 PreInv,FullInv
0!       logical*1 SameSubset
0!       logical*1 Singular
0!       match that implied by the coefficients of the AColumn matrix
0!       mathematical insight provided by ODOE Senior Analyst Tom Wilson.
0!       multiplicity>1 for overlapping-group constraints; to guarantee that
0!       must be appropriate to the basis just before the vector insertion;
0!       nVarsIFLim=max0(6,nStgEqn+1) ! limit on # vars in 1 facet; no need for more
0!       notationally messy, the above formula is easily programmed in a few
0!       nth-order cumulant by K(n,x).  Then K(n,x) is defined by K(n,x) =
0!       oC(t) + ((t,s,D**1)oP(t))*(t,s,D**1)oC(t).  A third time yields
0!       oC(t) + ((t,s,D**2)oP(t))*(t,s,D**1)oC(t).   Using notation without
0!       of EXP(i*t*(x+y)).  Since the exponential of the sum is the product
0!       of measurable quantities, i.e., to the variable's statistics.  Let the
0!       of the individual exponential terms, and since expectation may be
0!       order of cumulant is just that same order non-central moment less a
0!       parameter constants
0!       parameter(FmtNoPhi1='(1x,2i3,a,f8.2 ,f12.5,f9.3,f19.2,f9.3,f10.6)',
0!       parameter(MethodGJ='Gauss-Jordan',
0!       parameter(NoBNK='facet contains no basic non-key var')
0!       parameter(NoCompl='var has no aux complement in state unequal to')
0!       perturb cMod in attempt to make identical blocks contiguous after Sort:
0!       powers of the complex variable (i*t).  Just as the set of K(n,x) serves to
0!       real*4 AColumnSC(nAux,*),AccumColumnSC(*)
0!       real*4 Alpha
0!       real*4 AvgDurat(LimUnknowns),PrevAvg,Avg2ndP,PrevCap,Cap2ndP
0!       real*4 CapIncr
0!       real*4 HeldElement,PivotElement,Factor,ArrayOrg(nRows,nRows),
0!       real*4 InnerProduct,CallersQ,ENERGY(2,*), ! ,MWBLOK(*),MAINTENANCE_RATE(*)
0!       real*4 OptDual
0!       real*4 PrevCapac,CapIncr,AccumArea,AccumXInSet,AccumDj
0!       real*4 Scalar,RowVect(*),v(*)
0!       real*4 StdDev,Density,c1,c2,z,xLod,yPrb,ySum,GaussianDen,CCNFmd,
0!       real*4 bAccum,xAHold,xjHold,DisCapac,ChgQ,DisQ,SumStgRHS,
0!       real*4 kDotProd,RowPrimary(nMI,nMI),NewCol(nMI)
0!       real*4 sCP
0!       real*4 xOrg,xWidth,xDomain(0:1),xGrid(0:1),yGrid(0:1)
0!       real*8 MinArea
0!       real*8 PrevCapac,AccumArea,AccumXInSet,AccumDj
0!       real*8 ThisUQ,ChgUQ
0!       relate the coefficients HPcoef of the Hermite polynomials to
0!       release locally allocated memory:
0!       return the index of a basic non-key var in facet kFctNKAI,
0!       return the index of the first non-jOrg var in one of the aux constraints
0!       return the index of the first var (not jSkip) that BkOwns
0!       returns the density of the standard Normal distribution
0!       routine to generate the binomial coefficients:  combinatorial j,k
0!       sacrifice significant figures in output to gain fixed field-width
0!       shape and numerical value of the characteristic function P(t) and its
0!       signed variables, one being the accumulator and the other the
0!       since var j has value x(j) with probability 1, this block is dubious:
0!       source:  Best & Ritter, Linear Programming, Prentice-Hall, p. 23
0!       subtract column jSC of AColumnSC from AccumColumnSC
0!       sum of random variables can be cast as a repeated summation of two
0!       sum of terms in lower-order non-central moments and cumulants.  While
0!       summand variables.  By the definition of the characteristic function
0!       that P(0) is unity.  This yields the formula for the (n+1)th cumulant:
0!       the GammaNorm parameters of the distribution; for jFTA<2, HPcoef(jFTA) are
0!       the above three equations are briefly restated for clarity.
0!       the characteristic function of g(x) by P(t),
0!       the derivatives on the right-hand side sum to the order on the left.
0!       the following block of code is dubious, needs more thought:
0!       the individual characteristic functions for x and y.
0!       the inverse of an nxn matrix given its former inverse in RowPrimary
0!       the loop for Bk is entered; the order implied in associating var j
0!       the nth-order cumulant of z is simply the sum of the nth-order
0!       the original matrix before inversion; note that this technique is
0!       the sum (or difference) of two random variables.  Any weighted
0!       the sum of items a indexed by j over the range from i through k
0!       the transpose of the inverse is the inverse of the transpose
0!       the understood 't' and 's' parameters makes the pattern more evident;
0!       transform the higher-order cumulants into non-dimensional GammaNorm
0!       transform the lowest-order moments into distribution cumulants
0!       using O(n^2) operations versus O(n^3) for a full inversion, compute
0!       using prime coefficients to make non-identical matches unlikely,
0!       var names necessarily differ from caller's
0!       variables used only by CopyEqLoad:
0!       variables used only by ReviseBasisVectors and those it calls:
0!       variables used only by entry-points below, in order of use:
0!       when it preceeds a j in B0 that the same AuxCovers, the entire loop
0!       with column i of DColumn (and therefore with row i of DInvRow) must
0!       x(j)=x(j)+d(j)*InfRHS ! call AddScalarMult instead of looping
0!       y returns the curve ordinate at the abscissa x
0!       z=0.5/EqLCumul(2,0)
0!      !      xLoadPoint=xLoadPoint+Capacity(j)*x(j)/(Duration*Capacity(j))
0!      ! After first array read
0!      ! This IF statement not in "original" source.
0!      ! second array read
0!      !ErrorsTrapped=1 ! to preclude executing the optimization loop
0!      !real*4 PrevCapac,CapIncr,AccumArea,AccumXInSet,AccumDj
0!      +                                        FUEL_PRICE_OL(FILE_NUMBER)
0!      +               LAST_FUEL_PRICE_OL_TYPE(FILE_NUMBER) == 'OL')  THEN
0!      +              ' a "," in a character name.'
0!      +  Efficiency,InfEfficiency
0!      +  N(9,z)*G1*G1*G2=G1*G1*G1*G131104].
0!      +  UnservedQ,xDynStg,xAccum
0!      +  nAux,nVar,nIter,jPrevOE,jOrdEnt,OrdVarEntering
0!      + [N(3,z)*G2=G1*G172]
0!      + [N(5,z)*G4=(G2*G21152 + G1*G3/720)
0!      - [N(2,z)*G1/6]
0!      - [N(4,z)*G3=G1*G2144 + N(8,z)*G1*G1*G1/1296]
0!      ADDED MIDAS GOLD 7/24/91
0!      AFTER_EL_MARGINAL_COSTS = SORT_EL_MARGINAL_COSTS(FRCLOD,
0!      ALLOCATABLE :: ASSET_CLASS_NUM,ASSET_CLASS_VECTOR
0!      ALLOCATABLE :: HYDRO_ASSET_CLASS_POINTER
0!      ALLOCATABLE::  FIRST_CALL_TO_ENDPOINT,
0!      ALLOCATE(ANNUAL_AMOUNT(0:MAX_SIMULATION_YEARS),STAT=ERROR)
0!      ALLOCATE(FUEL_PRICE(0:FUEL_PRICE_YEARS),STAT=ERROR)
0!      ALLOCATE(HOURLY_HYDRO(LOAD_HOURS_IN_PERIOD,2))
0!      AND INCUR THE ONE START-UP COST.
0!      AND INCUR THE START-UP COST OF ALL STARTS.
0!      ARG_ISTART = CAL_ENRGY_ISTART
0!      ARG_ISTOP = ISTOP
0!      Alt_Compliance_Price R4
0!      AmortizeUE= AmortizeUEparm
0!      Annual_Requirement(30) R4x30
0!      BASE_FILE_NAME = REGIONAL_OUTAGES_FILE()
0!      BASE_FILE_NAME = REGIONAL_PARAMETER_FILE()
0!      BegError=R_Margin_Cost-System_Marginal_Cost(Start,
0!      CALL CLOSE_FUEL_PRICE_FILE
0!      CALL CLOSE_SERVICE_TRANSACTIONS
0!      CALL DEALLOCATE_SUM_CLASS_PEAKS
0!      CALL EL_MAKEBIN
0!      CALL FINDFRST(SEARCH_FILE,FILE_NAME)
0!      CALL FREE_INIT_ASSET_CLASS_INFO_ARRAYS()
0!      CALL GET_CHRONO_HOUR_DISTRIBUTION(R_ISEAS,SORT_POS)
0!      CALL GET_TARGET_TRANS_GROUP(TARGET_TRANS_GROUP)
0!      CALL GET_TRANS_LOAD_PROB( TRANS_DEMAND,
0!      CALL INIT_LAST_REFERENCE_LOADS ! MOVED ABOVE MDSLDCAP
0!      CALL LF_MAKEBIN
0!      CALL LG_MAKEBIN
0!      CALL LOCATE(15,9)
0!      CALL LOCATE(16,9)
0!      CALL LOCATE(25,63)
0!      CALL LS_MAKEBIN
0!      CALL MG_LOCATE_WRITE(12,26,
0!      CALL MG_LOCATE_WRITE(16,30,SCREEN_OUTPUT,0,0)
0!      CALL MOVBYTES(CURRENT_UNIT_UTIL,0,OUTAGE_UNIT_UTIL,0,
0!      CALL NF_MAKEBIN
0!      CALL OPEN_FUEL_PRICE_FILE(10,LOAD_FUEL_PRICES)
0!      CALL PUT_PrtDetail(PrtDetail)
0!      CALL REGIONAL_OUTAGES_MAKEBIN
0!      CALL REGIONAL_PARAMETER_MAKEBIN
0!      CALL RETURN_PASS_THROUGH_VALUES(VARIABLE_VALUE(464))
0!      CALL UPDATE_REFERENCE_LOADS
0!      CCNFMD=t*(0.4361836+t*(-0.1201676+t*0.9372980))
0!      CHARACTER (LEN=256) :: GET_SCENAME
0!      CHARACTER (LEN=5) :: ZONE_A_GAMS_ID,
0!      CHARACTER*1024 RECLN
0!      CHARACTER*2 LOAD_FILE_CHAR_EXT
0!      CHARACTER*3, SAVE ::
0!      CHARACTER*50 COMMENT
0!      CHARACTER*9 CL_MONTH_NAME(13)
0!      CHARACTER*9 CL_MONTH_NAME(14)
0!      CLOSE (7010)
0!      CLOSE(MON_CL_TRANS_NO,IOSTAT=IOS) ! CL TRANS REPORT
0!      CL_RESOURCES =  INDEX(RESOURCE_FILE_TYPE,'CL') /= 0
0!      COAL_DEMAND_BASE_NAME = COAL_DEMAND_FORECAST_FILE()
0!      COMMON/FRC1/ FORECAST_LOADS
0!      COMMON/PROCSAVE/ENERGY(MAX_SIMULATION_YEARS),
0!      Comment C50
0!      ConsMtxOfs(ConsMtSize)=OneBasedOfs
0!      DATA_BASES = 0.
0!      DEALLOCATE(ANNUAL_AMOUNT,STAT=ERROR)
0!      DEALLOCATE(BLOCK_DISP_COST, !!! 3/7/95. GAT. !!!
0!      DEALLOCATE(PREVIOUS_ANNUAL_AMOUNT,
0!      DO CLASS = 1, SYSTEM_CLASS_NUM
0!      DO HOUR_IN_THE_SEASON = 1, LOAD_HOURS_IN_PERIOD
0!      DO HR = HOURS,HOURS+HOURS_INCREMENT-1
0!      DO I = 1, CONTRACTS
0!      DO I = 1, NUNITS
0!      DO I = 2, 2 ! INITIALLY, ONLY DB = 2 IS ACTIVE
0!      DO MO = 1, 12
0!      DO TRANS = 1, LOCAL_ACTIVE_TRANSACTIONS
0!      DO TRANS_GROUP = 1, NUM_OF_TRANS_CLASSES
0!      ELSE
0!      ELSEIF(     TRANS_EL_GENERATION  > 0.) THEN
0!      END
0!      ENDDO
0!      ENDIF
0!      ENTRY CS_MAKEOVL(OVERLAY_FAMILY_NAME)
0!      ENTRY DSM_FIN
0!      ENTRY DSM_UPDATE_ANNUAL_CAPACITIES(R_YEAR)
0!      ENTRY FC_MAKEOVL(OVERLAY_FAMILY_NAME,R_DUMMY_1,R_DUMMY_2)
0!      ENTRY GET_COALACTION_GROUP_NAME(R_COAL_GROUP)  ! CHARACTER
0!      ENTRY GET_DUKE_RESERVE_CAPACITY(R_MONTHLY_ECONOMY_BOUGHT)
0!      ENTRY GET_GASACTION_GROUP_NAME(R_GAS_GROUP)  ! CHARACTER
0!      ENTRY GET_HOURLY_PRICE_NAME(R_COAL_GROUP) ! CHARACTER
0!      ENTRY GET_HOURLY_PRICE_NAME(R_GAS_GROUP) ! CHARACTER
0!      ENTRY GET_LAGGED_HH_PRICE
0!      ENTRY GET_MONTHLY_DUKE_RESERVE_ENERGY(R_MONTHLY_ECONOMY_BOUGHT)
0!      ENTRY GET_MONTHLY_REGIONAL_OUTAGE(
0!      ENTRY GET_PA_RESOURCE_CAPACITY(R_PA_FIRM_PURCHASE)
0!      ENTRY GET_RESOURCE_ID_TO_UNIT(R_ID,R_NUMBER_OF_RESOURCE_ID)
0!      ENTRY GN_MAKEOVL(OVERLAY_FAMILY_NAME)
0!      ENTRY GS_MAKEOVL(OVERLAY_FAMILY_NAME)
0!      ENTRY GetGasLinkBaseName(R_TEMP_NAME)
0!      ENTRY GregGetDaysDemand(R_ErrOrEnd,R_NodeCap,R_MAX_NODES)
0!      ENTRY MAP_MONTH(UTILITY,R_MONTH)
0!      ENTRY PERIOD(BEGIN_END,SEASON)
0!      ENTRY REDUCE_PATH_CAPACITY(R_HOUR,R_MONTH,
0!      ENTRY RESET_SCENARIO_MAKER_OL
0!      ENTRY RETURN_ISTART_ISTOP(ARG_ISTART,ARG_ISTOP)
0!      ENTRY RETURN_PASS_THOURGH_VALUES(R_PASS_THOURGH_VALUES)
0!      ENTRY RR_FILE_USED_THIS_ENDPOINT(R_RR_FILE_USED)
0!      ENTRY RUN_DATE
0!      ENTRY RUN_TIME
0!      ENVIRONMENTAL VARIABLES
0!      EQUIVALENCE (FILE_SIZE, BYTE_SIZE)
0!      ERROR = ISERROR()
0!      EndError=R_Margin_Cost-System_Marginal_Cost(Half_Point,
0!      FILE_NAME = trim(PRB_FILE_DIRECTORY())//"PRB"//
0!      FILE_NAME = trim(R_MULTI_AREA_NAME)//
0!      GAS_DEMAND_BASE_NAME = GAS_DEMAND_FORECAST_FILE()
0!      GET_ESC_NRG_PRICE=.FALSE.
0!      GET_ESC_NRG_PRICE=.TRUE.
0!      GRX_STORAGE_PATTERN = 0.0 ! 042217. I BELIEVE THIS IS CORRECT.
0!      HOURLY_HYDRO = REAL8_ZERO
0!      Half_Point=Trans_Group_Points/2 ! arbitrarily chosen, distinct from Start
0!      HrlyCapUsed=0.0e0
0!      I = 2
0!      IF( (LOAD_ADJUSTER > 1.000001 .OR. LOAD_ADJUSTER < .999999) .AND.
0!      IF(.NOT. (INDEX(LD_FIN_FIL(),'NONE') == 0)) RETURN
0!      IF(.NOT. SAVE_MONTHLY_PRODUCTS_STATUS) RETURN
0!      IF(ALLOCATED(HOURLY_HYDRO)) DEALLOCATE(HOURLY_HYDRO)
0!      IF(EL_GRP /= -99) THEN
0!      IF(ERROR > 0) THEN
0!      IF(FILE_EXISTS) THEN
0!      IF(HOUR_MARGINAL_AFTER_ENRG)
0!      IF(HYBRID_BATTERY(IND) > 0 .AND.
0!      IF(LOCAL_ACTIVE_TRANSACTIONS == 0) RETURN
0!      IF(MARKET_PRICE_SCALAR < 0.) THEN
0!      IF(MONTHLY_DSM_REPORT_SWITCH .AND. .NOT. TESTING_PLAN)
0!      IF(NUM_MONTHLY_TRANSACTIONS <= 0) THEN
0!      IF(NUM_TRANS < NUM_MONTHLY_TRANSACTIONS) THEN
0!      IF(PRICE_TYPE(R_TRANS) /= 'U') THEN
0!      IF(PRINT_REPORT .AND. FIRST_CL_WRITE) FIRST_CL_WRITE = .FALSE.
0!      IF(PRINT_REPORT .AND. FIRST_CT_WRITE) FIRST_CT_WRITE = .FALSE.
0!      IF(R_HYBRID_VALUE > 0) THEN
0!      IF(R_YEAR == 2024 .AND. R_MONTH == 2 .AND. 
0!      IF(SIMSTATUS_REPORT) THEN
0!      IF(START_MONTH == 1) THEN ! START_MONTH NOT SET
0!      IF(TESTING_PLAN) RETURN ! 3/9/98. GAT. TAKEN OUT FOR LAMBETH.
0!      IF(UNIT_COMMITMENT_LOGIC) THEN
0!      IF(YEAR == 1) POS_OF_HOURLY_FILE = -9999
0!      IF(YEARS_TO_RUN == MAX_SIMULATION_YEARS) THEN
0!      INCLUDE 'SPINLIB.MON'
0!      IND = R_TRANS ! SINGLE STORAGE EVALUATION
0!      INTEGER (kind=4) ::   BYTE_SIZE
0!      INTEGER IOS
0!      INTEGER*2   AFTER,U_AFTER,B_AFTER,
0!      INTEGER*2 ASSET_CLASS_NUM(:),ASSET_CLASS_VECTOR(:)
0!      INTEGER*2 EL_RESOURCE_ID
0!      INTEGER*2 RM_ASSET_CLASS_ID
0!      INTEGER*2, POINTER, DIMENSION(:) :: ValueArray
0!      INTEGER*2, SAVE ::
0!      Initial_Bank R4
0!      LAST_TG = 0
0!      LOCAL_ACTIVE_TRANSACTIONS = NUM_STORAGE(R_TRANS_GROUP)
0!      LOGICAL (KIND=4) :: READ_BASIN_SUPPLY_SO2_DATA,
0!      LOGICAL*1 INITIALIZE_CLASS_SPLITS
0!      LREC = 248 + 8 * (MAX_SIMULATION_YEARS+1)
0!      MARGINAL_FUEL_FREQUENCY = 0.0
0!      MARKET_PRICE_NAME = trim(R_MULTI_AREA_NAME)//
0!      MARKET_PRICE_SCALAR = GET_MARKET_PRICE_SCALAR()
0!      MAX_FO_PER_YEAR =MAX_FOPM_PARM*12 ! until caller sends another spec
0!      MAX_INTERVALS = NINT(MAX_ARRAY_SIZE)
0!      MAX_TRANS_GROUPS = MAX(MAX_TRANS_LOADS,MAX_ACTIVE_GROUPS)
0!      MODULE LMP_InputVariables *** from LMPModules.F95
0!      MONTHLY_TRANS_BASE(R_TRANS_GROUP) = LODDUR(1)
0!      MONTHLY_TRANS_LOAD_HYDRO_MW(R_TRANS_GROUP) = TRANS_EL_CAPACITY
0!      MONTHLY_TRANS_LOAD_HYDRO_MWH(R_TRANS_GROUP) = TRANS_EL_GENERATION
0!      MONTHLY_TRANS_LOAD_MWH(R_TRANS_GROUP) =
0!      MONTHLY_TRANS_PEAK(R_TRANS_GROUP) = PEAK_AFTER_EL
0!      MOVE-ON TO THE NEXT LOADING TYPE
0!      Maximum_Bank R4
0!      MineFunc(1:nCCSegs,0,1:nSNod)=Supply_Production_By_Year
0!      MineFunc(1:nCCSegs,1,1:nSNod)=Supply_Cost_By_Year
0!      MineMCst=0.0
0!      NUM_MONTHLY_TRANSACTIONS = GET_NUM_MONTHLY_TRANSACTIONS()
0!      NUM_TRANS = GET_NUM_ANNUAL_TRANSACTIONS()
0!      NumStrikes=I2_ZERO
0!      OPC_LOSS_MULT = 1.0387139 ! 1/(1-.037271)
0!      OUTAGE_BLOCK_INDEX = 0 ! MOVED DOWN
0!      OUTAGE_BLOCK_N_DB = 0.
0!      OUTAGE_BLOCK_REVERSE_INDEX = 0.
0!      OUTAGE_UNIT_UTIL = 0.
0!      OVERLAY_INPUT_RECORDS = 0.
0!      OVERLAY_TRANSACTIONS_IN_FILE = IREC
0!      PARAMETER (MAX_TRANS_WITHIN_HOUR=100) ! 11/2/99.
0!      PEAK_AFTER_EL    =dble(PEAK_AFTER_EL4)
0!      PEAK_AFTER_EL = LODDUR(R_LDCPTS_AFTER_EL) ! THIS IS A TEST.
0!      PriceSoLR=amax1(15.0,PriceSoLR*2.0) ! sufficient to alter usage per GT 20080606
0!      Program_Active C3
0!      Program_Name C50
0!      Program_Number I4
0!      PrtDetail=0 ! for normal operation of the model by a customer
0!      RAN OUT OF CUMULATIVE UNITS
0!      RATIOS_FOUND = READ_ICAP_FILE()
0!      REAL  SUM_ANNUAL_REPORT_ITEMS(13,7)
0!      REAL (KIND=4), SAVE :: MM_DATABASE(0:12,
0!      REAL (KIND=4), SAVE :: MM_MEMBER_DATABASE(0:12,
0!      REAL FUEL_PRICE(0:30)
0!      REAL LEVELIZING_RESERVE_MARGIN,
0!      REAL*4    R_MONTHLY_GROUP_REPORT(0:12,0:R_MAX_MONTHLY_GROUPS,
0!      REAL*4 ESCALATION_RATES(-1:MAX_ESCALATION_VECTRS)
0!      REAL*4 REVENUES(:),
0!      REAL*8 FUELCOST,TENRG,TMMBTUS,ENERGY,VARCOST,
0!      RECURSIVE FUNCTION READ_TRANS_PATH_DATA(R_MONTH,R_YEAR)
0!      RETURN
0!      REWIND(8800) remove 9/12/01 msg LF95 doesn't like this for a direct file
0!      RUN_TRANSACT = YES_RUN_TRANSACT()
0!      R_ANNUAL_FIXED_COST = 0.0
0!      SAVE        MAX_HYDRO_CLASS_ID_NUM
0!      SAVE      DAY_TYPE_DATA
0!      SAVE  CLASS_PRICE,LT_CLASS_ELASTICITY,ST_CLASS_ELASTICITY,
0!      SAVE  OBS,
0!      SAVE ASSET_CLASS_NUM,ASSET_CLASS_VECTOR
0!      SAVE CLASS_MWH,
0!      SAVE CONSTRAINT_ID,
0!      SAVE CONSTRAINT_PERCENT,
0!      SAVE DEMAND_ALLOCATOR,ENERGY_ALLOCATOR,
0!      SAVE ISTOP,CAL_ENRGY_ISTART
0!      SAVE LAST_REFERENCE_LOADS
0!      SAVE LODDUR,LPROB,CUM_HOURS,CUM_REVENUE
0!      SAVE MARKET_DURATION_NO,MARKET_DURATION_REC
0!      SAVE NUM_TRANS_GROUPS,
0!      SAVE OPERATION_TYPE,OPERATION_INFO,QUE_STACK_POINTR,
0!      SAVE PARTIAL_OBJFUNC_DES,GROUP_STRING,
0!      SAVE PATH_FILE_EXISTS
0!      SAVE POS_OF_HOURLY_FILE
0!      SAVE SELLER_TRANSACTION_GROUP,
0!      SAVE USER_DURATION_NO,USER_DURATION_REC
0!      SAVE_BASE = BASE
0!      SAVE_MAX_DATA_BASES = MAX_DATA_BASES
0!      SAVE_PEAK = PEAK
0!      SCREEN_MESSAGES = 'Bottom of Cal Marginal Cost'
0!      SCREEN_MESSAGES = 'Top of Commit Inside Margn_obj'
0!      SEARCH_FILE = trim(BASE_FILE_DIRECTORY)//'??B*.DAT'
0!      SEAS_HOURS = FLOAT(HOURS_INCREMENT) MOVED UP. 9/10/97. GAT.
0!      SO2RateDN=-1.0
0!      SO2RateIc=-1.0
0!      STORE_CS_SCARCITY_INFO
0!      STORE_GN_SCARCITY_INFO
0!      STORE_GS_SCARCITY_INFO
0!      SUBROUTINE COAL_PRICING_ROUTINE
0!      SUBROUTINE GAS_PRICING_ROUTINE
0!      Slope=(EndError-BegError)/float(Half_Point-Start)
0!      Start     =Trans_Group_Points/4 ! arbitrarily chosen
0!      StrikeMMHHH=I2_ZERO
0!      TEMP_L = READ_TRANS_PATH_DATA(ISEAS,CURRENT_YEAR)
0!      TRANS_BLOCK_CAPACITY = 0.
0!      TRANS_EL_CAPACITY=dble(TRANS_EL_CAPACITY4)
0!      TRANS_HYDRO = YES_RUN_MULTIAREA_TRANSACT() .AND. TF_FILE_EXISTS
0!      TRANS_POSITION = GET_TRANS_GROUP_POSITION(TARGET_TRANS_GROUP)
0!      Total Record Length = 239
0!      USE COAL_cnw_FILES_READ_INPUT
0!      USE FOR ONLY ONE CONSECTIVE START
0!      USE ONLY IN POSITIVE HOURS
0!      USE SIZECOM
0!      USE conversion_routines
0!      USE_EXTERNAL_HOURLY_LOADS = .TRUE.
0!      VARIABLE_VALUE(457)=CUSTOMER_DEPOSITS_BAL2
0!      VARIABLE_VALUE(458)=CUSTOMER_DEPOSITS_BAL2-CUSTOMER_DEPOSITS_BAL1
0!      WRITE(6,"('&',A)") 'Input file overhead'
0!      WRITE(6,"('&',A,I4,A)") 'Error reading variable asset '//
0!      WRITE(6,"('&Transaction Processing')")
0!      WRITE(6,1010) 'Error reading the above record.  Look for',
0!      WRITE(6,1010) trim(RECLN)
0!      WRITE(6,1010) trim(RECLN),IREC
0!      WRITE(END_POINT_STR,'(I4)') END_POINT
0!      YES_HYDRO_HOURLY_REPORTS = HYDRO_HOURLY_REPORTS()
0!      above caused non-monotonicity in the vars' average CF, is not defensible
0!      call AllocateArray(UbVOrg,nUbV)
0!      call DumpCNWOutputsModule(nBasn,nSNod,nDNod,DbgU,DNodQty)
0!      call OpenGNWInpFiles()
0!      call ReportGNWEconomicExpansion(
0!      call WriteStrAt(1,1,s)
0!      call cmove(NodeCOut,PrevCOut,VectSizeByte)
0!      call cmove(PrevCOut,NodeCOut,VectSizeByte)
0!      call cmove(PrevProb,NodeProb,VectSizeByte) ! p-multiplied nodes
0!      call flush(RptU)
0!      character*12 OtherField(3:(113+2*10))
0!      close(DbgU)
0!      do ! search for zero error w.r.t. target R_Margin_Cost
0!      do I=1,CONVOLUTION_POINTS
0!      do iLbV=1,nLbV
0!      do iLink=1,nLink
0!      do iNode=1,mNode
0!      do iSNod=1,nSNod
0!      do jVar=1,ConsMtSize
0!      do jVar=1,mReq
0!      do jVar=1,nUbV
0!      do jVar=1,nVar
0!      do k=1,nItems
0!      dubious  KeyVar(kBind)=jNewlyNKy
0!      dubious  VarState(KeyVar(kBind))=BoundNB0 ! without casting into nActiveFacets
0!      enable next 2 lines when DbgU/9004/ is used above
0!      end
0!      end do
0!      entry DailyOperMoPumpedStorage(
0!      if(CallDepth>48) then
0!      if(i>n) call ps(1,'specified index not found on list (IdxInI4)')
0!      if(iReq>0) write(DbgU,'(2i6,a)') iReq,mReq,ReqDesc(iReq)
0!      if(jVar>0) write(DbgU,'(2i7,1x,a)') jVar,nVar,VarDesc(jVar)
0!      if(write_PCX_input) then
0!      nDNUB=nDNod*MaxExpansionFactor
0!      real*4 function CCNFMD(z)
0!      real*4 z,t
0!      return
0!      stop
0!      t=1.0/(1.0+0.33267*z)
0!      write(*     ,'(1x,a)') trim(s)
0!      write(*,'(1x,a)',advance='yes') trim(Message)
0!      write(4,'(i6,a)') ConsMtSize,' Col,Row,Nze'
0!      write(4,'(i6,a)') mReq,' re b'
0!      write(4,'(i6,a)') nUbV,' UB'
0!      write(4,'(i6,a)') nVar,' cost'
0!      write(DbgU,'(/i6,a)') nRout,' Plant_EV_ID(iRout):'
0!      write(DbgU,'(/i7,a/(20i3))') nLink,' post-pruning LkEndUsd():',
0!      write(DbgU,'(2L2,a)') allocated(SNodName),allocated(DNodName),
0!      write(DbgU,'(2a)') ' iNd mNd IDi LFr LTo LAt Dir',
0!      write(DbgU,'(2i6,a)') nCCSegs,nSNod,' dim of MF in AllocNA'
0!      write(DbgU,'(3a)') ' --- --- --- --- --- --- ---',
0!      write(DbgU,'(3i7,1x,a)') jVar,iUbV,nUbV,VarDesc(jVar)
0!      write(DbgU,'(5i11)') (Plant_EV_ID(k),k=1,nRout)
0!      write(DbgU,'(a)') ' After PCX Main'
0!      write(DbgU,'(a)') ' Before PCX Main'
0!      write(DbgU,'(a,99i3)') ' NdSN',(NodeSNofDFRank(j),j=1,SupDFRank)
0!      write(DbgU,'(i7,f12.2,a)') (jVar,cVect(jVar),
0!      write(TxtU,'( 9999a3)',advance='no') (' --',iSNod=1,nSNdU)
0!      write(TxtU,'(16i4,a)')   (j,j=0,15),' nNzDemandQty'
0!      write(TxtU,'(16i4,i13/)') nInB2LogQty,nNzQty
0!      write(TxtU,'(17a)') (' ---',j=0,15),' ------------'
0!      wrong:   if(kBind/=InvalidFacet) FctOwning(jNewlyNKy)=kBind ! deleted 980813
0!     !
0!     !       if(VarState(j)==BoundNB0) FctOwning(j)=nActiveFacets
0!     !     else
0!     !     if((VarState(j)==BoundNB1).and.(x(j)>0.99999*LUB(j))) then
0!     !     x(j)=x(j)+d(j)*InfRHS ! consider calling AddScalarMult instead of looping
0!     !   FullBitPattern ! large enough for 32 vars
0!     ! CALLED AT END OF PRODUCTION LOOP IN PROCOST
0!     ! NO NEED FOR ALLOCATION
0!     ! after third read
0!     (1) WABASH_VALLEY GIBSON CAPACITY IS TAKEN OUT
0!     (2) DAILY SCHEDULING ONLY
0!     (3) NO SPLITTING THE MAINTENANCE
0!     (4) THE ALGORITHM IS LOOKING FOR SCHEDULED WEEKS, NOT DAYS
0!     (5) MAINT SCHEDULED BEYOND DECEMBER 31 IT MOVES TO JAN 1 SAME YEAR
0!     (i.e., using few terms for tolerable accuracy) only for unimodal,
0!     (strictly Normal) ordinate at z.  The density is factored out,
0!     (z**2)+15)*z would take four multiplications and two additions.
0!     *********************************
0!     **********************************************
0!     ***********************************************
0!     **************************************************
0!     ***********************************************************
0!     ************************************************************
0!     *************************************************************
0!     ***************************************************************
0!     ****************************************************************
0!     ******************************************************************
0!     +                                                           .000001
0!     +                                                           TEMP_R4
0!     +                                                          1.) THEN
0!     +                                                          HR,
0!     +                                                          R_MONTH)
0!     +                                                        TEMP_HOURS
0!     +                                                       Fixed Cost)
0!     +                                                       MAX_OUT_REC
0!     +                                                      FISCAL_ONLY)
0!     +                                                     FLOAT(168)
0!     +                                                     Fixed Cost) =
0!     +                                                     LOCAL_YEARS )
0!     +                                                     UNIT_CAPACITY
0!     +                                                    SHRINKAGE_COST
0!     +                                                   'ROPF5',
0!     +                                                   'ROPF6',
0!     +                                                   'ROPF7',
0!     +                                                   'ROPF8',
0!     +                                                   'ROPF9'/,
0!     +                                                   ADJUSTED_DEMAND
0!     +                                                   ALL_VERSIONS,0)
0!     +                                                   ALL_VERSIONS,1)
0!     +                                                   CONGEST_VECTOR)
0!     +                                                   CONSTRAINT_MULT
0!     +                                                   INT2(1),
0!     +                                                   INT2(2),
0!     +                                                   R_DAY < 2) THEN
0!     +                                                   TRANS_POSITION)
0!     +                                                   YEAR == 1) THEN
0!     +                                                  - POWER_SOLD_MWH
0!     +                                                  CUR_QUANTITY,24) ! use .ASM version for speed
0!     +                                                  EL_GROUP(I) = 0
0!     +                                                  LOCAL_WHEEL_MULT
0!     +                                                  NEMS_DEFLATOR
0!     +                                                  PRODUCT_HOURS(J)
0!     +                                                  R_HOURS_IN_MONTH
0!     +                                                  TWH == 139) THEN
0!     +                                                 DEPTH_QUANTITY(I)
0!     +                                                 DISPATCHED_ENERGY
0!     +                                                 J=1,NUM_PRODUCTS)
0!     +                                                 LOCAL_PATH_NUMBER
0!     +                                                 TEMP_TRANSACTION)
0!     +                                                 TRANS_POSITION) -
0!     +                                                COST_OF_POWER_SOLD
0!     +                                                HOUR_IN_MONTH)
0!     +                                                HOUR_IN_MONTH) +
0!     +                                                LOWER_48_BASIN_ADD
0!     +                                                MONTHLY_FIXED_COST
0!     +                                                PATH
0!     +                                                R_DISPATCH_COST(L)
0!     +                                                SELLER == 20) THEN
0!     +                                                TOTAL_PRICE_SCALAR
0!     +                                                TRANSACTION_GROUP)
0!     +                                                VARIABLE_OM_CHARGE
0!     +                                               'C',INT2(9),'V','D'
0!     +                                               HOURLY_MARKET_PRICE
0!     +                                               LEAP_YEAR_DAY_SHIFT
0!     +                                               MaximumExpansion(J)
0!     +                                               R_HOURLY_DUMP_USED)
0!     +                                               R_MONTH == 1) THEN
0!     +                                               R_UNIT_PRICE) THEN
0!     +                                              " In month ",R_ISEAS
0!     +                                              .NOT. GAS_ONLY) THEN
0!     +                                              A_CO,B_CO,C_CO,D_CO)
0!     +                                              CAPACITY/LAST_SEASON
0!     +                                              DAY_OF_WEEK(DA,I)) ! ,I) argument list doesn't match
0!     +                                              DEPTH_QUANTITY(HOUR)
0!     +                                              HOURLY_QUANTITY(IND)
0!     +                                              I_AVAILABLE_CAPACITY
0!     +                                              J=1,DEM_3_PTR(I))
0!     +                                              J=1,DEM_4_PTR(I))
0!     +                                              J=1,DEM_5_PTR(I))
0!     +                                              J=1,DEM_6_PTR(I))
0!     +                                              J=1,DEM_7_PTR(I))
0!     +                                              MW_AFTER_MAINTENANCE
0!     +                                              MaximumExpansion(J)
0!     +                                              STORAGE_ENERGY(1:12)
0!     +                                              TEMP_TRANSPORTED
0!     +                                              TEMP_TRANSPORTED)
0!     +                                              TRANS_FIX_EXP)/1000.
0!     +                                              VARIABLE_OM_CHARGE
0!     +                                             CALANDER_DAY_OF_WEEK)
0!     +                                             CALENDAR_DAY_OF_WEEK)
0!     +                                             DAILY_OPTION_REVENUE
0!     +                                             HORIZONS_ACTIVE) THEN
0!     +                                             LOCAL_HOUR == 1) THEN
0!     +                                             MARKET_REVENUE)
0!     +                                             NEW_FUEL_ADJ_RATE)
0!     +                                             RETURN_UNITNM(R_UNIT)
0!     +                                             R_DEPTH_MARGINAL_COST
0!     +                                             TRANS_POSITION) +
0!     +                                            BUY_FOR_TRANSACTION(I)
0!     +                                            EFFICIENCY_OPTIONS + 1
0!     +                                            HOURLY_QUANTITY(TRANS)
0!     +                                            HOURLY_QUANTITY(TRANS) 
0!     +                                            HOUR_IN_DAY == 7) THEN
0!     +                                            HOUR_IN_WEEK > 0) THEN
0!     +                                            NEW_NON_FUEL_ADJ_RATE)
0!     +                                            OUTAGE_TYPE == 2) THEN
0!     +                                            STORAGE_ENERGY_COST(1:12)
0!     +                                            TEMP_REPORT_THIS_GROUP
0!     +                                           'MARKET PRICE SCALAR ')
0!     +                                           BUYERS_COST > 0.2) THEN
0!     +                                           BUY_BEG_FO_HR_TL,
0!     +                                           BUY_END_FO_HR_TL)
0!     +                                           CT_ENERGY_COST_ADDER(I)
0!     +                                           DAYS_PER_MONTH(R_ISEAS)
0!     +                                           GROUP_NAME(GAS_GROUP)
0!     +                                           HOUR_PATH_LIMIT(L1,L2))
0!     +                                           HX_HOURLY_REC)
0!     +                                           INT2(TEMP_R),
0!     +                                           MARKET_REVENUE*1000000.
0!     +                                           MONTH_FUEL_ADDED(TRANS)
0!     +                                           NUMBER_OF_ACTIVE_GROUPS
0!     +                                           OVERLAY_BOOK_IS_ACTIVE)
0!     +                                           PEAK_HOUR,R_MONTH,YEAR)
0!     +                                           QX_HOURLY_REC)
0!     +                                           RESERVE_APP_PERCENT
0!     +                                           R_YEAR,R_MONTH,INT2(1))
0!     +                                           SELL_FOR_TRANSACTION(I)
0!     +                                          "Storage Alloc Market"))
0!     +                                          "Storage Demand Marke"))
0!     +                                          + TIE_COST_OF_BEST_MARGIN
0!     +                                          DEV_TG_CAP(10,R_TG,YEAR)
0!     +                                          E_BTU_COST_POINTR)
0!     +                                          INT2_ARGUMENT,
0!     +                                          L_MONTHLY_PRICE(HOUR))
0!     +                                          MAX_IN_GAS_LINKS*2) THEN
0!     +                                          MW_FOR_TRANSACTION(I)
0!     +                                          PEAK_HOUR,R_MONTH,YEAR))
0!     +                                          PEAK_HOUR,R_MONTH,YEAR),
0!     +                                          PRIMARY_DELIVERY_COST(I)
0!     +                                          R_YEAR,R_MONTH,INT2(1))
0!     +                                          SAVE_UPPER_TRANS_GROUP))
0!     +                                          S_BTU_COST_POINTR,
0!     +                                          TOTAL_RETAINED_CAP_BASE
0!     +                                          WH_TRANS_ALLOC(TRANS,TG)
0!     +                                          WVPA_SERVICES_FUEL_COST)
0!     +                                          YEAR-BASE_YEAR,
0!     +                                         (1.- DEMAND_PEAK/TEMP_R4)
0!     +                                         .NOT. RUN_TRANSACT ) THEN
0!     +                                         ABS(LINK_INDEX(R_A,R_B)))
0!     +                                         ANNUAL_ENERGY_REVENUE(CN)
0!     +                                         BASIN_START_YEAR(M)) THEN 
0!     +                                         DEPTH_MARGINAL_COST(HOUR)
0!     +                                         HOURLY_DUMP_CAPACITY(I))
0!     +                                         NG_BTUS_BY_GSP_BY_FUEL(1)
0!     +                                         REAL4_ONE,
0!     +                                         START_UP_COSTS(S_U)
0!     +                                         START_UP_COSTS) THEN
0!     +                                         SUM_24_I4(DAILY_LOADS_I4)
0!     +                                         TRANS_ENRG * 0.01 * 0.001
0!     +                                         WVPA_PURCHASES_FUEL_COST)
0!     +                                        * ANNUAL_MULTIPLIER(TRANS) 
0!     +                                        ABS(INT_RES_REMAIN(K,M)),
0!     +                                        ABS(OPERATING_COSTS(K,M)),
0!     +                                        CLASS_EMISSIONS(EMIS_TYPE)    
0!     +                                        DAILY_NODE_VOLUME(L_K)
0!     +                                        DEPTH_MARKET_INTERVAL_SIZE
0!     +                                        DERATE_BLOCK(OUTAGE_BLOCK)
0!     +                                        GpCapyProrated*GpHourPrice
0!     +                                        HR > PRESIM_HOURS) THEN
0!     +                                        INT2(INT_RES_REMAIN(K,M)),
0!     +                                        LOAD_FILE_CHAR_EXT(R_YEAR)
0!     +                                        LOCAL_ANN_PRICE(TEMP_I2) *
0!     +                                        LOCAL_CAPACITY_CURVE(GS)))
0!     +                                        MARKET_TG)
0!     +                                        ONE_DAY_PRICE(LOW_HOUR(J))
0!     +                                        REAL4_ONE,
0!     +                                        R_GET_HOURLY_PRICE_NAME) ! CHARACTER
0!     +                                        R_TG)
0!     +                                        R_TRANS_ROR_CAPACITY +
0!     +                                        R_YEAR,R_MONTH,INT2(1))
0!     +                                        SECOND_MARKET_TG)
0!     +                                        TRANS_SPINNING_CAPACITY(I)
0!     +                                        UNIT_CAPACITY_AFTER_LOSSES
0!     +                                        WVPA_DERIVATIVE_FUEL_COST)
0!     +                                       ASSET_CLASS_ID(GAS_GROUP)
0!     +                                       CALENDAR_DAY_OF_WEEK,DA,TG,
0!     +                                       CLASS_EMIS_PURCH(EMIS_TYPE)
0!     +                                       DAILY_INJECT_WITHDRAWAL(I))
0!     +                                       DAILY_MW(HOUR) * LONG_SHORT
0!     +                                       HYBRID_MARKET_ANNUAL_CHARGE
0!     +                                       INT_RES_REMAIN(:,GAS_GROUP)
0!     +                                       MONTHLY_EMISSIONS_COST/ENRG
0!     +                                       MONTHLY_ENERGY_PRICE(IND))
0!     +                                       POSITION='APPEND',RECL=128)
0!     +                                       PRODUCTION_DATA_POINTER(I))
0!     +                                       R_HOUR_PRICE,
0!     +                                       R_MONTH)
0!     +                                       TG_POSITION_IN_TG_FILE)
0!     +                                       TRANS_PROD_MW_REC)
0!     +                                       TRANS_PROD_PROD_VARIABLES,
0!     +                                      ADDITIONAL_CAPACITY_PERCENT)
0!     +                                      ADDITIONAL_CAPACITY_VALUE,
0!     +                                      ANNUAL_MARKET_REVENUE)
0!     +                                      ANNUAL_MARKET_REVENUE)/1000.
0!     +                                      CAPACITY_ADDER,
0!     +                                      FIRST_CAPACITY_PERCENT,
0!     +                                      FIRST_CAPACITY_VALUE,
0!     +                                      GpCapyProrated * GpHourPrice
0!     +                                      HOURS,HOURS_INCREMENT,ISEAS)
0!     +                                      SAVE_HOUR_PATH_LIMIT(L1,L2))
0!     +                                      SECOND_CAPACITY_PERCENT,
0!     +                                      SECOND_CAPACITY_VALUE,
0!     +                                      TEMP_GS_SUPPLY_COST_CURVE(K)
0!     +                                      TEMP_GS_SUPPLY_COST_CURVE(N)
0!     +                                      THIRD_CAPACITY_PERCENT,
0!     +                                      THIRD_CAPACITY_VALUE,
0!     +                                      WVPA_SERVICES_NON_FUEL_COST)
0!     +                                     (DEPTH_MARKET_INTERVALS-1)/2.
0!     +                                     .AND.
0!     +                                     1000000.
0!     +                                     BUY_FOR_TRANSACTION(TWH-1),
0!     +                                     CAPACITY_VALUES(I,GAS_GROUP))
0!     +                                     HH_ADJ-HH_SUPPLY_COST - 0.50)
0!     +                                     HH_ADJ-HH_SUPPLY_COST - 0.70)
0!     +                                     HOURLY_DUMP_CAPACITY(SELLER))
0!     +                                     LAST_MONTH_STORED_FUEL(TRANS)
0!     +                                     L_P)
0!     +                                     MIN_TRANSACTION)<.001d0) THEN
0!     +                                     MONTHLY_ENERGY_PRICE(IND)) *
0!     +                                     MONTH_EVENT_COUNTER,
0!     +                                     NG_BTUS_BY_GSP_BY_FUEL(1)/
0!     +                                     OPERATING_COSTS(I,GAS_GROUP))
0!     +                                     OUTAGE_SINGULAR(OUTAGE_BLOCK)
0!     +                                     R_GET_COALACTION_GROUP_NAME)  ! CHARACTER
0!     +                                     R_GET_GASACTION_GROUP_NAME)  ! CHARACTER
0!     +                                     R_TIME_OF_DAY,R_MONTH,R_YEAR)
0!     +                                     SELL_FOR_TRANSACTION(TWH),
0!     +                                     START_UP_UNIT(DATA_BASES) + 1
0!     +                                     TEMP_R1,
0!     +                                    .NOT. ACTIVE_WD_FORECAST) THEN
0!     +                                    3.0 * (12.0 - FLOAT(R_MONTH)))
0!     +                                    BASECASE_MARKET_AREA_ID(TRANS)
0!     +                                    COST_OF_POWER_SOLD -
0!     +                                    DEALLOCATE(MONTHLY_FINAL_LOAD)
0!     +                                    FUEL_POINTERS_USED)
0!     +                                    GAS_ID,NG_BTUS_BY_GSP_BY_FUEL)
0!     +                                    GET_WH_MONTH_ENERGY(R_MONTH,I)
0!     +                                    GRX_RPS_CAPACITY(TRANS,R_YEAR)
0!     +                                    LOCAL_STORAGE_PATTERN(TEMP_I2)
0!     +                                    MONTHLY_MARKET_COUNTER(MK) + 1
0!     +                                    PRODUCT_HOURS(J,INTERVAL) + 1.
0!     +                                    R_ANNUAL_HYBRID_HR_MARGIN,
0!     +                                    R_ANNUAL_HYBRID_MW_GEN,
0!     +                                    R_ANNUAL_HYBRID_MW_PUMP,
0!     +                                    R_ANNUAL_HYBRID_PROFIT)
0!     +                                    R_HYBRID_VALUE,
0!     +                                    SEASON_CONSTRAINT_LIMIT(I,J,K)
0!     +                                    SELLER,BUYER,TEMP_TRANSACTION)
0!     +                                    SUPPLY_BASIS_DIFFERENTIAL(I))*
0!     +                                    YES_HOURLY_PRICE_REPORT)) THEN
0!     +                                    ZONE_A_GROUP_ID(ACTIVE_LINK-1)
0!     +                                    ZONE_B_GROUP_ID(ACTIVE_LINK-1)
0!     +                                   (HOURLY_DUMP_BEFORE(I) -
0!     +                                   + SUM(TEMP_ACTUAL_VALUES(6:7)))
0!     +                                   0:2,  !Tracker: Member=1, Non-member=2
0!     +                                   0:3)  !Cost: Fuel, Non-Fuel, Demand
0!     +                                   0:5,  !Tracker: PSCR Only=1, Both Indiana PSCR=2, SDI=3, Indiana Only=4
0!     +                                   0:5,  !Type: Purchase, Generation, Derivative, Services, Actuals
0!     +                                   BUY_FOR_TRANSACTION(TWH-1)) = 1
0!     +                                   CUM_HOURS(HALF_POINT+1,R_ISEAS)
0!     +                                   DAMPENING_FACTOR > 0.001) THEN
0!     +                                   HOURLY_DUMP_BEFORE(I) -
0!     +                                   HOURLY_MARKET_PRICE * TIE_POWER
0!     +                                   LOAD_FILE_CHAR_EXT(R_END_POINT)
0!     +                                   NEXTREC=TRANS_DEPTH_MARKET_REC)
0!     +                                   NEXTREC=WABASH_REPORT_UNIT_REC)
0!     +                                   NG_BTUS_BY_GSP_BY_FUEL(1)/1030.
0!     +                                   NG_BTUS_BY_GSP_BY_FUEL(2)/1030.
0!     +                                   NG_BTUS_BY_GSP_BY_FUEL(3)
0!     +                                   NUMBER_OF_PATHS_FOR_I(A_ID) + 1
0!     +                                   OUTAGE_B4_MARKET(NEW_POINT-1)
0!     +                                   PROPOSED_QUANT_OF_PRODUCT(IND))
0!     +                                   RUN_TRANSACT_CHR == 'R'
0!     +                                   R_CAPACITY_CURVE * 0.000001)
0!     +                                   R_CAPACITY_CURVE(K) * 0.000001)
0!     +                                   R_DAY > 3 .AND. R_DAY < 7) THEN
0!     +                                   R_EP_YEARS)
0!     +                                   R_MAX_MONTHLY_GROUP_VARIABLES)
0!     +                                   TEMP_ACTUAL_VALUES(3)
0!     +                                   TEMP_ACTUAL_VALUES(5)
0!     +                                   WORLD_DATABASE_INDEX(COAL_GROUP)
0!     +                                   WORLD_DATABASE_INDEX(GAS_GROUP)
0!     +                                  (TEMP_ACTUAL_VALUES(4)
0!     +                                  + CongestionAnnualExpenes(CLASS) 
0!     +                                  ACCEPTANCE_POINTER < 0) THEN
0!     +                                  ANNUAL_ENERGY,
0!     +                                  ANNUAL_ENERGY_REVENUE(CN),
0!     +                                  ANNUAL_VOM_COST,
0!     +                                  CONGESTION_COST(ACTIVE_LINK-1,:)
0!     +                                  CT_CAPACITY,
0!     +                                  CURRENT_UNIT_UTIL(0,NEW_POINT)
0!     +                                  GET_MUST_RUN_CAPACITY(BUYER_DB))
0!     +                                  GREEN_MRX_METHOD() == 'GX') THEN
0!     +                                  HOURLY_HYDRO(HOUR_IN_THE_SEASON)
0!     +                                  HOURLY_LAST_PRICE(I,HOUR_IN_DAY)
0!     +                                  HOURLY_QUANTITY(TRANS) * 1000.
0!     +                                  INT2(HOURS_FOR_PRODUCT(PRODUCT))
0!     +                                  LOSSES)
0!     +                                  MAX_DAILY_EXTRACTION_IN_MONTH(M)
0!     +                                  MONTHLY_ECONOMY_BOUGHT,
0!     +                                  MONTHLY_ECONOMY_COST,
0!     +                                  MONTHLY_ECONOMY_REVENUE,
0!     +                                  MONTHLY_ECONOMY_SOLD,
0!     +                                  RPT_HR=START_HOUR,START_HOUR+23)
0!     +                                  R_MAX_MONTHLY_GROUPS,
0!     +                                  R_MAX_MONTHLY_GROUP_VARIABLES)
0!     +                                  SET_HOUR_LONG_PATH_PARAMS(
0!     +                                  TARGET_DAILY_STORAGE(R_ISEAS,GS)
0!     +                                  TEMP_GS_SUPPLY_CAPACITY_CURVE(K)
0!     +                                  TEMP_GS_SUPPLY_CAPACITY_CURVE(N)
0!     +                                  TEST_MIN < 75000000. .AND.
0!     +                                  TEST_MIN > 0. .AND.
0!     +                                  WEEKLY_HYDRO_LOADS(HOUR_IN_WEEK)
0!     +                                  WHOLESALE_LPROB(LOAD_POINT-1)) * 
0!     +                                  YES_CENTRAL_DISPATCH_TRANSACT()) 
0!     +                                 ,'R5',
0!     +                                 0:MAX_ASSET_CLASS_GROUPS,0:12,3))
0!     +                                 1.15,1.05,1.00,1.00,
0!     +                                 1.15,1.10,1.00,1.00/
0!     +                                 ADDITIONAL_CAPACITY_PERCENT(I,J)
0!     +                                 AREA_PRICE_MULT,
0!     +                                 COAL_GROUP_ID(TRANS), ! THIS NEEDS TO BE INDEXED
0!     +                                 DA,
0!     +                                 DERIVATIVE_TYPE(TRANS) == 5) THEN
0!     +                                 FIAT_BLOCK_CAPACITY(2)
0!     +                                 GET_SEASON_PATH_LIMIT(L2,L1))
0!     +                                 HEAT_RATE_FOR_SPREAD(TRANS)/1000.
0!     +                                 HOURLY_MARKET_PRICE,DATA_BASE)
0!     +                                 HOUR_IN_WEEK,
0!     +                                 LINE_LOSSES_B_TO_A(ACTIVE_LINK-1)
0!     +                                 LOAD_UNIT, ! TO CREATE WEEKLY PATTERN
0!     +                                 LOCAL_PRICE(HOUR_IN_MONTH-24)
0!     +                                 LREC) ! 168 VALUES
0!     +                                 MONTHLY_ENERGY_PRICE(IND)) *
0!     +                                 MONTH_UNIT_STARTS(S_U) *
0!     +                                 MonthlyAvail(HOUR_IN_MONTH) +
0!     +                                 PEAK_HOUR,R_MONTH,YEAR) -
0!     +                                 PROPOSED_QUANT_OF_PRODUCT(IND)
0!     +                                 PUMPING_STORAGE_EFFICIENCY(IND) )
0!     +                                 REPORT_THIS_GROUP,
0!     +                                 R_ISEAS,
0!     +                                 R_MONTHLY_AVAIL(HOUR_IN_MONTH) +
0!     +                                 R_OPTION_MAX_CAPACITY)  ! INTEGER
0!     +                                 R_YEAR)
0!     +                                 R_YEAR,
0!     +                                 R_YEAR,R_MONTH,R_TG,R_FUEL_INDEX)
0!     +                                 SO2BaseYear(:),
0!     +                                 SO2LowerBound(:),
0!     +                                 SO2UpperBound(:),
0!     +                                 TG_USING_PRICE_DISTN,
0!     +                                 TIE_FLOW(R_TRANS_GROUP,MARKET_HR)
0!     +                                 TRANS_GROUP,
0!     +                                 TRANS_GROUP_GEN_ACTIVE(DATA_BASE)
0!     +                                 WEEKLY_HYDRO_ENERGY,
0!     +                                 WEEKLY_HYDRO_LOADS,
0!     +                                 WEEKLY_HYDRO_MAXIMUM_MW,
0!     +                                 WEEKLY_HYDRO_MINIMUM_MW,
0!     +                                 WH_LOADS_PER_HOUR(HR_IN_MONTH,TG)
0!     +                                 iMo,
0!     +                                 trim(MARKET_PRICE_NAME)//".P"//
0!     +                                'R6','R7','R8','R9'/,
0!     +                                (1.0 - SHRINKAGE_PERCENT)
0!     +                                DATA_BASE)
0!     +                                DEALLOCATE(MONTHLY_REFERENCE_LOAD)
0!     +                                GET_DEPTH_OF_MARKET_QUANTITY) THEN
0!     +                                LOCAL_ANN_PRICE(HOUR_IN_YEAR+I-2)
0!     +                                PATH_WHEEL_RATE(CURRENT_PATH) *
0!     +                                R_NODE_DAY_LIM(NodeID(i))))
0!     +                                R_START_YEAR,
0!     +                                TEST_DATE >= BEGIN_EP(TRANS)) THEN
0!     +                                WH_LOADS_PER_HOUR(HR_IN_MONTH,TG))
0!     +                                r8TEMP,
0!     +                               CONGESTION_PERCENT(ACTIVE_LINK-1,:)
0!     +                               DEALLOCATE(MARGINAL_FUEL_FREQUENCY)
0!     +                               DELTMP,DAILY_LOADS_I4
0!     +                               DEPTH_QUANTITY(ZERO_PRICE_INTERVAL)
0!     +                               DSM_PEAK_RESERVE_ALLOCATION(1,AREA)
0!     +                               EEICODE,FIRST_DAY_OF_YEAR,
0!     +                               GET_COAL_GROUP_STATE_POSITION(TRANS)
0!     +                               GET_GAS_GROUP_STATE_POSITION(TRANS)
0!     +                               GET_TRANS_GROUP_INDEX(I),DAY_TYPE)
0!     +                               LAST_TABLE_FOR_TG(TG)== TRANS) THEN
0!     +                               PEAK_HOUR,R_MONTH,YEAR)+.001)) THEN
0!     +                               TF_YEAR
0!     +                               TIMZON,TEMPER,
0!     +                               TRANS_ROR_CAPACITY(I) +
0!     +                               TRANS_SPINNING_CAPACITY(I)) ! 10/14/98. GAT.
0!     +                               YES_WRITE_DAILY_GAS_LINKS_REPORTS()
0!     +                              (MO,NC_SALES_CLASS,cpl_dmd)
0!     +                              (MO,SC_SALES_CLASS,cpl_dmd)
0!     +                              .000001*DAYS_PER_MONTH(R_MONTH)*
0!     +                              ADDITIONAL_CAPACITY_VALUE(1) > 0.
0!     +                              CARRIAGE CONTROL="FORTRAN",RECL=128)
0!     +                              HG)
0!     +                              HOURLY_DUMP_BEFORE(I) -
0!     +                              HOURLY_HYDRO(HOUR_IN_THE_SEASON)
0!     +                              HR == 19 .AND. TWH == 59 .AND.
0!     +                              HYDRO_HOURLY_LOAD(1,TRANS),
0!     +                              MAX_DAILY_EXTRACTION_IN_MONTH(M)) ! TCF.
0!     +                              MAX_DAILY_EXTRACTION_RATE(M)
0!     +                              MONTHLY_ENERGY(IND,0) + SUM_QUANTITY
0!     +                              MONTHLY_HYDRO_BASE(TRANS),
0!     +                              MONTHLY_HYDRO_ENERGY(TRANS),
0!     +                              MONTHLY_HYDRO_PEAK(TRANS),
0!     +                              MONTHLY_INDEXED_ENERGY_REVENUE)
0!     +                              MONTHLY_TRANS_BASE(TRANS),
0!     +                              MONTHLY_TRANS_ENERGY(TRANS),
0!     +                              MONTHLY_TRANS_PEAK(TRANS),
0!     +                              PLANNING_CAPACITY,REPORT_YEAR) - 1.)
0!     +                              POWER_PURCHASED_MWH
0!     +                              PRODUCT_MARGINAL_COST(J) +
0!     +                              PURCHASE_POWER_COST
0!     +                              RELATIVE_SIZE > 0.000001 .AND.
0!     +                              R_CPL_ENERGY_FROM_PA)
0!     +                              R_CPL_ENERGY_TO_PA,
0!     +                              R_DAY_IN_WEEK,
0!     +                              R_HOUR_IN_DAY,
0!     +                              R_ISEAS,
0!     +                              R_MONTH == FISCAL_SEASON_RESET) THEN
0!     +                              R_MONTH,
0!     +                              SELL_FOR_TRANSACTION(TWH),
0!     +                              SPINNING_RESERVE(COAL_GROUP) / 100.
0!     +                              SPINNING_RESERVE(GAS_GROUP) / 100.
0!     +                              TECH_BREAK_MW_PERCENT_CHANGE *
0!     +                              TG)
0!     +                              TRANS,
0!     +                              TRANS_HOURLY_LOAD(1,TRANS),
0!     +                              TRANS_LOOP_POS,
0!     +                              WH_LOADS_PER_HOUR(1,TRANS),
0!     +                              ZONE_B_TO_A_PEAK_TIES(ACTIVE_LINK-1)
0!     +                             (TRANS_EL_GENERATION+DEMAND_AFTER_EL)
0!     +                             +HOURLY_FORWARDS_4_MONTH(I,HR)
0!     +                             ABS(R_RPS_NO),I,INT2(1),INT2(1)))
0!     +                             ANNUAL_ECONOMY_COST,
0!     +                             ANNUAL_ECONOMY_REVENUE,
0!     +                             AREA_PRICE_MULT * MARKET_PRICE_SCALAR
0!     +                             BASECASE_MARKET_AREA_ID(TRANS)(1:5)))
0!     +                             BASE_REVENUE(2),
0!     +                             BUY_FOR_TRANSACTION(TWH-1)) < 1) THEN
0!     +                             CALL WRITE_MONTHLY_DSM_REPORT(MONTH)
0!     +                             CO2_RETROFIT_LOGIC_ACTIVE()) .OR.
0!     +                             CONSTRAINTS_INDEX(R_SELLER,R_BUYER,I)
0!     +                             DSM_PEAK_RESERVE_ALLOCATION(2,AREA) +
0!     +                             DSM_PEAK_RESERVE_ALLOCATION(3,AREA)
0!     +                             FIXED_OM_COSTS,
0!     +                             INC_DSM_EXPENSE,INC_DSM_REBATE,
0!     +                             INC_FIXEDOM_EXPENSE,
0!     +                             INC_FUEL_EXPENSE,INC_VAROM_EXPENSE,
0!     +                             INC_SALES_REVENUES,
0!     +                             LTDINT,LTDRET,
0!     +                             MAX(0.,TEMP_TRANSPORTED - TEMP_R)
0!     +                             MMBTU_FEDERAL_TAX,
0!     +                             MONTHLY_MARKET_PRICES(HR) * 
0!     +                             NINT(TEMP_TRANSACTION)
0!     +                             PURCHASE_COSTS,
0!     +                             SAVE_RESULTS)
0!     +                             STRIKE_FREQUENCY(TRANS) /= 'A') CYCLE
0!     +                             TECH_BREAK_MW_PERCENT_CHANGE *
0!     +                             TOTAL_ENRG_LIMITED_FIXED_COST,
0!     +                             TOTAL_ENRG_LIMITED_VAR_COST,
0!     +                             USER_DAY_TYPES_ID(IND)) > 0.)  ) THEN
0!     +                             WEEKLY_REFERENCE_BASE*Tolerance) then
0!     +                            (PLANNING_YEAR - MAX_SIMULATION_YEARS)
0!     +                            BUY_BEG_FO_HR_TL(ACTIVE_PATH_NUMBER),
0!     +                            BUY_END_FO_HR_TL(ACTIVE_PATH_NUMBER))
0!     +                            CLASS_EMIS_EXPENSE(EMIS_TYPE)/1000000.
0!     +                            DAILY_PRODUCTS_CAPACITY(HOUR_IN_DAY,I)
0!     +                            DEALLOCATE(OUTAGE_UNIT_UTIL)
0!     +                            DEALLOCATE(UNIT_TO_BLOCK)
0!     +                            DEPTH_PRICE(TOP_INTERVAL,R_HOUR,R_DAY)
0!     +                            ExpansionCostEscalation(ACTIVE_LINK-1)
0!     +                            FILE_SOURCE(R_POINTER) == 'Ef') THEN
0!     +                            FUEL_SCEN_MULT,RTEMP)
0!     +                            GET_WORLD_DATABASE_INDEX(TEMP_I2) == 0
0!     +                            GS_SUPPLY_CAPACITY_CURVE(K,I)
0!     +                            LOCAL_ANN_PRICE(HOUR_END_OF_MONTH+I)
0!     +                            LOCAL_STORAGE_PATTERN(TEMP_I2)/
0!     +                            PATHS_PER_PAIR(SELLER_ID,BUYER_ID) + 1
0!     +                            PUMPING_STORAGE_EFFICIENCY(TRANS)/100.
0!     +                            TEMP_GS_SUPPLY_CAPACITY_CURVE(N) *
0!     +                            TEMP_LOAD*TEMP_COST
0!     +                            TEST_HOUR_TIE_LIMIT(SELLER,BUYER)
0!     +                            TEST_HOUR_TIE_LIMIT(SELLER,BUYER)) >
0!     +                            TOTAL_ZERO_MW_TRANS_PER_MONTH + 1
0!     +                            VLI(Q,LAST_Q) > 
0!     +                           (Storage_Current_Capacity(I) - 
0!     +                           + R_INCOME_VARS(:,monthly_oth_taxes)
0!     +                           .NOT. MONTH_DERIV_REPORT_NOT_OPEN) THEN
0!     +                           ANNUAL_EL_ENERGY(UNIT,RESOURCE_OR_SALE)
0!     +                           ANNUAL_RESERVE_APPRECIATION
0!     +                           ANNUAL_SUPPLY_QUANTITY(I)/FUEL_USE
0!     +                           CALENDAR_DAY_OF_WEEK,DAY,I,
0!     +                           CAPACITY_GIVEN_MARKET(R_NEW_POINT,R_I)
0!     +                           CAPACITY_PLANNING_FACTOR(TRANS) *
0!     +                           COMMENT, ! CHAR*50
0!     +                           CONTINGENT_CAPACITY(R_HOUR_IN_DAY,IND))
0!     +                           DAILY_INJECT_WITHDRAWAL(I)) - DAILY_MAX
0!     +                           DAILY_PRICE(HOUR_IN_DAY),R_MONTH) 
0!     +                           DAILY_PRICE(HOUR_IN_DAY),R_MONTH) ! ??? NOT SURE IF I IS RIGHT ???
0!     +                           DEPTH_MC_BY_HOUR(INTERVAL,R_HOUR,R_DAY)
0!     +                           GET_DATA_BASE_FOR_TRANS(BUYER,DAY_TYPE)
0!     +                           GREEN_MRX_METHOD() == 'GX') .OR.
0!     +                           GS_SUPPLY_CAPACITY_CURVE(P,I) +
0!     +                           HOURLY_DUMP_BEFORE(I) -
0!     +                           HOURLY_FORWARD_CONTRACT_ENERGY(HR,
0!     +                           HOUR_IN_DAY,
0!     +                           LMPDerivAnnualHourlyInputPrices(:,:,:)
0!     +                           LOCAL_PRODUCT_TYPE(HOUR_IS_5X16))) THEN
0!     +                           L_F,
0!     +                           MAX(0.,GS_SUPPLY_CAPACITY_CURVE(L-1,I))
0!     +                           MIN(LOCAL_EXTRACT_IN_DAY(GS),
0!     +                           MIN(LOCAL_HARD_EXTRACT_IN_DAY(GS),
0!     +                           MIN(OPERATING_COSTS(I-1,GAS_GROUP),
0!     +                           MONTHLY_ENERGY_PRICE(IND) * DAILY_MW(0)
0!     +                           MONTHLY_TRANS_HOURS(IND,MONTH) +
0!     +                           MONTH_UNIT_START_COST(S_U) +
0!     +                           OUTAGE_CAPACITY * LOCAL_PRICE(HOUR)
0!     +                           PRODUCT_LAST_PRICE(I,3),R_MONTH) ! ??? NOT SURE IF I IS RIGHT ???
0!     +                           R_INCOME_VARS(:,Monthly Property Taxes)
0!     +                           R_SELLER,R_BUYER,R_CAPACITY)
0!     +                           R_YEAR+BASE_YEAR >= 
0!     +                           SAVE_MONTH >= FISCAL_SEASON_RESET) THEN
0!     +                           SYSTEM_MARKET_REVENUE(HOUR,TG)
0!     +                           SYSTEM_MONTHLY_POSIT(1,10,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,11,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,12,TG)
0!     +                           SYSTEM_MONTHLY_POSIT(1,13,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,21,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,22,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,6,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,7,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,8,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(1,9,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,10,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,11,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,12,TG)
0!     +                           SYSTEM_MONTHLY_POSIT(2,13,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,21,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,22,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,6,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,7,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,8,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(2,9,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,10,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,11,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,12,TG)
0!     +                           SYSTEM_MONTHLY_POSIT(3,13,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,21,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,22,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,6,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,7,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,8,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(3,9,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(I,8,TG) +
0!     +                           SYSTEM_MONTHLY_POSIT(I,9,TG) +
0!     +                           TRANS_GROUP_REPORTING_ACTIVE(TG)) THEN
0!     +                           WH_TRANS_MONTHLY_ENERGY(R_ISEAS,TG) +
0!     +                           YES_STRICT_MARKET_PRICE() .OR.
0!     +                           trim(SCREEN_MESSAGES),ALL_VERSIONS,2)
0!     +                          'Annual   ','Fiscal Yr'/
0!     +                          'July     ','August   ',
0!     +                          'March    ','April    ',
0!     +                          'May      ','June     ',
0!     +                          'November ','December ',
0!     +                          'September','October  ',
0!     +                          (1.-FREE_RIDERS(ACCEPTANCE_NUM))
0!     +                          + MONTHLY_EMISSIONS_COST/1000.
0!     +                          AVE_GENERATION < TRANS_EL_CAPACITY) THEN
0!     +                          CAPACITY_GIVEN_MARKET(MPOS,R_DATA_BASES)
0!     +                          CAPACITY_PLANNING_FACTOR(TRANS)*
0!     +                          CAPACITY_VALUES(:,GAS_GROUP)
0!     +                          HOURLY_MARGINAL_COST(BUYER,HOUR_IN_DAY))
0!     +                          HOUR_PATH_MW(L1,L2)-HOUR_PATH_MW(L2,L1))
0!     +                          HOUR_TIE_LOADING(L2,L1))
0!     +                          HX_HOURLY_HEADER(HX_REPORT_VARIABLES,
0!     +                          LAST_THIS_YR_PEAK(2,LOCAL_MONTH,TRANS) *
0!     +                          LOCAL_CAPACITY_CURVE(:,K) > .0001
0!     +                          LOCAL_DEPTH_PRICE * LOCAL_DEPTH_QUANTITY
0!     +                          MAINTENANCE_PENALTY(LOCAL_MONTH) 
0!     +                          MONTH_SELL_CRED_PRICE(EMIS_TYPE,TABLE,0)
0!     +                          OPERATING_COSTS(:,GAS_GROUP) +
0!     +                          PEAK_COIN_FACTOR(TRANS)
0!     +                          QX_HOURLY_HEADER(HX_REPORT_VARIABLES,
0!     +                          R_NUNITS,
0!     +                          R_TRANS_GROUP)
0!     +                          SAVE_MONTH == FISCAL_SEASON_RESET) THEN
0!     +                          SPINNING_UNITS(COAL_GROUP) == 'C') THEN
0!     +                          SPINNING_UNITS(GAS_GROUP) == 'C') THEN
0!     +                          TEMP_LOAD_AFTER_EL - TEMP_LOAD_BEFORE_EL
0!     +                          TEMP_UNIT_NUMBER,INT2(2),HOUR_IN_MONTH))
0!     +                          TIES_PER_PAIR(CURRENT_TIE,LAST_TIE)) = J
0!     +                          TRANS_BASE,
0!     +                          TRANS_DX,
0!     +                          TRANS_LOAD_POINTS, 
0!     +                          TRANS_LODDUR,
0!     +                          TRANS_LPROB,
0!     +                          TRANS_PEAK,
0!     +                          WHOLESALE_REV_AND_EXP(R_NEW_POINT,1,R_I)
0!     +                          WHOLESALE_SAL_AND_PUR(R_NEW_POINT,1,R_I)
0!     +                         'Base Asset Vector File was named NONE.',
0!     +                         (NUM_TRANS_GROUPS+1)*SEASONS_PER_YEAR*4))
0!     +                         /'January  ','February ',
0!     +                         ASSET_ALLOCATOR * BASE_LOAD_RATE *
0!     +                         ASSET_ALLOCATOR * PEAK_LOAD_RATE *
0!     +                         Annual_Quantity_Limit(iArray),
0!     +                         BUY_FOR_TRANSACTION(TWH)) /= 1  .OR.
0!     +                         BUY_FOR_TRANSACTION(TWH)) <= 0.)    .AND.
0!     +                         Basin_HI_ID(iArray),
0!     +                         CALL SORT_HOURS_AND_DAYS_BY_LOADS(FRCLOD)
0!     +                         DEPTH_PRICE(BOTTOM_INTERVAL,R_HOUR,R_DAY)
0!     +                         GET_GROUP_NAME(GET_TRANS_GROUP_INDEX(TG))
0!     +                         HOURLY_COST(TRANS)*HOURLY_QUANTITY(TRANS)
0!     +                         HOUR_PATH_MW(L1,L2) + R_CURRENT_PATH_MW 
0!     +                         HOUR_TIE_LIMIT(MARKET_TG,
0!     +                         HOUR_TIE_LIMIT(R_TG,
0!     +                         HOUR_TIE_LIMIT(SECOND_MARKET_TG,
0!     +                         LAST_MONTH_STORED_FUEL(TRANS) + 
0!     +                         MONTHLY_TRANS_HOURS(IND,0) + HOURS_STRUCK
0!     +                         MONTH_PURCH_CRED_PRICE(EMIS_TYPE,TABLE,0)
0!     +                         NGasVolatilitiesMo(OPTION_INDEX,MONTH)
0!     +                         Plant_EV_ID(iArray)
0!     +                         SELL_FOR_TRANSACTION(TWH-1),
0!     +                         TIES_PER_PAIR(CURRENT_TIE,LAST_TIE) + 1
0!     +                         Transport Vehicles
0!     +                         Transport_Price(iArray),
0!     +                         ZONE__B_TO_A_OFF_PEAK_TIES(ACTIVE_LINK-1)
0!     +                        'Asset vector ',R_VECTOR,' was requested.'
0!     +                        'Total Resources     ',
0!     +                        (1 - SPLIT_FACTOR(A))
0!     +                        (DAILY_GEN_BY_S_U(0,J),J=1,24)
0!     +                        (DAILY_GEN_BY_S_U(S_U,J),J=1,24)
0!     +                        (DEPTH_MONTH_PRICE(J,I),
0!     +                        (SAVE_OUTAGE_BLOCKS+1)*TRANS_GROUP_POINTS)
0!     +                        + INCOME_PSCR_STATEMENT_EFFECT(0)         ! 101
0!     +                        + INCOME_PSCR_STATEMENT_EFFECT(:)         ! 101
0!     +                        + MONTHLY_EMISSIONS_COST
0!     +                        - (LOCAL_ANN_PRICE(TEMP_I2) +
0!     +                        A,
0!     +                        ABS(MAX_DAILY_EXTRACTION_RATE(M)),
0!     +                        ABS(RESERVE_APPRECIATION_PERCENT(M)),
0!     +                        ANNUAL_TG_PEAK(R_ISEAS,0) +
0!     +                        ANNUAL_TG_PEAK(R_ISEAS,TG) +
0!     +                        CENTRAL_DISPATCH_TARGET(0)) > .1) THEN
0!     +                        COMMENT, ! CHAR*50
0!     +                        CONSTRUCTION_COSTS(I,I2_ONE),
0!     +                        DEPTH_QUANTITY(I),
0!     +                        DEPTH_TARGET_GROUP /= R_TG) THEN
0!     +                        ENERGY_MONTHLY(0,I,Bulk Power)
0!     +                        FLOAT(DAY),
0!     +                        FLOAT(R_END_POINT),
0!     +                        FUT_PEAK(3,J+1)*(1.-Z1)
0!     +                        GET_BLOCK_AVAIL_4_HRinYR(TEMP_UNIT_NUMBER,
0!     +                        GET_COAL_TRANSPORT_RATE(J,K,R_YEAR,R_MONTH)
0!     +                        GET_HESI_UNIT_ID_NUM(S_U),
0!     +                        IS_FISCAL_YEAR_ACTIVE(FISCAL_SEASON_RESET,
0!     +                        LAST_THIS_YR_ENERGY(2,R_ISEAS,0)
0!     +                        LAST_THIS_YR_ENERGY(2,R_ISEAS,TRANS)
0!     +                        LAST_THIS_YR_PEAK(2,R_ISEAS,0)
0!     +                        LAST_THIS_YR_PEAK(2,R_ISEAS,TRANS)
0!     +                        LOCAL_CAPACITY_CURVE)
0!     +                        LOCAL_COST_CURVE,
0!     +                        LOCAL_MONTH_NAME,
0!     +                        LOCAL_YEAR,
0!     +                        MAX(WH_TRANS_MONTHLY_CAPACITY(R_ISEAS,TG),
0!     +                        MONTH_LEFT_HEAT,
0!     +                        MONTH_RIGHT_HEAT)
0!     +                        MONTH_UNIT_STARTS(S_U),
0!     +                        MONTH_UNIT_START_COST(S_U))
0!     +                        NGas_VolatilityByHour(HOUR)*
0!     +                        PRT_ENDPOINT(),
0!     +                        R_MONTH_NAME,
0!     +                        R_THIS_YEAR,
0!     +                        R_TRANS_GROUP_NAME(1:14)//' PRICE',
0!     +                        RenewableEnergyPercent(IND) > 0.0001) THEN
0!     +                        SPLIT_FACTOR (A)
0!     +                        SUPPLY_BASIS_DIFFERENTIAL(I)/NEMS_DEFLATOR
0!     +                        TECH_BREAK_MW_PERCENT_CHANGE *
0!     +                        THIS_YEAR,
0!     +                        U,
0!     +                        UNIT_CONTRIB *
0!     +                        ZONE__B_TO_A_WHEELING_RATES(ACTIVE_LINK-1)
0!     +                       'Asset Class ID      ','N',INT2(4),'V','D'
0!     +                       'BASIN Cost Curve   ','C',INT2(30),'V','D'
0!     +                       'Customer-Market Area','C',INT2(20),'V','D'
0!     +                       'Day of Month        ','N',INT2(4),'V','D'
0!     +                       'Gas Link Name       ','C',INT2(31),'V','D'
0!     +                       'Gas Region          ','C',INT2(20),'V','D'
0!     +                       'Generating Unit     ','C',INT2(20),'V','D'
0!     +                       'Iteration           ','N',INT2(4),'F','D'
0!     +                       'LINK Cost Curve   ','C',INT2(30),'V','D'
0!     +                       'Period              ',
0!     +                       'RESERVE Cost Curve   ','C',INT2(30),'V','D'
0!     +                       'Resource            ','C',INT2(20),'F','D'
0!     +                       'Transaction Group   ','C',INT2(35),'V','D'
0!     +                       CAL_MAR_HOURLY_WHOLESALE +
0!     +                       DAILY_INJECT_WITHDRAWAL(I)< DAILY_MIN) THEN
0!     +                       EL_ANN_CLASS_MARKET_PURCHASE(ASSET_CLASS) +
0!     +                       EL_ANN_CLASS_MARKET_REVENUES(ASSET_CLASS) +
0!     +                       GET_BLOCK_AVAIL_4_HRinYR(TEMP_UNIT_NUMBER,
0!     +                       GET_SCENARIO_ELECTRIC_PRICE(R_YEAR,iMo)
0!     +                       HOURLY_TRANSACTION_LOAD(HOUR_IN_THE_SEASON,
0!     +                       HOUR_TIE_LOADING(L2,L1) - TEMP_R
0!     +                       LOW_CAP(J)*PUMPING_STORAGE_EFFICIENCY(IND))
0!     +                       MONTHLY_PRODUCT_HOURS(IND,0) + HOURS_STRUCK
0!     +                       MONTHLY_STRIKES(IND,MONTH) + TEMP_STRIKES
0!     +                       NUM_ANNUAL_PUTS (K) <= 0) CYCLE
0!     +                       OUTAGE_WHOLESALE_ENERGY(OUTAGE_BLOCK,2) +
0!     +                       OUTAGE_WHOLESALE_REVENUE(OUTAGE_BLOCK,2) +
0!     +                       TEMP_R)                  
0!     +                       TEST_DATE <= END_EP(TRANS) .AND.
0!     +                       TG > 0 .AND. TG <= UPPER_TRANS_GROUP ) THEN
0!     +                       WEEKLY_HYDRO_LOADS_FOR_MONTH(HR_IN_MONTH) *
0!     +                      'Gas Region           ','C',INT2(20),'V','D'
0!     +                      (STOR_LIM + TOTAL_STORAGE(M)) *
0!     +                      ACCESS="DIRECT",STATUS="UNKNOWN",RECL=LRECL)
0!     +                      ANNUAL_AMOUNT,
0!     +                      DAILY_INJECT_WITHDRAWAL(I) > DAILY_MAX) THEN
0!     +                      FIRST_TIME_FOR_THIS_MONTHLY,
0!     +                      FUEL_INVENTORY_IS_ANNUAL,
0!     +                      FUEL_PRICE(FUEL_PRICE_YEARS)**
0!     +                      GET_ESC_NRG_PRICE(R_CALENDAR_YEAR,iMO,TRANS, ! FOUND 09/23/03.
0!     +                      GET_GAS_NODE_STATE_PROVINCE(GAS_ID,C2_NAME)
0!     +                      HOURLY_FORWARD_CONTRACT_ENERGY(
0!     +                      INT((NBLOK2_SAVE+1)*TRANS_GROUP_POINTS),0.)
0!     +                      MAX(0.,DAILY_INJECT_WITHDRAWAL(I) - TEMP_R4)
0!     +                      MAX_BC_CUST_CLASS_ID_NUM,CUSTOMER_GROUP)
0!     +                      MAX_BC_TRANS_CLASS_ID_NUM,TRANSACTION_GROUP)
0!     +                      MAX_OL_TRANS_CLASS_ID_NUM,TRANSACTION_GROUP)
0!     +                      MIN(0.,DAILY_INJECT_WITHDRAWAL(I) - TEMP_R4)
0!     +                      MIN(HOUR_PATH_LIMIT(L2,L1) + TEMP_R,
0!     +                      MONTHLY_AMOUNT,STAT=ERROR)
0!     +                      MONTHLY_PEAK(I,TRANS)*MAINTENANCE_PENALTY(I)
0!     +                      NUMBER_OF_RESOURCE_ID(LOCAL_RESOURCE_ID) + 1
0!     +                      SCENARIO_ELECTRIC_MULT * MARKET_PRICE_SCALAR
0!     +                      STOR_LIM + TOTAL_STORAGE(M))
0!     +                     '",'
0!     +                     ',,S,,,,,,,,"'//
0!     +                     *(GpHourPrice + MONTHLY_ENERGY_PRICE(IND))
0!     +                     + COMMON_STOCK_CASH_DIVIDENDS 398! COMMON_DIVIDENDS + 
0!     +                     + PS_DIVIDEND_CASH_PAYMENTS  388! PS DIVIDEND PAYMENTS
0!     +                     - (LOCAL_ANN_PRICE(TEMP_I2) +
0!     +                     BLENDED_BTU_COST(I) * FUEL_SCEN_MULT * RTEMP
0!     +                     COAL_NODE_TYPE(GET_COAL_NODE_TYPE_INDEX(GS))//
0!     +                     COMMENT, ! CHAR*50
0!     +                     CUM_UNIT_UTIL(R_NEW_POINT,DATABASE)/
0!     +                     CUR_MO_ENERGY_PRICE(iMo))
0!     +                     DAILY_NODE_VOLUME(L_K) + TEMP_STORAGE
0!     +                     DAYS_PER_MONTH(R_MONTH)*
0!     +                     DEPTH_MONTH_LAMBDA(J,INTERVAL)+ 
0!     +                     DEPTH_MONTH_PRICE(J,INTERVAL) + R_DEPTH_PRICE
0!     +                     DEPTH_PRICE(TOP_INTERVAL,R_HOUR,R_DAY)) THEN
0!     +                     DEPTH_PRICE(ZERO_PRICE_INTERVAL,R_HOUR,R_DAY)
0!     +                     ESCALATED_MONTHLY_VALUE(
0!     +                     FUEL_COST +
0!     +                     GAS_NODE_TYPE(GET_GAS_NODE_TYPE_INDEX(GS))//
0!     +                     GAS_NODE_TYPE(NODE_TYPE(J))//
0!     +                     GET_HOURLY_SCEN_ELECT_MULT(HOUR_IN_MONTH,iMo)
0!     +                     GS_SUPPLY_CAPACITY_CURVE(L,I) * 
0!     +                     GS_SUPPLY_CAPACITY_CURVE(L,I) +
0!     +                     GS_SUPPLY_COST_CURVE(K,I) /
0!     +                     GS_SUPPLY_COST_CURVE(P,I) +
0!     +                     HOURLY_FORWARD_CONTRACT_ENERGY(HR,
0!     +                     HOUR_TIE_LIMIT(
0!     +                     MAX(0.0,MIN(LOCAL_MIN_EXTRACT_IN_DAY(GS),
0!     +                     MAX(CONSTANT_EXTRACT_IN_DAY(GS)*.000001,
0!     +                     MIN(HOUR_PATH_MW(L1,L2)+TEMP_R,
0!     +                     MONTHLY_ENERGY(IND,MONTH) +
0!     +                     MONTHLY_ENERGY_REVENUE(IND,MONTH) +
0!     +                     MONTHLY_GAS_BALANCE(12,R_MONTH,CO) +
0!     +                     MONTHLY_GAS_BALANCE(12,R_MONTH,CO) -
0!     +                     MONTHLY_GAS_BALANCE(13,R_MONTH,CO) +
0!     +                     MONTHLY_GAS_BALANCE(13,R_MONTH,CO) -
0!     +                     NERC_REGION)
0!     +                     OUTAGE_CAPACITY > 0. .AND.
0!     +                     PATHS_PER_PAIR(SELLER_ID,BUYER_ID)) =
0!     +                     PLANNING_AREA_2_GN,
0!     +                     PLANNING_AREA_2_GS,
0!     +                     PLANNING_AREA_2_TG,
0!     +                     PRODUCT_MEAN_RETURN(0,J),
0!     +                     PRODUCT_MEAN_RETURN(I,J),
0!     +                     RDI_PLANT_NUMBER,
0!     +                     REPORT_THIS_CL_UNIT(OPTION_INDEX) .AND.
0!     +                     R_ANNUAL_USAGE(HOUR_IN_YEAR) + GpCapyProrated
0!     +                     R_NODE_LIM)
0!     +                     R_NODE_PRICE,
0!     +                     SCARCITY_COST(I,HOUR_IN_DAY) 
0!     +                     SELL_OR_BUY,
0!     +                     SYSTEM_HOURLY_STORAGE_GEN(HOUR,R_TG)    +
0!     +                     SYSTEM_HOURLY_STORAGE_PUMP(HOUR,R_TG)
0!     +                     TIES_PER_PAIR(CURRENT_TIE,LAST_TIE)) =
0!     +                     VARIABLE_OM_CHARGE
0!     +                     WEEKLY_HYDRO_FOR_HR -
0!     +                     WEEKLY_REFERENCE_BASE*FLOAT(nHrAtMin))/
0!     +                     WHOLESALE_SAL_AND_PUR(MPOS,1,R_DATA_BASES)/
0!     +                     WH_LOADS_PER_HOUR(HR_IN_MONTH,TG) +
0!     +                     ZONE_B_GAMS_ID
0!     +                    - SUM(CASH_MONTHLY_VALUES(1:12,1:3),DIM=2)
0!     +                    ENERGY_MONTHLY(0,I,Capacity Sales)
0!     +                    GRX_STORAGE_PATTERN(TRANS_GROUP,HOUR_IN_YEAR)
0!     +                    HOURLY_FORWARD_CONTRACT_ENERGY(
0!     +                    IND_ANNL_HRLY_CAP(HOUR_IN_YEAR+HOUR_IN_MONTH),
0!     +                    LINE_LOSSES_B_TO_A(ACTIVE_LINK) < 99.999) THEN
0!     +                    MAX(0.,HOURLY_LAST_PRICE(BUYER,HOUR_IN_DAY)  - ! ALTERED 5/22/02.
0!     +                    MONTHLY_ENERGY_PRICE(IND) * ABS(TEMP_QUANTITY)
0!     +                    NINT(R_GET_MARGINAL_COST_AT_MARKET*1000.)*.001
0!     +                    ON_LINE_YEAR(I) < LAST_STUDY_YEAR ) CYCLE
0!     +                    PATHS_LONG_PATHS < MAX_HOURLY_LONG_PATHS) THEN
0!     +                    READ_PLANT_CONT_DEMAND_LINK_DTA
0!     +                    TEMP_GS_SUPPLY_COST_CURVE(P) > TOLERANCE) THEN
0!     +                    TEMP_GS_SUPPLY_COST_CURVE)
0!     +                    TEMP_GS_SUPPLY_POSITION,
0!     +                    TO_AREA(ACTIVE_CONSTRAINT_NUMBER,J) == 0) EXIT
0!     +                   (ALLOWED_TRANSACTION_PAIR(
0!     +                   (LODDUR(LOAD_POINT) - LODDUR(LOAD_POINT-1))* .5
0!     +                   + CASH_DISTRIBUTION(1:12)
0!     +                   DEPTH_PRICE(BOTTOM_INTERVAL,R_HOUR,R_DAY)) THEN
0!     +                   DSM_PEAK_RESERVE_ALLOCATION(1,CLASS,MONTH)
0!     +                   DSM_PEAK_RESERVE_ALLOCATION(2,CLASS,MONTH)
0!     +                   DSM_PEAK_RESERVE_ALLOCATION(3,CLASS,MONTH)
0!     +                   GET_SCENARIO_TRANSMISSION_AVAIL(R_YEAR,R_MONTH)
0!     +                   INT(NUM_RPS_TYPES * NUM_RPS_REGIONS * 
0!     +                   MONTHLY_ENERGY_COST(IND,MONTH)
0!     +                   R_CAPACITY_CURVE,
0!     +                   R_COST_CURVE,
0!     +                   R_EXTRACT_CURVE)
0!     +                   TOTAL_MONTHLY_CASH(LAST_MONTH:LAST_MONTH+11,
0!     +                   TOTAL_SURPLUS_ENERGY/1000.,
0!     +                  ' CHARGE CAP ',GET_DAILY_PUMPING_MULT
0!     +                  ' INDEX ',TRANS,
0!     +                  ( IPUMEN(LPUMP) - (ENRG2 - ENRG1) )
0!     +                  (SECOND_BLOCK_OUT(J),J=HR,HR+23)
0!     +                  (STRAT_HOURLY_MW(J,BB),J=1,24)
0!     +                  (TIE_FLOW(I,RPT_HR),RPT_HR=1,DAILY_HOURS)
0!     +                  (YES_RUN_MULTIAREA_TRANSACT() .OR.
0!     +                  (YES_TRANSACT_HOURLY_REPORTS .OR. 
0!     +                  *(GpHourPrice + MONTHLY_ENERGY_PRICE(IND))
0!     +                  *GpHourPrice
0!     +                  1. + ESCALATED_MONTHLY_VALUE(
0!     +                  ASSET_ALLOCATOR * BASE_LOAD_RATE *
0!     +                  ASSET_ALLOCATOR * PEAK_LOAD_RATE *
0!     +                  CAPACITY_GIVEN_MARKET(BUYER_POSITION,R_BUYER_DB)
0!     +                  CLASS_EMISSION_CAP(EMIS_TYPE) -
0!     +                  CL_MONTH_NAME(R_MONTH),
0!     +                  DEPTH_MONTH_MARGINAL_COST(J,I) + 
0!     +                  DEPTH_MONTH_MARGINAL_COST(J,INTERVAL) + 
0!     +                  ESCALATED_MONTHLY_VALUE(
0!     +                  ESCALATED_MONTHLY_VALUE(REAL4_ONE,
0!     +                  ESCALATED_MONTHLY_VALUE(REAL_ARGUMENT,
0!     +                  FLOAT(CURRENT_YEAR),
0!     +                  FLOAT(DAY),
0!     +                  FLOAT(I),
0!     +                  GET_HEAT_RATE_FACTOR(U) *
0!     +                  GET_MONTHLY_REGIONAL_OUTAGE,
0!     +                  GET_TRANS_LOAD_AFTER_EL(HR,I) -
0!     +                  GET_WEEKLY_HYDRO_FORECASTS(
0!     +                  HOURLY_COST(TRANS)*MONTHLY_BURN(TRANS,R_MONTH)
0!     +                  HOUR_PATH_LIMIT(L1,L2) - CURRENT_PATH_MW
0!     +                  HOUR_PATH_LIMIT(L1,L2) - R_CURRENT_PATH_MW 
0!     +                  INT(CUM_CAP(DATA_BASES) / DB_DX(DATA_BASES)) + 1
0!     +                  INT2(ABS(MAX_DAILY_EXTRACTION_RATE(M))),
0!     +                  INT_HOUR_IN_DAY,REMAIN
0!     +                  MAX(0.,GS_SUPPLY_CAPACITY_CURVE(K,GS) - 
0!     +                  MIN(HOUR_PATH_LIMIT(L_SELLER,L_BUYER),
0!     +                  MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,1,0,RI)*
0!     +                  MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,2,0,RI)*
0!     +                  MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,3,0,RI)*
0!     +                  MONTHLY_CONTINGENT_CAPACITY(TG) +
0!     +                  MONTHLY_ENERGY(IND,R_MONTH) + GpCapyProrated
0!     +                  MON_MDS_EL_ENERGY(UNIT,RESOURCE_OR_SALE,R_ISEAS)
0!     +                  MULTI_AREA_NAME(I),
0!     +                  M_HOURLY_LOAD_B4_SALES(I,HOUR_IN_DAY) -
0!     +                  OPTION_NAME(S_U),
0!     +                  OPTION_NAME,
0!     +                  PRODUCT_FUEL_PRICE(0,J)
0!     +                  PRODUCT_HEATRATE(0,J),
0!     +                  PRODUCT_MEAN_RETURN(0,J),
0!     +                  PRODUCT_MEAN_RETURN(I,J),
0!     +                  PRODUCT_VOLATILITY(0,J),
0!     +                  PRT_ENDPOINT(),
0!     +                  REAL4_ONE,
0!     +                  R_MONTH_NAME,
0!     +                  TEMP_CUSTOMER_NAME, 
0!     +                  THIS_YEAR,
0!     +                  TRIM(TieDescription(ACTIVE_LINK-1)(1:28)//' BI')
0!     +                  USER_MARKET_PRICE(HOUR_IN_DAY) = 
0!     +                  WEEKLY_REFERENCE_BASE) < 
0!     +                 (ANNUAL_PURCHASE_POWER_COST -
0!     +                 (RECORD_LENGTH*DEM_3_REC_POS(I,J),
0!     +                 (RECORD_LENGTH*DEM_4_REC_POS(I,J),
0!     +                 (RECORD_LENGTH*DEM_5_REC_POS(I,J),
0!     +                 (RECORD_LENGTH*DEM_6_REC_POS(I,J),
0!     +                 (RECORD_LENGTH*DEM_7_REC_POS(I,J),
0!     +                 + CASH_DISTRIBUTION(1:12)
0!     +                 .NOT. (GET_CO2_RETIREMENTS_LOGIC() .OR.
0!     +                 EL_MON_MDS_MARKET_PURCHASE(ASSET_CLASS,R_ISEAS) +
0!     +                 EL_MON_MDS_MARKET_REVENUES(ASSET_CLASS,R_ISEAS) +
0!     +                 ENRG_LIMITED_PURCHASE_EXPENSE(1) +
0!     +                 ENRG_LIMITED_PURCHASE_EXPENSE(2) +
0!     +                 ENRG_LIMITED_PURCHASE_EXPENSE(3) +
0!     +                 GET_ENERGY_EXCHANGE_ADJUSTMENT()
0!     +                 GET_PRODUCTION_LEVEL_AT_MARKET(
0!     +                 POWER_DAILY_VOLUME_BY_MONTH(R_ISEAS,TG) + 
0!     +                 PURCHASED_POWER_COSTS(2) +
0!     +                 PURCHASED_POWER_COSTS(3) +
0!     +                 TOTAL_MONTHLY_CASH(LAST_MONTH:LAST_MONTH+11,Fuel)
0!     +                (PricesHDM(iHr,iDa,iMo),iHR=1,24)
0!     +                2000.*MONTH_EMIS_DISPATCH_ADDER(EMIS_TYPE,TABLE,0)
0!     +                ANNUAL_INTERRUPTIBLE_CAPACITY(TG) +
0!     +                ANNUAL_INTERRUPTIBLE_CAPACITY(TG) -
0!     +                ANNUAL_PLANNING_INTERRUPT_CAPACITY(TG) -
0!     +                CALL FORWARD_OPTION_MAKEOVL(FORWARD_OPTION_FILE)
0!     +                CAPACITY_GIVEN_MARKET(SELLER_POSITION,R_SELLER_DB)
0!     +                CONGESTION_PERCENT(LINK_INDEX(R_A,R_B),R_C) .AND.
0!     +                FUELCOST(MAX_SIMULATION_YEARS),
0!     +                INT((1+NUM_TRANS_GROUPS)*(1+NUM_TRANS_GROUPS)*4))
0!     +                MAX(CONSTANT_HARD_EXTRACT_IN_DAY(GS)*.000001,
0!     +                R_FUEL_INDEX <= MAX_REGIONAL_INDEX .AND.
0!     +                TENRG(MAX_SIMULATION_YEARS),
0!     +                TMMBTUS(MAX_SIMULATION_YEARS),
0!     +                VARCOST(MAX_SIMULATION_YEARS)
0!     +               "'SDRnOfLk(0,iLink)=ISNod',"//
0!     +               "'SDRnOfLk(1,iLink)=iDNod',"//
0!     +               "'SDRnOfLk(2,iLink)=RouteID',"// &
0!     +               "Fuel Type ID Number,"// &
0!     +               "Off Line Year,"// &
0!     +               "On Line Year,"//
0!     +               "Supply Description,"//
0!     +               "iLink,"//
0!     +               'Total Resources     ',
0!     +               (LODDUR(LOAD_POINT) - LODDUR(LOAD_POINT-1))* .5
0!     +               (MONTHLY_MARKET_PRICES(RPT_HR),
0!     +               (TRANS_VAR_EXP+TRANS_FIX_EXP)/1000.,
0!     +               (TRANS_VAR_EXP+TRANS_FIX_EXP)/1000., ! TOTAL_ALL_COSTS
0!     +               0.  ! FUEL_TRACKER
0!     +               0., ! RES_TRACKER,
0!     +               0., ! VAR O&M
0!     +               0., ! VAR O&M $
0!     +               0., ! VAR O&M / MWH
0!     +               ANNUAL_PLANNING_INTERRUPT_CAPACITY(TG) +
0!     +               CALCULATED_PEAK - CALCULATED_BASE > .1 .AND.
0!     +               CL_MONTH_NAME(R_MONTH),
0!     +               CONGESTION_COST(LINK_INDEX(R_B,R_A),R_C)
0!     +               CONSTRAINTS_INDEX(R_SELLER,R_BUYER,J)
0!     +               DEPTH_OF_PATH(J,J,I),          ! ACTIVE_NODES,ACTIVE NODES ACTIVE NODES
0!     +               DEPTH_OF_PATH,          ! ACTIVE_NODES,ACTIVE_LINKS-1
0!     +               DSM_PEAK_RESERVE_ALLOCATION,
0!     +               ESCALATED_MONTHLY_VALUE(
0!     +               FISCAL_EL_MARKET_REVENUE(UNIT,1) +
0!     +               FISCAL_EL_MARKET_REVENUE(UNIT,2) +
0!     +               FLOAT(CURRENT_YEAR),
0!     +               FLOAT(DA),
0!     +               FLOAT(DAY),
0!     +               FLOAT(YR+BASE_YEAR),
0!     +               FUEL_CHARGE_RATE,
0!     +               FUEL_TYPE, ! C*1
0!     +               GAS_SUPPLY_CUM_CAPACITY(:,GS) + 
0!     +               GAS_SUPPLY_CUM_COST(:,GS) + 
0!     +               GET_NUM_MONTHLY_TRANSACTIONS,
0!     +               GET_SERVI_FUEL_TRACKER_INDEX
0!     +               GET_SERVI_RES_TRACKER_INDEX,
0!     +               GET_TARGET_DAILY_STORAGE(R_MONTH,I2_ZERO) 
0!     +               GET_TRANS_GROUP_INDEX
0!     +               GET_USER_HOUR_IN_DAY(
0!     +               GREG_ENERGY_RESERVE_ALLOCATION,
0!     +               HOURS_SINCE_SHUT_DOWN,
0!     +               HOURS_SINCE_START_UP,
0!     +               INDEX_OF_PATH_LINK(J,I,I))     ! ACTIVE_NODES,ACTIVE_LINKS-1,ACTIVE_LINKS-1
0!     +               INDEX_OF_PATH_LINK)     ! ACTIVE_NODES,ACTIVE_LINKS-1,ACTIVE_LINKS-1
0!     +               INDEX_OF_PATH_LINK,      ! ACTIVE_NODES,ACTIVE_LINKS-1,ACTIVE_LINKS-1
0!     +               INT2(ESCALATED_MONTHLY_VALUE(FLOAT(COUNT_RPS),
0!     +               LINK_MEMORY(J,J,J),            ! ACTIVE_NODES
0!     +               LINK_MEMORY,            ! ACTIVE_NODES
0!     +               LOCAL_CUSTOMER_NAME(TRANS), 
0!     +               LOCAL_HYBRID_HR_MARGIN(1:8784),
0!     +               LOCAL_HYBRID_MW_CHARGE(1:8784),
0!     +               LOCAL_HYBRID_MW_DISCHARGE(1:8784),
0!     +               LONG_SHORT = -LONG_SHORT
0!     +               MAKER_TABLES_IN_FILE/0/,
0!     +               MAX_DAILY_EXTRACTION_RATE(GS),GS
0!     +               MIN(CAPACITY_VALUES(I-1,GAS_GROUP),
0!     +               MIN(HOURLY_LAST_PRICE(BUYER,HOUR_IN_DAY),
0!     +               MONTHLY_AC_EXPENSE,
0!     +               MONTHLY_AC_EXPENSE_ENERGY,
0!     +               MONTHLY_AC_REVENUE,
0!     +               MONTHLY_AC_REVENUE_ENERGY,
0!     +               MONTHLY_BURN,
0!     +               MONTHLY_BURN_COST,
0!     +               MONTHLY_BURN_REVENUE,
0!     +               MONTHLY_ENERGY_COST(IND,R_MONTH) + GpCapyProrated
0!     +               MONTHLY_ENERGY_PRICE(IND))
0!     +               MONTHLY_ENERGY_REVENUE(IND,R_MONTH) +GpCapyProrated
0!     +               MONTHLY_INDEXED_ENERGY_REVENUE,
0!     +               MONTHLY_PRODUCT_DAYS,
0!     +               MONTHLY_PRODUCT_HOURS,
0!     +               MONTHLY_STRIKES,
0!     +               MONTHLY_TRANSACTION_COST,
0!     +               MONTHLY_TRANSACTION_REVENUE,
0!     +               MONTHLY_TRANS_BASE,
0!     +               MONTHLY_TRANS_HOURS,
0!     +               MONTHLY_TRANS_LOAD_HYDRO_MW,
0!     +               MONTHLY_TRANS_LOAD_HYDRO_MWH,
0!     +               MONTHLY_TRANS_LOAD_MWH,
0!     +               MONTHLY_TRANS_PEAK,
0!     +               MONTH_COST_OF_FUEL_ADDED(TRANS) -
0!     +               NUMBER_OF_ACTIVE_PATHS, ! ACTIVE LINKS-1
0!     +               NUM_ACTIVE_START_END(J,J),
0!     +               NUM_ACTIVE_START_END,
0!     +               NUM_MONTHLY_TRANSACTIONS,
0!     +               PC_C,
0!     +               PC_FOR_,
0!     +               PRT_ENDPOINT(),
0!     +               RPT_MONTH_NAME(ISEAS),
0!     +               R_CAPACITY_CURVE(MAX_POINTS_IN_GS),
0!     +               R_COST_CURVE(MAX_POINTS_IN_GS),
0!     +               R_ENERGY,INT2(168))    ! ... for all 168 hours of the week
0!     +               R_EXTRACT_CURVE(MAX_POINTS_IN_GS))
0!     +               R_MAXIMUM_MW,
0!     +               R_MINIMUM_MW,
0!     +               R_MINIMUM_MW,           ! FORECAST BASE
0!     +               R_WEEKLY_LOAD,         ! array destination of mapping ...
0!     +               SALES_B4_AFTER(MPOS,2,R_DATA_BASES) -
0!     +               SALES_B4_AFTER(TEMP_LAST_POINT-NEW_POINT+1,2,I)
0!     +               SALES_B4_AFTER(TEMP_LAST_POINT-NEW_POINT,2,I) +
0!     +               SAVE_MONTH /= LAST_SEASON .OR. 
0!     +               SELL_OR_BUY,
0!     +               STATE_2_GAS_REGION_LOOKUP(TEMP_STATE)
0!     +               SUM_ANNUAL_REPORT_ITEMS(1,AREA) +
0!     +               SUM_ANNUAL_REPORT_ITEMS(2,AREA)
0!     +               SUM_ANNUAL_REPORT_ITEMS(3,AREA) +
0!     +               SUM_ANNUAL_REPORT_ITEMS(4,AREA) +
0!     +               SUM_ANNUAL_REPORT_ITEMS(5,AREA) +
0!     +               SUM_ANNUAL_REPORT_ITEMS(6,AREA) +
0!     +               SUM_ANNUAL_REPORT_ITEMS(7,AREA)
0!     +               SUM_ANNUAL_REPORT_ITEMS(8,AREA) +
0!     +               SUM_ANNUAL_REPORT_ITEMS(9,AREA) +
0!     +               SUM_REPORT_ITEMS,
0!     +               TEMP_CUSTOMER_NAME, 
0!     +               TOTAL_PC_FOR_,
0!     +               TRANS_VAR_EXP/1000.,
0!     +               TRANS_VAR_EXP/1000., ! FUEL COST
0!     +               TRANS_VAR_MWH, ! FUEL_CHARGE_RATE
0!     +               UNIT_UP_LAST_HOUR
0!     +               WEEKLY_REFERENCE_BASE,
0!     +               WEEKLY_REFERENCE_LOAD, ! array source of mapping ...
0!     +               WEEKLY_REFERENCE_PEAK,
0!     +               WRITE_DAY_OF_WEEK
0!     +               YES_USE_TF_FILE_FOR_MULTIAREA() .AND. 
0!     +               ZONE__A_TO_B_WHEELING_RATES(LINK_INDEX(R_A,R_B))
0!     +               ZONE__B_TO_A_WHEELING_RATES(
0!     +               file.'
0!     +               trim(SCENARIO_REFERENCE_NUM)//
0!     +              ' a "," in a character name.'
0!     +              'Account Name        ','C',INT2(34),'V','D',INT2(30)
0!     +              'Year                ','N',INT2(4),'V','D'
0!     +              (mod(InclBitPattern/2**(iMSb-1),2)==0))
0!     +              + CASH_DISTRIBUTION(1:12)
0!     +              //"Transportation Vehicles,"
0!     +              ANNUAL_VARS_Customer_Revenue +
0!     +              ANNUAL_VARS_Energy_Revenue +
0!     +              ANNUAL_VARS_Peak_Revenue +
0!     +              CALL REGIONAL_OUTAGES_MAKEOVL(REGIONAL_OUTAGES_FILE)
0!     +              ContigGain(HrInYr)
0!     +              ContigPrices(HrInYr),
0!     +              GET_CONSTRAINT_MULT(L1,L2,
0!     +              GET_CONSTRAINT_MULT(R_SELLER,R_BUYER,
0!     +              GET_MONTHLY_REGIONAL_PARAM(R_YR,START_MO,TG,INT2(5))
0!     +              HrlyCapUsed(iHr,iDa,iMo,1,iUnit),
0!     +              LDE_FILE_DIRECTORY
0!     +              MONTHLY_PRODUCT_DAYS(NUM_TRANSACTIONS,0:12),
0!     +              MONTHLY_PRODUCT_HOURS(NUM_TRANSACTIONS,0:12),
0!     +              MONTHLY_TRANS_HOURS(NUM_TRANSACTIONS,0:12),
0!     +              OperCost(1,iMo),
0!     +              R_MONTHLY_CAPACITY(HOUR_IN_MONTH) + GpCapyProrated
0!     +              R_OPTION_MAX_CAPACITY(*)
0!     +              SCEN_OUTAGES_VARIABLE(REGIONAL_INDEX,R_YEAR,R_MONTH)
0!     +              SCR_BASE_FUEL_RATE,
0!     +              SUM(MM_MEMBER_DATABASE(1:,1,R_TYPE,:),DIM=4)
0!     +              StrikeMMHHH(1,i,iUnit),
0!     +              TEST_HOUR_TIE_LIMIT(SELLER,BUYER) - TEMP_TRANSACTION
0!     +              TOTAL_MONTHLY_CASH(LAST_MONTH:LAST_MONTH+11,NonFuel)
0!     +              nHrAvail(iGP),iGP==1)
0!     +             (DAYS_REMAIN_IN_YEAR(R_MONTH) - 
0!     +             (DEMAND_VOLUME + LAST_DEMAND_VOLUME) * FUEL_USE * 0.5
0!     +             + WVPA_OTHER_PSCR_COST                  ! 108
0!     +             - WVPA_PSCR_AJD_2_FUEL_COST(:)
0!     +             - WVPA_WHOLESALE_FUEL_COST(:) ! replaces the above with the net revenue
0!     +             - WVPA_WHOLESALE_REVENUE ! removed 1/29/04
0!     +             GRX_CONVERGED .OR. GRX_ITERATIONS>=MAX_GRX_ITERs .OR.
0!     +             NEW_FUEL_PRICE(THIS_FUEL_POINTER,12_2,LOCAL_YEAR-1_2) 
0!     +             RETURN_RESERVE_MARGIN_RATIO(PEAK_AFTER_INTERRUPTIBLE,
0!     +             R_CF < 
0!     +             SCEN_OUTAGES_VARIABLE(R_FUEL_INDEX,TG,R_MONTH,R_YEAR)
0!     +            'vector file at record',IREC,' In DSM FIN'
0!     +            (LPROB(LOAD_POINT) + LPROB(LOAD_POINT-1)) *
0!     +            (RECORD_LENGTH*DEM_1_REC_POS(I,J),J=1,DEM_1_PTR(I))
0!     +            (RECORD_LENGTH*DEM_2_REC_POS(I,J),J=1,DEM_2_PTR(I))
0!     +            (RECORD_LENGTH*DEM_3_REC_POS(I,J),J=1,DEM_3_PTR(I))
0!     +            (RECORD_LENGTH*DEM_4_REC_POS(I,J),J=1,DEM_4_PTR(I))
0!     +            (RECORD_LENGTH*DEM_5_REC_POS(I,J),J=1,DEM_5_PTR(I))
0!     +            (RECORD_LENGTH*DEM_6_REC_POS(I,J),J=1,DEM_6_PTR(I))
0!     +            (RECORD_LENGTH*DEM_7_REC_POS(I,J),J=1,DEM_7_PTR(I))
0!     +            (WHOLESALE_LPROB(LOAD_POINT) + 
0!     +            .NOT. GAS_GROUP_ACTIVE_SWITCH(A_ID) .OR.
0!     +            .NOT. GAS_GROUP_ACTIVE_SWITCH(B_ID)) CYCLE
0!     +            100.*(
0!     +            ANNUAL_TG_POWER_VOLUME,
0!     +            AVE_DAILY_PEAK
0!     +            DEPTH_OF_PATH(:,:,:),        ! ACTIVE_NODES,ACTIVE_LINKS-1
0!     +            FIRST_SCR_RATE_CHANGE_MONTH,
0!     +            GET_LAGGED_HH_PRICE,
0!     +            GET_TRANS_PEAK_AFTER_EL,
0!     +            HOURLY_TRANSACTION_LOAD(HOUR_IN_THE_SEASON,
0!     +            INDEX_OF_PATH_LINK(:,:,:), ! ACTIVE_NODES,ACTIVE_LINKS-1,ACTIVE_LINKS-1
0!     +            J_PATH(:),   ! BIG
0!     +            J_PATH(:),   ! BIG 
0!     +            LAST_SEASON,PRODUCTION_PERIODS,
0!     +            LINK_MEMORY(:,:,:),          ! ACTIVE_NODES
0!     +            LOCAL_CUSTOMER_NAME(TRANS), 
0!     +            MAX_TRANS_GROUPS = 25,
0!     +            MONTHLY_AC_EXPENSE(ASSET_CLASS,3,0) +
0!     +            MONTHLY_AC_EXPENSE(ASSET_CLASS,3,R_MONTH) +
0!     +            MONTHLY_AC_EXPENSE_ENERGY(ASSET_CLASS,FI,0) +
0!     +            MONTHLY_AC_EXPENSE_ENERGY(ASSET_CLASS,FI,MONTH) +
0!     +            MONTHLY_ENERGY_COST(IND,0) + SUM_QTY_COST
0!     +            MONTHLY_ENERGY_COST(IND,R_MONTH) +
0!     +            MONTHLY_INDEXED_ENERGY_REVENUE(
0!     +            MONTHLY_TRANS_BASE(:),
0!     +            MONTHLY_TRANS_LOAD_HYDRO_MW(:),
0!     +            MONTHLY_TRANS_LOAD_HYDRO_MWH(:),
0!     +            MONTHLY_TRANS_LOAD_MWH(:),
0!     +            MONTHLY_TRANS_PEAK(:),
0!     +            MONTH_CAPACITY
0!     +            MONTH_CAPACITY(12)
0!     +            MONTH_GENERATION(12),
0!     +            MONTH_GENERATION,
0!     +            MONTH_VARS(0:12,1:*),
0!     +            NUMBER_OF_ACTIVE_PATHS(:), ! ACTIVE LINKS-1
0!     +            NUM_ACTIVE_START_END(:,:),
0!     +            OUTAGE_OWNER
0!     +            PC_C(:),
0!     +            PC_FOR_(:,:,:),
0!     +            PLANNING_AREA_2_CS(:),
0!     +            PLANNING_AREA_2_GN(:),
0!     +            PLANNING_AREA_2_GS(:),
0!     +            PLANNING_AREA_2_TG(:),
0!     +            REDUCE_PATH_CAPACITY(HR,R_MONTH,
0!     +            R_FUEL_INDEX > 0 .AND. 
0!     +            R_HYDRO_LOAD(*),
0!     +            R_NodeCap(*),
0!     +            R_PRICE_VARIABLE(*),
0!     +            SECOND_SCR_RATE_CHANGE_MONTH
0!     +            SET_HOUR_LONG_GAS_LINK_PARAMS,
0!     +            SET_HOUR_LONG_GAS_STORAGE_PARAMS,
0!     +            SET_HOUR_LONG_PATH_PARAMS,
0!     +            SET_HOUR_LONG_TRAN_EXP_PARAMS,
0!     +            TEMP_HOURLY_INDEX(*)
0!     +            TEMP_U,TEMP_B
0!     +            TF_PLANNING_PEAK,
0!     +            TOTAL_PC_FOR_(:,:),
0!     +            TRANS_LOAD_2_TRANS_GROUPS,
0!     +            TRANS_LOAD_GROUPS_INDEX,
0!     +            TRANS_LOAD_GROUP_2_TG,
0!     +            nHrAvail(iGP),iGP==1)
0!     +           ANNUAL_TRANS_INDEXED_REVENUE(0:MAX_TRANS_LOAD_TABLES))
0!     +           CALCULATED_BASE,
0!     +           CALCULATED_PEAK,
0!     +           HOURLY_HYDRO(1,R_TRANS_GROUP,P_OR_G),
0!     +           LOAD_HOURS_IN_PERIOD)
0!     +           MARKET_AREA_LOOKUP(BASECASE_MARKET_AREA_ID(TRANS)(1:5))
0!     +           TRANS_EL_CAPACITY,
0!     +           TRANS_EL_GENERATION,
0!     +          CALL REGIONAL_PARAMETER_MAKEOVL(REGIONAL_PARAMETER_FILE)
0!     +          CL_CAPACITY_TEMP_RETIRE_UNIT,
0!     +          CX_FIRST_FOR_ENDPOINT,
0!     +          EL_UNIT_ID,
0!     +          ENDYR,MAX_YEARS
0!     +          EXISTING_STORAGE_N_HYBRID,
0!     +          FIRST_CALL_TO_ENDPOINT(:),
0!     +          FIRST_SCR_RATE_CHANGE_YEAR,
0!     +          GET_UNIT_START_UP_COSTS,
0!     +          HOURS_SINCE_SHUT_DOWN(:)
0!     +          HOURS_SINCE_START_UP(:),
0!     +          HYDRO_ASSET_CLASS_POINTER(:)
0!     +          INDEP_POINTER,
0!     +          INT(10.0*TRANSITION_MARGINAL_COST(NEW_POINT,I,TEMP_I1))
0!     +          LAST_STUDY_YEAR,EXTENSION_PERIOD,LAST_EXTENSION_YEAR,
0!     +          MAX_YEARS
0!     +          NGas_VolatilityByHour(744),
0!     +          NodePri(iDNod),NodeMgC(iDNod),' NodePri&MgC_rem'
0!     +          NodePri(iDNod),NodeMgC(iDNod),' NodePri&MgC_rev'
0!     +          PLANNING_AREA/.FALSE./,
0!     +          RESERVE_BLOCK,
0!     +          RPS_INDEX_TRANSLATE,
0!     +          SECOND_SCR_RATE_CHANGE_YEAR
0!     +          TEMP_ESC(4)
0!     +          WVPA_RATE_TRACKER_INDEX(:),
0!     +         ,CASH,BOKLF,DESC,
0!     +         .NOT. TIG_FILE_EXISTS .OR.
0!     +         ABANDONMENT_CHARGE_PERCENT,
0!     +         ABANDONMENT_FIXED_CHARGE,
0!     +         ACCELERATE_CHARGE_PERCENT,
0!     +         ACCELERATE_FIXED_CHARGE,
0!     +         DELAY_CHARGE_PERCENT,
0!     +         DELAY_FIXED_CHARGE,
0!     +         ENERGY_LOSS_MULT/1.0/,
0!     +         EXTRAORDINARY_EXPEN_ALLOCATION,
0!     +         GET_DUKE_RESERVE_CAPACITY,
0!     +         GLBonPointWithTMC)
0!     +         HOURLY_PRICE(TRANS))
0!     +         MAINTENANCE_PENALTY(12)/1.00,1.00,1.00,1.05,
0!     +         MONTHLY_ENERGY_REVENUE(IND,:) + STORAGE_ENERGY_REVENUE(:)
0!     +         SALES_B4_AFTER(TEMP_LAST_POINT-NEW_POINT,2,I) =
0!     +         SERVICE_FUEL_CHARGE(SERVICE_TRANS),
0!     +         SERVICE_FUEL_ESCALATION_VECTOR(SERVICE_TRANS),
0!     +         SYSTEM_PROD_BY_TG_BY_MW,
0!     +         TAKE_BONUS_TAX_DEPRECIATION
0!     +         TRANS_EL_CAPACITY - CALCULATED_BASE > .1 .AND.
0!     +         TRANS_GROUP_CAP,
0!     +         TRIM(CONVERT_2_STR(RoutID))//','// &
0!     +         TRIM(CONVERT_2_STR(iDNod))//','//
0!     +         TRIM(CONVERT_2_STR(iLink))//','//
0!     +         TRIM(CONVERT_2_STR(iSNod))//','//
0!     +         TXNORM,SALVAGE_VALUE,
0!     +         WRITE_OFF_ABANDONMENT_METHOD,
0!     +         WRITE_OFF_YEARS,
0!     +        ' link',iLink,iSNod,iDNod,trim(DNodName(iDNod))
0!     +        (1:nCCSegs,  1:nSNod,iYr)
0!     +        (RATE_CODE(I) >= 200000 .AND. RATE_CODE(I) < 300000))CYCLE
0!     +        (RATE_CODE(I) >= 200000 .AND. RATE_CODE(I) < 300000))CYCLE ! 5/5/04 for MI change
0!     +       .AND. LOCAL_HEAT > 0.00001 .AND. 
0!     +       BASE_LOAD_RATE,EL_BASE_REVENUE_RATE,
0!     +       ESCALATED_MONTHLY_VALUE,
0!     +       GAS_GROUP_CAP,
0!     +       INT((NUM_TRANS_GROUPS+1)*
0!     +       PEAK_LOAD_RATE,EL_PEAK_REVENUE_RATE,
0!     +       TRANS_GROUP_CAP,
0!     +       TRANS_LODDUR(TRANS_LOAD_POINTS),
0!     +       TRANS_LPROB(TRANS_LOAD_POINTS),
0!     +      'Resource Name       ','C',INT2(24),'V','D'
0!     +      'Status              ','C',INT2(10),'V','D'
0!     +      .or.((nBiU==2).and.(CostCriterion(2)<MktPrice))) then ! economic
0!     +      CUM_HOURS,
0!     +      CUM_REVENUE,
0!     +      DEALLOCATE(
0!     +      DEALLOCATE(STRIKES_AVAILABLE,STRIKES_REQUIRED)
0!     +      ENERGY
0!     +      HOURLY_FORWARD_CONTRACT_ENERGY
0!     +      LODDUR,
0!     +      LPROB,
0!     +      NodePri(iNode),NodeMgC(iNode),' NodePri&MgC_org'
0!     +      NodeQtyLoB(i),NodeQtyLim(i),NodeQtyHardLim(i),' HL',
0!     +      ORG_ORDER,N_BEST_VALUES,.FALSE.)
0!     +      R_MONTHLY_PRICE(HOUR_IN_MONTH-24)
0!     +      R_STRIKE_QUANTITY *
0!     +      SAVE_PRICE_FEEDBACK,Q_INPUT,Q_OUTPUT,CLASS_TOTAL_ADJUSTER
0!     +      STRIKES_AVAILABLE(NUM_TRANSACTIONS),
0!     +      STRIKES_REQUIRED(NUM_TRANSACTIONS))
0!     +      trim(NodeName(i))
0!     +     ACCUMLATOR_FOR,
0!     +     Annual Base Yr Quantity
0!     +     Annual Quantity Limit
0!     +     BASE_YR
0!     +     BUYER_TRANSACTION_GROUP,
0!     +     Basin Active
0!     +     Basin HI ID
0!     +     Basin HI ID                  BasnID(iBasn)
0!     +     Basin Name
0!     +     CAPACITY_TO_LEVELIZE_RM
0!     +     CLASS_COSTS_TOTAL,
0!     +     CLASS_RATES
0!     +     CONSTRAINTS_INDEX,
0!     +     CONSTRAINTS_PER_PAIR,
0!     +     CUSTOMER_ALLOCATOR,SYSTEM_LOSSES
0!     +     ConsMtxNze(jVar)
0!     +     DISCOUNT_FOR_YEAR,
0!     +     DSM_PEAK_RESERVE_ALLOCATION(3,7,12),
0!     +     DSM_PEAK_RESERVE_ALLOCATION(3,SYSTEM_CLASS_NUM,12),
0!     +     DSM_PEAK_RESERVE_ALLOCATION(:,:,:),
0!     +     FROM_AREA,
0!     +     GET_MRX_PLANNING_RESERVE_MARGIN
0!     +     GREG_ENERGY_RESERVE_ALLOCATION(3,SYSTEM_CLASS_NUM,12),
0!     +     GREG_ENERGY_RESERVE_ALLOCATION(:,:,:),
0!     +     GROUP_NUM,
0!     +     HOUR_CONSTRAINT_LIMIT,
0!     +     HOUR_PATH_LIMIT,
0!     +     HOUR_TIE_LOADING,
0!     +     Link ID
0!     +     MAX_CONSTRAINTS
0!     +     MAX_HOURLY_EXPORT(:),
0!     +     MAX_HOURLY_IMPORT(:),
0!     +     MAX_SELL_RESERVE_MARGIN,
0!     +     MONTHLY_INDEXED_ENERGY_REVENUE(:,:,:) OUT 2/11/2/.
0!     +     MW_LIMIT,
0!     +     Maximum Annual Quantity      BasnQtyUB(iBasn)
0!     +     Minimum Annual Quantity      BasnQtyLB(iBasn)
0!     +     NUMBER_OF_WHEELS
0!     +     NUM_PERIODS,
0!     +     OFF_PEAK_MULT,
0!     +     OPERATE_ON_VECTOR
0!     +     OPERATION_VARIABEL_POINTR,
0!     +     PATHS_INDEX,
0!     +     PATHS_PER_PAIR,
0!     +     PATH_INDUCTANCE,
0!     +     PATH_KV_RATING,
0!     +     PATH_OWNER,
0!     +     PATH_PERCENT,
0!     +     PATH_SPREAD,
0!     +     PATH_SPREAD_MULT,
0!     +     PATH_SPREAD_OFF_MULT,
0!     +     PATH_WHEEL_MULT,
0!     +     PATH_WHEEL_OFF_MULT,
0!     +     PATH_WHEEL_RATE,
0!     +     PEAK_MULT,
0!     +     PLANNING_AREA_2_CS,
0!     +     PLANNING_AREA_2_GN,
0!     +     PLANNING_AREA_2_GS,
0!     +     PLANNING_AREA_2_TG,
0!     +     Plant HI ID
0!     +     RETURN_RESERVE_MARGIN_COSTS,
0!     +     REVERSE_PATH,
0!     +     RM_PURCHASE_FIXED_COST,
0!     +     RM_PURCHASE_VARIABLE_COST,
0!     +     RM_SALE_FIXED_AMOUNT,
0!     +     RM_SALE_VARIABLE_AMOUNT,
0!     +     R_CAPACITY_ADDER_ARRAY(0:TRANS_GROUPS_RECORDS),
0!     +     R_CAPACITY_CURVE,
0!     +     R_COST_CURVE,
0!     +     R_DISPATCH_COST_FOR_BLOCK(*),
0!     +     R_DSM_ENER_ALLOCATION(*)
0!     +     R_DSM_ENER_RESERVE_ALLOCATION(3,*),
0!     +     R_DSM_PEAK_RESERVE_ALLOCATION(3,*),
0!     +     R_EXTRACT_CURVE,
0!     +     R_GENERATION_BY_SEGMENT(*),
0!     +     R_INCREMENTAL_FUEL_COST(*),
0!     +     R_RETAIL_REVENUE_FOR_BLOCK(*),
0!     +     R_TRANS_GROUP,R_MARKET_PRICE)
0!     +     Route Active
0!     +     SEASON,
0!     +     SEASON_CONSTRAINT_LIMIT,
0!     +     SEASON_PATH_LIMIT,
0!     +     START_YEAR,END_YEAR,
0!     +     SUM_FOR,
0!     +     SUM_OF_YEARLY_DISCOUNT,
0!     +     TG_USED_IN_PATH,
0!     +     TIES_PER_PAIR,
0!     +     TIE_INDEX,
0!     +     TIE_WHEEL_INDEX,
0!     +     TO_AREA
0!     +     TRANS_GROUP_POSITION
0!     +     TRANS_GROUP_POSITION,
0!     +     Transport Price
0!     +     Transport Price Escalation
0!     +     USER_MARKET_PRICE(24),
0!     +     VARIABLE_NUM,FUNCTION_OPERATOR,
0!     +     VARIABLE_STRING,
0!     +     WHEEL_PATH,
0!     +    ,LbValu(iLbV),UbValu(iUbV),iDNod
0!     +    Annual Price       pInYr(iCont,30)
0!     +    Annual Quantity    qInYr(iCont,30)
0!     +    COMMENT
0!     +    Coal Type          ContractCoalName(iCont)
0!     +    Contract Active
0!     +    Contract ID
0!     +    Contract Name
0!     +    LinkAvQSeg(iSeg,iLink)/float(nDays) ! result in MMCF[per day]
0!     +    Mine Basin Name
0!     +    Mine ID
0!     +    Mine Name
0!     +    NodeQtyLoB(iNode),NodeQtyLim(iNode),NodeQtyHardLim(iNode), ! 'SCap,'
0!     +    Nth Contract
0!     +    Plant ID           GPntID(iCont)
0!     +    SNodQtyUB(iSNod),SNodPri(iSNod),nNzSegs,SumSUsd
0!     +    StrKey(iOrg(k)),StrKey(sPos(k)),'aft ISAO'
0!     +    UbValu(iLbV),' LoB,UpB for ',trim(NodeName(iNode))
0!     +    VarDesc(jVar),SNodName(iSNod)
0!     +    call AppendF8p2(OutU,SNodQty(iSNod)/SNodQtyUB(iSNod),B1)
0!     +    r4,' SLoB,SLim,HLim,SPri'
0!     +    write(DbgU,'(i4,2f9.4)') iNode,NodePri(iNode),NodeMgC(iNode)
0!     +   R_ANNUAL_PRICE,    ! 24x31x12 hourly detail ! CALL EXTERNALLY
0!     +   R_DAYS_IN_MONTH,
0!     +   R_DAYS_IN_YEAR,
0!     +   R_MONTH,
0!     +   R_MONTHLY_AVAIL)
0!     +   R_MONTHLY_AVAIL)    ! 24x31x12 hourly detail begins at (1); (0:8784)
0!     +   R_MONTHLY_CAPACITY, ! 24x31 hourly detail begins at (1); (0:800)
0!     +   R_MONTHLY_CAPACITY, ! 24x31x12 hourly detail begins at (1); (0:8784)
0!     +   R_MONTHLY_PRICE,    ! 24x31 hourly detail
0!     +   R_TRANS_GROUP,
0!     +   R_TRANS_GROUP,R_MARKET_PRICE)
0!     +  ' ----------- ----------- ----------- ------',
0!     +  ' ---------------------------'
0!     +  ' Coal,Node allocd'
0!     +  ' NodeQtyLoBd NodeQtyLimt NodeQtyHLim NodPri NodeName'
0!     +  ' cVect',jVar=1,nVar)
0!     +  LinkCap,LinkFunc,LinkAvQSeg,LinkExpQty)
0!     +  R(9,z)*G1*G1*G2=G1*G1*G1*G131104]).
0!     +  SrcSN,LinkDir,nSegUsd,
0!     +  float(nDays)/365.25,
0!     +  x(*),y(*),yMin,yMax,ySum,xMin,xMax,
0!     + [R(2,z)*G1/6]
0!     + [R(4,z)*G3=G1*G2144 + R(8,z)*G1*G1*G1/1296]
0!     - CAPACITIES NEED TO CHANGE MONTH/ANNUAL
0!     - COSTS OF THE RESOURCE SHOULD BE CALCULATED MONTHLY, ESP. FOR GAS UNITS
0!     - FUEL PRICES SHOULD BE CALLABLE FROM THE FUEL PRICE FILE
0!     - [R(3,z)*G2=G1*G172]
0!     - [R(5,z)*G4=(G2*G21152 + G1*G3/720)
0!     .EXE-caller of .DLL finds UnitInUse below false on 20040628, so the .DLL
0!     041617
0!     072917
0!     1-Q(z) = N(-1,z)
0!     1. NEED TO SORT SEPA CONTRACT.
0!     1. PERMIT A NEGATIVE HOURLY LOAD VALUE
0!     1. SELLER SELLS TEMP_INTERP_TRANSACTION, ITS COSTS DON'T CHANGE
0!     1/11/93. ADDED DUE TO CHECK DIFFERENCES IN PROGRAMS BETWEEN
0!     11/9/89. MODIFIED TO ALLOW FOR THREE DAY TYPES (AVE WKDAY, AVE
0!     2. BUYER BUYS TEMP_INTERP_TRANSACTION, ITS COSTS DON'T CHANGE
0!     2. PRICE THE HOURLY LOAD VALUE AT (?) ZERO
0!     2/10/93. GAT.
0!     2/10/93. GAT. ADDED FOR KCPL TO PUT CHRONO BACK INTO LOADS
0!     2/14/90: THE ROUTINE HAS BEEN CHANGED TO FIND THE AMOUNT OF
0!     2/14/93. GAT. ADDED DAY_* FOR KCPL
0!     2/28/99. GAT.
0!     26.2.31 of the NBS reference factors the nth-order derivative N(n,z) into
0!     3, PASSING TWO NEW VARIABLES,
0!     3. MAKE SURE THAT NEGATIVE HOURLY LOADS DO NOT CAUSE ERRORS
0!     4. MAKE SURE THAT THE SALE DOES NOT EXTEND BEYOND THE NEGATIVE VALUE
0!     5/15/92 ENHANCED PRICING STRUCTURE TO ACCOMODATE IE, IP, CIPS
0!     9/5/95. GAT. MOVED FROM DR_BOOTH FOR WVPA.
0!     => SUM OF MAX_TRANS_LOAD_TABLES FOR A TG 
0!     A SUBROUTINE FOR CONTRACTS IN PRODUCTION DISPATCH                C
0!     A SUBROUTINE TO CALCULATE THE MARGINAL COST OF A THERMAL SYSTEM
0!     A SUBROUTINE TO INITIALIZE CONTRACTS                             C
0!     A SUBROUTINE TO INTEGRATE THE PROB CURVE TO FIND THE ENERGY
0!     A SUBROUTINE TO INTEGRATE THE PROB CURVE TO FIND THE HEAT USAGE
0!     A SUBROUTINE TO PRODUCE CALENDAR CORRECT HOURLY MARGINAL COSTS
0!     A SUBROUTINE TO PRODUCE CALENDAR INCORRECT HOURLY MARGINAL COSTS
0!     A SUBROUTINE TO REVERSE VIDEO THE MODULE BEING RUN
0!     A strictly Normal distribution, of which all Kn are zero for n>2, has
0!     AA_OBJT.FOR
0!     ABBCapacityMarketRept.F95
0!     ADDED FOR MIDAS GOLD 6/5/91.
0!     ADDED FOR MIDAS GOLD, 6/5/91
0!     AFTER THEY HAVE BEEN OPERATED UPON BY ENRGLIMT.FOR
0!     AGT 20020823
0!     AGT to  GAT: enable the following during debugging
0!     ALLOCATABLE :: ESCALATION_RATES
0!     ALLOCATABLE :: REVENUES,
0!     ALLOCATION.  THE ALGORITHM TAKES THE CURRENT RIGHT ELDC
0!     ALTERED FOR IP, 6/5/91.
0!     ALWAYS ACCUMULATE ENERGY/HEAT IN THE LAST HOUR.
0!     AND FOURTH ARE: PRODUCTION DISPATCH AND CONVOLVING INFO,
0!     AND INITIALIZE FOR PURCHASING
0!     AND TIES
0!     AND TO IDENTIFY CAPACITY POINTER VARIABLES.
0!     AND TOTAL AMOUNT OF GENERATION. ALSO, THE TOTAL NUMBERS OF EACH
0!     ANDECOMP.FOR
0!     ANOTHER DAY TYPE. THIS NEW DAY TYPE REPRESENTS THE AVERAGE
0!     ASSUMES:
0!     AT THE BEGINNING OR ENDING (TO RESET) OF THE OUTAGE STATE
0!     AVAILABLE_CONTRACT (STATE VARIABLE)
0!     As the order increases from 2 (for the strictly Normal) to 6, one group of
0!     At the conclusion of the polynomial-indexing loop, the terms
0!     Attempts at simplifying the curve by merely zeroing c3, or by assigning
0!     Author : GREG TURK
0!     Author : Greg Turk
0!     Author : MARK S GERBER
0!     Author : Mark S GErber
0!     Author : Mark S Gerber
0!     Author : TOM SWEET
0!     Author : Tom Sweet
0!     Author : msg
0!     Author: Pablo Bilbao
0!     B PLUS CONTRACT_CAPACITY, OR UNTIL MAXIMUM_CONTRACT_ENERGY
0!     BEEN ELIMINATED.
0!     BFIL_OBJ.FOR
0!     BOUNDARY AND LOADS CONTRACTS UNDER THE ELDC UNTIL A STOPPING
0!     Before the polynomial-indexing loop, the area
0!     BlockCap,OperCost needed only for OptionValue computation
0!     CA ADDED 2/25/99
0!     CALCULATE BOOK DEPRECIATION ON BRICKS AND MORTAR
0!     CALCULATE DAILY STORAGE PATTERN (GEN AND PUMP) BY TRANS BY HOUR
0!     CALL LOCATE(10,9)
0!     CALL LOCATE(16,9)
0!     CALL RESET_FA_BASE_RECORDS
0!     CALL RINIT ! 8/12/94. GAT. MOVED FROM INSIDE FINANBSE. remove 3/2/98 msg
0!     CALL RS_MAKEBIN
0!     CALL TO READ EXISTING TREE
0!     CALL WRITE_INVERSE_VIDEO(5,"Capacity",10,15)
0!     CALLED FROM INSIDE PROCOST, BEFORE PERIOD LOOP
0!     CALLED MONTHLY IN DR_BOOTH
0!     CAPACITY PLANNING SECTION
0!     CAPACITY_COST (VARIES WITH THE MAXIMUM CONTRACTED CAPACITY)
0!     CAP_OBJT.FOR
0!     CAT2OBJT.FOR
0!     CATAWBA.FOR
0!     CF_OBJT.FOR
0!     CHANGES THE STATE BY BLOCK FOR EACH UNIT ON-TO-OFF, OFF-TO-ON, ETC.
0!     CHARACTER*2 HOURLY_CHAR
0!     CHECK WHETHER ANY OF THE FOUR PEAK DAYS ARE WEEKEND DAYS
0!     CLOSFILE.FOR
0!     CL_DISPATCH_COST AND REMAINING_ENERGY
0!     CNWMSUBS.F90
0!     CN_OBJT.FOR
0!     COAL_MODULES.F95
0!     COAL_MODULES_MAKEOVL.F95
0!     COAL_VECTOR_OBJ.F90
0!     CONDITION IS REACHED.  THEN, THE RIGHT BOUNDARY, REMAINING_
0!     CONSTRAINT (1) IS TESTED INSIDE CONTRACT_ENERGY.
0!     CONSTRAINTS 2-5 ARE CAPACITY CONSTRAINTS.  THE MINIMUM OF THE
0!     CONTRACTS HAVE THE FOLLOWING CHARACTERISTICS:
0!     CONTRACTS PROVIDES AN ABILITY TO INCORPORATE PURCHASE POWER
0!     CONTRACTS.  SUBROUTINE ASSUMES A IS THE NEW LEFT BOUNDARY.
0!     CONTRACT_CAPACITY (STATE VARIABLE)
0!     CONTRACT_ENERGY (STATE VARIABLE)
0!     COPYRIGHT (C) 1992 M.S. GERBER & ASSOCIATES, INC. 
0!     COPYRIGHT (C) 1992 M.S. GERBER & ASSOCIATES, INC. ALL RIGHT RESERVED
0!     COST INFORMATION.
0!     CO_OBJT.FOR
0!     CPL_OBJT.FOR
0!     CT_OBJT.FOR
0!     Capacity-limited production costs
0!     Copyright(c)  2000
0!     Copyright(c)  2004
0!     Copyright(c) DrG Solutions 2013
0!     Copyright(c) Global Energy Decisions 2000
0!     Copyright(c) M.S. Gerber & Associates 2000
0!     Copyright(c) M.S. Gerber & Associates 2004
0!     Copyright(c) M.S. Gerber & Associates, Inc. 2000
0!     Copyright(c) M.S.Gerber & Associates 2000
0!     Copyright(c) Microsoft 2000
0!     Created: 05/22/2024 
0!     Created: 1/10/2010 2:44:53 PM
0!     Created: 1/10/2010 2:47:44 PM
0!     Created: 1/13/2003 4:07:27 PM
0!     Created: 1/14/2003 8:07:52 PM
0!     Created: 1/16/2003 10:54:43 AM
0!     Created: 1/2/2003 9:09:04 AM
0!     Created: 1/29/2003 1:30:28 PM
0!     Created: 1/29/2004 8:58:55 AM
0!     Created: 1/29/2007 3:53:38 PM
0!     Created: 1/4/2005 7:24:42 PM
0!     Created: 1/5/2010 11:27:30 AM
0!     Created: 1/7/2011 10:44:33 AM
0!     Created: 10/14/02 1:10:21 PM
0!     Created: 10/16/02 3:25:38 PM
0!     Created: 10/19/02 3:15:03 PM
0!     Created: 10/2/02 9:16:35 PM
0!     Created: 10/2/2007 2:07:52 PM
0!     Created: 10/23/02 11:28:46 AM
0!     Created: 10/24/02 11:23:58 AM
0!     Created: 10/24/02 11:45:48 AM
0!     Created: 10/24/02 6:01:33 PM
0!     Created: 10/29/02 2:44:52 PM
0!     Created: 11/11/02 10:23:26 AM
0!     Created: 11/11/02 10:25:53 AM
0!     Created: 11/15/2006 1:56:02 PM
0!     Created: 11/15/2006 2:00:02 PM
0!     Created: 11/15/2006 2:03:00 PM
0!     Created: 11/15/2006 3:49:10 PM
0!     Created: 11/18/2009 10:28:43 AM
0!     Created: 11/6/02 2:59:27 PM
0!     Created: 11/7/2006 10:00:09 AM
0!     Created: 11/7/2006 10:02:31 AM
0!     Created: 11/7/2006 10:33:11 AM
0!     Created: 11/7/2006 9:55:52 AM
0!     Created: 11/7/2006 9:58:04 AM
0!     Created: 11/8/2006 1:58:49 PM
0!     Created: 11/8/2006 2:02:15 PM
0!     Created: 11/8/2006 2:10:56 PM
0!     Created: 12/10/2003 4:59:37 PM
0!     Created: 12/13/2010 3:37:43 PM
0!     Created: 12/23/2010 1:42:47 PM
0!     Created: 12/26/2002 10:32:01 AM
0!     Created: 12/26/2002 12:14:31 PM
0!     Created: 12/9/2010 10:54:40 AM
0!     Created: 2/26/2003 11:25:24 AM
0!     Created: 2/3/2004 4:44:35 PM
0!     Created: 4/20/2003 11:45:49 AM
0!     Created: 4/21/2003 3:04:58 PM
0!     Created: 4/21/2003 8:56:12 AM
0!     Created: 4/28/2011 2:50:40 PM
0!     Created: 4/30/2003 5:56:30 PM
0!     Created: 5/16/2003 11:54:14 AM
0!     Created: 5/27/2003 5:11:46 PM
0!     Created: 5/5/2003 2:20:41 PM
0!     Created: 6/16/2010 5:28:58 PM
0!     Created: 6/20/2003 3:37:14 PM
0!     Created: 6/23/2003 2:14:00 PM
0!     Created: 6/25/2003 2:50:17 PM
0!     Created: 6/25/2003 4:08:49 PM
0!     Created: 6/26/2003 5:17:47 PM
0!     Created: 7/23/2003 10:50:52 AM
0!     Created: 7/6/2003 3:36:13 PM
0!     Created: 7/7/2003 2:05:02 PM
0!     Created: 8/13/2003 12:33:17 PM
0!     Created: 8/23/2009 5:09:34 PM
0!     Created: 8/26/2003 4:19:58 PM
0!     Created: 8/5/2003 10:21:06 AM
0!     Created: 8/5/2003 10:39:11 AM
0!     Created: 8/5/2003 3:21:35 PM
0!     Created: 8/5/2005 3:01:58 PM
0!     Created: 8/8/2021 12:53:10 PM
0!     Created: 9/10/2003 12:39:18 PM
0!     Created: 9/15/2003 3:09:25 PM
0!     Created: 9/15/2015 11:10:15 AM
0!     Created: 9/2/2009 12:15:27 PM
0!     Created: 9/30/2003 5:44:02 PM
0!     DAY ARE COUNTED
0!     DECLARATION FOR LM_CAPACITY_PLANNING_ADDITIONS
0!     DECLARATIONS FOR MONTHLY DSM PATTERN REPORT
0!     DECLARATIONS FOR RESERVE MARGIN REPORT
0!     DECLARE PUCHASE CONTRACT VARIABLES
0!     DECLARE VARIABLES
0!     DECLARES FOR DSM_FINANCIAL_COST
0!     DETAILED REPORT DECLARATIONS
0!     DE_OBJT.FOR
0!     DISTRIBUTES IT EVENLY ACROSS IPNT-1 POINTS.
0!     DISTRIBUTES IT EVENLY ACROSS LOAD_POINTS-1 POINTS.
0!     DO J=1,N_BEST_VALUES ! display in order of decreasing value
0!     DR_BOOTH.FOR
0!     DR_BOTH2.FOR
0!     DSM_OBJT.FOR
0!     DSSLAM.FOR
0!     DUE TO THE LOAD MANAGEMENT DEVICE.
0!     Date: 2024-05-28
0!     Department of Commerce.  In practice, the higher-order terms are used
0!     Dsex_obj.for
0!     ECONINTR.FOR
0!     EC_OBJT.FOR
0!     ELREPORT.FOR
0!     ELSE
0!     EL_OBJT.FOR
0!     END
0!     END DATA DECLARATIONS
0!     END DO
0!     END OF DATA DECLARATIONS
0!     END OF LOADPROB-MOVE EFFECTS
0!     END module
0!     ENDFILE(11)
0!     ENDIF
0!     ENERGY CONTRIBUTIONS WILL BE CALCULATED HOURLY, INSTEAD OF MONTHLY
0!     ENERGY LIMITED CAPACITY CONTRIBUTING TO CAPACITY PLANNING,
0!     ENERGY LIMITED RESOURCE FILE
0!     ENERGY, AND CL_DISPATCH_COST ARE CHANGED TO REFLECT
0!     ENERGY_COST
0!     ENTRY EL_CAPACITY_PLANNING_REMOVAL_10
0!     ENTRY MDSLDCAP(CAPACITY_PEAKS,LDMGT_ACTIVE,
0!     ENTRY PLANNING_TRIGGER ! THIS VALUE IS SPECIFIED IN RUN SPECS
0!     ENTRY RESET_FISCAL_MONTHLY_GROUP
0!     ENTRY RETURN_HEAT_BY_FUEL
0!     ENTRY RETURN_P_SALES_REVENUE_ENERGY
0!     ENTRY RETURN_THE_VALUE_FOR(VARIABLE_NUMBER)
0!     ENTRY RETURN_UNIT_EMISSIONS
0!     ENTRY SAVE_EMISSIONS_BY_BLOCK
0!     EN_OBJT.FOR
0!     ESRN_OBJ.FOR
0!     EXTERNAL VARIABLES
0!     Each pass through the accumulation loop augments the area by the
0!     Editor : Mateo Bilbao
0!     Enrglimt.for
0!     EqLCumul up to the sixth order; source is paragraph 26.2.47 of NBS'
0!     ExistingStorageAndHybrid.for
0!     FAILREPT.FOR
0!     FC_OBJT.FOR
0!     FE_OBJT.FOR
0!     FINACELM.FOR
0!     FINNUCFL.FOR
0!     FIXED_CAPACITY_COST (CAN BE DIFFERENT THAN CAPACITY COST)
0!     FI_OBJT.FOR
0!     FN_OBJT.FOR
0!     FOR GENERATION, NOT FOR IMPORT/EXPORT/REVENUES
0!     FOUND 3/28/02.
0!     FOUR IS BINDING.
0!     FO_BEG_HR,FO_END_HR,HrsToState,
0!     FUNCTION GET_DATA_BASE()
0!     From Advanced Engineering Mathematics by Erwin Kreyszig, we note the
0!     Fuelused.for
0!     GET LIST OF ALL UNITS ON-OUTAGE
0!     GRXModules.F95
0!     Gram-Charlier series used in the IEEE paper, this routine uses the
0!     H(n-1,z), where H(0,z) is identically zero and H(1,z) is z.
0!     HEC_GEN_SOLD is a negative number
0!     Handbook of Mathematical Functions.
0!     Hermite polynomials at a given value of z by computing only the
0!     IDENTIFY THE FOUR HIGHEST PEAK DAYS IN THE MONTH
0!     IF THE BOOK LIFE IS GREATER THAN 98 YEARS DEPRECIATION IS NOT
0!     IF THE BOOK LIFE IS LESS THAN ONE YEAR THE ASSUMPTION IS THAT
0!     IF THE TAX LIFE IS GREATER THAN 98 YEARS, IT IS ASSUMED
0!     IF THERE ARE ANY CONTRACTS LOADED, CHECK FOR ACTIVE CONTRACTS
0!     IF TYPICAL CURVE PLOTS DESIRED
0!     IF(.NOT.YES_MAINTENANCE_REPORT) RETURN
0!     IF(ACTIVE_CAPACITY_PLANNING_METHOD=='SC')
0!     IF(DEPMET == DB .OR. DEPMET == ADR) THEN
0!     IF(DEPMET == SL) THEN
0!     IF(RUN_FUTURE_ASSETS) THEN
0!     INCLUDE 'DSMFNCOM.MON'
0!     INCLUDE 'LAMCOM.MON'
0!     INCLUDE 'OVLYCOM.MON FOR BIN FILE NAME'
0!     INCLUDE 'OVLYCOM.MON'
0!     INCLUDE 'PRODCOM.MON'
0!     INCLUDE 'TRANCOM.MON'
0!     INCLUDE 'TRANCOM.MON' !TRANCOM.MON MOVED INTO LAMCOM.MON 8/12/93
0!     INITIALIZE REST OF THE VARIABLES
0!     INITIALIZE VARIABLES
0!     INITIALIZE VARIABLES FOR THE THIRD DAY TYPE
0!     INTEGER*2 GET_DATA_BASE
0!     INTEGER*2 LODA(:,:,:)
0!     INTEGER*2 STORED_PERIOD(2,5)/10*0/,PERIOD
0!     INTEGER*4 HOURS,MINUTES,SECONDS,TOTIME,DUMMY
0!     INTERNAL VARIABLES
0!     IN_OBJT.FOR
0!     If it is assumed that the PS operation affects the market prices and
0!     In either case, the value obtained, like the values
0!     In power-system models, the ordinate obtained above is often only
0!     Inverts matrix ArrayOrg into matrix ArrayInv by Gauss-Jordan
0!     Its only output is the array of loads modified by the PS operation.
0!     Journal of the IEEE Power Engineering Society.  The TVA authors note
0!     LDPROB01.FOR
0!     LIMITED UNITS' CHARACTERISTICS ARE READ IN AND PLACED INTO THE
0!     LMG_OBJT.FOR
0!     LOAD MANAGEMENT APPLICATION FILE
0!     LOAD MANAGEMENT DEVICE FILE
0!     LOAD THE LOWEST_COST_CONTRACT INTO THE ELDC FROM B TO
0!     LOAD THE LOWEST_COST_CONTRACT INTO THE ELDC, UNTIL EITHER:
0!     LOGICAL*1 CONVERT_ALL
0!     LOGICAL*1 HAVE_READ_LM_INPUT
0!     LOGICAL*4 REPORT_FILE_EXISTS
0!     LOOP OVER MULTIPLE OCCURRENCES FOR A GIVEN R_TRANS_GROUP
0!     LOSES $ X MILLIONS GROSS MARGIN PLUS ANNUALIZED CAPITAL COSTS.
0!     LPSOLVER.for
0!     Lacking other information on time-of-day operational constraints,
0!     Last change:
0!     Last change: 
0!     Last change: GAT 12/10/2003 4:59:37 PM
0!     Last change: GAT 9/10/2003 3:06:33 PM
0!     Last change: GT 4/19/2008 8:01:10 PM
0!     Last change: GT 5/29/2008 2:09:39 PM
0!     Last change: GT 9/12/2007 5:31:25 PM
0!     Last change: GT 9/14/2006 10:14:56 AM
0!     Last change: MSG 1/10/2010 2:47:44 PM
0!     Last change: MSG 1/10/2010 2:53:17 PM
0!     Last change: MSG 1/10/2010 2:53:46 PM
0!     Last change: MSG 1/10/2010 2:55:38 PM
0!     Last change: MSG 1/10/2010 2:56:36 PM
0!     Last change: MSG 1/10/2010 2:59:37 PM
0!     Last change: MSG 1/10/2010 2:59:53 PM
0!     Last change: MSG 1/10/2010 3:00:56 PM
0!     Last change: MSG 1/10/2010 3:01:47 PM
0!     Last change: MSG 1/10/2010 3:02:24 PM
0!     Last change: MSG 1/10/2010 3:02:39 PM
0!     Last change: MSG 1/20/2011 1:13:54 PM
0!     Last change: MSG 1/24/2012 10:37:21 AM
0!     Last change: MSG 1/29/2007 3:53:38 PM
0!     Last change: MSG 1/29/2007 3:58:36 PM
0!     Last change: MSG 1/29/2007 4:03:28 PM
0!     Last change: MSG 1/4/2013 8:20:40 AM
0!     Last change: MSG 1/9/2012 2:38:02 PM
0!     Last change: MSG 1/9/2012 2:44:35 PM
0!     Last change: MSG 10/12/2011 4:36:42 PM
0!     Last change: MSG 10/22/02 1:56:11 PM
0!     Last change: MSG 10/24/2012 3:17:50 PM
0!     Last change: MSG 10/26/2010 9:30:42 AM
0!     Last change: MSG 10/28/2012 11:28:42 AM
0!     Last change: MSG 10/4/2004 3:45:01 PM
0!     Last change: MSG 10/8/2012 3:22:29 PM
0!     Last change: MSG 11/15/2006 2:00:02 PM
0!     Last change: MSG 11/15/2006 3:49:10 PM
0!     Last change: MSG 11/15/2006 3:50:26 PM
0!     Last change: MSG 11/17/2011 3:52:28 PM
0!     Last change: MSG 11/20/2009 11:53:49 AM
0!     Last change: MSG 11/8/2006 1:58:49 PM
0!     Last change: MSG 12/22/2012 12:46:28 PM
0!     Last change: MSG 12/7/2012 3:38:45 PM
0!     Last change: MSG 2/12/2007 3:09:39 PM
0!     Last change: MSG 3/30/2004 12:59:22 PM
0!     Last change: MSG 4/10/2012 12:53:46 PM
0!     Last change: MSG 4/2/2010 8:28:38 AM
0!     Last change: MSG 4/6/2010 11:33:00 AM
0!     Last change: MSG 4/8/2010 2:55:07 PM
0!     Last change: MSG 5/13/2010 2:28:54 PM
0!     Last change: MSG 6/17/2010 1:47:53 PM
0!     Last change: MSG 7/3/2012 7:28:29 PM
0!     Last change: MSG 8/23/2009 4:41:18 PM
0!     Last change: MSG 8/23/2009 5:17:58 PM
0!     Last change: MSG 8/26/2009 9:14:06 AM
0!     Last change: MSG 9/15/2004 4:41:32 PM
0!     Last change: Name change to errormsg.f90. Moving to f95 standard
0!     Last change: TS  11/7/2006 10:02:31 AM
0!     Last change: TS 11/7/2006 10:05:39 AM
0!     Last change: TS 11/7/2006 10:46:53 AM
0!     Last change: gt 11/15/2013 10:12:29 AM
0!     Last change: gt 5/28/2013 12:28:38 PM
0!     Last change: gt 5/28/2013 2:40:03 PM
0!     Last change: msg 10/11/2016 6:13:43 PM
0!     Last change: msg 11/11/2018 12:05:14 PM
0!     Last change: msg 11/11/2018 12:12:47 PM
0!     Last change: msg 11/11/2018 12:28:24 PM
0!     Last change: msg 11/21/2021 10:20:42 AM
0!     Last change: msg 11/21/2021 12:54:01 PM
0!     Last change: msg 12/21/2020 6:44:21 PM
0!     Last change: msg 2/14/2022 4:57:23 PM
0!     Last change: msg 2/14/2022 6:50:34 PM
0!     Last change: msg 2/27/2017 8:50:22 AM
0!     Last change: msg 2/7/2019 3:27:03 PM
0!     Last change: msg 3/17/2022 9:55:49 AM
0!     Last change: msg 7/4/2019 3:27:54 PM
0!     Last change: msg 8/14/2016 11:01:57 AM
0!     Last change: msg 8/15/2021 2:28:19 PM
0!     Last change: msg 8/23/2020 3:08:52 PM
0!     Last change: msg 9/11/2021 10:07:35 AM
0!     Last change: msg 9/13/2016 10:04:52 PM
0!     Last change: msg 9/14/2016 12:03:32 PM
0!     Last change: msg 9/21/2021 4:04:50 PM
0!     Let Q(z) designate the distribution's single-tail probability
0!     MAINTAINS DATA FOR RPS PROGRAMS.
0!     MAINTAINS LIST OF FROM/TO CO2_PARAM AS WELL AS MW LOADING ON CO2_PARAM
0!     MAINTAINS LIST OF FROM/TO COAL_LINKS AS WELL AS MW LOADING ON COAL_LINKS
0!     MAINTAINS LIST OF FROM/TO COAL_STORAGE AS WELL AS MW LOADING ON COAL_STORAGE
0!     MAINTAINS LIST OF FROM/TO GAS_LINKS AS WELL AS MW LOADING ON GAS_LINKS
0!     MAINTAINS LIST OF FROM/TO GAS_STORAGE AS WELL AS MW LOADING ON GAS_STORAGE
0!     MAINTAINS LIST OF FROM/TO PATHS AS WELL AS MW LOADING ON PATHS
0!     MAINTAINS LIST OF FROM/TO TRAN_EXPS AS WELL AS MW LOADING ON TRAN_EXPS
0!     MAINTAINS LIST OF GROUP CONSTRAINTS BETWEEN TRANSACTION GROUPS
0!     MAKING INTERCEPT AND SLOPE VARIABLES ARRAYS, AND CREATING A
0!     MARGINAL COSTING VARIABLES
0!     MARGNOBJ.FOR
0!     MARK'S AND GREG'S CODE.
0!     MAXIMUM_CAPACITY (CONSTRAINT)
0!     MAXIMUM_CAPACITY PROB - CONSTRAINT (2) (INPUT ASSUMPTION)
0!     MAXIMUM_ENERGY (CONSTRAINT)
0!     MEMTEST.FOR
0!     MIDASFileIndexingRoutines.FOR
0!     MIDASMOD
0!     MINIMUM_CAPACITY (CONSTRAINT)
0!     MINIMUM_ENERGY (CONSTRAINT)
0!     MOVED 7/17/98. GAT. FOR PRE-SCHEDULED MAINTENANCE IN TRANSACT.
0!     MOVED TO MSGNORM/MSGANDEC. 10/20/98. GAT. FOR CAPACITY PLANNING.
0!     MSGANDEC.FOR
0!     MSGMMOUT.for
0!     MSGMMSB6B.FOR
0!     MSGOUTPT.FOR
0!     MSGProSymRevExp.for
0!     MUNIREV.FOR
0!     Mainovl.for
0!     MaxContFr=0.35 ! default; 0.4 caused infeasibility in early testing
0!     Migration Author: Pablo A. Bilbao
0!     Module extracted from common block.
0!     Msgmmrev.for
0!     N(-1,z) the cumulative standard Normal distribution,
0!     N(n,z) its nth derivative at z,
0!     NBS reference defines gamma for m>0 as Gm = Kn/(S**n), where m = n-2.
0!     NEITHER ENTITY CAN BUY OR SELL WITH EACH OTHER BUT CAN WITH THE MARKET
0!     NEITHER ENTITY CAN BUY OR SELL WITH EACH OTHER OR MARKET
0!     NEITHER ENTITY CAN BUY OR SELL WITH THE MARKET BUT CAN WITH EACH OTHER
0!     NEVER ACCUMULATE ENERGY/HEAT IN THE FIRST HOUR.
0!     NEXT BEST CONTRACT PROBABILITY - CONSTRAINT (3)
0!     NOTE CODE 376 IS AVAILABLE CODES 377-388 ARE USED BY HORIZONS
0!     NOW GENERATE FORECAST YEARLY LOAD VALUES
0!     NO_PA_ACCTS = 7: 1 = Mayo 1 Replacement
0!     Normal distribution function is the complemented function of
0!     Normal distribution.  In the Edgeworth series, each gamma term of
0!     Note that the integration technique used is analytic, not numeric
0!     Now let R(n,z) be the ratio of N(n,z) to f(z).  Then by complementing both
0!     OF THIS PROGRAM IS TO READ IN EEI FORMATTED HOURLY LOADS AND
0!     ONE ENTITY CAN BUY OR SELL WITH THE MARKET
0!     OUTPUT_REPORT = .FALSE.
0!     Original Author : Mark S GErber as .MON file
0!     PARTITION THESE LOADS INTO A FORM USEFUL TO THE MIDAS MODEL.
0!     PASSES PKAVE,WEEKEND_PEAK_DAYS TO THE LAM MODEL
0!     PD_BEG_HR,PD_END_HR,
0!     PEAK DAY OF THE MONTH. ALSO, THE NUMBER OF MONTHS IS ASSUMED
0!     PF_OBJT.FOR
0!     PLACES MARKET PRICES INTO PRICE_POINTS/2 - 1 INTERVALS
0!     PLACES TRANS LOADS INTO LOAD_POINTS/2 - 1 INTERVALS
0!     PP_OBJT.FOR
0!     PREVIOUS ALGORITHM (SINGLE PRECISION CALC.) AND
0!     PRICE FEEDBACK FOR THE FIRST FORECAST YEAR IS ASSUMED TO ONLY BE
0!     PROD-COM.MON AND PROD-2COM.MON FILES.
0!     PRODUCTION DISPATCH PARAMETERS ARE: A,RIGHT,LODDUR,LPROB,
0!     PURCHASES
0!     PURPOSE:                                                         *
0!     Previous change: MSG 9/23/2009 2:02:46 PM
0!     Purpose:  This subroutine writes the results of the municipal    C
0!     Q(z) = 1-N(-1,z) + f(z)*(
0!     RDI_OBJT.FOR
0!     READ IN THE LOAD MANAGEMENT FILE
0!     REAENRG.FOR
0!     REAL CLASS_NET_DSM_PEAK(MAX_LOAD_CLASSES)
0!     REAL ESCALATION_RATES(:)
0!     REAL HIGHEST_BEFORE_DSM_PEAK
0!     REAL MO_PEAK(2)
0!     REAL PEAK_GROWTH_RATE ! REMOVED 3/3/92
0!     REAL RETURN_THE_VALUE_FOR
0!     REAL R_PASS_THOURGH_VALUES(*)
0!     RESERVE MARGIN REPORT
0!     RESOURCE_ID(1) = 1
0!     RETURN
0!     RETURN! THIS REPORT IS NO LONGER NEEDED
0!     ROUTINE TO CALCULATE THE MARKET PRICE PROBABILITY
0!     ROUTINE TO CALCULATE THE TRANS LOAD PROBABILITY
0!     Recalling that H(n,z) is just (-1)**n times the nth derivative
0!     Representing the Equivalent Load Curve", and published in the 1979
0!     Routine to schedule maintenance with the goal of levelizing the
0!     RptRecControl.F95
0!     SALES
0!     SAME AS ABOVE, BUT OVER Y YEARS.
0!     SAVE        TRANS_CONSTRAINT_DATA
0!     SEASONS = MONTHS
0!     SF_OBJT.FOR
0!     SHORT TERM PRICE IMPACTS.
0!     SNSZMDS.FOR
0!     SORT IN THE CREORD SUBROUTINE IN PCS
0!     SORT UNITS ON-OUTAGE ACCORDING TO DISPATCH ORDER
0!     SO_BEG_MODA,SO_END_MODA
0!     STARTOVL.FOR
0!     SUBROUTINE ASSUMES UNITS ARE LOADED INSIDE
0!     SUBROUTINE CONTRACTS IS CALLED BY DR_BOOTH INSIDE THE UNITS
0!     SUBROUTINE DO_EMISSIONS_BY_FUEL_TYPE
0!     SUBROUTINE TO CONVERT TOTAL TIME TO HOURS, MINUTES & SECONDS AND
0!     SUBROUTINE TO PRINT ABNORMAL PROGRAM EXIT
0!     SUBROUTINE TO RECORD EXECUTION TIME AND CLOSE OUTPUT FILES
0!     SUBROUTINE WRITE_MONTHLY_GROUP_REPORT
0!     Scenario Index.for
0!     Since the even powers of minus one are all unity and the odds are all
0!     Since this routine is called to compute tail area, an additional
0!     Sizecom.obj
0!     Stremel, entitled "Production Costing Using the Cumulant Method of
0!     TAKEN
0!     TAKEN FROM LDCTRANS.FOR 4-2-91
0!     TEST LINEAR TRANSFORM
0!     THAT NO TAX DEPRECIATION WILL OCURR
0!     THE NUMBER OF WKDAYS AND WKEND DAYS THAT COMPOSE THE AVE PK DAY.
0!     THE PARAMETERS THAT MIDAS AND THE CONTRACTS MODEL PASS BACK
0!     THE PRIMARY CHANGE TO THE MFRED MODEL IS THE ADDITION OF
0!     THE TOTAL AMOUNT OF CEP AND AFDC2 ARE TO BE EXPENSED IN ONE
0!     THE UNITS COUNTER, AFTER MAINTENANCE CALC AND BEFORE ANY ENER
0!     THIS FILE IS BEFORE THE YEAR COUNTER LOOP. CAPACITY
0!     THIS PROGRAM REPLACES MFRED DATED APRIL 29, 1988. THE PURPOSE
0!     THIS SECTION OF THE PROGRAM CALCULATES THE LOADING ORDER OF
0!     THIS SECTION ORDERS THE LOAD DATA BY DAY AND HOUR INTO THE PEAK
0!     THIS SECTION TAKES THE ROUNDING ERROR FROM THE
0!     THIS VARIABLE NEEDS TO BE SET IN GETSYS
0!     TO ALWAYS BE TWELVE AND THE PREVIOUS PLOTTING ROUTINE HAS
0!     TODO: convert to dictionary lookup.
0!     TOTAL_MINIMUM_ENERGY = 0.
0!     TRACKING CENTRAL DISPATCHING FOR EVERY DAY TYPE ACROSS TRANSACTION GROUPS
0!     TRANSOBJ2.FOR
0!     TREE OR ANOTHER TREE.
0!     TRNSFRM3.FOR
0!     TYPE DECLARATION FOR /SCREEN/
0!     Tennessee Valley Authority (TVA) authors Babb, Bayless, Jenkins, and
0!     The coefficients of the derivative terms (either N(n,z) or R(n,z)) in
0!     The logic below assumes the second subscript indexes rows.
0!     The order of deallocation is not important; leave the following
0!     The routine is called with a single abscissa at which the ordinate
0!     The value of the 'strictly Normal model' is obtained
0!     Then the sixth-order Edgeworth series for suitably smooth distributions
0!     This branch accounts for the area (from the current deviate z as the
0!     This routine assumes that for the purpose of the optimization,
0!     This routine uses an Edgeworth series to represent the values of a
0!     Thus, all accumulated ordinate terms are multiplied
0!     UNIT_FO_ONCE,UNIT_OUT_SCHD,UNIT_OUT_FORC,UNIT_OUT_DRAT,
0!     UP_OBJT.FOR
0!     USE SIZECOM
0!     USED TO ACCUMULATE LOADS FOR USE IN TRANSACT
0!     Use of this relation allows rapid evaluation of the higher-order
0!     VARIABLES FOR CAPACITY PLANNING
0!     VARIABLES FOR COST OF SERVICE
0!     VOID_INT2 = ANNUAL_DECOMPOSITION_START_UP()
0!     VOID_LOGICAL = RUN_SPECS_OBJECT()
0!     VOID_LOGICAL = RUN_SPECS_OBJECT() !Opens the Run Specs file
0!     WARN IF LOAD FACTOR EXCEEDS 1.0
0!     WARN IF LOAD FACTORS CHANGE RAPIDLY
0!     WEIGHTED LINEAR TRANSFORM FOR THE AVE PK DAY TYPE BASED UPON
0!     WHEN DOES THE NEXT OUTAGE OCCUR?
0!     WKEND DAY, AVE PK DAY). CHANGES INCLUDE UP'ING THE DAY INDEX TO
0!     WKP_ACTIVE = WKP_OBJECT(VARIABLE_VALUE)
0!     WRITE THE RESULTS TO BE READ BY PROCOST
0!     WRITE(6,"('&AnnDC')")
0!     WRITE(6,1000) '   Closing output files   '
0!     WRITE(6,1000) '   Updating tree file     '
0!     WRITE(9,*) CHAR(26)  ! PUTS AN END OF FILE MARK THAT PRINTS 6/22/91
0!     WVPACoopRevenueCals.FOR
0!     WVPARTRK.FOR
0!     WVPA_DATA_BASES.FOR
0!     We denote by H(n,z) the nth-order Hermite polynomial in z.
0!     We view Q(z) as the required load-probability at the specified
0!     YEAR
0!     YEARS_TO_RUN = RUN_YEARS()
0!     YES_MAINTENANCE_REPORT=MAINTENANCE_REPORT()
0!     a density function composed of two or more complementary impulses
0!     abscissa z, given the parameters Gn of the distribution.
0!     accumulated for the integral are multiplied
0!     all its gamma coefficients at zero.  The values of gamma thus serve to
0!     all the integration had been performed in dimensionless units.
0!     allocated for use by entries:
0!     an overall smearing of the desired step-transitions in the expanded
0!     and Gn the nth-order gamma coefficient of the distribution.
0!     anywhere in the week, i.e., that reservoir capacity is not binding.
0!     area under a strictly Normal duration curve; this is obtained using
0!     as they are derived, in a short loop covering the cumulants used.  Equation
0!     as was the trapezoidal technique used by the TVA authors.  This
0!     assign defaults valid for extreme cases
0!     augmenting the strictly Normal model, 1.-N(-1,z) above, by the sum of
0!     by simply calling the CCNFmd function when the deviate z is
0!     by the value of the density function at the current abscissa.
0!     by their common density factor, and scaled by sigma;
0!     c3 to the value at which t0==0, both failed to approximate the curve.
0!     character arrays
0!     clm_objt.for
0!     common: ENVIR, ENVIRC, ENVIR_OUTPUT
0!     component (native or net loads) of smoothly distributed values,
0!     costs by its operation, then the operation can continue in shoulder
0!     cumulants, see the discussion under MapNCMomentsToCumulants.)  The
0!     cumulative function.  The Edgeworth expansion converges rapidly
0!     cumulative probability distribution.  The Edgeworth series is an
0!     current order's gamma-related coefficient.
0!     curve's 1st derivative is s(x)=c1+2*c2*x+3*c3*x^2; the
0!     curve's 2nd derivative is t(x)=2*c2+6*c3*x.  Note that for the curves
0!     density function composed of a single impulse of unity weight
0!     density itself.  That density is obtained by a call to the GaussianDen
0!     derivatives.  The use of such a series was discussed in a paper by
0!     determines whether cubic curve y=c0+c1*x+c2*x^2+c3*x^3 is monotonically
0!     difference between two products.  By contrast, evaluating the 5th-order
0!     disable next 4 lines if Hour/Minute/Second is not of interest
0!     dreptcom.f90
0!     duration curve and the complement of a cumulative
0!     end if
0!     end of argument declarations
0!     end of initialization code; following is iterative:
0!     end of local-variable declarations
0!     end of parameter declarations
0!     end of parameters
0!     expansion in terms of the standard Normal distribution and its
0!     express the degree to which an arbitrary distribution deviates from a
0!     f(z) the standard Normal density at z standard deviates,
0!     facalg.for
0!     finanbse.for
0!     following arrays are used only internally to PickHourlyStrikes
0!     for the concave-upward property only at the left (minimal-load) point.
0!     fp_objt.FOR
0!     from aitvaprodi2
0!     from the current deviate z to infinity is initialized to the
0!     from the load point to infinity.
0!     function above are fortuitously cancelled by replacing all R(n,z) by
0!     function used for debugging below:
0!     function, but is limited to an arbitrarily small value to preclude
0!     gives the cumulative function in a form analogous to a Maclaurin series:
0!     having sorted monthly N_BEST_VALUES of BEST_VALUES into descending order,
0!     here to AlignAuxRows, program units are needed only thereby
0!     here to FigureDescentExtent, program units are needed only thereby
0!     here to InvertAuxBasis, program units are needed only thereby
0!     here to ObtainBasicFeasibleSolution, program units are needed only thereby
0!     here to ReviseBasisVectors, program units are needed only thereby
0!     hours at reduced capacity until pumping and generation hours collide.
0!     iRow=iRow+1
0!     if not, it linearizes the curve between the endpoints x0,x1.  The
0!     if(iRow>24) then
0!     in the Edgeworth expansion.  Being essentially a weighted sum of finite
0!     include 'MSMethod.TXT' ! comments on optimization methodology
0!     increasing (i.e., has positive 2nd derivative at the left endpoint x0);
0!     integer*1 arrays
0!     integer*2 arrays
0!     integer*4 arrays
0!     integer*8 arrays
0!     it assumes that the generation hours and pumping hours can be
0!     jCol=0
0!     large relative errors near the transitions, ringing, overshoot, and
0!     later problems with numeric overflow.
0!     leads to rather large variance and higher-order cumulants, causing
0!     leaving 1.-z*CCNFmd(z).
0!     load-duration curves being modelled herewith all contain a large
0!     logical*1 arrays
0!     logical*4 arrays
0!     lower limit) under the currently-indexed Hermite polynomial function.
0!     market prices and pumping costs are monotonically related to loads.
0!     message codes per GAT on 20060926:
0!     might be modelled suitably by a miniscule-variance expansion,
0!     module StoredSysVarLocals
0!     module extracted from common block.
0!     module_Coal_Model_Input_to_CNW.f90
0!     msg95RWindex.for
0!     msgmmasb.for
0!     msgmmcom.for
0!     msgmmdfd.for
0!     msgmmfv.for
0!     msgmmpyb.for
0!     msgmmsb6.for
0!     msgnorm
0!     must write message and flush(4) just before returning to the caller
0!     nGamma is the highest order of GammaNorm (dimensionless cumulant).
0!     need to fill out the PricesHDM and ContigPrices arrays:
0!     negative unity, the negative signs in the complementary distribution
0!     next-lower-order Hermite polynomial multiplied by the
0!     non-negative; for negative deviates, the complementary cumulative
0!     not have the freedom to follow arbitrarily abrupt transitions in
0!     notes by AGT on 20030728
0!     of Mathematical Functions, by the National Bureau of Standards (NBS),
0!     of interest here (heat input as y versus MW load output as x), we check
0!     of passing interest compared to the area under the duration curve
0!     of the Normal density, and that the integral of an nth derivative
0!     of the distribution.  Let Kn designate the nth-order cumulant, and S
0!     of the polynomial terms, is expressed as a factor of the Normal
0!     on the load-duration curve is required.  The abscissa is converted
0!     only as required; the fourth-order Edgeworth series is identical to
0!     opening unit 4 inside a .DLL does not make it writable outside the .DLL;
0!     order n appears with n-factorial in the denominator.  To simplify
0!     order of both ArrayOrg and ArrayInv (both assumed square) is nRows.
0!     pick the best of these across months for the annual list
0!     pivoting, elimination, and triangular back-substitution.  The
0!     polynomial (z**5-10*z**3+15*z) using Horner's rule as (((z**2)-10)*
0!     polynomials multiplying the Normal density, the expansion does
0!     probability density function; currently allows use of cumulants
0!     probability-distribution function.  Instead of the fourth-order
0!     real*4 arrays
0!     real*8 arrays
0!     reasonably 'smooth' density functions.  Since the equivalent
0!     recursion relation among Hermite polynomials:  H(n+1,z) = z*H(n,z)-n*
0!     reserve capacity, i.e., by treating plants without derating for
0!     routines called:  GaussianDen, CCNFmd
0!     should provide a measure of smoothing of the pointwise errors inherent
0!     sides of the equation above and factoring out f(z), we obtain
0!     significant or troublesome.
0!     sixth-order Edgeworth series given in paragraph 26.2 of the Handbook
0!     sorting is done for each unit, after 20020701
0!     sorts N_BEST_VALUES of BEST_VALUES into descending order
0!     sorts nItems items into Ascending order(Ofs array)
0!     sorts nItems items into Ascending order(Ofs array); from EvaluInc.fpp
0!     sorts nItems items of Val array per ascending order of Key arrays,
0!     sorts nItems strings in StrKey array in alphabetic order(iOrg array)
0!     statement is executed within the loop that accumulates the ordinates.
0!     terms (enclosed within square brackets) is added for each increment in order.
0!     that standardized deviates exceed z,
0!     the analogy between the normalized (to unity-duration) equivalent-load
0!     the computations, the denominator is incorporated in the gamma terms
0!     the cumulative distribution function.  For example, whereas a
0!     the fourth-order Gram-Charlier.
0!     the pointwise errors in the expansion are not expected to be
0!     the positive deviate of the same magnitude, or 1-CCNFmd(-z).
0!     the product of the f(z), the nth-order Hermite polynomial, and (-1)**n.
0!     the reference's formula 26.2.44 as the density at z less z times the
0!     the series involve products of the standardized gamma coefficients
0!     the standard deviation of the distribution.  (For a definition of
0!     their equivalents, H(n,z)*(-1)**n.
0!     their operating forced-outage rates.
0!     these gamma-weighted polynomial terms.
0!     to a standard Normal deviate, and the ordinate is obtained by building
0!     up the values of the required Hermite polynomials by recursion, and
0!     use dr_booth_modules
0!     where the result is to vary most rapidly by MajorKey, then by MinorKey
0!     write(*,*) ArgC,i,ThisChar,ArgV(ArgC),CmdString
0!     write(*,*) j,iachar(s(j:j)),' ',s(j:j)
0!     x:         0           1           2           3           4           5
0!     y(x) is the Edgeworth expansion of a complementary cumulative
0!     yields the (n-1)th derivative, we use only previously computed terms.
0!    ! One of the things this loop does is enable summing of steam inputs into STEAM (MW) JTR
0!    ! TODO: replace loop with lookup. (see https://pgga-es.atlassian.net/browse/EPA-7565 )
0!    ( note that this is neither a cumulative curve, nor monotonic )
0!    +                                                RESOURCE_CAP(AREA)
0!    +                                                TOTAL_PRICE_SCALAR
0!    +                                               TEMP_TRANSPORTED
0!    +                                           PERIOD_EMERGENCY_ENERGY
0!    +                                         REVENUES,
0!    +                                        AREA = 1, NUMBER_OF_AREAS)
0!    +                                      STATUS="UNKNOWN",RECL=LRECL)
0!    +                                   TOTAL_CAP_ALLOCATED /= 0.) THEN
0!    +                                  CALL CLOSE_SCREENING_INFORMATION
0!    +                                  CAPACITY_PLANNING_ACTIVE()) THEN
0!    +                                  MONTHLY_STRIKES(IND,R_MONTH) + 1
0!    +                                DB_RATE_150,TAX_VALUE,ADR_TAX_DEP)
0!    +                               CNTR_CAPACITY_SWITCH,
0!    +                               MAX_RATCHET_PATTERN,
0!    +                               NUMBER_OF_CONTRACTS,
0!    +                              DBRATE(DSM_ACCTS),TAX_VALUE,TAX_DEP)
0!    +                              INT(2*MAX_BC_CLASS_ID_NUM))
0!    +                             M_HOURLY_LOAD_B4_SALES(I,HOUR_IN_DAY)
0!    +                             TAX_SL_DEP,BOKLF(DSM_ACCTS),MID_YEAR)
0!    +                            .NOT. ENERGY_ALLOCATION_ABSOLUTE) THEN
0!    +                            CLASS_PEAKS(DAY,SEASON) !NOT USED 3/3/92
0!    +                          (RESOURCE_CAP(AREA)/TOTAL_CAP_ALLOCATED)
0!    +                          .NOT. CAPACITY_ALLOCATION_ABSOLUTE) THEN
0!    +                          FORECAST_COINCIDENT_PEAK(2,ISEAS,AREA)),
0!    +                          REVENUES(FILE_TABLES),
0!    +                        AREA_FORECAST * CLASS_RESERVE_MARGIN(AREA)
0!    +                       'Asset Group         ','C',INT2(30),'V','D'
0!    +                      MAX(FORECAST_COINCIDENT_PEAK(1,ISEAS,AREA),
0!    +                     nint(100.0*MoFrHrUsed(iHr,iDa,iGP))
0!    +                    AREA_FORECAST_CAP(5) +
0!    +                    AREA_FORECAST_CAP(6)
0!    +                   OPERATION_LIFE < AVAIL_DATA_YEARS) THEN
0!    +                   OPTIONS_BC_ASSET_CLASS_POINTER,
0!    +                  '(1x,3i2,2i3,f6.2,f7.3,f6.2,2f6.3,2L2)')
0!    +                  *GpHourPrice
0!    +                  CurHrCost(GroupHr(0),0)*PmpStoEff,
0!    +                  CurHrCost(GroupHr(0),0),
0!    +                  CurHrCost(GroupHr(1),1),
0!    +                  EqLCumul(1)   ,sqrt(EqLCumul(2)),' j2 loop'
0!    +                  FORECAST_CO_PEAK_IN_AREA_1,
0!    +                  IncrHrCurCost,FracHrCurCost,nHrs,EnergyMWH
0!    +                  VarCumul(1,j2),sqrt(VarCumul(2,j2)),
0!    +                  iDa,Rank,GroupHr,
0!    +                  jLoadedLast,j2,TestSetOwns(j2),Capacity(j2),
0!    +                  nHrsSlack,Economical,Feasible
0!    +                  nint(100.0*MoFrHrUsed(iHr,iDa,iGP))
0!    +                  write(*,'("& | ")')
0!    +                 ((j2==j)          .and..not.TestSetOwns(j )))then
0!    +                 (CLASS_COIN_FACTOR(AREA) *
0!    +                 TRIM(CONVERT_2_STR(HeatQuant))//','// &
0!    +                j,Capacity(j),PrevCapac,CapIncr,EqLCumul(1),
0!    +                nMarginal,iMSb,2**(iMSb-1),' in loop'
0!    +                sqrt(EqLCumul(2)),' OVFF'
0!    +               '(1x,3i2,2i3,f6.2,f7.3,f6.2,2f6.3,2L2)')
0!    +               ((j==jOrdEnt).or.((VarState(j)==BasicNKy).and.(.not.
0!    +               ((j==jOrdEnt).or.(VarState(j)==BasicNKy))) then
0!    +               (Nearly0(x(j)-LUB(j),1).or.Nearly0(x(j)-GLB(j),1)))))) then
0!    +               * (1.-AREA_RESOURCE_LOSES(AREA,ISEAS,ARRAY_POINTR))
0!    +               *GpHourPrice
0!    +               .AND. TRANSACT_ACTIVE_IN_ENDPOINT()
0!    +               CurHrCost(GroupHr(0),0)*PmpStoEff,
0!    +               CurHrCost(GroupHr(0),0),
0!    +               CurHrCost(GroupHr(1),1),
0!    +               CurHrCost(GroupHr(1),1),nHrsSlack
0!    +               DSM_CAP,
0!    +               GET_NUMBER_OF_ACTIVE_GROUPS,
0!    +               INPUT_SYSTEM_PEAK)
0!    +               RPS_INDEX_TRANSLATE,
0!    +               iDa,Rank,ChronHr,
0!    +               iDa,Rank,GroupHr,
0!    +               nHrsSlack,Economical,Feasible
0!    +               write(*,'("& | ")')
0!    +              'Kap',EqLCumul(1),sqrt(EqLCumul(2)),
0!    +              'xLP ',k,j,Capacity(j),xLoadPoint,EqLCumul(1)
0!    +              ((j==jOrdEnt).or.((VarState(j)==BasicNKy).and.
0!    +              (.not.Nearly0(x(j)-GLB(j),1))))) then
0!    +              (EqLCumul(j2),j2=3,nKappa)
0!    +              GrayOrder(HalfSize-iGray)+HalfSize ! ... there's no carries
0!    +              jLoadedLast,iMSb,ishft(1,iMSb-1),' ex loop'
0!    +            'jMarginal ',j,FctOwning(j),nMarginal,Base2LogSize,
0!    +            (RECORD_LENGTH*DEM_2_REC_POS(I,J),J=1,DEM_2_PTR(I))
0!    +            (R_VARIABLES(160+ITEM) +
0!    +            .or.AuxiCovers(j)) then
0!    +            CurHrCost(GroupHr(0),0),
0!    +            CurHrCost(GroupHr(1),1),nHrsSlack
0!    +            DailyNetRev(iDa),nHrs,nHrsSlack,EnergyMWH
0!    +            FmtNoPhi2='(1x,2i3,a,i5,i3,f12.5,f9.3,f19.2,f9.3,f10.6)')
0!    +            IncrHrCurCost,FracHrCurCost,nHrs,EnergyMWH
0!    +            MethodSR='Single-Row',
0!    +            PostInv =' post-inversion using ')
0!    +            SupB2LogSize,OrdVarFinalFct,FctVoidOfDj
0!    +            iDa,Rank,ChronHr,
0!    +            xLoadPoint=xLoadPoint+Capacity(j)*x(j)/LUB(j) ! x(j) may be zero
0!    +          (RHS>SmallArea).or.AuxiCovers(jOrdEnt)) then
0!    +          (VarState(j)==BoundNB0).and.Nearly0(x(j),1))) then
0!    +          .and.Nearly0(x(j)-GLB(j),1))) then ! skip vars bound at GLB in merger
0!    +          CHANGED_REFERENCE_LOADS
0!    +          FalseByte,True_Byte)
0!    +          call ExcludeOutages(Capacity(jPrBk),jPrBk,jPrBk)
0!    +         'May','June','July','August','September','October',
0!    +         'November','December'/
0!    +         BEST_VALUES(ORG_ORDER(J),R_CALL_PUT)
0!    +         BEST_VAL_HR(ORG_ORDER(J),R_CALL_PUT),
0!    +         BEST_VAL_ID(ORG_ORDER(J),R_CALL_PUT),
0!    +        (AREA_SURPLUS(AREA,ISEAS)/1000.,AREA = 1, NUMBER_OF_AREAS)
0!    +        a(Ofs(j)),a(Ofs(k)),' ISA aft int'
0!    +        a(Ofs(j)),a(Ofs(k)),' ISA bef int'
0!    +      'test for BoundNB1',kLvg,j,x(j)/LUB(j)
0!    +      .and.(cMod(j)>0.0)) then ! additional condition keeps aux slacks BoundNB0
0!    +      BEST_MO_VAL(0,J,R_CALL_PUT)
0!    +      B_MO_VAL_HR(0,J,R_CALL_PUT), ! should be 0 for monthly strikes
0!    +      B_MO_VAL_ID(0,J,R_CALL_PUT),
0!    +      B_MO_VAL_MO(  J,R_CALL_PUT),
0!    +      CALL DSM_TAX_DEP_CAL(ADRLIFE(DSM_ACCTS),DB_METH,
0!    +      MIN(1.,MAINT_SCHEDULED_FRACT(K2,JCM)+Z1/Z2) ! ... than one outage per unit per month
0!    +      PRODUCT_LAST_PRICE,  ! REMOVED 6/18/98 MSG BECAUSE IT WASN'T
0!    +      nActiveFacets,k,kLvg,nMarginal,OrdVarEntering,FctVoidOfDj
0!    +     MAX_RATCHET_PATTERN(NUMBER_OF_CONTRACTS),
0!    +     STORED_PERIOD,
0!    +    'neither facet has an aux var key')
0!    +    (LimitCondit==24).or.
0!    +    (LimitCondit==25).or.
0!    +    (LimitCondit==27))
0!    +    *10000.0),jSeg=1,nNzSegs) ! show the spacing of CC points
0!    +    ArrayInv(nRows,nRows),ArrayOld(:,:),HeldRow(LimUnknowns)
0!    +    BindSetVar(6)
0!    +    DiffBitPattern,
0!    +    GammaNorm(2),Factorial(4),Hermite(0:LimiHP),HPcoef(0:LimiHP)
0!    +    InclBitPattern ! ,
0!    +    PrevBitPattern,
0!    +    SupiGr, ! may grow as large as LimFacetSize
0!    +    ThisBitPattern,
0!    +    iGray,fGray,
0!    +    jMarginal(:)
0!    +  (LkEndUsd(i4),i4=1,nLink) ! all were 2 using full dataset
0!    +(12)/'January','February','March','April',
0!    0.0 --------+-----------+-----------+-----------+-----------+-----------+
0!    0.1         |           ^           |           ^
0!    0.2         |          0.07         |          0.03
0!    0.3         |                       ^
0!    0.4         |                      0.27
0!    0.5         |
0!    0.6         ^
0!    0.7        0.63
0!    0.8
0!    0.9
0!    0:3  Cost: Fuel, Non-Fuel, Demand
0!    1. ABOVE MIN AND RAMPING DOWN
0!    1.0
0!    2. AT MIN AND DONE RAMPING
0!    3. AT ZERO AND DONE RAMPING
0!    4. MUST RUN AND DON'T GO BELOW ZERO
0!    ALL RIGHTS RESERVED
0!    AUTOMATION OF THE OPTIM PROCESS
0!    CALL FORECAST TYPICAL DAY LOADS
0!    CAPACITY PLANNING OBJECT FOR MIDAS GOLD 3A
0!    CAPON    THE AMOUNT OF CAPACITY TO BE CONVOLVED
0!    CHECK TO SEE WHETHER THE LOAD FACTOR EXCEEDS 1.0
0!    COL    Coal
0!    COPYRIGHT (C) 1979-1987   ALL RIGHTS RESERVED
0!    COPYRIGHT (C) 1993 M.S. GERBER & ASSOCIATES, INC
0!    CURRENT  THE POINT SHOWING THE POSITION OF THE INCOMING LPROB
0!    DELTA    THE CALCULATION GRID SPACING
0!    DFO    Distillate fuel oil
0!    DSM    Demand-side management
0!    ENTRY SCENARIO_MAKER_FILE
0!    For this binary-valued LDC, the terms of the summation are zero for all
0!    GEO    Geotherm
0!    However, when LDC(x) has a functional form (as LDC=1 if x<=Lc else 0), we
0!    INDEX    THE LAST GRID POSITION FOR CALCULATION
0!    ITEMP    TEMPORARY INTEGER STORAGE LOCATION
0!    IsPmDirect=return_value
0!    IsPmIndirect=return_value
0!    LFG    Landfill gas
0!    LIG    Lignite
0!    LPROB    THE LPROBS
0!    LPROB    THE NEW LPROB
0!    M. S. GERBER & ASSOCIATES, INC.
0!    MWH    Batt
0!    NA     Not applicable
0!    NG     Natural Gas
0!    NUC    Uranium
0!    OBG    Biomass gas
0!    OBS    Biomass solids
0!    OG     Other Gas
0!    OTH    Other
0!    P        THE AVAILABILITY OF THE UNIT
0!    PC     Pulverized Coal
0!    PUR    Purchase
0!    PV     Photovoltaics
0!    Pooling variables
0!    Q        THE UNAVAILABILITY OF THE UNIT
0!    REF    Refuse
0!    ROUTINE TO CONVERT PRODUCTION PARAMETER FILE DATA
0!    R_CLASS = 0 FOR SYSTEM
0!    R_INT4_EMIS_TYPE = 3                      
0!    R_MONTH = 1, 12
0!    R_PRICE = MODEL DERIVED
0!    R_YEAR = NEXT YEAR OF SIMULATION
0!    SAME AS PCS MODEL.  BASED ON THE BOOTH - BALERIAUX METHOD
0!    SHIFT    THE NUMBER OF INDEX POSITIONS THE LPROB IS SHIFTED
0!    SPECIALIZED FOR MIDAS
0!    SUB    Sub-bituminous coal
0!    SUN    Solar
0!    Since in general the prior-blocks' capacities are not on a grid, the above
0!    TDF    Tires
0!    TO CONVOLVE THE EQUIVALENT LOAD DURATION CURVE
0!    Thus with probability NodeProb(0) the loaded block sees LDC(x),
0!    URA    Uranium
0!    WDS    Wood something
0!    WND    Wind
0!    across i of NodeProb(i)*LDC(x-NodeCOut(i)).
0!    call clrel()
0!    call locate(i,0)
0!    call locate(iRow,ULColumn) ! ClrEol would be presumptuous
0!    call memcp(%val(pMDATextPage),SourBuffer,cArg(ScnBufSiz))
0!    call memcp(%val(pVGATextPage),SourBuffer,cArg(ScnBufSiz))
0!    call memcp(DestBuffer,%val(pMDATextPage),cArg(ScnBufSiz))
0!    call memcp(DestBuffer,%val(pVGATextPage),cArg(ScnBufSiz))
0!    can evaluate the expected ELDC ordinate at x as the sum
0!    cannot be combined into a probabilistic-weighted array (i.e., an ELDC).
0!    do index=1, ubound(DirectPMs,1)
0!    do index=1, ubound(IndirectPMs, 1)
0!    enddo
0!    pMDATextPage=Z'b0000', &
0!    pVGATextPage=Z'b8000', &
0!    return_value=.false.
0!    with probability NodeProb(1) the loaded block sees LDC(x-1),
0!    with probability NodeProb(2) the loaded block sees LDC(x-2), etc.
0!    write(*,'(80a1)',advance='no') (' ',jCol=ULColumn,LRColumn)
0!    x>NodeCOut(i), i.e., for all i having NodeCOut(i)<x.
0!   !
0!   0:4 Tracker PSCR Only=1, Both Indiana PSCR=2, SDI=3, Indiana Only=4
0!   0:5  Type: Purchase, Generation, Derivative, Services, Actuals
0!   10 CALL LOCATE(20,2)
0!   200 CALL LOCATE(20,0)
0!   300 CALL LOCATE(20,0)
0!   AltPrefix=iand(B,Z'08')>0
0!   AsciiCode=iand(Regs(1),Z'ff')
0!   B=iand(Regs(1),Z'ff')
0!   CALCULATE THE OLD AND NEW LOAD FACTORS FOR THE DATA.
0!   CALLING ARGUMENTS THE SAME.
0!   CHARACTERIZED BY A SLOPE AND AN INTERCEPT.
0!   CHECK TO SEE WHETHER THE LOAD FACTOR CHANGES BY MORE
0!   CtlPrefix=iand(B,Z'04')>0
0!   ENERGY AND PEAK VALUES. CREATE A LINEAR RELATIONSHIP BETWEEN THE
0!   ENERGY AND THE NEW PEAK AND AVERAGE DAILY ENERGY. THE LINE IS
0!   EXTENSIONS CZ, SS, UP, FS
0!   IF WEATHER ANALYST CALCULATED LOADS THEN OVERWRITE DAILY_LOADS_I4 
0!   LINEARLY TRANSFORM OLD DATA BY DAY TYPE TO NEW DATA BY DAY TYPE
0!   OLD AVERAGE DAY TYPE AND THE NEW AVERAGE DAY TYPE. THE TWO POINTS
0!   OR UNECONOMIC COMPETING RESOURCE. NO PROBLEM.
0!   PRICE ELASTICITY OBJECT
0!   RE-ORDERS THE UNITS UNDER BASE LOAD FOR PROPER CONVOLUTION
0!   ROUTINE TO CONVERT PRODUCTION PARAMETER FILE DATA
0!   Regs(1)=Z'0200' ! BIOS function used to read the kbd flags
0!   Regs(1)=Z'0900' + iAChar(s(jCh))
0!   Regs(1)=Z'0c08' ! flush kbd buffer, get character without echo
0!   Regs(2)=AttrByte ! BH=0 for page 0
0!   Regs(3)=1 ! repeat-count
0!   TESTING. 04/30/04. 
0!   THAT DETERMINE THE LINE ARE THE HISTORICAL PEAK AND AVERAGE DAILY
0!   THE OBJECT FUNCTION IS CALCULATED IN THIS ROUTINE
0!   THIS SUBROUTINE GETS END POINT RESULTS FROM THE EITHER THE CURRENT
0!   TOTAL
0!   UNIT NUMBERS 2700, 2701, 2702, 2703, 2704, 2710, 17337, 17373
0!   USED FOR FUEL SWITCHING IF THE PRIM FUEL IS THE DISPATCHING FUEL
0!   WE WANT TO CREATE A NEW LOAD SHAPE BASED UPON NEW
0!   arrays to capacity_arrays module
0!   call intrup(Regs,Z'10')
0!   call intrup(Regs,Z'16')
0!   call intrup(Regs,Z'21')
0!   call locate(iRow,jCol) ! advance the cursor
0!   end if
0!   if(KeyAvail()) call ReadKey(AsciiCode) ! flush the keystroke buffer
0!   if(KeyAvail()) exit
0!   if(i==24) j1=79 ! assume window is 80 characters wide, 25 rows high
0!   if(jCol>79) then ! assume full screen of 25x80 chars
0!   jCol=jCol+1
0!   write(*,'(80a1)',advance='no') (' ',j=1,j1)
0!  ( TYPE 1 = WEEKDAYS, TYPE 2 = WEEKENDS+HOLIDAYS), & SEASON.
0!  (GROWTH RATE IN PEAK FOR DAY TYPE 2 ASSUMED = THAT FOR DAY TYPE 1)
0!  072106. BIG DIMENSIONING CHANGE: COAL_GROUPS AGGREGATE TO COAL_REGIONS
0!  072106. BIG DIMENSIONING CHANGE: GAS_GROUPS AGGREGATE TO GAS_REGIONS
0!  072917.
0!  1. ALL DEMAND IS SATISFIED OR            
0!  1. CAPACITY BEFORE
0!  1. IF SUPPLY, THEN START UPSTREAM WITH SUPPLY AND MOVE DOWNSTREAM TO DEMAND
0!  1. SUPPLIED FROM THIS PRICE POINT;
0!  10/31/89. ORIGINAL CODE FROM FORCST.FOR AND SUBROUTINE FORCST.
0!  111406
0!  19 in clreport; 18 in MARGNOBJ; 24 in tf_objt2
0!  2. CAPACITY AFTER
0!  2. IF DEMAND, THEN START DOWNSTREAM WITH DEMAND AND MOVE UPSTREAM TO SUPPLY
0!  2. NO MORE COAL CAN BE TRANSPORTED OR
0!  2. TRANSPORTED ACROSS THIS LINE;
0!  200 CALL LOCATE(20,0)
0!  3. DELIVERED TO THIS CUSTOMER
0!  3. IF TRANSPORT, THEN START MIDSTREAM AND MOVE UP AND DOWNSTREAM
0!  3. NO MORE COAL CAN BE SUPPLIED
0!  3. STRIKE BEFORE
0!  300 CALL LOCATE(20,0)
0!  4. STRIKE AFTER
0!  8/21/02. ADDED FISCAL YEAR FOR THE SRP (INDEX -1)
0!  ADD TO EXISTING EXPANSION CAPACITY. NEED A RESET ARRAY.
0!  ADDING A CLOCK TO THE INDEXING FUNCTION
0!  AFUDC, CASH INVESTMENT, NET DEFERRED DEBIT ADDITIONS, ANNUAL AMORTIZATIONS,
0!  ALGORITHM
0!  ALL RIGHTS RESERVED M.S. GERBER & ASSOCIATES, INC.
0!  ANYCHANGES TO THIS COMMON BLOCK MUST ALSO BE DONE IN DSEC_OBJ.FOR
0!  ASSET CLASS
0!  AT THE QUANT_AT_MIN_TRANS.  
0!  AUTHOR:
0!  Arrays below - description:
0!  BASE YEAR LOAD DATA FILE. IF THEY DO NOT EXIST OR THEY ARE YOUNGER
0!  BE JANUARY.
0!  BEGIN FORECAST LOOP BY SEASON AND DAY TYPE
0!  BEGINNING OF THE COMMON BLOCK
0!  BEGINNING OF THE COMMON BLOCK SECTION FOR THE PRODUCTION MODULE
0!  BLOCK 1 TO SERVE BLOCK 1
0!  BLOCK 1 TO SERVE BLOCK 2
0!  BLOCK 1 TO SERVE MARKET
0!  BLOCK 2 SERVE MARKET
0!  BLOCK 2 TO SERVE BLOCK 2
0!  BLOCK 2 TO SERVE_BLOCK 1
0!  BY EACH CLASS,  & FORECAST PEAK KW & TOTAL KWH,
0!  CHECK FOR EXISTENCE OF OVERLAY FILES
0!  CHECK FOR THE FREQUENCY AND TYPICAL DAY CORRESPONDING TO THE
0!  CHECK THAT TOTAL ALLOCATED ENERGY = TOTAL FORECAST ENERGY
0!  CHECK UNITS, KATHY TO PASS EXAMPLE
0!  CLASS # CLASS = 1: COMMERICAL
0!  CLASS # CLASS = 2: RESIDENTIAL
0!  CLASS # CLASS = 3: INDUSTRIAL
0!  CLASS # CLASS = 4: OTHER 1
0!  CLASS # CLASS = 5: OTHER 2
0!  CLASS # CLASS = 6: OTHER 3
0!  CLASS # CLASS = 7: SYSTEM
0!  CODE WAS MODIFIED TO REPLACE THE ORIGINAL HUERISTIC CREATION
0!  COMMON BLOCK FOR ERROR MESSAGES
0!  COMMON BLOCK VARIABLES FOR /WORLD/
0!  CONTRACT ENERGY PATTERNS
0!  CONVERT DEBIT FILES
0!  CONVERT DEBT FILE TO BINARY BASE CASE FORM
0!  CONVERT THE CPL CONTRACT FILE
0!  CONVERT THE ECONOMY-INTERCHANGE FILE
0!  CONVERT THE FUEL-INVENTORY FILE
0!  CONVERT THE FUEL-PRICE FILE
0!  CPL_JURISDICTIONAL_INFOR(MO,SALES_CLASSIFICATION,cpl_mwh)
0!  CURRENT YEAR OF STUDY.
0!  CURVE. THE LINEAR TRANSFORMATION IS CONSTRAINED BY TWO VARIABLES:
0!  DAY TYPE 1 = WEEKDAYS
0!  DAY TYPE 2 = WEEKENDS WITH HOLIDAYS
0!  DECLARATION FOR /FUEL INVENTORY FILE/
0!  DECLARATION FOR /FUTURE ASSETS FILE/
0!  DECLARATION FOR CPL CONTRACT DETERMINANTS
0!  DECLARATION FOR DBREAD COMMON BLOCK
0!  DECLARATION FOR ECONOMY INTERCHANGE
0!  DECLARATION FOR FUEL PRICE VARIABLES
0!  DECLARATION FOR GENERATING UNIT PARAMETERS
0!  DECLARATION FOR LOCALS
0!  Deleted commented out code below this comment, which is probably no longer relevant.
0!  Dest(DestOfs:DestOfs+nBytes-1)=Sour(SourOfs:SourOfs+nBytes-1)
0!  ELSE BUILD IT THROUGHT THE EXTENSION PERIOD
0!  END COMMON BLOCK SECTION
0!  END COMMON BLOCK SECTION FOR THE PRODUCTION MODULES
0!  END READ COAL INPUTS  INPUT
0!  END READ COAL SUPPLY  INPUT
0!  END READ PLANT DEMAND INPUT
0!  ENSURES THAT THE DAY TYPE FORECASTED PEAK AND ENERGY IS MAINTAINED.
0!  EVERYTHING ABOVE WORKS OFF OF DENOM, OR THE ORIGIN OF THE INTERSECTION
0!  EXISTING ASSET FILE CONVERSION
0!  FIND GROWTH RATE IN (COINCIDENT) PEAK & IN DAILY MWH
0!  FORMS FORECAST TYPICAL DAY LOAD CURVE VALUES BY SEASON FOR THE
0!  FORMS SYSTEM FORECAST HOURLY LOAD VALUES
0!  FUEL PRICE VARIABLES
0!  Fuel Derivative Allocation
0!  GET_MM_DATABASE RETURNS THE
0!  GROW LOAD VALUES IN HISTORICAL BLOCK BY RATIO OF FORECAST SYSTEM
0!  IN WINEDIT 3/13/94
0!  INPUT VARIABLES
0!  INPUTS FOR KEPCO
0!  INTERNAL VARIABLES
0!  LAST PASS THROUGH VARIABLE IS 470
0!  LAST VARIABLE IS 473
0!  LDMGT_ACTIVE = .FALSE. : BASE CASE
0!  LDMGT_ACTIVE = .TRUE.  : LOAD MANAGEMENT SCENARIO
0!  LINK PLANTS IN THIS FILE TO MIDAS PLANTS BY EV UNIT ID NUMBER
0!  MONTH.
0!  MSG 8/21/93
0!  NEEDS TO REVIEW BECAUSE IT IS 640k AND FILES = DEPENDENT
0!  OF FORECASTED DAY TYPES BY A LINEAR TRANSFORMATION OF THE LOAD
0!  OF FORECASTED ENERGY TO HISTORICAL ENERGY. THUS, THE TRANSFORMATION
0!  ONE OBJECT EVEN FOR HARDWIRED OPTIONS
0!  ONE REGION FOR NOW
0!  OPTIONS CHECKING
0!  OUTPUT VARIABLES
0!  OUTPUTS BY AREA
0!  OVERLAY THE CPL CONTRACT FILE
0!  OVERLAY THE ECONOMY-INTERCHANGE FILE
0!  OVERLAY THE FUEL-INVENTORY FILE
0!  OVERLAY THE FUEL-PRICE FILE
0!  OVERLAY THE GENERATING-UNIT PARAMETER FILE
0!  OVERLAY THE NEW-PLANT FINANCIAL DATA
0!  READ FOR EACH ENDPOINT
0!  READ IN HISTORICAL LOAD VALUES BY TIME-BLOCK, DAY TYPE
0!  READS SALES TABLES AND ALLOCATES TO CLASS
0!  REGIONAL PLANNING AND ICAP INFORMATION
0!  RESET AS NEEDED FOR MULTIPLE ITERATIONS
0!  REVERSE FLOW
0!  RIPPLE    DOWN PLANT AND CASH VALUES
0!  ROUTINE TO SPEED OUTPUT
0!  SIMPLIFICATIONS FOR MAINTENANCE SCHEDULER:
0!  TAKES HISTORICAL TYPICAL DAY LOAD CURVE VALUES BY SEASON
0!  TAX DEP ADDITIONS, DEFERRED TAXES BASIS
0!  THAN THE LOAD DATA FILE CALCULATE THEM
0!  THE ASSET VECTOR ROUTINES 4/7/99 MSG
0!  THE FOLLOWING 2 LINES WHERE MOVED TO PROVIDE CORRECT RIPPLE
0!  THE MAIN UNIT IN THE DISPATCH ORDER
0!  THE RATIO OF FORECASTED PEAK TO HISTORICAL PEAK, AND THE RATIO
0!  THESE CASH EXPENSES ARE NOT INNCLUDED IN THE INCOME STATEMENT
0!  TO BUILDS, THE FOLLOWING ROUTINES ARE NOT NEEDED. 4/18/94 MSG 
0!  TO HISTORICAL SYSTEM TYPICAL DAY CURVE VALUES THIS BLOCK
0!  TODO: Grab transgroups
0!  TRACK ASSET CLASS INFO
0!  UNIT INFO
0!  VARIABLE ADDITIONS AND CHANGES 02/18/07 DR.G
0!  WHAT ABOUT: FT, PM, EXPENSE OR REVENUE
0!  WHEN AUTO_OPTIM IS BEING RUN
0!  cResult=movecursor(cArg(Col),cArg(Row)) ! c function uses 0-based args
0!  call clrel()
0!  call locate(iRow,0)
0!  call system("DEL "//PathAndName)
0!  do i=i0,i1
0!  do iRow=ULRow,LRRow
0!  emissions blending fuel data
0!  end do
0!  end of debugging stuff appropriate only for small problems
0!  global_variables_mod.f90
0!  integer (kind=1) ::   Sour(*),Dest(*)
0!  integer (kind=4) ::   kbhi
0!  integer (kind=4) ::   nBytes,SourOfs,DestOfs
0!  read the base year 12 months
0!  secondary emissions rates and
0!  write(*,'(1x,40a1)') (DestBuffer(j),j=0,158,2)
0!  write(*,'(a)',advance='no') s
0!  write(*,'(a1)',advance='no') ' '
0!  write(*,*) char(7) ! sound the bell
0! ! PERCENT OF TIME AT MARGIN
0! ! video BIOS function to write a char to CRT, not advancing cursor
0! !!! NEED TO DO DAY SHIFT FOR ALL 365 DAYS !!!
0! !!! NEED TO DO LOCAL HOUR SHIFT WITHOUT WIPING OUT VALUES =>
0! !!! RESET MINIMUM UP-TIME FOR RAMP UP TO AVOID LOGICAL CONFLICT
0! !!! WHAT IS THIS? 111507 REMOVED !!!
0! !!!! TESTING. 10/25/02.
0! !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0! $ MILLIONS
0! (0,1)
0! (0.0,1.0) ASSUME UNIFORM DISTRIBUTION
0! (1) PEAK(1) > 20 OR PEAK(1) <= 20
0! (2) PEAK(2) > 20 OR 0 < PEAK(2) <= 20 OR PEAK(2) = 0
0! (3) PEAK(1) > PEAK(2) OR PEAK(1) < PEAK(2)
0! (DDCUM - DDAMTC(2))
0! (I THINK).
0! (Probably code that was later deleted.)
0! (do nothing)  call clrsc()
0! (do nothing) call movecursor(cArg(Col),cArg(Row)) ! c function uses 0-based args
0! (don't know what to call this)
0! (end of suggested replacement of binary search with Newton's Method)
0! (variable_length+1) when a null character is embedded in the
0! *** END DATA DECLARATIONS ***
0! *** INITIALIZATIONS ***
0! *** WARNING ***
0! **** NEED A CHECK FOR INDENTIFYING CHANGES TO THE BASE CASE
0! ********************************************************************
0! *********************************************************************
0! *********************************************************************      
0! **********************************************************************
0! ***********************************************************************
0! ************************************************************************
0! *************************************************************************
0! ---- CAPEX
0! -----
0! .
0! ...
0! .... (see repository) .....
0! 0 IS A SPECIAL CASE = TOTAL SYSTEM LOADS
0! 01/02/03
0! 01/02/03.
0! 01/03/05. ALWAYS INVOKE.
0! 01/04/06.            
0! 01/04/07 STOP CHECK ON THE EXTENSION PERIOD STARTING BEFORE THE 30TH STUDY YEAR.
0! 01/05/04
0! 01/05/04.
0! 01/06/01. GAT
0! 01/06/02.
0! 01/06/03.
0! 01/06/03. ADDED ROR CAPACITY
0! 01/06/04
0! 01/06/04. DON'T DUMP. SELL TO MARKET (AT A LOSS)
0! 01/07/04. ADDED FOR HORNUNG
0! 01/11/02. FOR NEW TG RESERVE MARGIN REPORT.
0! 01/12/04.
0! 01/14/04.  ELENA ROUTINE
0! 01/14/04. FOR THE BUYER SIDE
0! 01/15/03. RE-WRITTEN FOR QUADRADIC
0! 01/15/04. TESTING FOR ELENA
0! 01/20/03
0! 01/20/03. ALTERED PER MCKEE.
0! 01/20/03. BIG TEST OF USING LAST HOUR'S TRANSACTIONS.
0! 01/22/03. THIS NEEDS TO BE RECURSIVE.
0! 01/22/04.
0! 01/23/04. THIS IMPOSES THE MULTI_MARKET RESOURCE ONTO GENERATION AND OTHER STUFF
0! 01/24/02. FOR MORE ACCURATE CALC OF HEAT RATE.
0! 01/26/04. WHO AM I SERVING? RETAIL OR WHOLESALE? IF WHOLESALE, AT WHAT PRICE?
0! 01/27/03. ELSE CONDITION ADDED TO ACCOMODATE PRELOADING CODE.
0! 01/28/04.
0! 01/29/03. CHANGED LOCAL_QUANTITY(1) TO TEMP_CAP
0! 01/30/02
0! 01/30/02. GAT.
0! 01/30/02. PUT MMBTUS DIRECTLY INTO THE EQUATION. IF AROUND CALHEAT ABOVE.
0! 01/30/02. RE-WRITTEN.
0! 01/31/02. FOR LGE.
0! 01/31/06. CONVERSION FROM ANNUAL TO MONTHLY.
0! 01/31/06. USED TO WRITE THE ANNUAL SBU EMISSIONS REPORT      
0! 010112. GLOBAL SCENARIO MULTIPLIER
0! 010122. ENERGY COST TO REDUCE REVENUE.
0! 010122. REVENUE:
0! 010201.
0! 010303.
0! 010308.
0! 010314. ADDED TARGET SYSTEM MONTHLY STORAGE IN MMCF/DAY
0! 010314. TOTAL DAILY VOLUME BY SYSTEM BY YEAR AND BY MONTH
0! 010412. TO GET RID OF HIGH PRICES DUE TO DEFICITS.
0! 010420
0! 010508
0! 010609. GREATLY SIMPLIFIES BRANCHING
0! 010618. MOVED FROM PROCOST.
0! 010708. REMOVED DAMPENING FOR TESTING.
0! 010713. MOVE FROM OUTSIDE OF YEAR=1.
0! 010818.
0! 010908.
0! 010908. TRIGGERS OFF OF 1 INSTEAD OF 2.
0! 010914.
0! 010914. INJ AND WD VALUES FOR EACH MONTH
0! 010914. REPURPOSED ASSET CLASS ID TO BE STORAGE ID.
0! 011210. FOR GRX AND BURESH.         
0! 011220.
0! 011310. 
0! 011514
0! 011607. INITIALIZE GENERATION REPORTING GROUP
0! 011908
0! 011919. CHANGED FOR TIME-SERIES ON VARIABLE
0! 011920. COMBINE HYBRID: FIXED AND CAPITAL COSTS
0! 011920. PUT BACK INTO DEPENDENT RESOURCE FOR ENERGY EVAL PURPOSES
0! 012015. HOUR_BLOCK_PRICE REPLACES DISPATCH_COST_FOR_BLOCK IN MULTIPLE PLACES BELOW
0! 012019
0! 012108.
0! 012222. REVIEW THIS WITH DIANE. !!!!!
0! 012308. RESET FOR EUROPE. NEED TO EXTEND THE STATE_ID_LOOKUP
0! 012322. CHANGED INDEX FROM IND TO INDEP_POINTER.
0! 012322. REMOVED ANNUAL DERIVATIVE.
0! 012408. MOVED FROM GET_MONTHLY_TRANS_VARIABLES.
0! 012412               
0! 012422.
0! 012422. ASSUMES ALL HOURS RATHER THAN HOURS OF STRIKE.
0! 012422. REMOVED COMBINED HOURLY.
0! 012508. REVERSED AND CHANGED THE SIGN OF TEMP_QUANTITY FOR KATHY
0! 012522. DIANE WANTS CAPACITY REPORTED.
0! 012608. CONSTANT FOR MONTH.
0! 012722. TO MAKE REVENUE ASSUMPTION CONSISTENT.
0! 013021.
0! 013107. FOR AOD.      
0! 013108. LOCAL_ASSIGNMENT(1) IMPLIES AN OFF SYSTEM SALE
0! 013108. THIS LOOKS LIKE IT HAS BEEN MULTIPLIED TOO MANY TIMES.
0! 013114. COPIED FROM OLDER SOURCE TO REMOVE DIMENSION FOR ODEC.
0! 02/01/02.
0! 02/02/04 TO TRACK UNITS BY CLASS
0! 02/02/04. 
0! 02/03/06.
0! 02/04/03. ROUTINE FOR BURESH. TO TRAP FOR MULTIPLE VARIABLES WITHIN ONE TAB.
0! 02/05/04  MODIFICATIONS BY TOM SWEET FOR GREATER ADVANCED LOOK AHEAD
0! 02/09/04.
0! 02/10/03. NEED DYNAMIC UPDATING OF AC FOR EACH CLASS.
0! 02/10/04  TOM SWEET'S MODIFICATIONS FOR MIN DOWN TIME AND ADDITIONAL
0! 02/10/04.
0! 02/10/04. TOOK OUT DETAILED_MAIN CONDITION
0! 02/11/04. UNSERVED INCORPORATED
0! 02/12/04.
0! 02/12/04. FOR WVPA MONTHLY MIDAS
0! 02/13/04. PER MARK TO CLEAR THE TRANSACTIONS
0! 02/17/03. MAJOR MODEL CHANGE.
0! 02/18/03. CHANGED INDEX
0! 02/21/03. ADDRESS SORTED_OPTIONS VIOLATING DISPATCH ORDER.
0! 02/23/04.             
0! 02/23/04. FOR KATHY
0! 02/23/05
0! 02/24/05. TVA INTERRUPTIBLE LOGIC
0! 02/25/04.
0! 02/25/05.
0! 02/26/03. TRANS_CLASSES CURRENTLY HAS NO DEFINITION.
0! 02/26/04. PER MARK TO CLEAR THE TRANSACTIONS
0! 02/27/03.
0! 02/28/03. THIS PRICING SECTION NEEDS TO BE WRITTEN TO
0! 02/28/05.
0! 020107. ADDED AOD VALUATION TYPE SWITCH      
0! 020107. NEW VARIABLES FOR AOD      
0! 020510. ADDED.
0! 020707.
0! 020807.
0! 021208.
0! 021306
0! 021307. LIMIT SIZE TO REASONABLE LEVEL (?)                           
0! 021308.      
0! 021322. TRAP FOR EXPANSION RESOURCES.
0! 021408. MOVED BELOW THE MAX'S.
0! 021422. ADDED SO THAT INDEPENDENT CAPACITY IS COUNTED FOR PLANNING.
0! 021422. ADDED SO THAT INDEPENDENT CAPACITY IS COUNTED FOR PLANNING. 
0! 021422. TEMP_QUANTITY INSTEAD OF HOURLY_QUANTITY(IND).
0! 021610
0! 021819. TEST ADDING RPS_REVENUE
0! 021910 CHANGED TO GET CORRECT RETURN
0! 022015.
0! 022107.
0! 022110
0! 022207.     
0! 022207.                     
0! 022210. PA TO CM
0! 022210. TAKEN OUT: PA TO CM
0! 022308.
0! 022707. HOURLY POSITION REPORT FOR TVA
0! 022807. RESET DIMENSIONS TO ACCOMODATE NEW FORMAT
0! 03/04/04
0! 03/04/04. END_NOX_YEAR RULES OVER INFORMATION
0! 03/04/04. MODIFIED FOR MULTI-MARKET
0! 03/04/04. SEPARATED THE TWO GROUPS
0! 03/05/04. 
0! 03/05/04. BIG DEFINITIONAL CHANGE FOR STRIKE_PRICE
0! 03/08/04. MUST DO THIS WITH MULTI-MARKET AND LOAD FOLLOWING.
0! 03/13/01
0! 03/15/05.  CHECK THIS.
0! 03/16/05. FOR BURESH/ONDEMAND ASP.
0! 03/16/05. IN FOR BURESH.
0! 03/16/05. OUT FOR BURESH.
0! 03/17/05. ADDED FOR PAC AND BURESH
0! 03/20/03. RECHECK WHETHER WE NEED TO DECOMMIT THE FIRST BLOCK.
0! 03/26/03. HARD-WIRED TO AVOID INADERTANT ACTIVATION (E.G. LGE)
0! 03/28/03. FOR ELENA.
0! 030124: JTR added H2 and CS.
0! 030207. FOR ODEC.
0! 030311. ADDED ON-LINE OFF-LINE MONTH CHECK FOR ODEC.
0! 030311. FOR ODEC.
0! 030613. ADDED CONVERGENCE SECTION.
0! 030614. gt.
0! 030720.
0! 030720. INPUT MAXIMUM ENERGY AVAILABLE TO CHARGE FROM MARKET.
0! 030908. temp for europe: to get storage to grow with demand.
0! 031005
0! 031005. HYDRO SECTION. ADDED FOR DOUG
0! 031019. ADD AVAILABLE RPS_REVENUE AT THIS POINT TO GIVE RPS RESOURCE
0! 031108
0! 031108. NEW DEF OF ACTIVE_WD_FORECAST FOR DOUG AND ACUPOWER.
0! 031113. VECTORING
0! 031207.
0! 031208. FOR DEBUGGING
0! 031208. MAY BE RESET IN THE GregDayCall entry
0! 031210
0! 031210.
0! 031307. NOTE: SAME LINK, BIDIRECTIONAL
0! 031308. temp fix. determine why 25th interval = 0.
0! 031409.
0! 031507.
0! 031507. 
0! 031520. GAT. IT LOOKS LIKE MIN_RECOVERY_OF_SU_COST PLAYS NO ROLE BELOW.
0! 031710. NEW MEASURE OF PROFITABILITY
0! 031807.
0! 031910. THIS FILTERS-OUT MORE EXPENSIVE OPTIONS.
0! 031914. ADDED VECTORS FOR DIANE.
0! 031915.
0! 03207.
0! 032110.
0! 032115. GAT. RESET TO NEGATIVE MARGIN.
0! 032115. NEED TO MODIFIY THIS TO IMPROVE MAX_RECOVERY_OF_SU_COST
0! 032115. THIS SHOULD BE LOOK_AHEAD_MARGIN(MIN_UP_TIME_INT)
0! 032219. TEST.
0! 032315. UP CONSTRAINT .OR. ECONOMICS GIVEN MIN UP/DOWN.
0! 032710. temp         
0! 032712. CHANGED FOR BURESH.     
0! 032811. TOOK OUT SCREEN CAPACITY PER NAN
0! 032907. RECALC ON PATHS_N_CURVES
0! 033109. SHOULD BE FIRST OCCURENCE.
0! 033307. MODIFIED TO ACCOUNT FOR PUMPED STORAGE.
0! 04/08/03. 
0! 04/08/03. DEVELOP MARGINAL COSTS AROUND I
0! 04/12/04.     
0! 04/14/03. NEED TO STORE FOR NEXT MONTH.
0! 04/14/03. VAR PHYSICAL EXPENSE. BUY THE FUEL AT THE BEGINNING OF THE MONTH
0! 04/15/02. ThisExponent TOO BIG
0! 04/16/03. DETAILED REPORT
0! 04/16/03. DETAILED REPORT FOR TORNADO CHARTS
0! 04/16/03. TAKEN OUT BECAUSE FUEL EXPENSE FLOWS THROUGH THE UNIT
0! 04/17/03.
0! 04/18/03. DETAILED REPORT FOR TORNADO CHARTS
0! 04/25/03. TESTING
0! 04/29/03. MOVED INTO CALL STATEMENT
0! 04/30/03. MOVED BACK
0! 040109.
0! 040115.
0! 040115. IOTA LOGIC ADDED SO THAT IF A UNIT SETS MARGIN IN PRICE LOGIC
0! 040307.
0! 040307. NEED TO REFLECT THE LOSSES AT EACH LINK
0! 040307. QUANTITY TRANSPORTED SHOULD VARY BY LINK.
0! 040407. MAJOR REWRITE ON INDICES WITH OFFSET T.
0! 040511. RECONSTRUCT ICAP CALC FOR UNITS THAT HAVE BEEN BUILD
0! 040515. LOOKS LIKE UNIT_UP_LAST_HOUR IS REDUNDANT.
0! 040611. NOTE THE ON FIRST_CT_EAS IS $/KWYR
0! 040611. TO RECALCULATE EXISTING UNITS CAPACITY.
0! 040706. 042406. MOVED INSIDE MONTH.
0! 040812. NEED TO DECIDE HOW TO HANDLE. WHAT VALUE DOES THIS HAVE?
0! 040905. ADDED FOR MCKEE.
0! 040905. NUNITS MAY BE TOO SHORT IF WE INNCLUDE DERIVATIVES
0! 040907. TRANSMISSION CONGESTION. MUST TRACK THIS CASE THROUGH.
0! 040908. FOR WPS. C = CEILING. THE DERIVATIVE IS A MUST TAKE WITH OPTIONALITY
0! 041006. OUT PER BURESH.               
0! 041008. FOR BURESH.
0! 041010. CHANGE MADE TO CAPTURE IMPACT ON EPUC TO CHANGING DEMAND
0! 041012.
0! 041012. ADDED SO THAT MONTHLY MAINTENANCE PERCENT IS ACTIVE AS
0! 041012. CREATED EXTERNAL FUNCTION
0! 041012. REMOVED. GT.
0! 041107. TRANSMISSION CONGESTION ADDED.
0! 041110 MOVED UP. CHANGED TO CM. NEED TO USE THIS FOR CAPACITY PAYMENT
0! 041117. MOVED INSIDE LOOP.
0! 041209. FUEL PRICES MUST REFLECT CHANGING EMISSION PRICES.
0! 041307.
0! 041307.                   
0! 041307. NOTE: C FOR THE BOTTOM INTERVAL IS SET TO EITHER 0 OR 1 HERE
0! 041510. MARK SHOULD LOOK AT THIS CODE.
0! 041612. USED TO ACCUMULATE TO PRIMARY MOVERS.
0! 041615. ADDING HOUR, MONTH, YEAR TO DAILY.
0! 041615. HOW MANY CAN I ELIMINATE? HOW MANY DO I NEED TO ADD?
0! 041717. !!!!!!!!!!!!!! TEST !!!!!!!!!!!!!!!!!!!!!
0! 041906. ALLOW FOR A UNIT TO HAVE MANY FUEL DERIVATIVES.
0! 042007. HUGE CHANGE. REMOVE ALL NON-DEMAND PC'S
0! 042007. THIS SHOULD BE READ ONCE AFTER THE NODES AND DEMAND FILES.
0! 042208. MOVED UP
0! 042209.
0! 042307.            
0! 042407. FUEL RETENTION IS "HARD-WIRED" TO 1% OF THE TRANSPORT RATE.
0! 042507.
0! 042609
0! 042609. 
0! 042609. RPS FOR THERMAL (AND HYDRO AS THERMAL)
0! 042617.
0! 042617. NEEDS TO BE SAVED BY CM.
0! 042710. RECALCULATE HGST_NET_MARG_ADDED BASED ON CURRENT ICAP
0! 042714. FIGURE-OUT TIME DIMENSIONS INTERNALLY. ASSUME MONTHLY CALL.
0! 042717 !!!!! TESTING !!!!!!
0! 042717.
0! 042717. ADDED THIS LINE TO GET THE RIGHT VALUE FOR CAPACITY
0! 042809. TG CG IS STILL UNIQUE
0! 042811. MOVED FOR TVA STOCHASTICS.
0! 043007. MOVED UP TO ACCOUNT FOR NON-DEMAND PATHS FOR CONGESTION PRICING.
0! 05/07/03. ALTERED.
0! 05/07/03. TECHNOLOGY SCARCITY
0! 05/08/03. TOM PREFERS THE SQUARED TERM
0! 05/09/01.
0! 05/09/03. IF TRUE THIS ALTERS BLKNO = 0 (MUST RUN CONDITION) ON A MONTHLY BASIS
0! 05/13/03. NEW RESOURCE ADDITIONS LOGIC
0! 05/13/05. ALTERED PER MCKEE TO INNCLUDE REVENUES.
0! 05/13/05. PRE
0! 05/13/05. TEST
0! 05/15/01. HEC_EXCESS_MWH ALREADY INITIALIZED.
0! 05/15/03. CLEARS NAME LINE AT BOTTOM OF FILE
0! 05/15/03. FOR GRE
0! 05/16/03. MOVED INSIDE UNITS LOOP TO AVOID ADDITIONS AND REMOVALS.
0! 05/20/01. Begin Monthly Accumulation Hourly Variables
0! 05/20/03.
0! 05/20/03. MONTH:TYPE(PURCHASE,GENERATION,DERIVATIVE,SERVICE TRANS):COST(FUEL,NON-FUEL,DEMAND)
0! 05/20/03. NOTE THE SUMS.
0! 05/22/03.
0! 05/22/03. FOR BURESH
0! 05/23/03. OUT PER GERBER. 
0! 05/27/03. MOVED FROM HOURLY
0! 05/29/03. IN PER BURESH. ONLY FOR PHYSICALS.
0! 050101. FOR PACIFICORP/NW HYDRO
0! 050107.
0! 050107. NEW BASIN DEFINITION
0! 050107. NOTE: GET INDEX FROM LINKS DATABASE. 
0! 050107. NOTE: NODES MAY BE EITHER SUPPLY OR DEMAND
0! 050107. REDEFINITION OF BASIN: THIS NOW TAKES ONLY THE CURRENT BASIN IN A GIVEN YEAR.
0! 050107. REDEFINITION OF SUPPLY CURVES:
0! 050108. THIS IS USED TO DRIVER HORIZONS INTERACTIVE SUPPLY CURVE.
0! 050307. MW REPORT.
0! 050307. PUT BACK IN TO MATCH PATHS LIST WITH PATHS LIST IN LINKS FILE
0! 050406
0! 050407. RESET DAILY FOR CONGESTION            
0! 050506
0! 050517. ADDED MONTHLY ENERGY PRICE BACK IN.
0! 050519.
0! 050617. if charge mwh then transform
0! 050709. RESET AT THE BEGINNING OF EACH ENDPOINT. FOUND BY WPS.      
0! 050807.
0! 051007.
0! 051017.   NEW STORAGE ALGORITHM THAT ALLOWS ANY HOUR TO PUMP OR GEN.
0! 051017. NEW STORAGE ALGORITHM THAT ALLOWS ANY HOUR TO PUMP OR GEN.
0! 051107. JUMP ONLY TO CURRENT YEAR.
0! 051109. PUT BACK IN FOR COST ESCALATION OF SUPPLY CURVES
0! 051109. PUT THIS ROUTINE BACK IN. ONLY ADDED NECESSARY FUNCTIONS.
0! 051212. ALWAYS ASSUMES A 10 POINT CURVE.
0! 051310. TO GENERATE MONTHLY CAPACITIES
0! 051312    CALL USER DAY TYPES, CREATE ARRAY OF CF'S, INITIALIZE
0! 051410. START CHANGES TO IMPROVE ACCURACY.
0! 051507.
0! 051608.
0! 051608. WORK AROUND
0! 051609.
0! 052204
0! 052310 REMOVED BECAUSE OF AN ARRAY DIMENSION VIOLATION IN THE ROUTINE MSG
0! 052312. NEED TO ACCOMODATE CAPACITY FACTORS.
0! 052312.THE PROBLEM IS ONE PATTERN TO MANY 
0! 052412. THIS WHOLE SECTION SHOULD BE PRE-CALCULATED AND PARAMETERS SAVED 
0! 052415.
0! 052415. ALWAYS ACCUMULATE REVENUE.
0! 052415. ANNUAL PARAMETERS.
0! 052515. CAN'T DO THIS BECAUSE OF PHYSICAL.
0! 052615. QUANTITY OF PRODUCT IS SET TO ZERO AND THEN CONTROLS THE
0! 052712. COMPLETE REWRITE OF THIS SECTION.
0! 052808. TEST TO ADDRESS THE ERCOT WIND PROBLEM.
0! 052815. THIS IS A PIVOTAL ASSUMPTION. NEED TO CHECK THAT IT WORKS.
0! 052909. TOOK OUT TO REMOVE THE STATIC TABLE IN THE N4 FILE.
0! 053107.
0! 06-26-2021. REVISED: 07-24-2021 PER DIANE.
0! 06/03/04.
0! 06/04/01. 50MW BLOCKS
0! 06/04/04 NOTE: REDEFINITION OF HOURLY LOAD BEFORE TO INCLUDE SPINNING
0! 06/05/03. DAILY SOLUTION IS NOT USED FOR THIS RESOURCE
0! 06/10/03. CHANGED TO PG COUNTER
0! 06/11/03. PAY FOR THE PREMIUM REGARDLESS OF STRIKE.
0! 06/12/04.      
0! 06/13/03. FOR THE ECITY REPORT
0! 06/26/03.
0! 06/27/05. FOR SRP
0! 060107.
0! 060107. 
0! 060107. CALL THE DEMAND FILE. MAKE SURE ORDER IS RIGHT.
0! 060107. NEED A SEPARATE SWITCH?
0! 060107. ONLY ONE CALL PER DAY.
0! 060206. FOR BURESH.
0! 060309. MOVED UP. GET THE INITIAL MARKET DURATION CURVE.
0! 060408. BIG DEFINITIONAL CHANGE FOR TEXAS WIND.
0! 060520. TEST LIMIT.
0! 060708
0! 060807. PER JONES.
0! 060815. MODIFIED TO HANDLE SIX FUEL CATEGORIES WHEN 12 ARE DEFINED.
0! 061207. EACH BIDIRECTIONAL BECOMES TWO LINKS.
0! 061207. SO THAT EACH LINK MAY BE BI-DIRECTIONAL.
0! 061207. max_prod_types_clr: ADDED STORAGE AS 18 ! 112220. ADDED DG POSITION 19.
0! 061209. OUT TO REMOVE ANNUAL PRODUCTION LIMIT.
0! 061209. PUT IN TO ALLOW DAILY CHANGE TO BASE PRICE.
0! 061209. REMOVED ANNUAL PRODUCTION CONSTRAINT. 
0! 061209. REMOVED DUE TO DYNAMIC DRAWDOWN OF K.
0! 061209. TOOK OUT TO REFLECT DYNAMIC UPDATING OF BASIN EXTRACTION.
0! 061307. DISABLE COMBINATORIAL GAS MODEL.
0! 061309. BEGIN GRX ALGORITHM.
0! 061507. REMOVE NON-DECREASING COST CURVES.
0! 061609. FOR SMALL HYDRO IN FPL PROBLEM
0! 061615. THIS SECTION SHOULD BECOME A GENERAL HOURLY AVAILABILITY PROGRAM
0! 061708. CHANGED FOR KATHY.
0! 061709
0! 061808. FOR BURESH AND THE UZD REPORT
0! 062006. SPCAPEX ADDITION LINKED_BETTERMENT_OPTION
0! 062015. NOTE: ADDED R_CAPACITY AS A MULTIPLIER * 100
0! 062017.
0! 062020. ALLOCATED IN CLREPORT.
0! 062104 FIRST CONDITION.                     
0! 062106
0! 062106. COST OF MARKET SALES
0! 062107.
0! 062120. END RPS CURVE ROUTINE HERE.
0! 062304 FOR BURESH
0! 062307.
0! 062404            
0! 062709. REPLACES THE RETIREMENT PRICE ROUTINE.
0! 062721
0! 062809
0! 062906. 020207.
0! 062906. TOTAL HOURLY BLOCKS CONDITION ADDED
0! 062906. TRAP FOR CASE OF END_OF_UNITS = .TRUE. (NO ACTIVE UNITS).
0! 063007.
0! 063008. MOVED TO RESET ROUTINE BELOW.
0! 07/07/03.
0! 07/08/02.
0! 07/11/03. TEST
0! 07/11/03. TEST.
0! 07/12/04. FROM TRANSOBJ.FOR
0! 07/22/03.
0! 07/22/03. EXPANDED TO TRANSACT C THIS MIGHT BE A PROBLEM WITH MEMORY
0! 07/24/03. MOVED OUT OF THE CONDITIONAL ON MARKET_AREA_ACTIVE
0! 07/28/03. ADDED FOR RICHARDSON.
0! 07/28/04. MODIFIED TO TAKE INTO ACCOUNT TRANSACTION GROUP POINTERS
0! 07/30/04.
0! 07/30/04.  TAKEN OUT PER KATHY ANDERSON.
0! 070108.
0! 070108. MAJOR LOGIC CHANGE: TREAT DUMP UP TO ZERO DUMP
0! 070108. TOOK OUT HOURLY DUMP BEFORE
0! 070108. TOOK OUT HOURLY DUMP BEFORE TO BE CONSISTENT               
0! 070209. MAKE A LIST OF ELEMENTS THAT I NEED TO ADD:
0! 070209. REMOVED.
0! 070209. TEMP TO CREATE RETIREMENT SCHEDULE
0! 070320. MAY WANT TO MOVE THIS UP TO SAVE TIME.
0! 070409.
0! 070410. DOES THIS IMPLY THAT IT BELONGS IN THE PATHS FILE?
0! 070606. SUBSTANTIALLY CRIBBED FROM GS_OBJECT
0! 070606. SUBSTANTIALLY CRIBBED FROM TG_OBJECT
0! 070806
0! 070806.
0! 070806.     
0! 070806. ADDED EXTRA CONDITION
0! 070808. removed to allow negative values for european database.            
0! 070812.
0! 070906
0! 070906      
0! 070906.
0! 070906. CREATED.
0! 070906. MAY NEED TO MAKE THIS A MULTI-FILE SPECIFICATION.
0! 071108. FOR BURESH.
0! 071109. BROUGHT INITIALIZATION BACK IN ON PATH_WHEELING_CHARGE.
0! 071209.
0! 071216. ALTERED TO CORRECT FOM UNDER GRX AND FOR UNITS STARTING AFTER
0! 071306. 
0! 071406
0! 071406.
0! 071706.
0! 072006
0! 072006.
0! 072006. TEMPORARY FOR BURESH.
0! 072110. FIND CHEAPEST $/KW RESOURCE PER TRANSACTION GROUP
0! 072119.
0! 072119. NEW CODE FOR HOURLY LOAD SHAPE.
0! 072208. CHECK FOR EXHUASTED ANNUAL PRODUCTION
0! 072209. CN IS THE LOCAL INDEX. I IS THE CAPACITY_OPTIONS INDEX.
0! 072209. RENEWABLE, EFFICIENCY. CAN BE IN THE SAME LOOP LATER.
0! 072209. RETURN CONDITION IS IF THERE ARE NO
0! 072214. TEST.
0! 072306.
0! 072306. MAKE INT_RES_REMAIN INTERVAL RESERVE REMAINING FOR A MORE NATURAL
0! 072315. NEED TO GET BACK IN.
0! 072315. NEED TO GET DYNAMIC FUEL PRICING BACK IN.
0! 072507. Used only for reserve margin calculations.
0! 072609.
0! 072609. MAJOR OVER-RIDE FOR GRX BUILT RPS UNITS.
0! 072609. THIS SECTION MAKES THE RESOURCE AVAILABLE FOR OPERATIONAL PURPOSES.
0! 072620. RPS_REVENUE SOLVED IN CAPACITY PRICE SECTION BELOW.
0! 072706.
0! 072709. CAPACITY BEFORE CAPACITY PLANNING FACTOR
0! 072815. TEMP.
0! 072908. ALLOW OVERLAY TO HAVE BLANK VALUE FOR BURESH AND HI.
0! 072909. INCLUDED SHRINKAGE CALC
0! 073106. BIG CHANGE: POSITION OF THE COAL NODES FILE.
0! 073106. BIG CHANGE: POSITION OF THE GAS NODES FILE.
0! 08/03/04. TEMP
0! 08/05/04. REMOVED THE YEAR INDEX.
0! 08/07/01. CHANGE VARIABLE LIST TO WORK WITH MONTHLY MIDAS.
0! 08/12/03. CHECK ALL FIRST BLOCKS FOR NON-DECOMMIT.
0! 08/13/03. DOUBLE INDEX ADDED.
0! 08/13/04. RE-WRITTEN
0! 08/19/03. 
0! 08/19/04
0! 08/19/04.
0! 08/19/04. ADDED DEPENDENT CONDITION FOR PAC CORP DUCT FIRING.
0! 08/25/03. MOVED ABOVE UNITS ACTIVE LOOP FOR BURESH AND A.G. EDWARDS.
0! 08/25/03. MOVED UP FOR BURESH AND A.G. EDWARDS.
0! 08/29/03.
0! 08/30/02. THESE EMBED THE PRIMARY AND SECONDARY DELIVERY COMPONENTS
0! 080112. CONSISTENT DEFINIATION OF FUEL PRICE.
0! 080117. TOOK OUT B/C IT WAS DOUBLE CALCULATING $/KW MONTH
0! 080120. RPS ONLY MUTUALLY EXCLUSIVE FROM GRX_RPS_MODULE_ACTIVE
0! 080211. FOR NEW TOPOLOGY.
0! 0803006 MOVED FOR BURESH.
0! 080306
0! 080306.
0! 080309. DEVELOP RPS SUPPLY CURVES
0! 080406.
0! 080406. THIS CALL ALLOCATES AND DEALLOCATES EVERY MONTH. COULD
0! 080609
0! 080609. FOR GAS PIPELINE EXPANSION
0! 080609. PipeExpansionCapacity FOR THE GREEN MODEL.
0! 080616. INCORPORATED ORIGINAL ALTER PRICE ALGORITHM TO GET SIMILAR
0! 080703. DYNAMIC FUEL IS NOW SET IN THE FUEL USED SOURCE FILE.
0! 080722. ADDED OW AND HB (18,19)
0! 080806.
0! 080920.
0! 081006. OUT TO ATTEMPT SPARSE 
0! 081110.   WHAT IS THE CAPACITY THAT MAKES THE TWO RESERVE MARGINS
0! 081306. ADDED THREE DIFFERENT SWITCHES FROM THE INTERRUPTIBLE_ACTIVE SWITCH.
0! 081307. TEMP !!!
0! 081308. 
0! 081308. FIXED BAD ASSIGNMENT. DEFAULT TO INITIAL PRICE.
0! 081316.
0! 081316. END INSERT.
0! 081507. EVALUATE A SHORTENED POS_CONSEC WITH GREATER MARGIN FOR ODEC
0! 081521. TO ACCOMMODATE HYBRID
0! 081620. PER 8/14/20 MEETING, PASS SUPPLY CURVE INFORMATION.
0! 081719. REMOVED RETIREMENT ICAP.
0! 081808. FOR WPS AND DIANE.            
0! 081816. GAT. FOR KATHY.
0! 081908. TEMPORARY FOR PPL DEMO.
0! 081920. BEGIN
0! 081920. END
0! 081920. REC PRICE FROM RPS SUPPLY CURVE FOR RPS ONLY.
0! 082009. ADDED PER RON'S GAS PRICE SIMULATION 071009.
0! 082012. SHOULD REPLACE WITH AN ANNUAL CALL NUMBER_OF_DAYS(MONTH,DAY)
0! 082108. testing for bomb in this section.
0! 082120
0! 082121. ADDED HYBRID CHECK.
0! 082121. FOR INDEP PORTION OF HYBRID
0! 082121. INCLUDES LOCAL FOR STORAGE/HYBRID.
0! 082207.       
0! 082221. 082421.
0! 082221. 090521. NEGATIVE VALUE FOR INDEPENDENT.
0! 082309.
0! 082412.
0! 082519.
0! 082716. NEW RPS BUILD SECTION
0! 082806. FOR BURESH.
0! 082821
0! 083006      
0! 083006. ALTERED CODE FOR CONTINGENCIES.
0! 083006. TEMP !!! NOT DEFINED !!!
0! 083009. CHANGED TO FILE_SOURCE_INDEX
0! 083106. ACCUMULATE FOR FISCAL YEAR
0! 083106. FOR SRP.
0! 083106. NEW TEST CONDITION.
0! 09/02/01. AMEREN TRANSFER PRICING CAPABILITY. TWO PARTY FOR NOW.
0! 09/02/01. TRANSFER PRICING.
0! 09/05/01         
0! 09/10/03. TEST FOR TVA LMP
0! 09/11/01. GAT. TEMP FOR EMPIRE
0! 09/11/02.           
0! 09/11/03. MUST RESET HOURLY.
0! 09/11/03. RECALCULATE MUST RUN.
0! 09/12/02.
0! 09/12/03. BRUTE FORCE.
0! 09/16/03.
0! 09/18/03. FOR MACY TO IGNORE BUILDING PURCHASE POWER EXPENSES WHEN 
0! 09/22/03. MORE BRUTE FORCE
0! 09/22/03. MUST TAKE HOURLY MUST RUN CAPACITY.
0! 09/23/03. CHANGED TO CYCLE OVER MULTIPLE TRANSACTION GROUPS (R_TG).
0! 09/27/03. MOVED FROM BELOW TO ACCOMODATE LEVELIZED PLANNING
0! 09/27/03. MOVED INTO TRANSACT_GROUP_RESERVE
0! 09/27/03. MOVED.
0! 09/30/00. GAT.
0! 090106.
0! 090106. TEMP TEST FOR LONG RUNS
0! 090221. CAN'T USE NUM_STORAGE B/C IT IS MONTHLY.
0! 090221. CHANGED TO GET INDEPENDENT ENERGY.
0! 090414. FIXED BUG IN ESCALATION CASE.
0! 090421
0! 090514. GAT.
0! 090606.         
0! 090606. SEEMS TO CAUSE MORE PROBLEMS. ERASE IF EXISTS AS A TEST.
0! 090616. FOR GRX OR MRX.
0! 090706.
0! 090706. TEST FOR AVOIDING REALLOCATION
0! 090707. MIN AND MAX RM BY TG
0! 090709. ADDITIONAL MAXIMUM TG CONSTRAINT.
0! 090804 MAJOR RE-WRITE
0! 090806. ADDED REGIONAL_AREA_PRICE
0! 090806. FIRST ATTEMPT AT MARKET PRICES FAILED.
0! 090806. PIN FILE DOES NOT NEED TO EXIST.
0! 090904 MAJOR RE-WRITE.
0! 090904 TESTING
0! 090907
0! 090907.
0! 091106.
0! 091106.  MARKET CONTINGENT LOGIC FOR KCPL. 9035.
0! 091109. TEST FOR IPL
0! 091210. ADDED NEW UNIT
0! 091306. MAJOR REWRITE. CREATE FIXED ARRAY SIZE FILES IN
0! 091307. CAPACITY MARKET
0! 091307. CAPACITY MARKETS. ! 092507. UPDATED
0! 091309.      
0! 091309.       
0! 091407. FOR CAPACITY_MARKETS
0! 091416.
0! 091416. 
0! 091504. BIG CHANGE
0! 091712. FOR KATHY.
0! 091712. TO GET ENERGY COST
0! 091820. DEPENDS ON COUNT.
0! 092121.
0! 092121. NEW STORAGE AND HYBRID LOGIC.
0! 092206. MOVED FOR FISCAL REPORTING.
0! 092206. TOOK UNITS CONVERSIOS OUT.
0! 092221. 
0! 092310.
0! 092310. FOR JEAN AND FALL 10 REF CASE.
0! 092311. HANDLE BASIS DIFFERNTIAL HERE 
0! 092311. SUPPLY CURVE MODEL
0! 092508.
0! 092607. VERIFY
0! 092608. ONCE PER ENDPOINT
0! 092608. TO ADDRESS ODEC PROBLEM.
0! 092706
0! 092706. TEST WITH NEW TEMP_I AND NO YES_TWO_PRB_DIGITS.
0! 092707. REPLACE VALUE IF VECTOR IS NOT VALUE OR IN EXTENSION PERIOD
0! 092806. ADDED FOR LNG MODELING.
0! 092806. ADDED TEMP_MULTI_AREA_NAME
0! 092806. HARD-WIRED FROM LOAD_FILE_CHAR_EXT TO SCEN_FILE_CHAR_EXT 
0! 092806. JUST CHANGED TEMP_I BACK.
0! 092906
0! 092906         
0! 092906. SEEMS TO BE RELATED TO THE MARKET_PRICE_NAME WHEN 
0! 093004
0! 093006. CONFIRMED THAT THE TWO DIGIT VERSION WORKS.
0! 093008.
0! 093009. ADDED MONTHLY GAS PATTERN.               
0! 1 = ENERGY, 2 = CAPACITY, 3 = ENERGY + CAPACITY, 4 = TECHNOLOGY SCARCITY, 5 = ENERGY + CAPACITY + TECHNOLOGY SCARCITY
0! 1 = MONTH BTU
0! 1 = RETAIL COST
0! 1. NEED TO FIX THE DAY OFFSET FOR LREC
0! 1/12/00.
0! 1/12/93 ADDED TO CAPACITY OPTIONS
0! 1/14/98. GAT. FOUND BUG IN THIS STATEMENT.
0! 1/15/98. GAT. FOR TVA.
0! 1/16/99. GAT. MOVED INTO MAINSTREAM CODE.
0! 1/17/03.
0! 1/18/99. GAT. OUT.
0! 1/20/93 THE FOLLOWING CAUSES FIRST UNITS OR THE SHADOW UNIT TO BE
0! 1/21/99. GAT. TAKE SPINNING OUT OF GENERATION CALCULATIONS
0! 1/27/98. GAT. CHANGED CODE BELOW FROM ,1, TO ,2,
0! 1/27/98. GAT. CHANGED CODE BELOW FROM ,1, TO ,2, AND MULT * -1
0! 1/3/3.
0! 1/8/03. ALTERED HOUR_PATH_LIMIT TO REFLECT MULTIPLIERS
0! 1/8/93. GAT.
0! 1/9/02. CHANGED FROM LOCAL PRICE TO L_MONTHLY_PRICE FOR DERIV CALC'S
0! 10
0! 10/02/02.
0! 10/02/02. FISCAL YEAR REPORTING
0! 10/02/03. ADDED FOR FE. GO GET THE FIRST END_POINT AGAIN.
0! 10/03/02.
0! 10/03/02. FOR REGIONAL CONSOLIDATION. NOTE REASSIGNMENT.
0! 10/03/02. REGIONAL CONSOLIDATION FOR BURESH.
0! 10/04/01
0! 10/05/02. $/MWH Units.
0! 10/06/03.
0! 10/06/03. BIG CHANGE.
0! 10/06/03. BIG CHANGE: NOW HANDLED IN EACH ROUTINE
0! 10/06/03. MOVED BELOW TO GET COMBINATIONS OF BUY/SELL AND CALL/PUT CORRECT.
0! 10/06/03. RE-INSTATE MUST RUN AS NOT CONDITION FOR PURCHASE
0! 10/07/03.
0! 10/08/01. FOR TVA/BURESH/OTHERS
0! 10/1/00 MOVED FROM MARGNOBJ.FOR
0! 10/1/93 ADDED TO FORCE EL, CT, AND DSM OPTIONS TO REFERENCE ONLY
0! 10/10/03.
0! 10/11/01. GAT. DAILY OPTION FROM THE ENERGY PRODUCTS FILE.
0! 10/11/04. FOR ENTERGY. ! TESTED AND BACK IN ON 10/15/04.
0! 10/13/03.
0! 10/13/03. CHANGED ABOVE CONDITION
0! 10/13/03. CHANGED POSITION OF MARGINAL COST
0! 10/13/03. TO BE CONSISTENT WITH CHANGES MADE TO DAILY AND HOURLY ROUTINES.
0! 10/13/04
0! 10/13/04. FOR BURESH
0! 10/14/02. FOR ANNUAL PRODUCTS
0! 10/15/04.
0! 10/16/02. MOVED PENALTY FACTOR INTO CLA_OBJECT.
0! 10/19/01
0! 10/19/93 GAT
0! 10/20/00. GAT. DAILY OPTION FROM THE ENERGY PRODUCTS FILE.
0! 10/20/03. CALLED BY SWITCH ABOVE
0! 10/20/03. FOR DEVELOPMENT PURPOSES.  NEED TO ADD SWITCH IN COAL_DEMAND FILE.
0! 10/20/03. FOR DEVELOPMENT PURPOSES.  NEED TO ADD SWITCH IN GAS_DEMAND FILE.
0! 10/20/03. NEED A SWITCH IN COAL_DEMAND FILE BY TABLE
0! 10/20/03. NEED A SWITCH IN GAS_DEMAND FILE BY TABLE
0! 10/21/02.
0! 10/21/03. 
0! 10/21/03. SECOND BLOCK TAGGED UNITS WITH AVAILABLE CAPACITY AND MIN_SPIN_CAP
0! 10/21/98. GAT. RE-WROTE FOR WVPA
0! 10/22/02. CURRENTLY ONLY SET FOR L_SELLER > L_LP > L_BUYER.
0! 10/22/03
0! 10/22/98. GAT. MOVED OUT OF READ_MARKET_DATA
0! 10/23/02.  TESTING !!!
0! 10/23/02. PATHS WITHIN PATHS FILE LOGIC
0! 10/23/03.        
0! 10/23/06. ADDED PER THE 10/16/06 MEETING.
0! 10/24/01.
0! 10/24/02.
0! 10/24/02. GAT.
0! 10/24/02. LOOKING IN THE REVERSE DIRECTION.
0! 10/24/03. BIG CHANGE. PERMITS FREQUENCY AND DURATION BY UNIT
0! 10/25/02.
0! 10/27/98. GAT.
0! 10/28/03.
0! 10/29/02. MOVED UP
0! 10/29/03. TESTING.
0! 10/29/04. CHANGED FROM ABOVE.
0! 10/31/02. FOR FE ENTERPRISE RISK MANANGEMENT
0! 10/6/00. FOR PACIFICORP.
0! 10/8/02.             
0! 1000   FORMAT(I5,F7.4,4I5,10F12.5)
0! 1000 FORMAT(I2,I2,I2,9X,I1,4X,12I5)
0! 100112. SCARCITY COST FOR KATHY.
0! 100206. 
0! 100208. SCENARIO COAL LOAD SHAPE?
0! 100208. SCENARIO GAS LOAD SHAPE?
0! 100209. ADDED TO INTRODUCE MONTHLY SEASONALITY.               
0! 100312. SHOULDN'T THIS BE BY TG NOT TRANS? APPEARS REDUNDANT.
0! 100504. FOR THE EV DATABASE
0! 100506.
0! 100509. THIS SECTION MOVED INTO GET_SUPPLY_COST_CAPACITY_CURVES
0! 100509. TO CAPTURE THE CUMULATIVE IMPACT OF CHANGES TO RESERVES OVER TIME
0! 100810. I ONLY AFTER U AND D.
0! 100812. 
0! 100907. CAPACITY MARKETS EXPENSES.
0! 100908.
0! 1010 FORMAT('&',A)
0! 101006.
0! 101006. ADD LNG HERE.
0! 101006. BIG REDEFINITION OF CS_ ARRAYS AND CREATE INITIAL ARRAYS 
0! 101006. BIG REDEFINITION OF GS_ ARRAYS AND CREATE INITIAL ARRAYS 
0! 101006. THIS IS CALLED MONTHLY BY SUPPLY BASIN.
0! 101006. WHAT IS THE DIFFERENCE BETWEEN: TOTAL_DELIVERED_QUANT(PC) AND SUPPLY_AVAILABLE(S,I)
0! 101010. TAKING OUT THE VRR DEMAND CURVE MULT FROM THIS CALC
0! 101106 !!!         
0! 101109 REMOVED TO LOWER DBG SIZE
0! 101109. CHANGED BACK FROM LAST_K. NOT USED IN NEW SCHEME
0! 101112. test.
0! 101116.
0! 101309. MODIFIED THIS SECTION FOR FALL REFERENCE 2009.
0! 101406. SORT CS FROM HIGH TO LOW AND PUT LNG IN THE FIRST INTERVALS.
0! 101406. SORT GS FROM HIGH TO LOW AND PUT LNG IN THE FIRST INTERVALS.
0! 101506. STORAGE IS BASED UPON GS INDEX
0! 101709. REASSIGNED FOR TOPO TO CA_99 PER BURESH
0! 101921. MOVED.
0! 102306.
0! 102307.
0! 102409.
0! 102513. REMOVED FOR AMEREN.
0! 102818. CREATED.
0! 102909. TO GET GRX TO ADD CAPACITY CORRECTLY
0! 102909. TO GET MRX TO ADD CAPACITY CORRECTLY
0! 103109. MOVED TG, TG_POSITION OUT OF LOOP
0! 11/01/18 CONVERT THE RPS PROGRAMS FILE TO BINARY
0! 11/03/03. MAJOR REWRITE
0! 11/03/03. NEW CASES FOR REPLACEMENT LOGIC.
0! 11/03/03. SEEMS TO ALREADY INNCLUDE THE NET
0! 11/08/06 ARRAYS USING MAX_SIMULATION_YEARS ARE NOW DYNAMIC Dr.G
0! 11/1/99.
0! 11/10/03. DETAILED CONDITIONS.
0! 11/10/04. FOR XML INTERFACE
0! 11/11/02. FIRST PASS FOR DEPTH OF MARKET
0! 11/11/03
0! 11/12/00. FIXED COST LOGIC. NEED TO ADD $/MWH FOR THE PRODUCT
0! 11/12/01. THIS IS CHANGED ONLY IF TRUE. OTHERWISE REVERTS BACK TO PREVIOUS LOGIC.
0! 11/12/03.
0! 11/13/03. DAILY OPTION STATUS CANNOT CHANGE AFTER THIS POINT
0! 11/13/03. PREVIOUS_CONSEC ADDED TO TRAP FOR PREVIOUS DAYS' UP HOURS AND DOWN HOURS
0! 11/14/03.
0! 11/14/03. THERE ARE TWO ISSUES WITH MINIMUM DOWN TIME:
0! 11/15/00. GAT. HOURLY PRICES FOR ALL TRANSACTION GROUPS IS KNOWN
0! 11/15/01. FOR BLESSING.
0! 11/16/01. WHICH SYSTEM IS ON THE MARGIN?
0! 11/17/98. GAT. FOR SCENARIO MAKER.
0! 11/19/01. MOVED ABOVE TRANSACTIONS.
0! 11/19/02.
0! 11/19/02. MOVED MONTH_PRODUCT_DAYS CALC
0! 11/19/03.
0! 11/19/04
0! 11/19/04. FOR MULTI-AREA MRX.
0! 11/2/94 ADDED DECISON TABLE POINTERS AND ADDITIONAL INVESTMENT
0! 11/20/02.
0! 11/20/02. 
0! 11/20/03. CHANGED FOR SRP FOR BACKWARDS COMPATABILITY
0! 11/20/03. FOR REPORTING PURPOSES (NOTE: R*4)
0! 11/20/03. NOTE USING LF95 INITIALIZATION.
0! 11/21/02. HARD-WIRED OUT
0! 11/21/03.
0! 11/22/02. IN SEARCH OF
0! 11/22/04. FISCAL OFF-LINE PROBLEM WITH SRP.
0! 11/24/03.
0! 11/25/02.
0! 11/25/02. NOT ACTIVE: NO SCENARIO MAKER IMPACT               
0! 11/25/02. TEST IF THERE ARE FIRST SCENARIO PRICES
0! 11/25/03.
0! 11/25/03. 
0! 11/25/03. DETERMINE TEMP_QUANTITY AND UNIT_AVAIL FOR THE MULTI CONTINGENT CASE
0! 11/25/03. MOVED BELOW DERIVATIVES FOR WVPA
0! 11/25/03. MOVED INTO DERIVATIVES ROUTINE.
0! 11/26/02. DERIVATIVES REPORT FOR SRP AND OTHERS.
0! 11/26/02. GAT. AS REQUESTED FROM THE 2002 USERS GROUP MEETING.
0! 11/26/02. WEEKLY PUMPED STORAGE HOOKED-UP FOR TVA.
0! 11/26/03. MOVED TO ACCOMODATE REVENUES
0! 11/26/03. MOVED UP
0! 11/28/00.
0! 11/28/05. CHANGED DIMENSION.
0! 11/5/01. ECITIES RESERVE CAPACITY IF TRANSACT OUTAGES
0! 11/5/99. SHOULDN'T THIS INCLUDE SCARCITY?
0! 11/6/01. GAT. MOVED FOR MCKEE.
0! 11/7/99. GAT.
0! 11/9/00.
0! 11/9/00. TIE_POWER MAY BE LOWER THAN AVAILABLE DUE TO ECONOMICS
0! 110107. REMOVE BIDIRECTIONAL.
0! 110206. THE FILE DID NOT SEEM TO PROPERLY ERASE PER DOUG E-MAIL. 
0! 110211. UPDATED FOR EE PROGRAMS IN FALL 2011 REFERENCE CASE.
0! 110306. FOR BURESH.
0! 110508. Commented out the RETURN so as to allow routine to work.
0! 110709.
0! 110709. ADDED THIS IN THIS SECTION.
0! 110806. FILE_ID == 1 IS CURRENTLY FX OR TH CAPEX GENERATED FILE.
0! 110809. TEST
0! 111009. Simple treatment of annual to monthly: divide by 12
0! 111406
0! 111407. FOR JONES.
0! 111507. CHANGED FOR TVA.
0! 111509. REDEFINED PER NORM.
0! 111807. REMOVED THIS CONDITION
0! 112007. CHANGED MINIMUM CAP TO GET APPROXIMATELY ZERO RESERVES
0! 112007. RESET TO ZERO INVENTORY BY ASSUMPTION     
0! 112008. Divided by 1000 per LDG file format.
0! 112106. QUICK CHECK TO CYCLE IF NOT LOADS
0! 112204. 
0! 112204. BACK IN
0! 112206
0! 112307. HARD-WIRED TO FALSE FOR INTEGRATED PRICING
0! 112706. ADDED ABS() FOR AQUILA.
0! 112707. ADDED COEFFICIENT FOR EUROPE.
0! 112820. NEW MARKET_ID
0! 112820. USING 12 FOR DG.
0! 112920. MFT1=14 FOR DG (?).
0! 12/02/03. FOR EDE
0! 12/03/03 MOVED FOR PETREY.
0! 12/03/03. MOVED FOR PETREY
0! 12/04/03.
0! 12/05/01
0! 12/05/03. GET HOURLY DATA IN SUPPORT OF MULTI-AREA BUY CALCULATIONS
0! 12/08/03.
0! 12/08/03. AT THIS POINT, SHOULD HAVE THE NEXT RESOURCE IN DISPATCH OR
0! 12/08/03. FOR JONES. TO CAPTURE SYSTEM LAMBDA FOR THIS REPORT.
0! 12/08/03. MAJOR LOOPING RE-WRITE FOR MULTI-AREA TRANSACT C
0! 12/09/03. MOVED CODE UP TO INFLUENCE EMERGENCY AND OTHER SYSTEM DECISIONS
0! 12/09/17.
0! 12/10/03.
0! 12/11/98. GAT. 
0! 12/12/03. MOVED BELOW TO CAPTURE ANNUAL DERIVATIVES.
0! 12/12/03. TEST.  APPEARS TO REMOVE ONE COMPONENT OF DOUBLE COUNTING.
0! 12/13/02. GAT. FOR PACIFICORP.
0! 12/14/10 COAL PRICE MODEL CALLS
0! 12/15/01. ASSET CLASS ASSIGNMENTS
0! 12/15/01. ASSET CLASS VARIABLES.
0! 12/15/04.
0! 12/15/04. 
0! 12/15/99. GAT. CHANGED PER SRP.
0! 12/16/04.
0! 12/16/04. TOOK OUT INITIALIZATION
0! 12/17/02. ALWAYS DO UNIT OUTAGES.
0! 12/17/03. TEST OF UPDATE_PR_ESCALATIONS.
0! 12/17/04.
0! 12/17/04. MAKE FUEL AND VOM VARIABLES WITH A SWITCH.
0! 12/18/03. APPEND TOMORROW STRATEGY TO EXISTING STRATEGIES
0! 12/18/03. TO ADDRESS ELENA PROBLEM
0! 12/19/02. PUT-IN.
0! 12/20/04. TEST
0! 12/20/05.
0! 12/21/01. IF SELLING A DERIVATIVE PRODUCT, THEN THE BUYER IS PAYING FOR THE OPTIONALITY.
0! 12/21/04.
0! 12/23/05. MOVE WEEKLY HYDRO ABOVE. CALCULATE
0! 12/23/94. GAT. MOVED FROM ABOVE THE IF
0! 12/23/94. GAT. TESTING FOR PALO ALTO
0! 12/24/03.
0! 12/24/03. BIG CHANGE
0! 12/24/03. TO TEST THE MARKET INTERFACE
0! 12/26/02. MAJOR RE-WRITE OF THIS SECTION.
0! 12/27/01.
0! 12/28/00. GAT. CUSTOM CODING FOR WVPA.
0! 12/29/00.  PROPERLY CAPTURE TIME CONSTRAINTS
0! 12/29/98. SQ.
0! 120121. 010122-BACK-IN.
0! 120121. 010122-BACK-IN.!
0! 120121. ADDED TEST_DATE. REFERENCED BELOW.
0! 1201407
0! 120209. TEMP FOR LEE TO REVISIT PRICES 
0! 120306. ONLY ACTIVE FOR R_MONTH = 1.
0! 120410. FOR RETIREMENTS LOGIC
0! 120606.
0! 120606. ADDED COAL NODE LAT/LONG AND STATE/PROVINCE VARAIBLES.
0! 120606. ADDED GAS NODE LAT/LONG AND STATE/PROVINCE VARAIBLES.
0! 120606. MAJOR REWRITE. THIS SECTION COUNTS OFF OF THE COAL NODE
0! 120606. MAJOR REWRITE. THIS SECTION COUNTS OFF OF THE GAS NODE
0! 120609. BIG MISTAKE. WRONG ORDER FOR THIS VARIABLE.
0! 120909.
0! 120909. FOR BURESH AND ERCOT WEST. MULTI-MARKET ONLY.
0! 121006. MOVED BELOW WRITE_...
0! 121111. ADDED                  
0! 121214. ADDED NGAS VOLATILITY DOWN TO THE HOUR. 12/29/14 REMOVED FOR NOW.
0! 121306. Changed escalated_monthly_value reference to include: REAL4_ONE
0! 121319. REDUCE AVAILABLE PUMPING CAPACITY TO MIN OF PUMPING CAPACITY
0! 121406. PROVIDE LINKAGE FROM GAS MODEL TO POWER MODEL.
0! 121406. REDEFINED AS A FUNCTION
0! 121506.
0! 121618
0! 121618.
0! 121621.
0! 121711
0! 121711. IMPOSE MAX EXTRACT RATE
0! 121806
0! 121806.
0! 121806. BIG CHANGE. PULL DOWN EACH TRANS FOR DENSE REPORTING.
0! 121807. BIG CHANGE.
0! 122020. REMOVED 7 AND 10 FROM FT = 6.
0! 122020. UNDEFINED.
0! 122307. TAKE STORAGE OUT. ADD BACK INTO COAL DEMAND.
0! 122307. TAKE STORAGE OUT. ADD BACK INTO GAS DEMAND.
0! 122919.
0! 13+64+12 = 89
0! 15/11/96. GAT.  REMOVED PARAMETERS FROM DSEX_OBJT.FOR
0! 1: MONTHLY COAL DEMAND (MMcf/m), 
0! 1: MONTHLY GAS DEMAND (MMcf/m), 
0! 1=COAL; 2=GAS ; 3=OIL; 4=NUCLEAR; 5=WATER; 6=OTHER 
0! 1=DEMAND, 2=BASIN, 3=LNG, 4=INTERMED, 5=MARKET PRICE
0! 1=LB/MMBTU; 2=$MM; 3=$/TON
0! 1\8\96 END_POINTS MAY NOT BE DEFINED.
0! 2
0! 2 = PEAK DAY BTU
0! 2 = WHOLESALE COST
0! 2. NEED TO GET WORKING FOR MULTIPLE TG'S
0! 2/10/93. TEMP FOR HOURLY AFTER DSM LOADS
0! 2/12/03 ADDED FOR JONES.
0! 2/13/96 CORRECTION FOR SHADOW UNITS
0! 2/14/93. GAT. ADDED DAY_* FOR KCPL. 3/3/93. GAT. ALTERED FOR HOURLY_IN
0! 2/15/93. GAT. ADDED TO KEEP TRACK OF HOURLY DSM
0! 2/18/98. GAT. CHANGED FOR TVA.
0! 2/18/98. GAT. TESTING FOR TVA
0! 2/21/97. GAT. MOVED CAL_HOURLY_MC_AFTER_EL INSIDE DR_BOOTH.
0! 2/23/98. GAT. MOVED FROM ABOVE. WVPA WAS SEEING INCONSISTENCY
0! 2/23/98. GAT. MOVED FROM BELOW
0! 2/27/01. APPEAR TO BE DOUBLE COUNTING.
0! 2/8/94. GAT. INCLUDED HARD_WIRED_YEAR IN CYCLING CONDITION.
0! 20-23 are OW, HB, H2, CS
0! 2024 - 05-14
0! 2024_04_09
0! 256 FOR NATIONAL DATA BASE
0! 27/11/96. GAT. TAKEN-OUT FOR NOW. 4/12/96. BACK IN PER KING.
0! 2: MONTHLY PEAK DAY DEMAND (MMcf/d),
0! 3 = GENERATING UNITS WITH BTU
0! 3/1/00. INCLUDING HYDRO CONTRIBUTION SEPARATELY
0! 3/1/93. GAT. HOURLY REFERENCE LOAD SHAPES
0! 3/1/93. GAT. TAKES PLACE OF A SINGLE LARGE FILE.
0! 3/10/03. FOR XP.
0! 3/10/93. GAT. ADDED ZERO SECOND PRICE AS CONDITION FOR SKIPPING UNIT.
0! 3/10/99. GAT. TESTING
0! 3/13/01. GAT.
0! 3/14/99. GAT. RETAINED: BEFORE OUTAGES. ENTITLEMENT: AFTER OUTAGES
0! 3/14/99. PER SKIP SPREADSHEET
0! 3/17/94. GAT. MOVED EXTENSION PERIOD INTO .VAL FILE
0! 3/17/99. GAT. R_INTERCEPT IS NOW $'S.            
0! 3/18/93. GAT. THE CONDITIONAL BELOW WAS PUT BACK-IN FOR PALO ALTO
0! 3/19/02. CHANGED NOT_AVAIL TO 0. TO ACCOMODATE DATA TRANSFERS.
0! 3/19/02. FOR BURESH TO GET INDEXED REVENUES INTO THE REPORT
0! 3/19/02. FOR TRANS REVENUE REPORT
0! 3/19/02. GAT.
0! 3/20/10 retor_vom and retro_fom missing from these equations MSG
0! 3/21/02. ICAP REPORT.
0! 3/24/98. GAT PER MARK.      
0! 3/25/00. ECITY.
0! 3/28/94. GAT. MOVED FOR HISTORICAL PEAK HOUR IN MDSLDAP.
0! 3/29/02. TO INCORPORATE PARTIAL OUTAGES INTO THE NEW LOGIC
0! 3/31/93. GAT. PER MARK'S SUGGESTION: NO LEAP YEAR STUFF.
0! 3/5/98. GAT. MARK THINKS THAT Z SHOULD GO TO ZERO.
0! 3/5/98. GAT. PER MARK.
0! 3/6/94 MODIFIED TO USE PEAK AFTER DSM
0! 3: MONTHLY TOTAL COAL CUSTOMERS (#)
0! 3: MONTHLY TOTAL GAS CUSTOMERS (#)
0! 4/10/02. PROPOGATE DOWN FOR TVA
0! 4/14/02
0! 4/16/99. GAT. ! CHANGED SIGN ON TRANS_ROR_CAPACITY 9/14/99. GAT.
0! 4/16/99. GAT. NON-DISPATCHABLE CAPACITY > LOAD ISSUES:
0! 4/18/95     
0! 4/19/02. ADDED.
0! 4/19/02. CHANGED TO LOCAL_ASSIGNMENT(1)
0! 4/19/02. DON'T KNOW WHY THIS WAS TURNED-OFF.
0! 4/21/98. GAT. TESTING NEW CONSTRAINT LOGIC.
0! 4/21/99. GAT. TESTING FOR JIM LAMBETH AT DUKE.
0! 4/22/99. GAT.  LOOKS TO BE DOUBLE COUNTED.
0! 4/25/01. GAT.
0! 4/25/99. GAT.
0! 4/26/01. GAT.
0! 4/26/01. MOVED CAPACITY CALC'S INTO HOURLY FROM HOUR=1
0! 4/30/01. GAT.
0! 4/6/02. REMOVED ANNUAL CL REPORYT
0! 5/1/99. GAT.
0! 5/1/99. GAT. FOR SCENARIO MAKER.
0! 5/12/99. GAT. GLOBAL SCARCITY FUNCTION. UPDATED TO INCLUDE ZERO GROUP.
0! 5/13/01. TRAPPED FOR SELLER'S COST AND MARGINAL COST AFTER FOR
0! 5/13/92 SURPLUS SALE LOGIC: AFTER CONTRACT LOOP FOR P_PUR_ENRG
0! 5/15/02. NEED TO REDUCE MAXIMUM_EXPORT_TIE AT THIS POINT
0! 5/16/02. 07/24/03. CHECK FOR START-UPS AND SHUT-DOWNS.
0! 5/17/02. DAILY MUST FOR TWO REASONS:
0! 5/18/05. TEST.  CREATED TEMP_VAR_OM_CHARGE FOR REPORTING.
0! 5/20/02. GAT. NEW CONDITION TO AVOID WARNING IN GET_COAL_GROUP_POSITION           
0! 5/20/02. GAT. NEW CONDITION TO AVOID WARNING IN GET_GAS_GROUP_POSITION           
0! 5/20/92 ADDED EL GROUP CAPABILITY-GT
0! 5/21/02. HOURLY_LOAD_B4_SALES IS AFTER DERIVATIVES AND ROR HYDRO.
0! 5/22/02. I THINK THIS "IF" CONDITION IS WRONG.
0! 5/22/92 MOVED INTO CONTRACT LOOP
0! 5/28/99. GAT. Moooved.
0! 5/3/01.
0! 5/30/02.
0! 5/30/02. MOVED UP.
0! 5/4/02. ALTERED DEFINITION BECAUSE ENERGY LOOKED WRONG FOR USER DAY TYPES
0! 5/4/04 MODIFICATION TO PUT MI IN THE REGULAR TRACKER REPORT
0! 5/5/93. GAT. SCREENING INFORMATION.
0! 5/6/00. ADDED FOR ECITIES.
0! 5/8/00. MODIFIED FOR 10 POINT GLOBAL SCARCITY.
0! 5/8/01. SRP.
0! 500 FOR NORTH AMERICAN DATA BASE
0! 6/10/93. GAT. ALTERED TO ALLOW SHADOW UNITS TO COST AT SECOND FUEL.
0! 6/10/93. GAT. NO ALLOCATION OF FUEL TYPES BETWEEN SHADOWS
0! 6/11/08. TMS. ADDED ARRAY UPDATE TO INSIDE DO LOOP
0! 6/13/01. To account for varying VCPMWH.
0! 6/13/97. GAT. 
0! 6/15/93. GAT.
0! 6/15/93. GAT. MOVED ABOVE UNITS LOOP TO TRAP FOR USE_SEC_FUEL
0! 6/18/01. GAT. SET FUEL_PRICE_YEARS == YEARS_TO_RUN.  
0! 6/21/02.
0! 6/22/94 ESCALATION MODIFICATIONS
0! 6/22/98.
0! 6/23/98. GAT.
0! 6/23/98. GAT. 
0! 6/24/94. GAT. ANNUAL EMISSIONS REPORTING VARIABLES
0! 6/26/00.
0! 6/26/00. MOVED CALCULATION OF FUEL PRICES INSIDE UNITS LOOP.
0! 6/27/02.
0! 6/27/02. 
0! 6/28/02.
0! 6/28/96. GAT. TEMPORARY HARD-CODE FOR LGE RUNS.
0! 6/30/99. GAT. .5 ADDED TO I_AVAILABLE TO AVOID ROUNDING ERROR
0! 6/8/01. CALL BEFORE RESOURCES OR CUSTOMERS ARE READ.
0! 6/9/93. GAT. TEMP VARIABLES TO TRACK BTUS BY FUEL BY BLOCK
0! 7
0! 7/1/02.
0! 7/1/93 PROBLEM WITH MAXIMUM_CAPACITY(CONTRACT) BEING USED BEFORE IT
0! 7/13/01.
0! 7/13/01. FOR MORE ACCURATE CALC OF HEAT RATE.
0! 7/16/01.
0! 7/17//02. PER KATHY ANDERSON. APPEARS FINANCIALS CREDITED AGAINST LOAD
0! 7/17/00.
0! 7/17/00. CREATING GREATER DENSITY FROM MIN_MARKET_PRICE TO $100/MWH
0! 7/18/00.
0! 7/19/02. BRING UNIT SECOND BLOCKS UP TO MEET LOAD WHEN TIE CONSTRAINT BINDING
0! 7/20/94. GAT. SRP.
0! 7/24/01. GAT.
0! 7/24/94 CHANGED PER KARRI WETTER TO BASE RM BEFORE DSM
0! 7/28/00. FROM TOTAL_ALL_OPTIONS TO TOTAL_ACTIVE_OPTIONS
0! 7/28/93. GAT. PALO ALTO 2 TIER ENERGY CONTRACT.
0! 7/29/99.
0! 7/30/99. GAT.
0! 7/31/98. GAT. PER STEININGER.
0! 7/5/02.
0! 700 FOR NORTH AMERICAN DATA BASE
0! 8
0! 8/1/01.
0! 8/14/02. TESTING FOR CASE WITH NO TF FILE.
0! 8/16/00. GAT. HOW DID THIS EVER WORK ???    
0! 8/17/93 NOTE THE DSM WANTS TO ADJUSTMENT MONTH AND YEAR. NEEDED TO
0! 8/2/02. TO GET WORKING FOR KEVIN WEAVER.
0! 8/28/02
0! 8/29/02. ALTERED FOR NOX DISPATCH FOR RDI.
0! 8/30/01
0! 8/30/01. AMEREN TRANSFER PRICING ROUTINE
0! 8/5/02. FOR BURESH: SEEING LONG-PATH VIOLATED TRANSMISSION CONSTRAINTS
0! 8/5/99. GAT.
0! 8/5/99. GAT. MOVED FROM BELOW
0! 8/7/97. GAT. INITIALLY USED TO REMEMBER MARKET PRICE FILE BASE AND
0! 8/9/94. GAT. MOVED FROM INSIDE THE YEAR=1 LOOP
0! 9
0! 9/10/02. REVERT BACK TO PREVIOUS LOGIC IF NOT REGIONAL. OTHERWISE,
0! 9/11/02. FOR RDI.
0! 9/13/94. GAT. TEMP ADD.
0! 9/15/95. GAT. FOR DUKE POWER.
0! 9/16/98. GAT. ALTERED FOR GREATER CONSISTENCY WITH THE 
0! 9/2/99.
0! 9/22/93 MSG
0! 9/25/98. GAT. ADDED TO ALLOW FOR MONTHLY NOMINAL AND REAL ESCALATIONS
0! 9/28/98. GAT.
0! 9/28/98. GAT. MOVED THIS CODE FROM MONTHLY_TRANSACTION_LOADS
0! 9/30/98. GAT.
0! 9/6/01
0! 9/7/01
0! ???
0! A COST OR CAPACITY CONSTRAINT IS VIOLATED.
0! A RESOURCE WITH A NATIVE LOAD IS ASSUMED TO ALWAYS MEET THAT LOAD.
0! A SEPARATE MARKET WILL BUY FROM NATIVE RESOURCES.
0! A TO/FROM REPORT IS NOT AVAILABLE FOR MARKET PRICE METHOD (ONLY TRANSACT AGAINST MARKET)
0! A+BX+CX^2
0! ABB Report Capacity Market Report, MSGCPMKT.RPT.
0! ABBCapacityMarketRept.F95
0! ABOVE ADDED 1/14/97. GAT FOR SJONES.
0! ACCEPTANCE DATA
0! ACCEPTANCE FILE.
0! ACCOUNT FOR ALL ELEMENTS (GENERATION, CONTRIBUTION TO LOAD...)
0! ACCOUNT FOR FIXED COSTS
0! ACCOUNT FOR THE SECOND BLOCK AS AVAILABLE
0! ACCOUNTS FOR MUST TAKE CAPACITY
0! ACCUMULATE
0! ACCUMULATE ANNUAL VALUES
0! ACCUMULATE DAILY DEMAND TO STORAGE AREAS
0! ACCUMULATE FOR EACH ST_TG
0! ACCUMULATE FOR MONTHLY
0! ACCUMULATED PER EGOLF. 9/19/96.
0! ACCUMULATED WITH PARAMETERS ON 06/12/03.
0! ACTIVE IN THE MONTH. ALL NON-ENERGY COSTS ARE CALLED TRANSACTION COSTS.
0! ACTIVE_LINKS WILL PROVIDE THE ARRAY SIZE FOR THE LINK DIMENSIONS BELOW.
0! ACTIVE_PATH_FOR_LONG_PATH(PATH) > ACTIVE_PATH_NUMBER THEN GET THIS STUFF
0! ADD A NEW BASIN HERE
0! ADD ACCELERATION LOGIC
0! ADD ADDITIONS HIGHEST TO LOWEST WITH CAPACITY AND RM CONSTRAINTS
0! ADD CAPACITY_PLANNING_FACTOR
0! ADD CIPSCO FUEL USAGE 6/16/92 COPYRIGHT (C) M.S. GERBER & ASSOCIATES
0! ADD DELAY CANCEL LOGIC
0! ADD FUEL USE TO TOTAL DEMAND FOR THE CO
0! ADD NEW CAPACITY
0! ADD THE FINANCIAL DATA
0! ADD TO THE ARRAYS.
0! ADDED 08/18/03.
0! ADDED 090706.
0! ADDED 1/4/99. GAT.
0! ADDED 1/6/94. GAT. GIRISH WWP PROBLEM
0! ADDED 10/19/93 GAT
0! ADDED 10/25/FOR KEPCO TO REPORT ANNUAL TRANSMISSION, ECT IN THE GROUP
0! ADDED 10/28/92 FOR KEPCO
0! ADDED 10/3/92
0! ADDED 10/5/92 FOR ANNUAL CAPACITY FACTOR CALCULATION
0! ADDED 10/5/92 TO TRAP FOR TRANSACTION DIFFERENCES
0! ADDED 11/7/99. GAT.
0! ADDED 11/9/00. GAT.
0! ADDED 12/29/92 FOR FUEL LIMITS M.S.G.
0! ADDED 12/30/92 FOR FUEL LIMITS
0! ADDED 12/8/92 FOR KEPCO DEFERRED WC MAINTENACNE EXPENSE
0! ADDED 12/8/92 FOR KEPCO WOLF CREEK DEFERRED MAINTENANCE
0! ADDED 12/9/92 FOR SOUTHERN COMPANY
0! ADDED 2/11/98. GAT. LARRY KEY, SRP
0! ADDED 3/10/93 FOR CLINTON TAX
0! ADDED 3/16/93 FOR BILL CLINTON
0! ADDED 3/25/00. FOR ELECTRICITIES.
0! ADDED 3/9/93
0! ADDED 3/9/98. GAT.          
0! ADDED 4/14/98. GAT.         
0! ADDED 4/3/93 FOR FUN
0! ADDED 5/10/02. FOR DUKE AUSTRALIA
0! ADDED 5/13/92
0! ADDED 5/16/92 FOR POOLING COST TRANSACITONS
0! ADDED 5/21/92 FOR KEPCO
0! ADDED 5/27/98. GAT. FOR WSCC.
0! ADDED 5/5/93 FOR CUSTOMER DEPOSITS
0! ADDED 5/9/99. FOR BURESH.
0! ADDED 6/16/92 MSG
0! ADDED 6/17/91
0! ADDED 7/25/99. GAT.
0! ADDED 8/2/00. GAT/TS.
0! ADDED 8/26/02. GAT.
0! ADDED 8/29/92 BY MSG TO HANDLE SEASONAL PRICING ON AREA CONTRACTS
0! ADDED 8/4/93
0! ADDED 8/9/99. GAT. FOR CPL.
0! ADDED 9/1/94. GAT.
0! ADDED 9/3/93 FOR KEPCO
0! ADDED 9/5/97 FOR GETTING TOTAL COST CONSISTENT WITH THE INDIVIDUAL
0! ADDED FOR ARTMAN. 03/06/01.
0! ADDED FOR BTU_CONTENT: LOOKS LIKE MONTHLY BTU CONTENT WAS WIPED OUT
0! ADDED FOR CPL. 2/24/98. GAT.
0! ADDED FOR DUKE ENERGY. 01/24/02.
0! ADDED FOR FP&L 5/14/92
0! ADDED FOR JANET. 8/12/99. GAT.
0! ADDED FOR JONES. 11/19/97. GAT.
0! ADDED FOR JONES. 11/6/97. GAT.
0! ADDED FOR JONES. 12/11/01. 
0! ADDED FOR KCPL DSM: FORECAST INPUT PEAK
0! ADDED FOR MACY. 3/30/99. GAT. 
0! ADDED FOR MARTON. 1/10/00.
0! ADDED FOR PACIFICORP. 050101. GAT.
0! ADDED FOR PROPERTY TAX CALCULATIONS 4/14/92
0! ADDED FOR SCOTT JONES. GAT. 1/3/95.
0! ADDED FOR STEININGER. 5/19/97. GAT.
0! ADDED HERE 7/1/02 FOR MODIFICATIONS IN CAL_MARGINAL_COST
0! ADDED OIL 5/1/99. ! RESERVE MARGIN ADDED 9/6/99. ! Elect Price Added 9/28/99.            
0! ADDED PER JONES. 3/13/98. GAT.
0! ADDED SCARCITY_COST IN FIRST TWO IF'S ON 3/6/01.
0! ADDED SO THAT SP COMPATIBLE CL FILE OUTPUT
0! ADDED TO GET THE SPACING CORRECT ON CSV OUTPUT BY UNIT
0! ADDITION FOR MULTI-PRODUCTS FILES 7/27/04 MSG
0! ADDITIONAL SECTION
0! ADDITONS TO CREATE CL FILE OF RESOURCES ADDTIONS 12/06/06 DR.G
0! ADDL EXPANSION
0! ADJUST ALL PC THAT USE THE C CONSTRAINT ACROSS ALL C CONSTRAINTS.
0! ADJUST CLASS FORECAST PEAKS BY THE AMOUNT OF CHANGE
0! ADJUST FOR RELATIVE ALLOCATIONS
0! ADJUST THE CAPACITIES OF THE NET TG'S AND CM'S
0! ADJUST THE HOURLY VALUES
0! AFTER ALL IS DONE
0! AFTER SEEING COMMONWEALTH EDISON'S DISPATCHING ORDER I CHANGED MY MIND
0! AFTER THE TRANSACTION, ONLY THEIR MARGINAL COSTS MUST BE UPDATED.
0! AFUDC,V112
0! AGGREGATION INTERVALS COMPLETE.                
0! AGT 20000915 circumvented the problem by writing -1_1 to the 4th byte,
0! AGT to GAT:  calls below to
0! ALAN NEED TO PASS ME TOTAL FOR'S PER MONTH AFTER SCHEDULE
0! ALBERTA: 
0! ALIGN THE TWO LINES SO THAT THE MAX PRICE IS SET TO THE ORIGIN.
0! ALL HOURS
0! ALL ICAP VARIABLES NEED TO BE BY TRANSACTION GROUP
0! ALL LINKS
0! ALL NODES
0! ALL OPTIONS TESTED FOR CURRENT YEAR SAVE BEST ONE
0! ALL RIGHTS RESERVED
0! ALL THE CODE BELOW IS TAKEN FROM THE HOURLY OPTION / FORWARD ROUTINE ABOVE.
0! ALL UNITS WHICH REFERENCE THE DEPENDENT UNIT MUST BE ON-LINE BEFORE 
0! ALLOCATE ANNUAL TO MONTHS
0! ALLOCATE ARRAYS
0! ALLOCATE CAPACITY FIRST
0! ALLOCATE ENERGY
0! ALLOCATE FUEL USE BY DEMAND                   
0! ALLOCATE REMAINING ENERGY ONLY CONTRACTS AND PRICE THAT ENERGY
0! ALLOCATE REVENUES TO ASSET CLASSES
0! ALLOCATE TO TOTAL COMPANY AND ASSET CLASSES
0! ALLOW FOR CONGESTION COST TO START AT THE FIRST INTERVAL.
0! ALLOWS FOR DEPLETION FROM THE TOP TO THE BOTTOM.
0! ALLOWS FOR REGIONAL RESERVE PLANNING: E.G. BC, ALBERTA IN THE WSCC
0! ALL_MONTH_PRICES BECOMES THE ONE PRICE SOURCE
0! ALREADY USING POSITION
0! ALSO CHANGED THE DEFAULT THERMAL VALUE TO FALSE
0! ALSO, THERE SHOULD BE A SWITCH THAT ALLOWS THE FIRST TRANSACTION 
0! ALSO, TVA WANTS TO BE ABLE TO RETIRE AS WELL AS ADD RESOURCES.
0! ALTER CAPACITY?
0! ALTER ON-LINE DATE?
0! ALTERED 01/21/11. FOR KATHY.
0! ALTERED 042506 PER HANSON.
0! ALTERED 10/20/00. GAT.
0! ALTERED 9/22/92
0! ALTERED PER MACY. 3/30/99. GAT
0! ALTERED. 1/23/98. GAT. THIS IS NEEDED IN TOTAL RETAIL ENVIRONMENT
0! ALWAYS ACCUMULATE THE FUEL INFO.
0! ALWAYS ADD LEAP YEAR INTO LDE FILE
0! ALWAYS POSITIVE?
0! ALWAYS TRANSFER BETWEEN COMPANIES TO EQUATE MARGINS COST
0! AMOUNT OF ENERGY IN THE ORIGINAL LDC
0! AMOUNT OF ENERGY THAT I WANT TO REMOVE IN THIS INTERVAL
0! AN EXTERNAL MARKET IS THE SELLER
0! AND BEFORE THE NEXT YEAR'S SIMULATION.
0! AND COMBINED WITH THE NORMAL OUTPUT
0! AND ENERGY IS MET, OR ALL POINTS ON THE LOAD CURVE ARE EVALUATED.
0! AND IMPLEMENTE A PRE SORT ON BLOCK NUMBER
0! AND ONLY IF DETAILED MAINTENANCE IS TURNED-ON.
0! AND THE SELLER IS THE TRADITIONAL UPWARD SLOPING DEMAND CURVE.  
0! AND THEN AGGREGATE ACCORDING TO THE NODES FILE.
0! AND THEN RETIRE IN A SEPARATE ROUTINE.
0! ANNUAL
0! ANNUAL ACCUMULATORS
0! ANNUAL ASSET ANALYST VARIABLES
0! ANNUAL CALCULATIONS
0! ANNUAL CALL LOGIC
0! ANNUAL DECOMPOSITION VARIABLES 10/4/93 MSG
0! ANNUAL LOOP
0! ANNUAL MIN MAX ROUTINE
0! ANNUAL SERVICE COST REPORT
0! ANNUAL TRANS REPORT
0! ANNUAL VALUES
0! ANNUAL WRITE
0! AN_GEN = MAX(0.,AN_GEN - AV_GEN)
0! APPLY DEVICE # TO CLASS #
0! AREA ENERGY REPORT
0! AREA PEAK REPORT
0! ARRAY CLNAM, FILLED IN SUBROUTINE GETCLS.
0! ARRAY MATH USED 11/20/06 DR.G
0! ARRAY SIZE ADJUSTED LOGIC MSG 10/26/00
0! ARRAYS IN DEALLOC_ANNUAL
0! ARRAYS IN DEALLO_MONTH_MARG_COST_ARRAYS
0! ARRAYS NOT DEALLOCATED BY ANNUAL OR MONTHLY
0! ARTMAN LOGIC.
0! AS A NEXT STEP I CAN GRAB THE TRANS_DAILY_LOAD AVE AND MAX TO MAKE
0! AS RESOURCES BY TRANSACTION GROUP.
0! ASSET ALLOCATION MANAGER STUFF
0! ASSET ALLOCATION STUFF
0! ASSET CLASS ALLOCATIONS
0! ASSET CLASS DATA
0! ASSET CLASS EXPENSE AND REVENUE INFORMATION
0! ASSET CLASS INITIALIZATION. 6/16/95. GAT.
0! ASSET CLASS INITIALIZE
0! ASSET CLASS VARIABLES
0! ASSETS -
0! ASSET_CLASS_ANALYSIS
0! ASSIGN ALL OF BLOCK TO THE LOAD, RECORD THE COST, REDUCE TEMP LOAD, CYCLE FOR NEXT GEN
0! ASSIGN ALL OF LOAD TO THE BLOCK, RECORD THE COST, REDUCE TEMP GEN, EXIT FOR NEXT LOAD
0! ASSIGN CAPACITY AND ENERGY NEEDS TO AREA RESOURCE OF LAST RESORT
0! ASSIGN DEMAND NODES TO STORAGE AREAS
0! ASSIGN THE BALANCE OF THE ADJ TO UNCOLLECTED PER KATHY ANDERSON.
0! ASSUME AUTO_MAINT ARE ALL 7X24
0! ASSUME FUNCTIONS ARE APPROXIMATELY LINEAR AND SOLVE FOR THE INTERSECTION
0! ASSUME IT ALWAYS OPERATES AT FULL LOAD
0! ASSUME LAST POINT HAS ZERO REVENUE
0! ASSUME NO FUEL INVENTORIES.
0! ASSUME ONE AND THE SAME CONGESTION FUNCTION IN EITHER DIRECTION
0! ASSUME THAT THE LAST TRANSACTIONS ARE THE CLOSEST TO MARKET CLEARING
0! ASSUME THAT THE TWO GROUPS ARE THE FIRST TWO CONSECUTIVE GROUPS
0! ASSUME THAT THE UNIT IS UP (OR CHECK UP YESTERDAY)
0! ASSUME THAT THEY JUST ASSIGNED A ZERO DEFAULT
0! ASSUME TOTAL CAPACITY OF STORAGE. NOTE: THIS APPLIED TO NEW AND EXISTING DYNAMIC STORAGE
0! ASSUME ZERO IS A MISTAKE.
0! ASSUMES 369 RECORD CONVENTION
0! ASSUMES 8784 HOURS PER YEAR.
0! ASSUMES A MAXIMUM LENGTH OF ONE WEEK
0! ASSUMES A VALUE
0! ASSUMES A VALUE.
0! ASSUMES CALL OPTIONS
0! ASSUMES IT COMES IN AS AN INDEXED NUMBER.
0! ASSUMES RESOURCE
0! ASSUMES THAT BOTH MARKETS HAVE THE SAME PRICE
0! ASSUMES THAT L_SELLER > L_LP AND L_LP > L_BUYER
0! ASSUMES THAT NO FUEL MEANS NOT ACTIVE.
0! ASSUMES THAT THERE IS A ZEROTH INTERVAL.
0! ASSUMES UNIQUE ASSET CLASS FOR MEMBER LOAD.
0! ASSURE NON-DECREASING COST CURVES
0! AT SOME POINT, NEW_PEAK_SHIFT SHOULD REPLACE
0! AT THIS POINT WE KNOW THE MONTHLY PEAK AND ENERGY. PRIME TIME TO CALCULATE
0! AT THIS POINT, I CANNOT GET BACK TO A CUM DISTN FUNCTION ON REV AND PRICE
0! ATTEMPT TO IDENTIFY ALL RESOURCES AND MARKETS THAT WILL BE USED DURING THE DAY
0! ATTEMPT TO TRANSACT STARTING AT THE POINT ON THE ELDC WHERE
0! AUTO-MAINTENANCE
0! AVAILABLE 1/17/95
0! AVAILABLE HOURLY GENERATION: AV_GEN = MIN(AN_GEN,MAX(UN_GEN - IN_GEN,0))
0! AVAILABLE.
0! AVERAGE COST AFTER ADDER 
0! AVERAGE COST AFTER ADDER, MARKUP WITH CAP
0! AVERAGE COST AFTER MARK ADDER 
0! AVERAGE COST OF THE CUSTOMER                     
0! AVERAGE HEAT RATES
0! Adapted from mwunih** common blocks in prod3com.mon (blocks
0! Alan interface
0! Alan's indexing stuff.
0! Apologies - created this module to troubleshoot a build issue.
0! AsciiCode=IAChar(AnyChar)
0! AsciiCode=iand(Regs(1),Z'ff')
0! Author : Mark S Gerber
0! Average  Method for SC
0! Average Method for SC
0! BACKING-OUT THE TRANSACTION.
0! BALANCE SHEET INFORMATION.
0! BASE FILE DIRECTORY SET-UP
0! BASE YEAR FINANCIAL OUTPUT MOVED FROM MUNIREV AND FINANBSE 7/29/93
0! BASED UPON ABOVE, RAMP UP, RAMP DOWN, OR NEITHER
0! BE LESS THAN OR EQUAL TO THE AMOUNT THAT THE BUYER IS ABLE PRODUCE AT ITS OWN COST. 
0! BECAUSE LM AND CT CAN ONLY HAVE 1 FOR THE ANNUAL CUMMULATIVE UNITS
0! BECAUSE VARIABLE_VALUE IS SAVED IT HOLDS THE FOLLOWING VALUES
0! BECOME HIGHER THAN THE BUYER'S PRICE
0! BEGIN 042609
0! BEGIN BY BUFFERING SYSTEM VALUES INTO ARRAYS
0! BEGIN CO2 RETIREMENTS
0! BEGINING OF THE CAPACITY PLANNING SECTION
0! BEGINNING OF THE CAPACITY PLANNING SECTION
0! BEGINNING OF THE COMMON BLOCK SECTION FOR THE PRODUCTION MODULE
0! BEING ACTIVE.  PALO ALTO HAD A PROBLEM CAUSED BY THIS.  WE COULDN'T
0! BIDIRECTIONAL IS THE EXCEPTION.
0! BIG TRANSACTIONS
0! BIG-TIME TEST REMOVING I=2
0! BLESSING 09/21/01.
0! BLOCK 1 INC = TOTAL
0! BLOCK 2 INC
0! BLOCK 2 TOTAL
0! BLOCK 2 TOTAL = BLOCK 1 TOTAL (AND INC)
0! BLOCK ABOVE CENTRAL DISPATCH GENERATION
0! BLOCK NUMBER THEN BY INCREMENT COST.
0! BOTH UNITS ARE MUST RUNS AND THE LAMDA IS LOWER
0! BRING-IN TIME ZONE FOR THE REGION
0! BRITISH COLUMBIA: 
0! BTU BY FUEL TYPE AND BY BTUS TAXED--ADDED 3/12/93 MODIFIED 4/28/93
0! BTU TAX STUFF
0! BTUS     (1)
0! BUDGET REPORT
0! BUILD CURVES BY ST TECH INCLUDING FOR NA
0! BUILDING OUT THE PATHS. NEED TO IDENTIFY THE PATHS ENDING WITH A DEMAND LATER.
0! BUY ! MARKET IS CHEAPER, SEE WHICH COMMITTED UNITS ARE "DISPLACED"
0! BUY CONDITION
0! BUY/SELL POSITION ACCUMULATED MONTHLY.
0! BUY/SELL POSITION HANDLED ON MONTHLY BASIS
0! BUYER TG AND PA CAN'T EXCEED MAX RESERVE MARGIN
0! BY PASS IF THERE ARE NOT ANY MUST RUN UNITS
0! BY SYSTEM OF CLASS
0! Back to original. 111307. IN TEMPORARILY FOR PAC !
0! Beginning of report headers
0! CACLULATE THE HOURLY INTERRUPTIBLE REVENUE
0! CALANDER CORRECT: ASSUME INITIALLY THAT THE USER TAKES CARE OF THIS.
0! CALCULABLE WITHIN TF
0! CALCULATE A DELIVERED PRICE, INCLUDING WHEELING_RATE,
0! CALCULATE AFUDC IF THE UNIT IS TO BE IN GPV
0! CALCULATE AND PASS THE LOGICAL FUNCTION PARAMETERS
0! CALCULATE ANNUAL OPTION VALUE
0! CALCULATE ANNUAL PEAK COSTS AND NON-LINKED COSTS
0! CALCULATE ANNUAL VALUES FOR THE LAST RECORD, WRITE IT, REINITIALIZE FOR NEXT RECORD
0! CALCULATE BOOK DEPRECIATION ON GPV WITH AFUDC
0! CALCULATE CAPACITY AND COST CURVES
0! CALCULATE DAILY MARGINS 1-7 DAYS IN ADVANCE.
0! CALCULATE DAILY OPTION VALUE
0! CALCULATE DELIVERED COST OF CURRENT TRANSACTION GROUP, I, TO OTHER GROUPS J
0! CALCULATE DIFFERENCE IN HOURLY AVERAGE LOAD
0! CALCULATE FOR AVERAGE HEATRATE BY TG
0! CALCULATE HEAT RATE BY BLOCK
0! CALCULATE IMPORT/EXPORT FOR EACH CO AND FOR SYSTEM
0! CALCULATE MONTHLY MAINTENANCE CAPACITY BY REPORTING GROUP
0! CALCULATE MONTHLY SERVICE COSTS FOR NON RESOURCE SPECIFIC REFERENCES
0! CALCULATE RETAIL SALES
0! CALCULATE THE AMOUNT OF DSM DUE TO THE LOAD MANAGEMENT DEVICE
0! CALCULATE THE ANNUAL SERVICE TRANSACTION COSTS
0! CALCULATE THE CAPACITY ISSUES
0! CALCULATE THE MARGINS FOR THE ENTIRE MONTH BY BLOCK AND THEN FIND THE
0! CALCULATE THE MONTHLY COSTS OF STORAGE AND REVENUES OF SELLING
0! CALCULATE THE NUMBER OF INTERVALS TO ALLOW FOR A MONTH HERE. 
0! CALCULATE WHOLESALE MARKET BOUGHT AND SOLD, EXPENSE AND REVENUE HERE.
0! CALCULATED FOR EVERY NEW END POINT
0! CALCULATED FOR EVERY NEW YEAR      
0! CALCULATED ONCE, BEFORE THE END POINT OR YEAR LOOP
0! CALCULATES GPV ADDITIONS, ANNUAL BOOK DEP, CUMULATIVE BOOK DEP,
0! CALCULATES TOTAL NON-UTILITY COSTS
0! CALCULATIONS
0! CALL TO ESCALATION OBJECT ADDED 5/20/93 WILL REMOVE THE OTHER READS
0! CALLED ANNUALLY AT THE BEGINNING OF PRO_COST.
0! CALLED ANNUALLY AT THE END OF PRO_COST.
0! CALLED ANNUALLY FROM PROCOST
0! CALLED ANNUALLY FROM TRANSOBJ.FOR
0! CALLED FROM ALAN'S MAINTENANCE PROGRAM
0! CALLED FROM HOURLY COMMITMENT
0! CALLED FROM INSIDE PRO_COST.FOR      
0! CALLED FROM PROCOST. 2/1/99. GAT.
0! CALLED FROM PRO_COST, ONCE PER ENDPOINT
0! CALLED FROM SIMULATE_MULTI_PARTY AND MARKET_PARTY_TRANSACTION EVERY HOUR
0! CALLED FROM TF_OBJT2, ONCE PER MONTH/TG/UNIT
0! CALLED FROM TOP OF CL_UNITS_READ      
0! CALLED MONTHLY BY UNIT
0! CALLED MONTHLY FROM SIMULATE_MULTI_PARTY EVERY MONTH AFTER FIRST MONTH
0! CALLED ONCE PER ENDPOINT.
0! CALLED ONCE PER END_POINT
0! CALLER HAS TO KNOW 1 & 2.
0! CALLS FOR THE FIXED, VARIABLE AND CAPACITY ARE MADE TO CLA_OBJT.FOR.
0! CAN BE USED TO TEST WHETHER TO COMMIT UNITS FOR SPINNING, TOO.
0! CAN FAIRLY QUICKLY INCORPORATE:
0! CAN ONLY HAVE ONE FUEL DERIVATIVE FOR EACH RESOURCE, OTHERWISE LOSE 
0! CAN QUICKLY INCORPORATE:
0! CAN SHUT OFF IN ONE HOUR. DON'T BOTHER TO RAMP DOWN
0! CANNOT SHUT DOWN => APPLY ALL HOURS STRATEGY
0! CAPACITY
0! CAPACITY CALCULATIONS FOR CPL_PA CONTRACT
0! CAPACITY COSTING
0! CAPACITY FOR THE TRANSACTION AND THEN, IF THAT CAPACITY IS BINDING, 
0! CAPACITY LIMITED RESOURCE CALCULATIONS
0! CAPACITY OPTINS OBJECT 9/2/93 MSG 
0! CAPACITY PLANNING RATIOS
0! CAPACITY PURCHASE - SHOULD BE PURCHASED CAPACITY, NOT PURCHASED GAS
0! CAPACITY TARGET RATIOS
0! CAPITAL COST ITEMS
0! CAPITAL RATES DATA
0! CAPITIALIZED AND DEFERRED DSM INVESTMENT
0! CAPTURE PURCHASES BY UNIT BLOCK
0! CAPTURE THE CASE WHERE IT IS CHEAPER TO SELL TO OWN LOAD RATHER THAN WHEELING POWER IN.
0! CAP_OBJT
0! CASE 2 WITH BINARY MARKET FILES
0! CASES:
0! CASH
0! CASH AFTER DIVIDENDS/OLD NEG COMMON DIVIDNEDS,V116
0! CASH PATTERNS
0! CASH PIECES
0! CASH TRANSFERS
0! CAT2OBJT
0! CATAWBA CONTRACT 
0! CATAWBA_CONTRACT OVERLAY
0! CENTRAL: 
0! CHANGE 4/24/02.
0! CHANGE IN LOLP WITH REDUCED CAPACITY
0! CHANGE THE WORKING CAPITOL SIGN
0! CHANGE TO COAL.
0! CHANGE TO GAS.
0! CHANGED 083006.
0! CHANGED FROM >=. 11/2/99. GAT.
0! CHANGED FROM INTEGER*2 TO REAL 5/14/92 ADDED THE ID AS INTEGER*1
0! CHANGED THE SIGN OF MARKET_REVENUE FOR STEVE MACY. 10/20/99.
0! CHANGED TO REAL ON 5/14/92
0! CHANGED TO REMOVE A CONFLICT WITH VERSION 2.0C
0! CHANGING INDEX DEFINITION
0! CHANGING TO -0.01 CAUSING "PARAMETER VIOLATION" ERROR. 8/24/99. GAT.
0! CHARACTER SECTION
0! CHECK FOR ACTIVE TRANS PATH
0! CHECK FOR ALL NECESSARY FILES NEED TO ADD ERROR MESSAGES
0! CHECK FOR CONSISTENT DATA SET
0! CHECK FOR DUPLICATE NAME
0! CHECK FOR HOLIDAY
0! CHECK FOR IDENTICAL UNIT
0! CHECK FOR REDUNDANCY. 
0! CHECK FOR SHORT FORM FILE
0! CHECK FOR SPECIAL HOOSIER UNITS, THEN CYCLE
0! CHECK FOR UNIQUE NAME FOR EACH GROUP
0! CHECK FOR UNIQUE NAME FOR EACH GROUP?
0! CHECK FOR UNSERVED AREA ENERGY
0! CHECK FOR UPDATING SERVICE COSTS
0! CHECK FOR VALID BASE_FILE_DIRECTORY
0! CHECK FOR WVPA POWER COST REPORT AND DERIVATIVE NOT ACTIVE
0! CHECK FUEL INVENTORIES FOR THE MONTH. READJUST AS NEEDED.
0! CHECK IF LAST ENERGY SOURCE
0! CHECK INDIVIDUAL AND JOINT IMPORT CONSTRAINTS HERE.
0! CHECK INJ OR WD IN CALLING ROUTINE. POSITIVE IS WD.
0! CHECK TO SEE IF BLOCK 2  HAS STOPPED BECAUSE IT HIT ITS BLOCK 1
0! CHECKING OVERLAY OF THE ASSET VECTOR FILE SO THAT CLASS ID VECTORS ARE
0! CL UNITS BY BLOCK
0! CL UNITS BY UNIT
0! CLASS VARIABLE DECLARATIONS
0! CLASS/AREA/POOLING VARIABLES
0! CLASSES
0! CLASSES AND MONTHS
0! CLASS_MWH ITEMS 200-206
0! CLASS_RATES ITEMS 207-213
0! CLA_OBJT
0! CLEAN UP NEEDED ? IF AUTO_OPTIM NOT ACTIVE (NORMAL CLEAN UP)  THIS
0! CLEAN UP THE CURVES.
0! CLOSE CPO FILE FOR THE END POINT
0! CLOSE RESULTS FILE THEN UPDATE END POINTS
0! CLOSE THE MULTI-YEAR FINANCIAL RUN SPECIFICATIONS FILE
0! CLREPORT
0! CLREPORT NOT A RESET REPORT
0! CL_DISPATCH_COST IS GREATER THAN THE LOWEST AVAILABLE
0! CO2 EMISSIONS
0! CO2 NATIONAL COMPLIANCE
0! CO2 PRICE TOO HIGH ADJUST TO FIRST MARKET PRICE
0! CO2 RETIREMENTS PRICE
0! CO2_PARAM OVERLAY ! 120809
0! COAL LP ACTIVE
0! COAL MODEL
0! COAL MODEL     
0! COAL MODEL FILES
0! COAL_BASIN_READ_DATA
0! COAL_CONTRACTS_READ_DATA
0! COAL_ESCALATIONS_READ_DATA
0! COAL_GROUP_SORT AND STARTING POSITION OF EACH GROUP
0! COAL_MODEL_INFLATION_ESC     
0! COAL_MODEL_RESIDUAL_ESC     
0! COAL_SO2_Scrubber_READ_DATA
0! COAL_SUPPLY_READ_DATA
0! COAL_TRANSPORTATION_READ_DATA
0! CODE FOR RESERVE MARGIN BY TG
0! CODE I NEED TO "REVERSE" FROM REDUCE PATH CAPACITY, THEN SAY IF
0! COLLECTED IN BASE RATES
0! COMBINE RETIRE AND RETRO AND SORT INTO ONE MASTER LIST
0! COMBINED HOURLY ENERGY.
0! COMES IN AS TRANS LOAD NUMBER
0! COMMIT AVAILABLE RESOURCES IF NOT ABLE TO IMPORT TO MEET NATIVE DEMAND
0! COMMITMENT IMPACT.  5/13/01. MOVED TEST UP AND HOURLY MARGINAL COST INSIDE
0! COMMON /POOLING_COMMON/ &
0! COMMON /PROCSAVE/
0! COMMON BLOCK VARIABLES WORLD
0! COMMON BLOCKS
0! COMMON FINANCIAL VARIABLES
0! COMMON TO ALL OPTIONS.
0! COMPARE CONSTRAINTS (2), (3), (4) AND (5):
0! COMPARE THE RESULTS OF THE RESOURCE TO ALL OTHER RESOURCES
0! COMPLEMENT TO THE EMERGENCY COMMIT IS A DECOMMIT ROUTINE.
0! COMPRESS THE ID'S
0! CONDITION ADDED 11/13/01.
0! CONDITION FROM ABOVE.
0! CONDITIONS:
0! CONSIDER TRANSACTIONS WITH THE NODE (SUPPLY I SELLS TO DEMAND I, ETC.)
0! CONSTANT STORAGE FOR EACH DAY OF THE MONTH
0! CONSTRAIN VOM ELIMINATES PORTION OF INDEP ENERGY REVENUE.
0! CONSTRAINED CHARGE, UNCONSTRAINED DISCHARGE.
0! CONSTRAINTED. STORAGE_CHARGE IS NEGATIVE.
0! CONTEMPLATE OTHER STORED PATTERNS.
0! CONTINGENT AND HOURLY FORWARD ARE NEGATIVE
0! CONTINUE ASSIGNMENTS UNTIL 
0! CONTINUE LOOKING FOR FIRST BLOCKS TO COMMIT
0! CONTRACT GROUPS
0! CONTRACT POOLING
0! CONTRACT RESOURCE CALCULATIONS
0! CONTRACTS
0! CONTRACTS INTO THE PRODUCTION COSTING OF CL UNITS.
0! CONTRACT_DISPATCH_COST, AND THE CONTRACTS OPTION IS ACTIVE,
0! CONTRIBUTIONS IN AID OF CONSTRUCTIONS
0! CONTROLS SIMULATION OF EFFECTS OF USING VARIOUS LOAD MANAGEMENT
0! CONVERSION FACTOR DEFININTIONS
0! CONVERSION OF THE ENERGY LIMITED RESOURECE FILE
0! CONVERSION OF THE EXPANSION CANIDATE FILE
0! CONVERT ADDEMDUM FILE
0! CONVERT COST ALLOCATION FILE
0! CONVERT COST ALLOCATION FILE TO BINARY
0! CONVERT COST ALLOCATION TO BINARY AND RANDOM ACCESS
0! CONVERT ELASTICITY FILE
0! CONVERT ELASTICITY FILE TO BINARY
0! CONVERT ENVIRONMENTAL FILE TO BINARY
0! CONVERT EXPENSE FILE
0! CONVERT FROM $/MCF TO $/MMBTU
0! CONVERT FROM $/MCF TO $/MMBTU: 1 MCF = 1.03 MMBTU
0! CONVERT FROM $MM TO $M
0! CONVERT FUEL EMISSIONS FILE
0! CONVERT FUEL INVENTORY FILE
0! CONVERT FUEL PRICE FILE
0! CONVERT FUTURE ASSET COMMITTED FILE TO BINARY
0! CONVERT FUTURE ASSET EXPANSION FILE TO BINARY
0! CONVERT GAS MODEL FILES
0! CONVERT GENERATING UNIT PARAMETER FILE TO BINARY AND RANDOM ACCESS
0! CONVERT GROWTH RATE TO VALUES, SAVE PRIOR YEAR 2/12/11 MSG
0! CONVERT LOAD MANAGEMENT FINANCIAL FILE TO BINARY
0! CONVERT LOAD MANAGEMENT FINANCIAL OVERLAY FILE TO BINARY
0! CONVERT MONTHLY PAYABLES FILE
0! CONVERT NUCLEAR FUEL FILE TO BINARY
0! CONVERT PURCHASE CONTRACTS FILE TO BINARY AND RANDOM ACCESS
0! CONVERT TAX LOSS FILE TO BINARY
0! CONVERT THE (FOSSIL-FUELED) CAPACITY-LIMITED-UNITS FILE
0! CONVERT THE CATAWBA CONTRACT FILE
0! CONVERT THE CLASS-FORECAST-DATA FILES
0! CONVERT THE CO2_PARAM FILE
0! CONVERT THE CONSTRAINT FILE
0! CONVERT THE CONTROL-AREA ALLOCATORS FILE
0! CONVERT THE DAY_TYPE FILE
0! CONVERT THE ELECT_HOUR_MULT FILE
0! CONVERT THE ENERGY-LIMITED RESOURCE FILE
0! CONVERT THE ENVIRONMENTAL OVERLAY FILE TO BINARY
0! CONVERT THE EXPANSION PLANT FILE TO BINARY
0! CONVERT THE EXPANSION-CANDIDATE FILE
0! CONVERT THE FINANCIAL-PARAMETERS FILE
0! CONVERT THE FOSSIL FILE
0! CONVERT THE GAS_HOUR_MULT FILE
0! CONVERT THE LOAD MANAGEMENT APPLICATION FILE
0! CONVERT THE LOAD MANAGEMENT DEVICE FILE
0! CONVERT THE MARKET_PRICE FILE
0! CONVERT THE NEW_MARKET_PRICE FILE
0! CONVERT THE OIL_HOUR_MULT FILE
0! CONVERT THE OUTAGE FILE
0! CONVERT THE PATH FILE
0! CONVERT THE PURCHASES OVERLAY FILE TO BINARY
0! CONVERT THE REFERENCE_LOAD FILE
0! CONVERT THE RPS_PROGRAM FILE
0! CONVERT THE SCENARIO_HOURLY FILE
0! CONVERT THE TIE FILE
0! CONVERT THE TRAN_EXP FILE
0! CONVERT TO PERCENT
0! CONVERT TRANSACTIONS FILE
0! COPYRIGHT (C) 1987 M.S. GERBER & ASSOCIATES, INC. ALL RIGHTS RESERVED
0! COPYRIGHT (C) 1987,93 M.S. GERBER & ASSOCIATES, INC.
0! COPYRIGHT (C) 1992 M.S. GERBER & ASSOCIATES, INC. ALL RIGHTS RESERVED
0! COPYRIGHT (C) 1998 M.S. GERBER & ASSOCIATES, INC. ALL RIGHTS RESERVED
0! COPYRIGHT (c) 1995 M.S. GERBER & ASSOCIATES, INC.
0! COST IS THE STRIKE PRICE AND
0! COST OF SERVICE STUFF
0! COST VARIABLES (7)
0! COSTS
0! COUNT ACTIVE TRANSACTIONS BY PRODUCT AND TRANSACTION GROUP
0! COUNT STORAGE AREAS
0! COUNT THE DERIVATIVES BY TYPE
0! COUNTER.  IF A UNIT SEGMENT IS NOT MUST RUN, AND THE
0! COUNTRY: NEED THIS FOR NET IMPORT AND EXPORT FOR SYSTEM
0! COVER THE YEARS 1999 TO 2098.  TO SCHEDULE MAINTENANCE IN 2099 AND BEYOND
0! CPL CONTRACT 
0! CPL CONTRACT OVERLAY
0! CPLDEFUL
0! CREATE A DAILY COMMITMENT ORDER TO MEET IMPORT-CONSTRAINED LOAD
0! CREATE A LINK WITH ASSET ANALYST
0! CREATE A LINK WITH THE MONTHLY CL TRANS UNIT REPORT
0! CREATE AN ABILITY TO DO DAILY CALLS AND PUTS
0! CREATE AN INDEX BASED UPON THE GLOBAL BLOCK POSITION
0! CREATE AND SAVE AFTER HYDRO HOURLY LOADS FROM AFTER HYDRO LDC'S
0! CREATE AS MANY PARALLELS TO THE MONTHLY CL TRANS UNIT REPORT
0! CREATE MINIMUM AND MAXIMUM STORAGE CAPACITY
0! CREATE NEW VARIABLES IN THE MODEL TO TRACK EXPENSES AND REVENUES
0! CREATED 10/31/18
0! CREATED 11/7/99. GAT.
0! CREATED 3/28/01.
0! CREATES LDC'S THAT ARE PASSED INTO HYDRO LOGIC.
0! CREDIT RESERVES AND UPDATE CAPACITY MARKET
0! CREDIT THE CHANGE TO ANY LIMITS ON ANNUAL, SCENARIO AND CHECK FOR MUTUALLY DEPENDENT UNITS
0! CS = COAL SUPPLY
0! CSCUM(2) +
0! CSV
0! CSV Report
0! CUMULATIVE FUEL, SALES AND JURISDICTION SALES
0! CUM_UNIT_UTIL(I,DATABASE).
0! CURRENT FILLER LOGIC. GAT. 9/1/96.
0! CURRENT MONTH RECOVERY JURS REVENUES - FUEL EXPENSE
0! CURRENTLY ONLY CALLED ONCE.
0! CURRENTLY ONLY FOR USE WITH THE PRICE METHOD
0! CURRENT_TARGET_RATIO
0! CUSTOMER ANALYST DECLARATIONS
0! CUSTOMER PRIORITY = 1 => NATIVE
0! CUSTOMER PRIORITY = 2 => ELECT PLAN
0! CUSTOMER PRIORITY = 3 => WHOLESALE 
0! CYCLE OVER THOSE UNIT BLOCKS BELOW.
0! Calendar correct variable         
0! Common Dividends,V64
0! Comparing $/MCF revenue to $/MCF cost
0! Contract energy done.
0! Copyright(c) DrG Solutions 2013
0! Created: 9/15/2015 11:10:15 AM
0! DAILY CALL LOGIC
0! DAILY PAYOFF SHOULD BE CALCULATED BEFORE HAND TO SAVE TIME, 
0! DAILY REPORTS ACTIVE FOR MARKET PRICE METHOD. GAT. 3/27/98.
0! DAILY UNIT CONTINGENT LOGIC
0! DATA
0! DATA FOR THERMAL RETROFIT VARIABLES
0! DATA FOR THERMAL VARIABLES
0! DATA TO SUPPORT MONTHLY TO ANNUAL CONVERSIONS
0! DATA_BASE = TRANSACTION GROUP FOR A DAY TYPE
0! DAY LOAD SHIFT LOGIC
0! DAY SHIFT LOGIC BY TABLE
0! DAY SHIFT LOGIC: HISTORICAL PEAK AND ENERGY GIVEN SHIFTS
0! DAY TYPE 
0! DAY TYPE OVERLAY ! 4/7/97. GAT.
0! DEALLOCATE LOCAL ARRAYS
0! DEBT SERVICE CALCULATION
0! DECENDING. GO AFTER THE HIGHEST PRICED MARKETS FIRST...
0! DECLARATION FOR /ENERGY LIMITED RESOURCE FILE/
0! DECLARATION FOR /FOSSIL FILE/
0! DECLARATION FOR /FUEL INVENTORY FILE/
0! DECLARATION FOR ALLOCATION VARIABLES
0! DECLARATION FOR AREA ALLOCATORS
0! DECLARATION FOR CATAWBA CONTRACT DETERMINANTS
0! DECLARATION FOR CLASS FORECASTS
0! DECLARATION FOR DAY TYPE DETERMINANTS
0! DECLARATION FOR DBREAD COMMON BLOCK
0! DECLARATION FOR EMISSIONS ITEMS
0! DECLARATION FOR FINANCIAL PARAMETER FILE
0! DECLARATION FOR FUEL PRICE VARIABLES
0! DECLARATION FOR GENERATING UNIT PARAMETERS
0! DECLARATION FOR LOCAL VARIABLES
0! DECLARATION FOR LOCALS
0! DECLARATION FOR REAL VALUES
0! DECLARATION FOR RESERVE MARGIN BY TG
0! DECLARATION FOR THE SERVICE TRANSACTIONS FILE
0! DECLARATION FOR TRANSACT
0! DECLARATION FOR TRANSACT CO2_PARAM DETERMINANTS
0! DECLARATION FOR TRANSACT CONSTRAINT DETERMINANTS
0! DECLARATION FOR TRANSACT OUTAGE DETERMINANTS
0! DECLARATION FOR TRANSACT PATH DETERMINANTS
0! DECLARATION FOR TRANSACT RPS_PROGRAM DETERMINANTS
0! DECLARATION FOR TRANSACT TIE DETERMINANTS
0! DECLARATION FOR TRANSACT TRAN_EXP DETERMINANTS
0! DECLARATION FOR WORLD VARIABLES FOR FUTURE ASSETS
0! DECLARATION SECTION FOR LAM PROGRAMS
0! DECLARATIONS FOR SCREENING VARIABLES
0! DECLARATIONS FOR THE EXPANSION PLANT OPERATIONS FILE
0! DECLARATIONS OF CAPACITY STACK FILE
0! DECLARE VARIABLES
0! DECLINING INCREMENTAIL HEAT RATES), THE UNITS SHOULD BE SHORTED FIRST BY
0! DEFAULT CASE. 071109 (CONVERGENT CASE = -99)                  
0! DEFAULT MAINTENANCE PENALTY: USED FOR SERC.
0! DEFAULT VALUE. E.G. 25. DOES NOT IMPACT MAX_COAL_GROUP_INDEX BELOW.
0! DEFAULT VALUE. E.G. 25. DOES NOT IMPACT MAX_GAS_GROUP_INDEX BELOW.
0! DEFAULT VALUE. E.G. 25. DOES NOT IMPACT MAX_TRANS_GROUP_INDEX BELOW.
0! DEFERRED DEBIT AND DEFERRED TAX BALANCE MUST BE PASSED TO THE CONSOLIDATE
0! DEFERRED DEBIT ITEMS
0! DEFERRED FUEL SUMMARY
0! DEMAND
0! DEMAND     
0! DEMAND > SUPPLY => IMPORT     
0! DEMAND NODES
0! DEMAND VARIABLES (2)
0! DEPTH OF MARKET CALLS
0! DEPTH OF MARKET REPORTING. 02/22/01.
0! DEPTH OF PC IS NO MORE THAT 1000 NODES (999 LINKS). HOW MANY PC SHARE THE
0! DEPTH_PRICE(1):    MIN MARKET PRICE
0! DEPTH_PRICE(MAX_INTERVALS) :    MAX MARKET PRICE
0! DEPTH_QUANTITY(1) : SELL MAX TO THE MARKET
0! DEPTH_QUANTITY(MAX_INTERVALS) : BUY MAX FROM THE MARKET
0! DERATE
0! DERIVED FOR THIS MONTH AND DAY_TYPE.
0! DETAILED EXPANSION REPORTS
0! DETAILED HYDRO_AG REPORT
0! DETAILED REPORT OVERHEAD
0! DETAILED REPORTING
0! DETAILED REPORTING FOR ICAP.
0! DETAILED REPORTS 
0! DETAILED REPORTS HEADER INFORMATION
0! DETAILED_REPORTS OVERLAY
0! DETERMINE CHANGE IN HOURLY LOADS DUE TO HYDRO AND APPLY IT TO
0! DETERMINE LAST VARIABLE
0! DETERMINE ORDER OF NEW_BID, EXISTING_CL_BID, EXISTING_DV_BID,
0! DETERMINE OUTPUT DIRECTORY
0! DETERMINE THE LOWEST COST CONTRACT FOR THE NEXT LOAD INTERVAL(S)
0! DETERMINE THE TOTAL TRANSPORTATION COST FOR THE TREE USING THE 
0! DETERMINE WHETHER TO ADD THE RESOURCE
0! DEVICES.
0! DO ALL_DEMAND AND COMPARE TO RESOURCES FOR PRICE EQUILIBRATION
0! DO I WANT PRICES OR REVENUES?
0! DO NOTHING.
0! DO PRIM FUEL PROTION
0! DOE AND DECOMMISSIONING VARIABLES
0! DOES FUEL DERIVATIVE BURN EXCEED LOCAL_HEAT. IF SO, TO WHICH DERIV DO WE ASSIGN THE SPOT?
0! DOES PRICE FALL WITHIN THE PRICE DURATION CURVE?
0! DOES THE YEAR IN THE BINARY RECORD MATCH THE YEAR IN THE OVERLAY DAT FILE
0! DON'T ENFORCE LOWER BOUND. A PREVIOUS PATH'S CONSTRAINT MAY HAVE CREATED IT
0! DON'T FLIP BLOCK 1 AND BLOCK 2 OF THE SAME UNIT
0! DON'T RETIRE UNITS IN THE EXTENSION PERIOD
0! DOUBLE INDEX
0! DOUBLE INDEX 
0! DOUBLE INDEX MATCHES CALLING ROUTINES.               
0! DOUBLE INDEX ON L (L=TG OF TG = 1, UPPER_TRANS_GROUP)
0! DOUBLE INDEX THEN USE TRANS
0! DOUBLE INDEX.
0! DRATE
0! DR_BOOTH
0! DSM AND EL ADJUSTMENTS.  FOR NOW, I WILL ASSUME THAT MARKET 
0! DSM FINANCIAL CALCUALTIONS
0! DSM FINANCIAL EXTERNAL VARIABLES
0! DSM FINANCIAL VARAIBLES 11/11/93
0! DSM VALUE TEST VARIABLES
0! DSM_START_YEAR WILL BECOME A VECTOR WITH
0! DUE TO LOAD MGT IN THE SYSTEM PEAK HOUR
0! DUE TO UNITS NOT CONTRIBUTING TO THE MARGIN
0! DUKE CATAWBA
0! DUKE STUFF
0! DUMPS UNKNOWN PRODUCTS INTO TYPE 1
0! DUTCH AUCTION LOGIC.
0! Dimension arrays for record positions
0! Dimensions endpoint, year, month, capacity market name
0! Doug requested interface to Alan program
0! DrG
0! E.G. BEGIN_DATE = 062398
0! EARLY TRANSACTIONS GET SEALED-OFF
0! EARNINGS BEFORE INCOME TAXES/OLD INTEREST IN FUNDS FLOW
0! EARNINGS FROM OPTS,V50
0! ECITIES
0! ECITY
0! ECONINTR
0! ECONOMIC DISPATCH ROUTINE
0! ECONOMIC OUTAGE PER SWEET. 6/7/01. GAT.
0! ECONOMY INTERCHANGE
0! ECONOMY INTERCHANGE FILE
0! ECONOMY INTERCHANGE VARIABLES 1/11/91. 12/3/93 CHANGED UNITS.
0! EFFECTIVE MW'S OF PLANNING CAPACITY
0! ELECTRICITIES. 3/25/00.
0! ELECT_HOUR_MULT
0! ELECT_HOUR_MULT_FILE OVERLAY ! 10/23/03
0! ELIMINATE UNNEEDED CONSTRAINTS
0! ELSE NOT COLLECTED
0! ELSE, BRING UNIT ON-LINE FOR MINIMUM LOADING
0! EMC ENERGY REVENUES
0! EMC STUFF
0! EMERGENCY AND MAINTENANCE CONTRACT FOUND IN THE CONTRACTS FILE
0! EMERGENCY AND MAINTENANCE ENERGY BALANCE ASSIGNED TO LAST
0! EMERGENCY ENERGY MAY NOT BE AVAILABLE THE WAY IT IS FOR KEPCO
0! EMF NEXT CASE ACCOUNTING
0! EMISSION FUEL BLENDING 12/30/92 MSG
0! EMISSION ITEMS 6/20/91
0! EMISSION MARKET COST
0! EMISSION PARAMETERS
0! EMISSIONS
0! EMISSIONS BLENDING ADDED 12/30/92
0! EMISSIONS ROLL-UP. EMISSIONS CAPS DON'T ROLL-UP.
0! EMISSIONS VARIABLES (10)
0! EMPLOY LOAD AGGREGATION TO A GROUP THAT HAS BEEN PREVIOUSLY USED.
0! EMPLOY LOAD AGGREGATION TO A NEW GROUP.
0! END
0! END 042609
0! END 5/14/92 CHANGES
0! END 6/22/98.
0! END 8/29/92
0! END COAL LP USAGE
0! END COMMON BLOCK SECTION FOR THE PRODUCTION MODULES
0! END DATA DECLARATION
0! END DATA DECLARATION.
0! END DATA DECLARATIONS
0! END DATA DECLARATIONS 
0! END DATA DECLARATIONS     
0! END DATA DECLARATIONS      
0! END DATA DECLARATIONS           
0! END DATA DECLARATIONS.
0! END DATA DEFINITIONS
0! END DECLARATIONS
0! END DEPTH OF MARKET REPORT OVERHEAD
0! END DETAILED REPORTS
0! END ENTRY ESCALATED_MONTHLY_VALUE
0! END GRX VARIBLES
0! END LHC MODIFICATIONS
0! END MDSLDCAP VARIABLES
0! END MOVED ITEMS
0! END OF 6/22/98.
0! END OF CAPACITY PLANNING SECTION
0! END OF DATA DECLARATIONS
0! END OF DATA DECLARATIONS     
0! END OF DATA DECLARATIONS      
0! END OF DECLARATIONS     
0! END OF FILL
0! END OF MONTH CALC
0! END OF SYSTEM COMMITMENT CALCULATIONS
0! END OF TEST THIS SECTION 
0! END OF VARIABLE DECLARATIONS
0! END PALO ALTO 2 TIER
0! END POINT FINISHED DEALLOCATE ARRAYS
0! END POSITION
0! END READ COAL TRANSPORTTION LINKS INPUT
0! END RESOURCE VARIABLE.
0! END RETROFIT
0! END RETROFIT DATA
0! END RPS
0! END SPCapEx Additions
0! END SYSTEM CO2
0! END TEST STUFF
0! END TESTING
0! END THIS CONDITION.
0! END UNIQUE NAME FIX
0! END UTILTY ID
0! END WRITE FOR CAPEX
0! ENDIF FOR  COST CALCULATIONS
0! ENDIF SYSTEM BASED FORECAST
0! ENDOF 6/22/98.
0! ENDOF 6/22/98. GAT. FROM MULTI-PARTY
0! ENERGY
0! ENERGY AND HEAT CALC
0! ENERGY BALANCE (6)
0! ENERGY CALCULATIONS FOR CPL_PA CONTRACT
0! ENERGY CALCULATIONS.
0! ENERGY LIMITED RESOURCE CALCULATIONS
0! ENERGY ONLY CONTRACT VARIABLES
0! ENERGY PRICE
0! ENERGY PRODUCTS
0! ENERGY PRODUCTS OVERLAY ! 6/13/97. GAT.
0! ENERGY RECONCILE CALCULATIONS
0! ENERGY REVENUE
0! ENFORCE MIN EXTRACT RATE
0! ENRGLIMT
0! ENSURE THAT WE HAVE THE MONTHLY PEAKS FOR TRANSFORMATIONS
0! ENTRY FOR MUNICIPAL UTILITY--PALO ALTO IS THE MODEL
0! ENTRY POINT FOR THE ENDPOINT LOOP
0! ENUMERATE VALID SUPPLY CURVE POINTS AGAINST PATHS.
0! EPUC     
0! EPUC SHOULD BE BETWEEN 0.80 AND 0.99 OTHERWISE THERE WILL BE OVER OR UNDER SUPPLY
0! EQUIVALENT THERMAL CAPACITY
0! ERASE ALL DETAILED REPORT FILES
0! ERASE BASE BINARY FILES
0! ERASE OVERLAY BINARY FILES
0! ERROR BOX ROUTINE
0! ESCALATE THE COSTS
0! ESCALATION RATES FILE
0! ESTABLISH DERIVATIVES FOR GENERATING UNIT PRODUCTS
0! ESTABLISH THE CURRENT PRICE
0! ESTIMATE IMPACT OF THE MARKET
0! ESTIMATE THE COST PER MWH AND KW OF THE RESOURCE
0! ESTIMATE THE TOTAL COST OF THE RESOURCE
0! ESTIMATED ENERGY BASED ON SUM OF LOAD PATTERN * ANNUAL CAPACITY
0! EVALUATE LIST. COMPARE WITH PREVIOUS ITERATION
0! EVALUATION.
0! EVENT CALENDAR.
0! EVENTS CALENDAR.
0! EXECUTION TIME
0! EXIT CONDITIONS
0! EXPAND THE MULTI-AREA PRICING LOGIC FOR TRANSACT C
0! EXPANSION PATTERN REPORT VARIABLES
0! EXPENSE
0! EXPENSE TRANSFER TO ASSET CLASS MODULE
0! EXPENSES
0! EXPENSES ONLY. 
0! EXTENSION ABD AND UNIT 8327 IS USE IN ABB_CapacityMarketReport
0! EXTENSION CODES FOR DETAILED REPORTS
0! EXTERNALITY PRICES 8/15/90
0! End MarketSym transfer
0! End TODO: Check for duplicate name
0! EndFile(DafUnit) ! appropriate only to sequential files, failed to solve
0! Entitlement Done.
0! Escalate costs!
0! Escalate quantities
0! Every thing but unused supplemental and deficiency has been calculated
0! FACET ALGORITHM VARIABLES
0! FANCY DYNAMIC UPDATING.
0! FANCY INDEXED PRICING
0! FANCY ROUTINE
0! FANCY STUFF: ALLOW FOR NEGATIVE TRANSACTION GROUP LOADS.
0! FE P&L VARIABLES
0! FEASIBLE SOLUTION ADDRESSES PAC ISSUE: BUYER COST < DELIVERED COST
0! FEDERAL MMBTU TAX
0! FERC ALLOCATION VECTORS
0! FIFTH INDEX:  1 = $, 2 = UNITS AT BUSBAR (ENERGY, PEAK, CUSTOMERS); 3 = UNITS AT METER
0! FIGURE OUT WHY THE ORGINAL IF IS COMMENTED OUT EXCEPT MAYBE BECAUSE
0! FILE MANAGEMENT VARIABLES
0! FILE NAMES
0! FINALLY, MAKE AN ASSUMPTION OF HOW PRICES WILL BE SHIFTED AS A RESULT OF THE RESOURCE.
0! FINANCIAL
0! FINANCIAL RESULTS COMMON BLOCK
0! FINANICAL RUN SPECS 
0! FINANICAL RUN SPECS OVERLAY
0! FIND ALL TIME-VARYING VECTORS. FIND THE MIN AND MAX PRICE AND QUANTITY 
0! FIND CHRISTMAS
0! FIND COLUMBUS DAY
0! FIND CROSS-OVER POINT
0! FIND DELIVERED COSTS BETWEEN ALL TRANSACTION GROUPS FOR THE NEXT TRANSACTION
0! FIND ITS ORIGINAL POSITION
0! FIND LABOR DAY THE FIRST MONDAY IN SEPTEMBER
0! FIND MEMORIAL DAY THE LAST MONDAY IN MAY
0! FIND MOST PROFITABLE STORAGE DISCHARGE ENERGY GIVEN RENEWABLE ENERGY PERCENT
0! FIND NEW YEARS
0! FIND POTENTIAL (NOT ECONOMIC) SIZE OF THE TRANSACTION.
0! FIND PRESIDENTS DAY THE MONDAY BEFORE OR ON THE 22
0! FIND SIMULATION MODEL NAME AND DATE TIME STAMP
0! FIND TECH BREAKS AND STRENGTH OF THE BREAK
0! FIND THANKSGIVING DAY THE FORTH THURSDAY IN NOVEMBER
0! FIND THE BLKNO
0! FIND THE CUM_REVENUE/CUM_HOURS INTERVAL THAT CONTAINS MX_HOURS
0! FIND THE FORTH OF JULY
0! FIND THE INCREMENT THAT HAS THE ENERGY CROSS-OVER
0! FIND THE INDEX POSITION OF THE FIRST BLOCK FOR THE LOWEST COST COMMIT
0! FIND THE INTERSECTION OF THE TWO LINES
0! FIND THE INTERVAL FOR THE CAP RATIO
0! FIND THE NEXT LOWEST COST TO COMMIT
0! FIND THE NUMBER OF K FOR SET J.            
0! FIND THE PEAK AFTER DSM FOR THE YEAR, RECORD THE AMOUNT
0! FIND THE PRICING.
0! FIND UPPER INTERVAL
0! FIND VETERANS DAY ALWAYS 11/11
0! FINISHED ENERGY
0! FINNUCFL MSGMMNFL
0! FIRST CALL BEFORE YEAR LOOP
0! FIRST EMPLOY EMERGENCY CAPACITY OF COMMITTED UNITS: SHOULD BE SORTED PRIOR TO THIS POINT.
0! FIRST PASS AND FISCAL_SEASON_RESET (FROM BELOW)        
0! FIRST PASS READ OF COAL TRANSPORTATION LINKS INPUT
0! FIRST RETIRE THE ORIGINAL CHARACTERISTICS
0! FIRST, GET FIXED AND VARIABLE COST BY OPTION BY INTERVAL
0! FIRST: DETERMINE LAST UP HOUR
0! FISCAL 08/23/02
0! FISCAL FIRST MONTH THEREAFTER.
0! FISCAL REPORTING
0! FISCAL REPORTING LOOP
0! FISCAL REPORTING MOVE UP
0! FISCAL TRANS REPORT
0! FISCAL YEAR INITIALIZATION
0! FISCAL. 8/21/02.
0! FIVE MONTH LAG ON PRICES
0! FIX TO MAINTENANCE SCHEDULER. 3/8/1.
0! FIXED PHYSICAL COST   
0! FIXED PHYSICAL EXPENSE
0! FIXED PHYSICAL REVENUE
0! FIXED PHYSICAL REVENUE   
0! FLAG THAT THERE ARE NO PRICES FOR THIS SERIES.
0! FLIP TIME DEPENDED VARIABLES
0! FLIPPING THE NEW_POINT LOOP AND THE DISPATCH BLOCK LOOP WILL DECREASE
0! FOR "GENERAL" DISTRIBUTIONS
0! FOR A ONE BRANCH TREE NEED TO UNSET THE END_OF_STUDY_FLAG
0! FOR EACH DAY TYPE FOR EACH MONTH
0! FOR EACH DISPATCH BLOCK. THE ACTIVE COST VECTORS NEED TO BE FOUND BEFORE
0! FOR EACH LNG, FIND THE HUB, OTHERWISE SET TO LNG
0! FOR EACH SUPPLY CURVE TO KNOW HOW TO SPLIT THE COSTS.
0! FOR INSTANCE, SELLING A CALL OPTION MEANS THAT WHEN IT IS CALLED, YOU MUST SERVE THE LOAD.
0! FOR IPL, KCPL AND OTHERS
0! FOR LACK OF AN EASY WAY TO TURN THESE OFF WITH MULTI-MARKET
0! FOR LGE
0! FOR MARKET DERIVATIVES. 2/2/1.
0! FOR MONTHLY MIDAS
0! FOR N5 LNG DELIVERIES
0! FOR NG MODEL.
0! FOR NOW, DO NOT BUILD IN THE FIRST YEAR.
0! FOR NOW. THIS IMPOSES A STRICT CONDITION ON USER TO CREATE STORAGE NODES.
0! FOR NPCC. 8/19/98.
0! FOR RETRO NEED:
0! FOR SCOTT JONES. 12/10/97. GAT.
0! FOR SYSTEM CO2:
0! FOR TESTING THE UNIT DOESN'T RETIRE
0! FOR THE IPL FAC.
0! FOR THESE LONG PATHS, USE THE TG POSITION'S NOT THE INPUT FILE VALUES
0! FOR TRACKING REDUNDENT TRANSACTIONS
0! FOR TVA POSITION REPORTING
0! FOR USE BY CAPACITY PLANNING PROGRAMS. 10/20/98. GAT.
0! FOR USE BY MAINTENANCE PROGRAM
0! FOR USERS LIKE SUN FLOWER.  THE PROBLEM IS THAT MAINTENANCE ENERGY AND
0! FORMAT FOR THE CAPITAL COST SECTION
0! FORMAT FOR THE EXPENSES SECTION
0! FORMAT FOR THE NON-UTILITY COST SECTION
0! FORMATS FOR SPREADSHEET
0! FORWARD SALES WITHOUT LOADS.  1/10/01. FOR BURESH.
0! FORWARD_OPTION OVERLAY ! 8/17/00. TS, GAT.
0! FOUND A GOOD OPTION
0! FOUR-DIGIT YEAR VALUES MUST BE USED.  DR.G
0! FROM ALGORITHM BELOW.
0! FROM LAG6 TO LAG10 PER THE SPREADSHEET               
0! FROM MDSLDCAP
0! FROM MRX
0! FROM,TO I,J            
0! FT 1-6 are fossil fuels; 7=bio; 8=solar; 9=wind; 11=geo thermal; 12=land fill
0! FT 12 = DG
0! FUEL BLENDING VARIABLES
0! FUEL COST
0! FUEL DERIVATIVE INPUT DATA LIST
0! FUEL DERIVATIVES
0! FUEL DERIVATIVES OVERLAY ! 12/23/02. GAT.
0! FUEL INVENTORY DATA
0! FUEL INVENTORY VARIABLES
0! FUEL INVENTORY VARIABLES 6/18/92
0! FUEL INVENTORY VARIABLES. 3/29/01. GAT.
0! FUEL PRICE VARIABLES
0! FUEL SUPPLY INVENTORY POINTER
0! FUEL USE
0! FUEL USE CALC BELOW
0! FUNCTION DEFINITIONS
0! FUNCTION ITEMS
0! FUNCTION TO GET AND PASS CURRENT YEAR'S SYSTEM ENERGY AND PEAK
0! FUNCTION TYPES
0! FUNCTIONS
0! FUNDS FLOW ITEMS
0! FURTHER ASSUME THAT THE BUYER IS A TRADITIONAL DOWNWARD SLOPING DEMAND CURVE,
0! FUTASSET ASSET FILE
0! FUTURE ASSETS
0! Fifth dimension
0! First dimension
0! First element (active_rps):
0! Forth dimension
0! Fuel Derivative Final Read
0! GADS DATA BASE FOR FOR'S AND MOR'S
0! GAS BALANCE REPORTING
0! GAS BASIS REPLACES OTHER 1. 8/26/02. GAT.
0! GAS MODEL     
0! GAS, OIL, OTHER AVAILABILITY AND GAS BASIS ADDED 07/21/03.
0! GAS_GROUP_SORT AND STARTING POSITION OF EACH GROUP
0! GAS_HOUR_MULT
0! GAS_HOUR_MULT_FILE OVERLAY ! 10/23/03
0! GAS_MODEL_INFLATION_ESC     
0! GAS_MODEL_RESIDUAL_ESC     
0! GAS_OBJT
0! GAS_PCA_LAGGED_PRICE_VECTOR: NEED LAG T-7 TO T-10 FROM SINGLE VECTOR
0! GAS_PCA_MONTH_VECTOR: APPLY VECTOR TO CORRESPONDING MONTH FROM SINGLE VECTOR
0! GAT. 1/31/94.
0! GAT. 2/28/99.
0! GAT. 2/9/94. ATTEMPT TO TAKE CARE OF HARD-WIRED/MUTUALLY EXCLUSIVE PROBLEM                  
0! GAT. ADDED ZERO CONDITION. 3/3/99. GAT.
0! GENERATION AND WHOLESALE/RETAIL CALCULATIONS
0! GENERATION_BY_SEGMENT USED FOR WHOLESALE/RETAIL/OTHER, SPINNING,
0! GENERIC_DEMAND_READ_DATA
0! GET COST OF SUPPLYING CAPACITY FOR A "SHORT" SYSTEM.
0! GET CURRENT GROWTH RATE AND LAST YEAR'S ACTUAL PEAK
0! GET LOAD REQUIREMENTS OF THE TRANSACTION GROUP
0! GET MARGINAL COST, IF RESOURCES ARE AVAILABLE, OF THE TRANSACTION GROUP
0! GET NUMBER OF TRANSACTIONS
0! GET PECO CONTRACT OUT.
0! GET POINTER FROM ASSET VECTORS
0! GET THE CF OF THE RESOURCE
0! GET THE FILE NAME
0! GET THE INITIAL MARKET DURATION CURVE.  DO NOT CALL THIS ROUTINE AGAIN.
0! GET THE STATE OF THE SYSTEM BEFORE TRANSACTIONS I.E. SERVING NATIVE LOAD
0! GET THIS WORKING. THEN, SPEED IT UP.
0! GET TRANSACTION LDC'S
0! GET_BLOCK_AVAIL_4_HOUR(TEMP_UNIT_NUMBER,INT2(1),HOUR_IN_MONTH) and
0! GET_BLOCK_AVAIL_4_HRinYR(TEMP_UNIT_NUMBER,INT2(1),HOUR_IN_YEAR) and
0! GET_BLOCK_OUTAGE_4_HOUR(TEMP_UNIT_NUMBER,INT2(2),HOUR_IN_MONTH)
0! GET_BLOCK_OUTAGE_4_HRinYR(TEMP_UNIT_NUMBER,INT2(2),HOUR_IN_YEAR)
0! GLOBAL DATABASE.
0! GN = COAL NODE
0! GN = GAS NODE
0! GO TO THERMAL UNITS        
0! GOAL IS TO ANCHOR THE PRICE OF EACH TRANSACTION GROUP IN AN HOUR              
0! GOAL IS TO SELL AS MUCH AS POSSIBLE WITHOUT SEEING SELLER'S PRICE
0! GOLBAL VARIABLES
0! GPV DSM
0! GRAB AUTO-SCHEDULED (FORCED AND) PLANNED OUTAGES FROM CLM
0! GREATER THAN THE MARKET, DISPLACE IT WITH MARKET RESOURCE.) 
0! GROSSING UP DISPATCHED TO GENERATED
0! GROUP 11 AREA 6 SUN FLOWER
0! GROUP 5 CONTROL AREA 1 WESTPLAINS
0! GROUP 6 AREA 2 KP&L
0! GROUP 7 AREA 4 KCP&L
0! GROUP 8 AREA 3 KG&E
0! GROUP 9 AREA 5 EMPIRE
0! GROUP TO BE THE NATIVE UTILITY THAT ALREADY WENT THROUGH ALL THE
0! GROUP VARIABLES 154-189
0! GRX PLANNING LOOP
0! GRX VARIABLES
0! GRX_RPS
0! GS = GAS SUPPLY
0! GWH
0! GWH.     
0! Greg job:
0! Greg job: get 8784 prices to Alan.
0! Greg:  feel free to rename this as desired
0! HANDLE GEOLOGICAL, LNG AND STORAGE.
0! HARD-WIRED TO ANNUAL ESCALATION VECTOR FOR NOW.
0! HAVE A NUMBER OF CASES TO CHECK
0! HEAT CALCULATIONS GO HERE. UNITS BELOW THE MARGIN HAVE FULL LOAD
0! HEAT HAS ALREADY BEEN CALCULATED IN COMMITMENT ROUTINE.
0! HEAT RATE
0! HEAT VALUES.  UNITS ABOVE THE MARGIN HAVE MARGINAL HEAT VALUES.
0! HEC
0! HEC ANNUAL CX REPORT
0! HEC CX REPORT
0! HEC VARIABLES
0! HEC_Gen_sold is a negative number
0! HIGHEST INDEX = 48 ON 12/23/05
0! HIGHEST_OPTION IS POSITION WITHIN THE ALL_RESOURCES LIST OF THE BEST OPTION
0! HO IS THE MOST PROFITABLE UNIT.
0! HOURLY CALC. 8/1/01.
0! HOURLY CALL LOGIC
0! HOURLY CUSTOMER COSTS BY ASSET CLASS
0! HOURLY DISPATCH ORDER. REMOVES UNITS ON OUTAGE. LOADS MUST-RUN'S FIRST.
0! HOURLY HOOSIER REPORT FOR TRACKING: WILLIAMS AND PECO
0! HOURLY LOAD OF TABLE AFTER SCENARIO MAKER STUFF
0! HOURLY MARGINAL COSTING FOR ARTMAN AND OTHERS. GAT. 10/17/95.
0! HOURLY REPORT FOR AI
0! HOURLY_DUMP LOGIC
0! HOW DO WE SET THE CALENDAR
0! HOWEVER, CAN HAVE MANY UNITS TIED TO A FUEL DERIVATIVE.
0! HYDRO LOAD AGGREGATION CASES
0! HeaderInitByte is always z'f7'=-9_1 for RecordLeng>2
0! Hourly Product File is tracked
0! Hourly Product Files. 072119.
0! I = (ORIGINAL) TRANSACTION GROUP INDEX
0! I = 1 J = 6 FOR 7X24 PUMPED HYDRO
0! I ASSUME THAT THE FOLLOWING THREE VARIABLES ARE TIME INDEPENDENT. GAT. 5/26/98.
0! I DON'T NEED THIS
0! I DON'T THINK THIS SHOULD BE DONE.  10/4/88
0! I NEED A RECURSIVE ROUTINE HERE FOR LONG PATHS
0! I NEED ALAN TO JUST PASS ME BACK THE START-STOP DATES FROM THE AUTOMATIC SCHEDULING PROGRAM
0! I NEED MORE TO MEET MINIMUM RESERVE.  LET THIS ALWAYS FALL THROUGH TO BUILD THE UNIT.
0! I NEED TO HAVE AN INDEX FOR THE SORTED ARRAY SO THAT EVENTS_RECORD_INDEX, ETC ARE OK
0! I SHOULD REWRITE ALL THIS POINTER MESS, LOAD INTO MEMORY, 
0! I'VE ALREADY ADDED ENOUGH
0! ICAP  
0! ICAP FUNCTIONS
0! ICAP OVERLAY ! 04/26/02. GAT. TMS.
0! ICAP REVENUES
0! IDENFITY CO2 NEED (RETIREMENT/RETROFIT)
0! IDENTIFY FIRST_EVENT_IN_HOUR
0! IDENTIFY MaxTransferValue, SELLER, BUYER
0! IDENTIFY PROFITABILITY
0! IDENTIFY QUANTITY TO TRANSFER
0! IDENTIFY RESERVE MARGIN NEED
0! IDENTIFY REVERSE PATH. THIS ASSUMES ALL PATHS ARE 100%.
0! IDENTIFY RPS NEED
0! IDENTIFY THE LOWEST COST TG TRANSFER SET THAT CAN MEET THE SCREEN CAPACITY
0! IDENTIFY THE MARGINAL PRICE AT THAT POINT
0! IDENTIFY THE MW AND $/KW*YR OF ADJACENT TG'S
0! IDENTIFY THE STRIKE PRICE OF THE RESOURCE
0! IDENTIFY THE TOTAL SURPLUS AND DEFICIT MW OF THE SYSTEM
0! IDENTIFY THE TYPE OF RESOURCE
0! IDENTIFY UNITS PARTIALLY OWNED BY PA
0! IDENTIFYING BASE AND PEAK EL REVENUE CLASSED
0! IDENTIFYING BASE AND PEAK EL REVENUE CLASSES
0! IE SELLERS_COST + TIE_COST... < BUYERS_COST AND BUYERS_COST'S ARE NON-DECREASING.
0! IF A LOAD REDUCTION PROGRAM MODIFY THE LOAD
0! IF ADD RESOURCE, THEN HAVE IT IMPACT THE PROPER ROUTINE
0! IF ADDED BECAUSE THERE IS VALID INFO IN RECLN FROM READ ABOVE 3/13/10
0! IF AN ANNUAL CAPACITY CHARGE IN A GIVEN MONTH
0! IF CAPACITY PLANNING IS ACTIVE READ THE OBJECTIVE FUNCTION
0! IF CF IS NOT WITHIN THE C INTERVAL, THEN CYCLE.
0! IF HUB INDEX NOT FOUND, RESET TO LNG_INDEX               
0! IF IT CAN TAKE TEMP_TRANSACTION, THEN DON'T BOTHER TO SEARCH.
0! IF IT CANNOT MEET THAT LOAD WITH ITS OWN RESOURCES IT MUST PAY AN EXTERNAL
0! IF ITS DOWN, KEEP IT DOWN FOR THE MIN DOWN TIME.
0! IF ITS UP, KEEP IT UP FOR THE MINIMUM UP TIME.
0! IF LOAD MANAGEMENT NOT ACTIVE SET SEASONAL PEAK AND BASE
0! IF LOAD MANAGEMENT OR TIME-OF-DAY SCENARIO DESIRED THIS RUN, CALL.
0! IF MARGINAL COST TO SELL IS LESS THAN THE PRICE TO BUY, THEN BUY
0! IF NECESSARY
0! IF NO POINTER HAS BEEN SPECIFIED FOR THE PEAK MONTH
0! IF NOT PROFITABLE AND IT DOESN'T VIOLATE MIN UP TIME, THEN SHUT DOWN
0! IF ON IN PREVIOUS HOUR, THEN KEEP-ON.
0! IF POSITIVE, OUTAGE OCCURS IN DAY
0! IF PSI IS A STAND ALONE AREA AND THIS UNIT IS ALLOCATED TO THAT AREA
0! IF SECONDS NOT DEFINED, THEN RESET TO ZERO
0! IF STILL NOT SATISFIED, SECOND BLOCK TAGGED UNITS AND DISPLACE GENERATION
0! IF THE BASE CASE EXISTS THE OVERHEAD FINANCIAL CALCULATIONS ARE NOT DONE
0! IF THE UNIT RETIRES DURING THE STUDY PERIOD BUILD IT ONCE
0! IF THE YEAR IS EQUAL TO OR GREATER THAN BEGIN YEAR CALCULATE THE COSTS
0! IF THIS IS A CC, THEN TELL THE DUCT FIRING UNIT ITS AVAILABLE
0! IF THIS IS A DUCT FIRING UNIT, THEN TELL THE CC ITS NO LONGER AVAILABLE
0! IF TWO RESOURCES HAVE THE HIGHEST MARGIN, THEY MAKE A TRANSACTION.
0! IF UNIT IS NOT BUILT, PERFORM AND RECORD THE TRANSFER
0! IF UNIT IS STILL BUILT, OK
0! IF VALUE NON-POSITIVE, ITS NO GOOD.  CYCLE.
0! IF YOU CAN SELL THE WHOLE AMOUNT AND THE DELIVERED COST IS STILL LESS,
0! IGNORE LEAP YEARS FOR NOW.
0! IMBALANCE.
0! IMPLEMENT DECONVOLVE KIND OF LOGIC, TAKING MW'S OFF OF THE ORIGINAL
0! IMPLEMENT INDIVIDUAL AND JOINT PURCHASE CONSTRAINTS HERE.
0! IMPLICITLY ASSUMES 25 YEAR LIFE
0! IMPLIES AN IDENTICALLY PRICED
0! IN CLREPORT
0! IN CL_REPORT
0! IN GENERAL MULTI-AREA DISPATCH, THE MODEL WILL RELY ON 'L' UNIT
0! IN LAHEY 3.x THE ARGUMENT LIST IS AS BELOW
0! IN PICADISP
0! INACTIVE BASINS ARE TAKEN-OUT IN GS_SUPPLY_CAPACITY_CURVE                  
0! INCLUDE ARRAYS FOR PRICING.
0! INCLUDE CLASS LEVEL COMMON BLOCK
0! INCLUDE COMMON BLOCK OF ALL FORECAST TYPICAL CURVES FOR THIS YEAR
0! INCLUDE LAM COMMON BLOCKS
0! INCLUDE LOAD MANAGEMENT COMMON BLOCK
0! INCLUDE SYSTEM LEVEL COMMON BLOCK
0! INCLUDING NO RESOURCES LEFT.
0! INCOME AND CASH IMPACTS
0! INCOME ITEMS
0! INCOME STATEMENT ITEMS
0! INDEPENDENT CONSTRAINED HOURLY GENERATION: IN_GEN
0! INDEX EACH TRANSACTION BY PRODUCT AND TRANSACTION GROUP
0! INDEX FOR CAPACITY INSIDE MARGNOBJ
0! INDEXED ENERGY REVENUES BY TAB 
0! INDEXED ON TG, NOT DB
0! INFO FOR CONSUMER SURPLUS CALC
0! INITIAL CHECK
0! INITIAL CONDITIONS FOR REPORTING PURPOSES
0! INITIAL DIAGNOSTIC
0! INITIALIZATION FILE
0! INITIALIZATION FILE OVERLAY
0! INITIALIZE ACROSS UNITS
0! INITIALIZE ANNUAL SERVICE COSTS VARIABLES
0! INITIALIZE FUEL ANNUAL FUEL INVENTORIES ADDED 6/18/92
0! INITIALIZE RESOURCE EXPANSION OPTIONS IN THIS YEAR.
0! INITIALIZE SERVICE COSTS VARIABLES
0! INITIALIZE THE MARKETSYM TRANSFER VARIABLE
0! INITIALIZE VALUES
0! INITIALIZE VARIABLES
0! INITIALLY ASSUME THAT THE MODEL IS ALWAYS USING A REFERENCE LOAD.
0! INITIALLY ASSUME THAT THE REFERENCE LOADS ARE ALL WORKING OFF OF THE SAME BASE YEAR LOAD.
0! INITILIZE REGIONAL PLANNING PARAMETERS PER DOUG
0! INJECTION AND NO WITHDRAWAL.
0! INNCLUDE COMMON BLOCK OF YEARLY SYSTEM FORECAST STATISTICS
0! INNCLUDE DELIVERY ADDERS?
0! INNCLUDE MONTHLY FUEL INDEX?
0! INNCLUDE STOCHASTIC MULTIPIERS?
0! INPUT DATA LIST
0! INPUT FILE.
0! INT*2 FROM INT*4. 11/26/99. GAT.
0! INTEGER*2
0! INTEGRATE ALONG THE ELDC UNTIL THE TARGET CAPACITY
0! INTEREST ON LTD,V55
0! INTEREST ON STD,V56
0! INTEREST RATE ADDED 03/11/02
0! INTERPOLATE BETWEEN POINTS            
0! INTERRUPTIBLE
0! INTERUPTIBLE LOGIC
0! INTERUPTIBLE/FUEL_SWITCHING LOGIC
0! INTRA-COMPANY DATA
0! INVOKE FORCED OUTAGE DERIVATIVE
0! IPL_FAC_DB(1) = Native load for the month
0! IPL_FAC_DB(2) = Elect plan mwh
0! IPL_FAC_DB(3) = IPL_FAC_DB(2)/IPL_FAC_DB(1)
0! IPL_FAC_DB(4) = SUM(MIN_LOAD_MW*SERVICE_HOURS)/HOURS_IN_MONTH
0! IPL_FAC_DB(5) = IPL_FAC_DB(3)*IPL_FAC_DB(4)
0! IS DEFICIT GREATER THAN THE INTERNAL RPS REQUIREMENT?
0! IS DEFINED MSG
0! IS IT IN THE MONEY?
0! IS THE UNIT CONTAINED WITHIN THE INTERVAL?
0! IS THIS REALLY THE BEST TRACK?
0! IS THIS THE MARGINAL UNIT AGAINST LOAD (BASED UPON DISPATCH)?
0! IS TO RE-RUN THE SET UP ROUTINE.  A BETTER SOLUTION IS TO INCREMENTALLY
0! ISOLATE START_UP VARIABLES
0! ISOLATE THIS ROUTINES VARIABLES
0! IT IS A RESOURCE.  THUS, IT REDUCES PEAK_ADJ_2... CONTRIBUTION
0! IT IS A SALE. THUS, IT REDUCES EL_ANN_CAP CONTRIBUTION
0! IT WILL BE FAST TO TRAVERSE THESE INDICES AT THE END OF THIS LOOP
0! ITEMS 218-220
0! ITEMS 221-241
0! ITEMS 242-268
0! ITEMS 277-290
0! ITEMS 291-310
0! ITEMS USED IN BOOTH
0! ITS GOOD.  ADD IT TO R_DAILY_CAPACITY.
0! In the default case, recognize commands that RealWin knows how to process
0! In the original version of this source, those variables were not set.
0! Issue with max_prod_types:
0! JANET ADDED THE FOLLOWING CINITW
0! JOINT DISPATCH COST
0! JOINT_DISPATCH_CONSTRAINT(AREA,1=SELL,2=BUY)
0! JUST USE THE PRICE           
0! KEEP MONTHLY BECAUSE TRANS PRICING OPERATIONAL ROUTINE.
0! KEEP THIS CALC IN FOR NON-TRANSACT C
0! KEPCO DUMP ENERGY 5/26/94
0! KEPCO STUFF
0! KEPCO STUFF 5/20/92
0! KEY VARIABLE.                  
0! KeyAvail=iand(Regs(1),Z'ff')>0
0! LAGS NEEDED FOR BASIN ADDITION 1-5
0! LAMDA SET HERE
0! LAST BUYER ADDED 8/26/99. GAT. FOR SELANDER.
0! LAST RESOURCE BELOW MARKET FOR SELLS
0! LAST VARIABLE IS 456
0! LAST_POINT CALCULATIONS MOVED FROM PRO_COST AND CONTRACT INIT 3/4/92
0! LAST_VARIABLE FUNCTION
0! LATER
0! LDE FILE DIRECTORY SET-UP
0! LF95 HAS A PROBLEM WITH THIS CALL SINCE IT IS ONLY CALLED HERE I MOVED
0! LFO ENABLED 3/12/90
0! LH_GLOBAL
0! LH_GLOBAL FILE OVERLAY ! 01/27/04.
0! LINEAR TRANSFORM OF ENERGY PRODUCTS AVERAGE REVENUE TO PRICE DURATION
0! LINK ID NUMBER            
0! LMP Expense
0! LOAD ANALYSIS CONTROL MODULE 8/11/93 M.S.G. COPYRIGHT (C) 1993
0! LOAD FACTOR TO ENERGY
0! LOCAL ALLOCATION
0! LOCAL DATA LIST
0! LOCAL ENERGY BALANCE
0! LOCAL VARIABLES
0! LOCAL_ASSET_CLASS_ID + 1 OR LOCAL_ASSET_CLASS_ID ???                        
0! LOCAL_PATH = 0 IF D = DEPTH                     
0! LOGIC AND MININUM DOWN TIME
0! LOGICAL SECTION
0! LOGICAL*1
0! LOLP REPORT
0! LONG_SHORT AND CALL_PUT ALREADY CALCULATED
0! LOOK IN THE REVERSE DIRECTION.
0! LOOP BY DAY TYPE
0! LOSS PERCENT (3) CALCULATED AT REPORT TIME
0! LOWER (THE FIT TO I/O DATA PRODUCES NEGATIVE COEFFICIENTS WHICH LEAD TO
0! LOWER CLASS GROWTH RATES FOR SMALLER COMPANYS
0! LP COAL MODEL
0! LTD NET OF RETIREMENTS
0! Last change: MSG 5/5/2003 2:12:01 PM
0! Last change: MSG 6/23/2003 2:12:08 PM
0! Last change: MSG 7/1/2003 12:46:31 PM
0! Last change: msg 9/14/2016 12:03:32 PM
0! Last commit as EPA-8977module file_existence
0! MADE HOURLY 02/01/02.
0! MAIN ROUTINE
0! MAINT_INDEX above is needed even if active items in arrays are compressed;
0! MAJOR RE-WRITE OF THE ROUTINE: 02/21/02.
0! MAJOR REASSIGNMENT
0! MAKE AN ASSUMPTION HOW MANY HOURS THE RESOURCE IS RUNNING BASED ON ENERGY.
0! MAKE CALL TO SCREENING REPORT
0! MAKE ITS OWN SWITCH?         
0! MAKE THE CHANGE TO THE PRICE CURVE, RESERVE MARGINS, CO2 MARKET, REC MARKET, OTHER MARKETS
0! MAKE X THE LOWER BOUND AND RETEST
0! MAKE X THE UPPER BOUND AND RETEST
0! MAKEBIN2 SECTION
0! MARGINAL COST DECLARATION
0! MARGINAL COST.  IF THE ALGORITHM CORRECTLY FINDS THE GREATEST TO SMALLEST
0! MARGINAL REPORT OVERHEAD
0! MARGINAL REPORT VARIABLES
0! MARGNOBJ
0! MARK IS RESERVING INDICES 20-42 AS NUMERICALLY DEFINED
0! MARK QUESTIONS: SHOULD THE ADDER BE IN THIS
0! MARKET
0! MARKET CLEARS EACH HOUR THROUGH A SERIES OF TRANSACTIONS, STARTING
0! MARKET PRICE
0! MARKET PRICE INFORMATION 3/26/95
0! MARKET PRICE OVERLAY ! 8/7/97. GAT.
0! MARKET REVENUE PROXY FOR UNION EL UNITS 8/7/97
0! MARKETSYM TRANSFER VARIABLE
0! MARKET_GROUPS
0! MARKET_GROUPS OVERLAY ! 6/8/01. GAT.
0! MARKET_RESOURCE 7/5/02. FOR TVA
0! MATCH UNIT NAME AND ZONE LOCATION
0! MAX RATCHET CONTRACT LOGIC
0! MAXIMUM RESERVE MARGIN CONDITION
0! MAXIMUM TG CONSTRAINT
0! MAX_COAL_LOAD_GROUPS ARE THE NUMBER OF TRANSACTION GROUPS (TG) WITH LOADS
0! MAX_GAS_LOAD_GROUPS ARE THE NUMBER OF TRANSACTION GROUPS (TG) WITH LOADS
0! MAX_POINTS_IN_GS MUST BE PROPOGATED THROUGHOUT THIS PROGRAM         
0! MAX_TRANS_LOAD_GROUPS ARE THE NUMBER OF TRANSACTION GROUPS (TG) WITH LOADS
0! MAX_TRANS_LOAD_TABLES ARE THE NUMBER OF ACTIVE TABLES IN THE FILE
0! MAY NEED TO INCLUDE C = 0
0! MAY NEED TO RE-INDEX BECAUSE OF "BLANK" SUPPLY CURVES.
0! MAY WANT TO CALL THIS FOR THE WHOLE MONTH AND ADD TO THE 
0! MAYBE SELL OR BUY CONDITION
0! MET THE LOAD CONDITION
0! MICHIGAN SECTION
0! MIDWEST: 
0! MIN RATCHET CONTRACT LOGIC
0! MINUS RESERVES PROVIDED BY DSM NOTE THE DSM VALUES ARE NEGATIVE
0! MIN_UP_TIME = 0 .AND. MIN_UP_TIME = 1 HAVE SAME EFFECT.
0! MISSED THE INTERVAL ENTIRELY     
0! MODEL ONLY GETS TO THIS POINT IF THE DATABASE IS DEFINED IN
0! MODIFIED 01/30/03 TO INCLUDE UNIT VS DEPTH PRICE CHECK.
0! MODIFIED 08/20/01 FOR EDE
0! MODIFIED 1/24/02.
0! MODIFIED 10/12/98. GAT.
0! MODIFIED 10/15/01 FOR AMEREN.
0! MODIFIED 12/31/92, 1/2-3/93 FOR MONTHLY INVENTORIES
0! MODIFIED FOR CF. 9/9/99. GAT.
0! MODIFIED TO CAPTURE SCARCITY FUNCTION CHANGES DUE TO OUTAGES. 5/3/01.
0! MODIFY QUANTIES USING LATIN HYPERCUBE
0! MODIFY THE PRICE CURVE STARTING AT HIGHEST_J UNTIL THE END OF THE CURVE
0! MONTH
0! MONTH-TO-MONTH INVENTORY VARIABLE
0! MONTHLY
0! MONTHLY BALANCE SHEET
0! MONTHLY CALL LOGIC
0! MONTHLY CASH REPORT
0! MONTHLY CONTRACT REVENUES REPORT           
0! MONTHLY CP&L TAX REPORT
0! MONTHLY DIMENSION:
0! MONTHLY FINANCAIL FILES PAYMENTS
0! MONTHLY FUEL PRICE ITEMS ADDED 9/22/92
0! MONTHLY FUEL PRICES HAVE BEEN CALCULATED AT THIS POINT
0! MONTHLY INCOME STATEMENT
0! MONTHLY INITIALIZATION. NECESSARY TO ACCUMULATE ANNUAL VALUES.
0! MONTHLY LOOP
0! MONTHLY REPRESENTATION ALWAYS REPLACES VARIABLE VALUE
0! MONTHLY SERVICE REPORT VARIABLES
0! MONTHLY TAX DETAIL REPORT
0! MONTHLY TRANSACT C
0! MONTHLY VALUES
0! MONTHLY WRITE
0! MOST FREQUENT TRANSACTIONS
0! MOST PROFITABLE TRANSACTIONS
0! MOVE EXISTING UNIT RETIREMENT DATES IN THE EXTENSION PERIOD TO
0! MOVED
0! MOVED 10/22/98. GAT.
0! MOVED 10/26/00. GAT. FOR WVPA POINTER CAPABILITY.
0! MOVED 11/4/99.
0! MOVED 3/17/94. GAT.
0! MOVED 3/21/02.
0! MOVED 4/11/02.
0! MOVED 5/13/99. GAT.
0! MOVED 5/21/02.
0! MOVED 5/8/00
0! MOVED 5/8/00.  return 9/7/01 msg
0! MOVED 5/8/00. return 9/7/01 msg
0! MOVED 6/13/02.
0! MOVED CLASS ASSIGNED VARIABLES INTO COMMON BLOCK 6/5/91.
0! MOVED FOR FE: 09/23/03.
0! MOVED FROM BELOW CUM_GEN
0! MOVED FROM CLREPORT.
0! MOVED FROM FUEL UNITS 9/27/94
0! MOVED FROM INSIDE ENRGLIMT FOR DYNAMIC STORAGE RECORD
0! MOVED FROM INSIDE READ LOADS. 4/20/98. GAT.
0! MOVED FROM INSIDE THE ABOVE IF STATEMENT TO SEE WHETHER IT FIXES THE PROBLEM.
0! MOVED FROM INSIDE TRANSACT. 3/14/98. GAT.
0! MOVED FROM MIDAS.FOR 8/3/93
0! MOVED INSIDE SNSZMDS.FOR. 1/28/97. GAT.
0! MOVED INTO ANNUAL INITIALIZATION ROUTINE
0! MOVED INTO HOURLY BY GROUP
0! MOVED INTO HOURLY REALM
0! MOVED ITEMS
0! MOVED THE OPEN FOR BTU_CONTENT. 1/26/00. GAT.
0! MOVED TO CLA_OBJT.FOR
0! MOVED TO LINE 440 IN CN_OBJECT 3/7/94
0! MOVED UP FOR ECITIES.
0! MOVED UP.
0! MOVED UP. 7/22/98. GAT.
0! MOVED WEEKLY HYDRO UP
0! MOVED: 02/08/02.
0! MOVES BACKWARDS FROM THE LAST RESOURCE SERVING NATIVE LOAD.
0! MSG I ASSUME THAT THE T ASSIGNMENT IS AN OLD TRANSFER.
0! MSGMMDB FINACDBT
0! MSGMMDFD FINACDB
0! MSGMMEA FINACEA
0! MSGMMREV
0! MSGMMREV contains a routine with ENTRY statements pretending to be a module.
0! MULTI-CL FILE VARIABLES
0! MULTI-FILE ADDITION 7/27/04 MSG
0! MULTI-FILE VARIABLES
0! MULTI-FILE VARIABLES 4/16/01
0! MULTI-FUEL FILE SECTION
0! MULTIPLE DATA BASES
0! MULTIPLE UNITS WITH SAME ID ASSUMED ADJACENT.
0! MUNICIPAL FINANCIAL PARAMETER FILE DATA
0! MUNICIPAL FINANCIAL PARAMETERS FILE
0! MUST ALSO CONSIDER LOSSES.      
0! MUST CYCLE THROUGH BECAUSE OF MULTIPLE PLANNING AREAS
0! MUST INCREASE INTERNAL TARGET TO MEET LOAD REQUIREMENTS
0! MUST-RUN OPTIONS DEFINES THE DISPATCH ORDER.  NEED A NEW DISPATCH ORDER
0! MaxUperP limits the # of units per plant to (that-1), nPlnt to 32k/(that)
0! Module created to fix circular dependency problem between
0! Module created to replace FAintCom.mon
0! Module was created to avoid a circular reference issue. Name
0! NATIVE ALLOCATED TO RETAIL
0! NATIVE LESS WHOLESALE PURCHASE ALLOCATED TO RETAIL
0! NC ALLOCATION VALUES
0! NC DEFERRED ACCOUNTING
0! NC FUEL CALCULATIONS
0! NDIM DETAILED REPORTS. 12/2/93.
0! NEED A BETTER CALCULATION OF GIBSON CAPACITY WHEN 100% OUT ON MAINTENANCE
0! NEED A TRANSLATION/MAPPING OF DATA BASES TO OUTAGES
0! NEED A TRAP FOR HOURLY INTERRUPTIBLE
0! NEED A TRAP FOR HOURLY LFRUPTIBLE
0! NEED AN INDEX?
0! NEED BIDS FOR RESOURCES BY MWH NOT KW*YR
0! NEED CAPACITY, FUEL COST AT MINIMUM LOAD AND TOTAL SERVICE HOURS
0! NEED CARRY-FORWARD BALANCE
0! NEED COMPLETE REWRITE.
0! NEED EXIT ROUTINE
0! NEED INDEX HERE
0! NEED MONOTONIC X                  
0! NEED PEAKS FOR CAPACITY PLANNING
0! NEED SEPARATE STREAM FOR BUYS AND SELLS
0! NEED TO 'POKE' A NEW CAPACITY
0! NEED TO ACCOUNT FOR MULTIPLE MARKETS CONTRIBUTING TO THE REC PRICE
0! NEED TO BE CAREFUL ABOUT PASSING MARKET_PRICE INTO THIS DATABASE
0! NEED TO CALCULATE TOTAL AVERAGE COST
0! NEED TO CHANGE THE INDEX FROM TG TO HG DUE TO HYDRO AGGREGATION
0! NEED TO CHANGE THE ORDER FOR MAX
0! NEED TO CHECK THE NET LINE LOADING (E.G. LAST_TIE,CURRENT_TIE)
0! NEED TO CHECK WHETHER CLASS EXISTS
0! NEED TO CONSIDER POINTER ON CONGESTION_COST 
0! NEED TO CONSIDER POINTER ON LOSSES            
0! NEED TO CONSIDER POINTER ON QUANTS            
0! NEED TO CONSIDER POINTER ON RATES            
0! NEED TO CONSIDER RESERVE DIRECTION CONGESTION COST.
0! NEED TO CYCLE AROUND TG
0! NEED TO DETERMINE THE MOST BINDING CONSTRAINT:
0! NEED TO DO UNSERVED CALC               
0! NEED TO ESTABLISH THE REGIONS AND THE REGIONAL DEMANDS
0! NEED TO EXPLICITLY CONSIDER THE NO CONGESTION INVERVAL.
0! NEED TO GET HOURLY LOAD AFTER HYDRO.
0! NEED TO HOOK INTO THE TRANSACT OUTAGE FILE AND GET OUTAGES
0! NEED TO INCLUDE INTERRUPTIBLE AS PART OF THE REPORT.            
0! NEED TO INITIALIZE THE FORECAST PEAKS AND DSM PROGRAMS
0! NEED TO LIMIT UNIT CAPACITY IF ON A TIE
0! NEED TO LOAD THE FUEL BALANCES
0! NEED TO PRE-LOAD MUST-RUN CAPACITY HERE (TWO KINDS).  THEN, CYCLE
0! NEED TO PULL REVENUES FROM TRANSACT INTO THIS REPORT
0! NEED TO RE-INDEX A_ID AND B_ID BY THE COAL NODE POSITION.
0! NEED TO RE-INDEX A_ID AND B_ID BY THE GAS NODE POSITION.
0! NEED TO RECOMPUTE THE COST CURVES ABOVE.
0! NEED TO REDO REPORTING, PARTICULARLY OF THERMAL UNITS, MONTHLY SUMMARY REPORT, ETC.
0! NEED TO REGISTER FIRST OUTAGE STATE. POSSIBLY MORE THAN TWO PER DAY
0! NEED TO RESET THE OUTPUT POINTER BECAUSE THE PLAN DIDN'T
0! NEED TO REWRITE TO ALIGN THE LENGTH OF THE RPT.
0! NEED TO SAVE PRICE INFORMATION
0! NEED TO SET THE CAPACITY BY YEAR
0! NEED TO SET THE OBJECTIVE FUNCTION ACCUMULATOR TO ZERO
0! NEED TO TAKE NEXT_DAY_OPTIONALITY OUT OF POS_CONSEC AND INTO MORNING_CONSEC
0! NEED TO TEST FOR:
0! NEED TO TRAP ON THE FREQUENCY.
0! NEED TO USE NEW SWITCHES TO ALLOCATE LOAD
0! NEED TO VERIFY THIS
0! NEEDS TO BE MOVED UP.
0! NEGATIVE = INJECTION, POSITIVE = WITHDRAWAL
0! NET MARGINS, THE MARKET PRICE SHOULD BE THE PRICE OF THE LAST TRANSACTION 
0! NET OUT THE REVERSE TRANSACTION, IF ONE.
0! NET THE LINE LOADING (E.G. THIS SELL FREES-UP A BUY IN PREVIOUS DIRECTION)
0! NET THE RETAIL PORTION OUT IMMEDIATELY
0! NEVER SELL (CHEAPER THAN THE MARKET, USE IT TO MEET NATIVE LOAD.
0! NEW CLM_OBJT AVAILABILITY REPORT
0! NEW DEFINITION 5/23/00.
0! NEW EXPORT CONSTRAINT LOGIC
0! NEW IMPORT CONSTRAINT LOGIC
0! NEW MARKET PRICE
0! NEW PLANT FINANCIAL DATA
0! NEW PLANT PRODUCTION DATA
0! NEW TOTAL ITEMS NOT AFFECTING CASH/TOTAL FUNDS PROVIDED BY OPERATIONS,V113
0! NEW VARIABLES ADDED BY M.S.G. JULY 29, 1993 -
0! NEW VARIABLES ADDED BY M.S.G. JULY 29, 1993 - 
0! NEW VARIABLES FOR TRACKING INPUTS TO OUTPUTS. MSG 3/29/00
0! NEW_MARKET_PRICE OVERLAY ! 6/29/99. GAT.
0! NEW_POINT
0! NEXT
0! NEXT, ASSUME ALL RESOURCES ARE ANNUAL CALL OPTIONS WHERE THE VARIABLE
0! NO CALCULATION IS NECESSARY STORE THE NEW SPLIT
0! NO CONTINGENCY LOGIC
0! NO HEAT FOR HYDRO. NET OUT STORAGE PER JONES.
0! NO SPIN YET ASSIGNED TO UNIT IN THIS HOUR.
0! NO TRANSFER            
0! NO, FIXED BLEND, MODEL DETERMINED IF ONLY ONE FUEL ELSE USER OPTION
0! NODE ID NUMBER
0! NON-ECONOMIC START-UP'S FROM THE PREVIOUS DAY.
0! NON-FUEL REPORT VARAIBLES
0! NON-FUEL VALUES
0! NON-FUEL VARIABLES
0! NON-UTILITY COST ITEMS
0! NON_FUEL ADJ
0! NON_FUEL SECTION
0! NORTHEAST: 
0! NOT A VALID INDEX.                  
0! NOT COLLECTED FOR PRICE DRIVER
0! NOT DETERMINE THE STATUS OF STILL COMMITTED UNITS
0! NOT FATAL FOR SRP. 11/25/98. GAT.
0! NOT FOUND IN ANY ROUTINE
0! NOT SURE WHY R_INCREMENTAL_CAPACITY = 0. AT THE TOP, BUT
0! NOT THE BEST TRAP      
0! NOTE 9/6/01 YES_HYDRO_HOURLY_REPORTS IS NOT DEFINED
0! NOTE AN INFINITE LOOP HAPPENS IF A GOOD END POINT IS NOT FOUND
0! NOTE CHANGE IN DATA_BASIS FOR ALLOCATE VS CINITW
0! NOTE DOUBLE INDEX
0! NOTE DOUBLE INDEX ON TG TO SAVE SPACE
0! NOTE EXTENSIONS BCD USED IN CLASS_FINANCE_DETAIL_RPT
0! NOTE OTNINC IS NET OF BLT_EXPENSES
0! NOTE PRICE_POINTS NOT PRICE_POINTS_2
0! NOTE REASSIGNMENT OF HOURLY_LOAD_B4_SALES AND READ ACROSS 24 HOURS ! 080101
0! NOTE REFORMATTING FOR THE BINARY FILE.
0! NOTE SPECIAL R*4 TO GET HIGHER PRECISION ON THE TRANSFORM.               
0! NOTE THAT FILE NUMBER 7 IS USED FOR EXPENSE AND REVENUE NAMES BUT IS NOT "OVERLAYABLE" 11/27/01 MSG
0! NOTE THAT SUB TOTAL POINTS ARE AT 10, 20, 30, 40, 55, 65, 75, 90, 97 AND 104
0! NOTE THAT SUB TOTAL POINTS ARE AT 10, 20, 30, 40, 55, 65, 75, 90, 97,
0! NOTE THAT THIS IGNORES FORWARD SALES
0! NOTE THE INDEX DOES NOT CHANGE.
0! NOTE THIS MUST BE BEFORE THE CL_MAKEBIN ROUTINE
0! NOTE:
0! NOTE:  THE EVENTS CALENDAR CAN BE VERY GENERAL: IT CAN HAVE AN
0! NOTE: 1 == PRODUCTION FROM RESOURCE TO MEET NATIVE LOAD
0! NOTE: 7 ADDITIONAL PASS THROUGH VARIABLE WHERE ADDED FOR TVA 10/6/93
0! NOTE: >= 3 FOR TVA. 3/29/02.
0! NOTE: >= 3 FOR TVA. PREVIOUSLY == 3 3/29/02.
0! NOTE: ANNUAL_SUPPLY_PRICE(0) IS NOT USED BEYOND THIS POINT
0! NOTE: CAN ADD OTHER COST COMPONENTS HERE: SCARCITY OR OPERATION RELATIVE TO OIL
0! NOTE: COSTS ARE ACCUMULATED (OPERATING + CAPACITY)
0! NOTE: DIMENSION REASSIGNMENT.
0! NOTE: DOUBLE INDEX
0! NOTE: DOUBLE LOCAL INDEX              
0! NOTE: EXTENSION .XG AND UNIT 1337 ARE USED IN GRXModules BY MSG
0! NOTE: EXTENSION .XH AND UNIT 1338 ARE USED IN GRXModules BY MSG
0! NOTE: EXTENSION .XI AND UNIT 1339 ARE USED IN GRXModules BY MSG
0! NOTE: FIRST ITERATION USES THE DSF AS THE FILE NAME               
0! NOTE: IN COAL LP THE FOLLOWING EXTENSIONS AND UNIT NUMBERS ARE USED BY MSG
0! NOTE: INDEX ON CS
0! NOTE: INDEX ON GS
0! NOTE: K IS RECORD COUNTER (INCLUDING INDEX), YR IS YEAR COUNTER               
0! NOTE: REASSIGNMENT OF GENERATION_BY_SEGMENT
0! NOTE: REDEFINE STATE_RPS_EXEMPTION
0! NOTE: RELIES ON LAST_BLOCK AND TEMP_GEN FROM ABOVE
0! NOTE: REUSING MONTHLY_PA_LOADS TO BUILD TO FORECASTED VALUES
0! NOTE: THE SIMPLE SUM OF FIRST AND SECOND PRICE. 1/5/2.
0! NOTE: THIS IS A DELIVER PRICE INCLUDING WHEELING CHARGE AND PRICE DELTA
0! NOTE: TO REDUCE ARRAY SIZES, ALLOWANCE FOR ONLY 3 CUSTMOMER CLASSES
0! NOTE: TWO POINTS ALONG THE CONGESTION COST CURVE.
0! NOTE: UNIT NUMBER 7337 USED IN CLASS_FINANCE_DETAIL_RPT
0! NOTE: UNIT NUMBERS 2100-2199 RESERVED FOR TRANSACT LOAD FILES.
0! NOTE: UNIT NUMBERS 2200-2299 RESERVED FOR SCENARIO HOURLY FILES.
0! NOTE: UNIT NUMBERS 5286-5289 ARE USED FOR WVPA REPORTS
0! NOTE: WHEN ENERGY COMES OUT OF CALHEAT THE VALUES HAVE BEEN MULTIPILED
0! NOTE: to restart itereation with the same gas prices replace the above
0! NOTE: version 1.0 of banking dated 12/11/09 does not check for max and min credit market limits on bank purchases
0! NOTES ON INTERFACE WITH MIDAS:
0! NOTICE ADDED TO EVENT CALENDAR LOCALLY.
0! NOW CALL SUBROUTINE TO FORECAST DAY TYPES
0! NOW COMES IN AS CM (CAPACITY MARKET)
0! NOW LOOPS ON CM NOT PA
0! NOW READ IN RUNNING RATE FORECASTS
0! NOW WE HAVE ENOUGH INFORMATION TO CALCULATE REVENUE PER UNIT PER
0! NPV(2) -
0! NUCLEAR FUEL FILE
0! NUMBER OF SCENARIO VARIABLES 
0! NUM_FUEL_CATEGORIES   1 = COAL
0! NUM_FUEL_CATEGORIES:   1 = COAL
0! NUNITS above needed only for properly dimensioning MAINT_INDEX_MONTHLY_MW;
0! Newton's Method (said by authors to converge 'quadratically' fast on a
0! NodeProb(0)=Prob(outage=0)=p1*p2=0.9*0.7=0.63
0! NodeProb(1)=Prob(outage=1)=q1*p2=0.1*0.7=0.07
0! NodeProb(2)=Prob(outage=2)=p1*q2=0.9*0.3=0.27
0! NodeProb(3)=Prob(outage=3)=q1*q2=0.1*0.3=0.03
0! NodeProb(x) after block#1 of capacity=1 with q1=0.1 and
0! NodeProb(x) is the probability of capacity outage equal to x, i.e.,
0! NodeProb(x)=Prob(capacity outage=x), whence e.g.,
0! OF DSM BY OPERATING METHOD, AND THE PEAK PLANNING CAPACITY.
0! OF KEPCO. MSG
0! OF THE TWO LINES. THE TWO LINES HAVE COMMON MINIMUM AND MAXIMUM PRICES
0! OFF-PEAK INHERITS PEAK VALUES
0! OIL_HOUR_MULT
0! OLD COMMON EQUITY NOW SHAREHOLDER'S EQUITY
0! OLD CURRENT ASSETS
0! OLD INCOME BEFORE INTEREST,V54
0! OLD INCOME BEFORE INTEREST/NEW EARNINGS FROM OPERATIONS PLUS AFUDC
0! OLD INDEX                  
0! OLD LIABS NEC NOW CURRENT LIABILITIES
0! OLD MAKEBIN3 SECTION
0! OLD OPERATING INCOME/NEW EARNINGS FROM OPERATIONS
0! OLD OTHER LT LIABS NOW TOTAL DEFERRED CREDITS
0! OLD TOTAL OPERATING EXPENSES/NEW TOTAL EXPENSES
0! OLD VARIABLES
0! ON 12/27/06 THIS CODE WAS MODIFIED SO THAT TWO-DIGIT YEAR VALUES
0! ON THE SYSTEM IN A PARTICULAR HOUR.
0! ON-PEAK/OFF PEAK HOURS
0! ONE, THREE, SEVEN DAY LOGIC
0! ONLY ACTIVE FOR 7x24 AND FULL OUTAGES
0! ONLY ACTIVE IN TRANSACT C.
0! ONLY CALLED ONCE FOR RETIREMENT LOGIC.
0! ONLY CL AND EL NEED FINANCIAL RECORDS CT AND DSM ARE SELF CONTAINED
0! ONLY HANDLES PURCHASE/CALL AND SELL/PUT COMBINATIONS.
0! ONLY THE VALUE OF THE FIRST RECORD WAS RETAINED.
0! ONLY THREE OPTIONS                  
0! ONLY TRACKING BURN AT THIS TIME.
0! ONLY WORKS FOR 7X24
0! ONTARIO: 
0! OPEN AND READ DSS FILES FILE
0! OPEN ASCII REPORTS FILES
0! OPEN BIFP OUTPUT FILE
0! OPEN LOAD PROB FILE
0! OPEN OVERLAY FILE AND READ METAFILE HEADER RECORD
0! OPEN OVERLAY INPUT FILE
0! OPEN REPORT HEADERS
0! OPEN RESULT FILE AND WRITE HEADER DATA
0! OPEN THE ECONOMY INTERCHANGE DATA FILE
0! OPEN THE ESCALATION RATE DATA FILE
0! OPEN THE MONTHLY OUTPUT REPORT
0! OPEN THE RESOURCE OPTIONS FILE
0! OPEN THE RESOURCE TESTED FILE
0! OPEN THE SYSTEM FORECAST DATA FILE
0! OPEN THE THREE DRILLING FILES
0! OPEN UP THE ASSET VECTOR FILE ONCE FOR EACH ENDPOINT AND CLOSE IT AT
0! OPEN WARNING MESSAGE FILE AND CLEAR BEFORE CHECKING DISK SPACE
0! OPENS GROUP MAINTENANCE HEADER
0! OPERATE ON HYDRO FOR EACH LDC
0! OPERATIONS FILE
0! OPTION FOR CAPACITY FACTORS FROM 0% TO 100%.
0! ORIGINAL CONDITION
0! ORIGINAL ID.
0! ORIGINAL PATHS SET.  THEN, ADD THE APPROPRIATE SUPPLY COST AT THE ROOT OF THE
0! OTHER CRITERIA
0! OTHER RESOURCE CONSIDERATIONS.
0! OTHERWISE ZERO UNTIL THE FIRST INTERVAL.
0! OUT 11/3/99. GAT.
0! OUT 7/30/01 FOR MONTHLY MIDAS
0! OUT 7/31/98. GAT. PER STEININGER. SEE REAENRG.FOR
0! OUT TEMP.
0! OUTAGE AND DETAILED FOR/MOR CALC'S
0! OUTAGES (AND OTHER MONTHLY CHARACTERISTICS, WILL BE BASED UPON AN
0! OUTAGES ADDED 5/22/99. GAT.
0! OUTAGE_BLOCK IN HOURLY_OUTAGE_STATE SHOULD CORRESPOND TO
0! OUTPUT
0! OUTPUT MUST INNCLUDE ADJUSTING THE LOAD CURVE AND ASSIGNING
0! OUTPUT REPORTS
0! OUTSIDE THE PERIOD
0! OVERHEAD FOR DEPTH OF MARKET REPORT
0! OVERHEAD TIME
0! OVERLAY THE (FOSSIL-FUELED) CAPACITY-LIMITED-UNITS FILE
0! OVERLAY THE CATAWBA CONTRACT FILE
0! OVERLAY THE CO2_PARAM FILE
0! OVERLAY THE CONSTRAINT FILE
0! OVERLAY THE CONTROL-AREA ALLOCATORS FILE
0! OVERLAY THE COST ALLOCATION FILE
0! OVERLAY THE DAY TYPE FILE
0! OVERLAY THE EMISSIONS-RATES-BY-FUEL FILE
0! OVERLAY THE ENERGY-LIMITED RESOURCE FILE
0! OVERLAY THE EXPANSION-CANDIDATE FILE
0! OVERLAY THE FINANCIAL PARAMETER FILE
0! OVERLAY THE FINANCIAL-PARAMETERS FILE
0! OVERLAY THE OUTAGE FILE
0! OVERLAY THE PATH FILE
0! OVERLAY THE PRICE ELASTICITY FILE
0! OVERLAY THE RPS_PROGRAM FILE
0! OVERLAY THE SCENARIO_HOURLY FILE
0! OVERLAY THE SERVICE-TRANSACTIONS FILE
0! OVERLAY THE TARGET CAPACITY-ICAP FILE
0! OVERLAY THE TARGET CAPACITY-RATIOS FILE
0! OVERLAY THE TIE FILE
0! OVERLAY THE TRAN_EXP FILE
0! OVERWRITTEN BELOW.  CALCULATED IN PA_... ROUTINE
0! PA REPORTING
0! PALO ALTO 2 TIER
0! PALO ALTO 2 TIER VARIABLES
0! PALO ALTO ITEMS
0! PARAMETER SECTION
0! PARAMETERS
0! PARTIAL BLOCK SERVES EXTERNAL MARKET
0! PARTIAL BLOCK SERVES NATIVE LOAD
0! PASS ENERGY TO CL UNIT AT ZERO COST
0! PASS SUPPLY SOLUTION TO THE SUPPLY CURVES FOR NEXT MONTH
0! PASS THE FIRST BLOCK
0! PASSED ALL CRITICAL TEST EXCEPT DISC SPACE
0! PASSED ALL TESTS.  ADD THE UNIT
0! PATH CAPACITY ADDED. 06/29/01.
0! PC THAT IS BINDING AND THEN MOVE IT UP THE STACK TO THE NEXT LOCATION AND
0! PEAK ADDED 11/30/99.
0! PER KJ.
0! PER MCKEE
0! PER MCKEE: NET ENERGY OF DERIVATIVES TO ZERO.
0! PER SCOTT JONES COMPANY.TXT 9/5/97. GAT.
0! PERFORM MONTHLY COST CALCULATIONS. MAINTAIN BASIN IDENTITIES. 
0! PERFORMS COMMITMENT LOGIC FOR ALL UNITS IN A TRANSACTION GROUP.
0! PERHAPS HIGHEST PRICE AND ALL HOUR AVERAGE
0! PICADISP
0! PLACE THE TEMP_GS ARRAYS INTO 25 POINT CURVES.
0! PLANNING RESERVE MARGIN
0! PLANNING SWITCH INFORMATION
0! PLANT & EQUITPMENT LESS CIAC
0! PLANT_DEMAND_READ_DATA
0! PLOT FOR BASE YEAR TYPICAL DAYS AND FORECAST TYPICAL DAYS
0! PLUS RESERVE MARGIN NEEDS
0! PLUS THE SLOPE (FUEL + VOM) AT EACH CAPACITY FACTOR POINT.
0! POINTERS, DAILY SPIN
0! POSITION IN DISPATCH OF CHEAPER SYSTEM
0! POSITIVE IS SELL, NEGATIVE IS BUY
0! POSITIVE IS WITHDRAWAL. NEGATIVE IS INJECTION.            
0! POSSIBLE RETIREMENT CRITERIA:
0! POSSIBLY REDUCES GENERATION
0! POS_PERCENT = 1 APPLIES ALL WEIGHT TO THE TOP INTERVAL
0! PRB FILE DIRECTORY SET-UP
0! PRE-5/13
0! PRE-WEEKLY HYDRO LOADS
0! PREFERRED STOCK NET OF RETIREMENTS
0! PRICE ABOVE NATIVE LOAD AT WHOLESALE, NATIVE LOAD AT RETAIL (PURCHASE_EXPENSE?)
0! PRICE AND ELASTICITY FILE
0! PRICE ANY PURCHASE AT THE MARKET PRICE.
0! PRICE ANY SALE AT THE MARKET PRICE. CALL ALL SALES WHOLESALE.
0! PRICE FILE DECLARATIONS
0! PRICE NODES
0! PRIMARY
0! PRIMARY AND SECONDARY DELIVERY COSTS ADDED 08/30/02.
0! PRIMARY DELIVERY CALC
0! PROBLEM(?)
0! PROBLEM.
0! PROBLEM: THERE ARE MANY C FOR A GIVEN PC
0! PROBLEM: THERE ARE MANY C'S FOR A GIVEN PC 
0! PROCESS AND ADJUST THE READ INFORMATION
0! PROCESS DIMENTION 1-ENDPOINTS
0! PROCESS FIRST BLOCKS
0! PROCESS REMAINING DIMENTIONS
0! PROCESS SECOND BLOCKS IF THERE ARE ANY
0! PROCESS SECOND DIMENSION
0! PROCESS THIRD DIMENSION
0! PRODUCTION ITEMS
0! PRODUCTION OUTPUT
0! PROFIT MAXIMIZING
0! PROPERLY INITIALIZED.
0! PSCR
0! PSCR RATES
0! PSCUM(2)
0! PULLED IN FROM DR_BOOTH
0! PURCHASE POWER - WORKS. NO NEED FOR MODIFICATION.
0! PURPOSE:
0! PUT A DAILY LIMIT ON R_NODE_LIM USING link attached to the supply node
0! PUT BACK IN ON 10/03/03
0! PUT EL_SO2_ANNUAL TO TONS OR METRIC TONS
0! PUT STOP EVENTS BEFORE START EVENTS IN EACH HOUR
0! Pablo Bilbao
0! Preferred Dividends,V62
0! Primary_mover_index_db routine moved to prim_mover_idx module.c-----
0! Property Tax,V394
0! Provincial Capital Tax,V329
0! Putting shared variables in this module because compiler errors were encountered
0! QUANTITY TRANSPORTED IS NOW THE AMOUNT AFTER NETTING THE REVERSE TRANSACTION
0! QUEBEC: 
0! RAMP RATE VARIABLES
0! RATCHET BASIS ADDED 6/16/92
0! RATE BASE ITEMS
0! RATES
0! RATIOS FUNCTIONS
0! RBC DATA BASE PARAMETERS
0! RBC VARIABLES
0! RDI BASE CASE
0! RDI BASECASE OVERLAY
0! RDI DATA
0! RDI DATA BASE PARAMETERS
0! RDI POWERDAT
0! RDI POWERDAT OVERLAY
0! RDI VARIABLES
0! RE-INITIALIZED. 8/24/00. GAT.
0! READ BASIN INPUT
0! READ COAL CONTRACTS  INPUT
0! READ COAL SUPPLY  INPUT
0! READ COAL TRANSPORTTION LINKS INPUT
0! READ MONTHLY MARKET PRICE FILE LDE<5 CHAR>.BXY WHERE XY = 01, 02, 03 FOR EACH YEAR.
0! READ ONCE TO SEE IF ITS A LEAP YEAR
0! READ PLANNED MAINTENANCE RATES
0! READ PLANT DEMAND INPUT
0! READ RETROFIT FILE
0! READ SALES FILE
0! READ THE CORRESPONDING EXPANSION PLANT RECORDS
0! READ THE ENVIRONMENTAL FILE
0! READ THE INFORMATION TO
0! READ THE NEXT BINARY RECORD           
0! READ THE PRB
0! READS ALL THE COAL DATA
0! READS INTO CORE THE CONTENTS OF THE LOAD MANAGEMENT DEVICES
0! REAENRG
0! REAL SECTION
0! REAL*4
0! REAL*8
0! REARNC(2) +
0! REASON 5 IS MOVE ALL UNITS WITH LAMDAS GE 32000 TO THE BOTTOM OF THE
0! REASSIGN OUTAGE_CAPACITY TO ACCOUNT FOR MUST TAKE =>
0! REASSIGNED ON 02/10/03.                    
0! RECALCULATE
0! RECALCULATE DAILY GROSS BY STRATEGY
0! RECALCULATED PRICES ARE TO THE PRICES ESTIMATED BY THE INTERSECTED LINES.
0! RECHECK WHETHER WE WILL STILL BE ABLE TO MEET INTERNAL OBLIGATIONS.
0! RECORD LENGTH = 64 + 4 X 92 + 99 = 531
0! RECORD TRANSACTION AND TRY TO RESET THE LOOP
0! RECOVERY MEMORY AT END OF ENDPOINT 7/24/00 MSG
0! RECURSIVE ROUTINE TO REDUCE THE QUANTITY ALONG EACH PATH.
0! REFERENCE LOAD
0! REFERENCE LOAD OVERLAY ! 1/16/98. GAT.
0! REFERENCED UNIT AND A DEPENDENT UNIT CANNOT COME ON LINE IN THE SAME
0! REFORMATTING PROGRAM BUYS ME: MIDAS DATA EDITOR, STANDARD FORMATTING ON READ
0! REGIONAL ANALYSIS TRANSACTIONS VARIABLES
0! REGIONAL OUTAGE PARAMETER
0! REGIONAL OUTAGES
0! REGIONAL OUTAGES ADDED 10/18/01.
0! REGIONAL OUTAGES OVERLAY ! 10/10/01. GAT.
0! REGIONAL PARAMETER
0! REGIONAL PARAMETER OVERLAY ! 05/13/02. TMS.
0! REG_OUT_PARAM OVERLAY ! 06/12/03. GAT.
0! RELY ON BOTH THE RESERVE AND THE EXTRACTION RATE.
0! REMEMBERS PREVIOUS DEPTHS
0! REMOVE AS A SELLER IF IT SELLS ALL GENERATION.
0! REMOVE MONTHLY BECAUSE PLANNING ROUTINE.
0! REMOVED 6/10/92 COST(1) EXCLUDES COST(2)
0! REMOVED 7/6/00 PER SRP.
0! REMOVED CAPACITY_OPTIONS_ALLOC_VARS AND 
0! REMOVED FOR COAL MODEL
0! REMOVED FOR GAS MODEL
0! REPLACE CPL LOAD CURVE WITH TRANSFORMED LOAD CURVE
0! REPLACE THE CMORE WITH BELOW 9/6/01
0! REPLACED WITH THE STATEMENT BELOW FOR HOOSIER 12/21/95
0! REPORT
0! REPORT COST VALUES
0! REPORT DESCRIPTION AND COLUMN HEADINGS
0! REPORT RPS SUPPLY CURVES
0! REPORT THIS MARKET???
0! REPORTING
0! REPORTS FILES
0! REQUIRED BUFFER ARRAYS
0! REQUIRED BUFFERS
0! RESERVE BALANCES
0! RESERVE MARGIN CAPACITY SALES AND PURCHASES
0! RESERVE MARGIN COSTS
0! RESERVE MARGIN LEVELIZING COST VARIABLES
0! RESERVE TESTS
0! RESET PRODUCTION FOR CONSTRAINTS. 4/25/99. GAT.
0! RESET S TO ONE VALUE (CURRENT S)
0! RESET SOLUTION.
0! RESET THE VALUE IBK2 TO THE FIRST SECOND BLOCK THAT HASN'T BEEN DISPATCHED
0! RESET, JUST IN CASE.
0! RESETS THE INDEX                  
0! RESOURCE FAILS DAILY TEST. BRING OFF-LINE AT BEGINNING OF DAY.
0! RESOURCE HAS HIGH START-UP COSTS.
0! RESOURCE HAS LOW (OR NO) START-UP COST.
0! RESOURCES COMMITTED AT THIS POINT.
0! RESOURCE_RPS_VARS ADDS TO PREVIOUS VALUE. NEEDS TO BE
0! RESTICT THE "FROM" NODE J TO ONLY THE FIRST OCCURANCE THAT CONNECTS TO
0! RESTORE SORTED_OPTIONS BACK TO POSITION AND INSTANCE
0! RESTRICT HOURLY UTILIZATION TO THE HOUR THAT INVENTORY IS EXHAUSTED
0! RESULT VARIABLES FOR RISK ANALYSIS
0! RES_ENERGY. GAT. 3/3/99.
0! RETAIL DEMAND
0! RETAIL DEMAND: GENERATION - LOSSES
0! RETIRE CURRENT CAPACITY
0! RETIREMENT AND RETROFIT
0! RETROFIT REQUIREMENTS
0! REUSE FEB 28 
0! REV = 1, EXP = 2
0! REV PASSED FROM TRANSACT IS BASED UPON A TOTAL REVENUE AT MARKET PRICE
0! REVENUE
0! REVENUE AND COST ARE FROM THE PERSPECTIVE OF BUYING A PRODUCT
0! REVENUE CALCULATIONS
0! REVENUE FORECASTS CALCULATION
0! REVENUE SECTION
0! REVENUES
0! REVENUES BY CUSTOMER CLASS, ASSET CLASS, ETC.  
0! REWRITTEN. 7/31/96. GAT.
0! ROOT IS IDENTIFIED FIRST
0! ROOT OF NODE.                     
0! ROUTINE ALLOCATES RESOURCES TO LOADS
0! ROUTINE CALCULATES GENERATION, WHOLESALE, AND UPDATES CURVES
0! ROUTINE TO ALLOCATE AND SAVE MONTHY CLASS FORECAST INFORMATION ONLY
0! ROUTINE TO ALLOCATE DSM EXPENSE AND REVENUES TO ASSET CLASSES
0! ROUTINE WILL THE MESSAGES IN IT 
0! ROUTINE:          **** C O N V O L ****
0! ROUTINUE PERMITS LOOPING WITH PARTIAL UNIT STATES
0! RPS
0! RPS REQUIREMENTS
0! RPS REQUIREMENTS OVERLAY ! 042209
0! RPS STATE DEMAND
0! RPS STATE DEMAND OVERLAY ! 042709
0! RPS_PROGRAM OVERLAY ! 110218
0! RUN TIME IN THESE LOOPS BECAUSE THERE ARE ONLY A FEW ACTIVE COST VECTORS
0! R_ANNUAL_VARIABLE_COST = HYBRID LOST REVENUES
0! R_COAL_GROUP IS THE POSITION WITHIN THE ACTIVE LINK LIST.
0! R_GAS_GROUP IS THE POSITION WITHIN THE ACTIVE LINK LIST.
0! R_MONTH = 0 => ANNUAL
0! R_NODE IS GS THE COAL NODE INDEX
0! R_NODE IS GS THE GAS NODE INDEX
0! R_POINTS DOES NOT INCLUDE THIS INTERVAL.
0! R_QUANTITY = GENERATION USED - NATIVE DEMAND
0! R_TG COMES IN INDEXED TO TRANS_GROUPS. MUST RE-INDEX TO TRANSACTION LOADS. 
0! R_UNIT_CAPACITY = CAPACITY OF THE CURRENT UNIT BLOCK
0! R_UNIT_PRICE = MARGINAL COST OF THE CURRENT UNIT BLOCK
0! Regional CM Name initialized to "AREA"
0! Regs(1)=Z'0100' ! video BIOS function to set cursor size
0! Regs(1)=Z'0200' ! BIOS function used to read the kbd flags
0! Regs(1)=Z'0300' ! video BIOS function to get cursor position & size
0! Regs(1)=Z'0600' ! video BIOS function to scroll/clear a window
0! Regs(1)=Z'0800' ! get character without echo
0! Regs(1)=Z'0b00' ! function used to check kbd status
0! Regs(1)=Z'0c08' ! flush kbd buffer
0! Regs(1)=Z'0f00'
0! Regs(1)=Z'0f00' ! video BIOS function to get current mode
0! Regs(1)=iand(iMode,Z'ff')
0! Regs(2)=0 ! for page 0
0! Regs(2)=AttrByte
0! Regs(3)=(ULRow shl 8).or.ULColumn ! top row of window, leftmost column
0! Regs(3)=(iRow shl 8).or.BegColumn ! top row of window, leftmost column
0! Regs(3)=iRow shl 8 ! top row of window, leftmost column
0! Regs(3)=iand(Regs(3),Z'1fff') ! clear bit 5 of CH to force cursor on
0! Regs(4)=(LRRow shl 8).or.LRColumn ! end row of window, rightmost column
0! Regs(4)=(iRow shl 8).or.79 ! end row of window, rightmost column
0! Regs(4)=(iRow shl 8).or.EndColumn ! end row of window, rightmost column
0! Reserve Done. GAT. 3/15/99.
0! Return length of string if it were to be trimmed.  LAHEY
0! SAL = 1, PUR = 2
0! SALT RIVER PROJECT VARIABLES
0! SAME AS CAPACITY FOR NOW
0! SAME LINK?   
0! SASK: 
0! SAVE ARRAY 8/15/01
0! SAVE ARRAY 8/15/01 MSG
0! SAVE STORAGE EQUATIONS TO STORAGE AREAS
0! SAVE THE NECESSARY PARAMETERS OF THE CURRENT RESOURCE
0! SAVED IN MONTHLY STUFF
0! SAVED VARAIABLES THAT MAKE THE FUNCTIONS WORK
0! SC ALLOCATION VECTORS
0! SC AND NC FUEL ACCOUNTING
0! SC DEFERRED ACCOUNTING
0! SC FUEL CALCULATIONS
0! SCALE
0! SCENARIO HOURLY
0! SCENARIO MAKER
0! SCENARIO MAKER OVERLAY ! 11/12/98. GAT.
0! SCENARIO_HOURLY OVERLAY ! 11/7/99. GAT.
0! SCREENING REPORT VARIABLES
0! SEARCH ALGORITHM WOULD BE BETTER.
0! SEARCH ARRAY.
0! SEARCH FOR MAXIMUM POSSIBLE TRANSACTION
0! SEARCH FOR THE UNIT THAT FALLS WITHIN THE INTERVAL (K INDEX)
0! SEARCHES FOR THE AMOUNT OF DSM FORECASTED DURING THE PEAK HOUR
0! SECOND ATTEMPT TO ADJUST CAPACITIES FOR TRANSACT OUTAGE FILE
0! SECOND BLOCK TAGGED UNITS WITH AVAILABLE CAPACITY
0! SECOND INDEX: 1 = ENERGY, 2 = PEAK, 3 = CUSTOMERS
0! SECOND PASS READ OF TRANSPORTATION LINKS
0! SECOND-TO-N ITERATION USES THE PREVIOUS ITERATION LNG DELIVERIES
0! SECOND: DETERMINE WHETHER STAYING UP IS MORE PROFITABLE THAN INCURRING A
0! SECONDARY
0! SECONDARY DELIVERY CALC
0! SEEMS TO ALLOW TOO MANY RESOURCES IF = 0.0
0! SELL AND TERMINATE CONDITION
0! SELL CONDITION
0! SELLER SELLS AT SECOND BEST PRICE
0! SELLER SHOULD RECEIVE THE VALUE OF THE BUYER'S AND GLOBAL SCARCITY
0! SELLER TG AND PA CAN'T EXCEED MIN RESERVE MARGIN
0! SELLS ONLY TO NATIVE LOAD.
0! SELL_OR_BUY ALREADY CALCULATED
0! SEND COST INFORMATION FOR USE BY MONTHLY MIDAS
0! SEQUENTIAL FILE WRITTEN IN GRX DOESN'T NEED RE-SIZING
0! SERVE OTHER AREA NATIVE LOAD
0! SERVICAC FILE
0! SERVICE OBLIGATION RESOURCE RATES
0! SERVICE OBLIGATION RESOURCE REVENUES
0! SERVICE OBLIGATION RESOURCES
0! SERVICE TRANSACTION ADDED 10/18/92 MSG
0! SERVICE TRANSACTION VARIABLES
0! SERVICE TRANSACTIONS
0! SERVICE TRANSACTIONS ADDED 10/18/92
0! SERVICE TRANSACTIONS VARIABLES
0! SERVING RETAIL LOAD
0! SET ALL PRICES
0! SET COMMAND LOGIC SWITCHES
0! SET CONTROLS_DEPEND TO FALSE
0! SET CONVERSION FACTORS
0! SET INITIAL DEMANDS
0! SET LEAP YEAR SWITCH
0! SET LP PARAMETERS FOR DEMAND
0! SET LP PARAMETERS FOR SUPPLY
0! SET NUC PLANT COSTS BASED ON NUCLEAR FUEL FILE. 7/19/96
0! SET PROPER ESCALATION VALUES
0! SET SOME PARAMETERS
0! SET THE POINT ON THE COST CURVE
0! SET THE UTILITY ID INFORMATION 10/15/00 MSG
0! SET TO TRUE 6/11/98. GAT.
0! SET TO ZERO PER SKIP'S SPREADSHEET. 3/14/99.
0! SET TRANSPORT SYSTEM
0! SET UP ARRAYS TO CREATE SUPPLY CURVES
0! SET UP ASSET BASED ARRAYS
0! SET VALUES TO ZERO
0! SET-UP ARRAYS FOR INTERVAL REVENUE CALCULATION
0! SET-UP MONTHLY FUEL PRICE FILE FOR THIS END POINT
0! SET-UP SECTION FOR GETTING INFORMATION
0! SETUP THE BINARY FILES
0! SET_EMISSIONS_RATES ALLOCATES ARRAY SIZES BASED ON NUNITS
0! SET_OF_J SET FROM THE PREVIOUS DEPTH
0! SHADOW UNIT WITH FUEL AVAILABLE BY PASS THE UNIT
0! SHB FILE DIRECTORY SET-UP
0! SHELL SORT ADAPTED FROM THE SOURCE ON PAGE 110 OF
0! SHIFT ALL OTHER ELEMENTS DOWNWARD.
0! SHORT FORM ITEMS
0! SHOULD BE A FUNCITON OF THE SIZE OF THE RESOURCE IN THE LOCAL AND REGIONAL MARKETPLACE.
0! SHOULD BE CALLED ONCE PER YEAR
0! SHOULD BE RESET FOR THE FIRST MONTH OF THE SIMULATION AND IN EVERY
0! SHOULD ONLY HAVE PURCHASES ABOVE ECONOMIC RESOURCES LEFT
0! SIMULATION VARIABLES
0! SINCE ONLY THE SECONDARY FUEL IS USED ZERO PRIMARLY AND EMISSIONS FUEL
0! SINCE THIS ROUTINE IS CALLED AFTER THE INIT FILE IS READ THE CATAWBA
0! SINGLE DERIVATIVE ADD.
0! SINGLE FILE FOR NOW      
0! SKIPPED IN THE DISPATCH ORDER
0! SLOPE AND INTERCEPT.     
0! SLOT 5 RESERVED FOR AMEREN 12/11/01
0! SO2 & Scrubber INPUT
0! SO2 Report
0! SO2 markets, limits, prices
0! SOFTWARE TOOLS IN PASCAL, BY KERNIGHAN & PLAUGER, ADDISON-WESLEY 1981
0! SOFTWARE TOOLS IN PASCAL, by Kernighan & Plauger, Addison-Wesley 1981
0! SOLUTION: IF CONGESTION FUNCTION ACTIVE, DYNAMICALLY ADJUST THE 
0! SOLUTION: TEST 
0! SOMEWHAT COMPLEX. REQUIRES FOUR CALL POINTS
0! SONG'S DATA
0! SORT ADDITIONS HIGHEST TO LOWEST
0! SORT COMMITMENT UNITS LOWEST TO HIGHEST
0! SORT CURVES BY ST TECH INCLUDING FOR NA
0! SORT FROM WORST TO BEST RETIREMENT
0! SORT THE TEMP_CS ARRAYS BY COST.  THIS SHOULD BE DONE ON A MONTHLY BASIS
0! SORT THE TEMP_GS ARRAYS BY COST.  THIS SHOULD BE DONE ON A MONTHLY BASIS
0! SORT U INDEX HIGHEST TO LOWEST
0! SORTED COST CURVE IS THE SAME FOR THE ENTIRE MONTH (CURRENT CONFIG)         
0! SORTS ISUP ITEMS INTO INCREASING ORDER BASED ON VALUES IN (1-BASED) ARRAY A;
0! SP CapEx Variables added 11/17/05 MSG
0! SPAN UNITS
0! SPCapEx Additions April 13, 2005.
0! SPCapEx Additions Nov. 2005
0! SPCapEx Variables
0! SPCapEx additions Nov. 2005
0! SPECIAL EXPENSE ITEMS
0! SPINNING CALCULATION
0! SPREADSHEET INTERFACE
0! SP_COAL_MODEL
0! SP_GAS_MODEL
0! ST JOE RATIOS
0! STACK
0! STANDARD CALCULATION OF INTEREST COVERAGE WITH AND WITHOUT AFUDC
0! STANDARD RESULTS MODULE STUFF
0! START
0! START FINANCIAL DRILLING REPORT
0! START OF THE AI ROUTINE.
0! STATE_SURPLUS_VARS 0:6 WHERE ZERO IS TOTAL
0! STEP #1: CALL PS2 W/O ERRORS.
0! STEPPING THROUGH THE INDIVIDUAL COST VECTOR POINTS MSG 10/26/00
0! STILL CHECK FOR LDE IF LDG DOESN'T EXIST               
0! STILL NEED TO PUSH THE VALUES BELOW FOR ALL MINIMUM AND MAXIMUM RM'S.
0! STODIF COMPUTES DSM CONTRIBUTIONS FOR EACH CLASS
0! STOP
0! STORAGE     
0! STORAGE ESTIMATE.
0! STORE AS NEW VARAIBLE. THE MAXIMUM SIZE VARIABLE IS PASSED TO THE 
0! STORE END OF YEAR CARRY OVER
0! STORING START_UP COSTS
0! STRATEGY: THE INCOMING R_UNIT IS MOVING UP THE DISPATCH ORDER.
0! STRIP BASE FAMILY NAME
0! STRIP PROJECT/DSF FILE NAME
0! STRIP THE COMMAND LINE OF THE PROJECT NAME AND BASE FAmILY
0! STUFF 11/11/93
0! STUFF TO GET ASSET VECTOR
0! SUBSEQUENT CALLS IN PRO_COST AFTER YEAR LOOP
0! SUBSTITUTE THE FUEL AND PURCHASE POWER INFORMATION FROM THE EXPENSE FILE
0! SUM EACH CASH VARIABLE TO AN ANNUAL AMOUNT
0! SUM OF NET CASH FROM FINANCING
0! SUM OF PEAKS REPLACED BY MAX OF PEAKS 2/12/11 MSG     
0! SUM THE RESULTS INTO THE DSM FINANCIAL RESULTS ARRAYS AND VALUES
0! SUM TO ANNUAL TOTALS
0! SUMMARY REPORT
0! SUMMARY VARIABLES
0! SUMMARY VARIABLES IN SUMMARY REPORT
0! SUPPLY
0! SUPPLY     
0! SUPPLY > DEMAND => EXPORT     
0! SUPPLY NODES
0! SUPPLY VARIABLES RESET DAILY.
0! SURPLUS CAPACITY VARIABLES
0! SYSTEM CALCULATIONS FOR PURCHASES
0! SYSTEM CO2
0! SYSTEM FORECAST FILE
0! SYSTEM FORECAST IS SUM OF CLASS DATA FILES
0! SYSTEM MISC 26-33 ARE CAPACITY MARKET VARIABLES
0! Second dimension
0! Second element:  Prime Mover
0! Section for new MarketSym transfer
0! See DAILY_OPTION_OBJECT function for possibly-affected code. (That function 
0! Seventh dimension
0! Shell sort adapted from the source on page 110 of
0! Single Coincident Method for NC
0! Single Coincident Method for SC
0! Sixth dimension
0! Sorts indices (IPOS) of NITEMS; adapted from the source on page 110 of
0! Supplemental Done.
0! TAKE ALL CT SERVICES FOR FIRST WRITE
0! TAKE ALL EL SERVICES FOR FIRST WRITE
0! TAKE ALL HOURS
0! TAKE ALL OT SERVICES FOR FIRST WRITE
0! TAKE CONSECUTIVE HOURS UNTIL FIRST NON-ECONOMIC HOUR ENCOUNTERED
0! TAKE CONTRACT ENERGY OUT HERE SO THAT THE BALANCE = 0.
0! TAKE ONLY PROFITABLE HOURS
0! TAKEN-OUT 8/24/00. GAT.
0! TAKEN-OUT PER REQUEST OF DAN EGOLF. 7/31/96.
0! TAKES CARE OF BINARY FILE GOING TO THE NEXT TABLE
0! TAX LOSS FILE
0! TCF TO MCF CONVERSION            
0! TEMP         
0! TEMP CODE. 12/15/98. GAT.
0! TEMP HOME UNTIL ADDED TO FINANCIAL OUTPUT
0! TEMP SETUP BEFORE USING AN INPUT FILE
0! TEMP UNTIL THESE ARE SET TO FUNCTIONS 8/13/93 MSG
0! TEMP. 12/27/01.  NOTE RE-ASSIGNMENT.
0! TEMPORARY
0! TEMPORARY DEMO DATA      
0! TEMPORARY OUT TO CREATE THE MRX PRICE CURVE. 9/14/00. GAT.
0! TEMPORARY. GAT.
0! TEMP_I2 RETURNS THE COAL_NODE_ID(TRANS) FROM THE COAL NODES FILE.    
0! TEMP_I2 RETURNS THE GAS_NODE_ID(TRANS) FROM THE GAS NODES FILE.    
0! TEST
0! TEST 5/13.
0! TEST AHEAD FOR RAMP-UP
0! TEST ALLOWING THE LONG PATH
0! TEST COMMITMENT TO MORE RESOURCES TO MEET LOAD HERE.
0! TEST DAY FOR WEEKEND OR WEEKDAY
0! TEST DISALLOWING THE REDUNDANT PATH
0! TEST ECONOMIC STARTS/RAMPS ...
0! TEST FOR AN OVERLAY
0! TEST FOR GAPS IN EMBEDDED ENERGY CALCULATION
0! TEST FOR MONOTONIC NON-DECREASING.
0! TEST FOR OUTSIDE THE INTERVAL. WOULD I USE THESE IF NEVER FOUND? PROBABLY.
0! TEST FOR SPECIAL CONDITIONS:
0! TEST FOR STORAGE CAP
0! TEST FOR VECTOR
0! TEST INCREASINGLY LARGER AMOUNTS OF TRANSACTION UNTIL
0! TEST INDIVIDUAL PURCHASE CONSTRAINTS
0! TEST POINT FOR MODEL BOMB
0! TEST THE MONTHLY ESCALATION FILE
0! TEST TO SEE WHETHER THE POS_CONSEC_HOURS CAN BE TRIMMED TO INCREASE PROFIT
0! TEST WHETHER TO ADD INCREMENTAL RESOURCE
0! TEST WHOLESALE
0! TEST. 091406.
0! TEST: DEFINE THE UPPER BOUND ON GEN HERE
0! TESTING !!! 12/28/01. GAT.
0! TESTING ALAN'S ANNUAL THERMAL CALL STUFF.
0! TESTING DEPTH OF MARKET. 2/22/01.
0! TESTING FOR TVA W/O THIS CONDITION AND MOVED FROM YES_TRANSACT_HOURLY_REPORTS:
0! TESTING MONTHLY
0! TESTING REPORT FOR DISPATCH ORDER
0! TESTING SPINNING WHEN GENERATION APPROACHES ZERO DUE TO MARKET.
0! TESTING START-UP LOGIC.
0! TESTING THE GRX PLANNING LOOP FOR HOLDING THE CURRENT VALUE OF VARIABLES
0! TESTING. 11/7/99. GAT.
0! TESTING. 7/2/98. GAT.
0! TF_OBJT
0! TG = COMPRESSED TRANSACTION GROUP INDEX
0! TG => HG
0! TG IS POSITION
0! TG IS THE INDEX THAT TRANS_DAILY_LOAD REQUIRES TO INCREMENT DEMAND.
0! THAT RESOURCE MORE CHEAPLY, THEN IT WILL BUY FROM THAT ENTITY.
0! THE "TO" NODE K.
0! THE AMOUNT THAT THE BUYER IS ABLE TO PRODUCE AT THE SELLERS COST SHOULD 
0! THE ASSUMPTION OF LINEARITY MAY BE TESTED BY SEEING HOW CLOSE THE 
0! THE BELOW IF IS COMMENTED OUT ON 1/3/93 AND THE OTHER IF IS RETURNED TO
0! THE BELOW MAY NOT BE NEEDED 11/17/04
0! THE BUY CASE
0! THE CALL TO THE ESCALATION RATE OBJECT ADDED 5/20/93 FOR THE FINANCIAL
0! THE CODE HERE
0! THE CONTRA TRANSACTION OCCURS WITHIN HOURLY_LF_CAPACITY
0! THE CONTRACTS SUBROUTINE IS CALLED.
0! THE CURRENT TYPE IS NOT DEFINED, AND DOES NOT MESS-UP THE
0! THE DEPENDENT UNIT CAN BE AN OPTION. ALSO IT IS ASSUMED THAT A
0! THE DSM FINANCIAL COMPONENT. DONE.
0! THE END OF EACH ENDPOINT 3/28/95
0! THE ENERGY AND CAPACITY OF THE PURCHASE.
0! THE FOLLOWING CLOSES ALL OPEN BINARY FILES.
0! THE FOLLOWING READS THE RESOURCE DATA
0! THE FOLLOWING REPLACES THE CHECK_DISC_SPACE SUBROUTINE
0! THE GET_VAR'S SHOULD ONLY GET CALLED ONCE ABOVE AND PUT INTO ARRAYS.
0! THE GLOBAL CONCEPT OF BLOCK. MAYBE IT MUST BE DIMENSIONED
0! THE HEAT PEAK DAY HEAT SHOULD BE A FUNCTION OF THE SIZE OF THE MONTHLY CF
0! THE INDEX IS A GUESS.
0! THE INDICES IN THESE TWO ROUTINES ARE FOR EXISTING UNITS.
0! THE NEW VALUE IS RETURNED
0! THE ORDER OF THE CLASSES AS IMPLICITLY DEFINED BY THE NAMES IN
0! THE ORDERED PAIR (RIGHT,A) ACTS AS THE STARTING POINT FOR THE
0! THE OVER CAPACITY TABLE
0! THE PRICING MODEL. THIS WILL DRAMATICALLY REDUCE THE SIZE OF THE
0! THE PROMOD REASON FOR FLIPPING A DECREASING INCREMENTAL HEAT RATE
0! THE PURPOSE OF THIS PROGRAM IS TO CACULATE THE ANNUAL COSTS OF EACH
0! THE REQUESTED CHANGE TO THE SIMULATION.
0! THE SELL CASE
0! THE SET OF ALL LINKS TO BE CONSIDERED IS WELL DEFINED BY PC. ASSUME THAT THE
0! THE SHADOW_DISPATCH_ADDER IS USED TO ENSURE THAT THE SHADOW UNIT FOLLOWS
0! THE STORAGE EQUATION WAS GENERATING NEGATIVE DEMAND.                  
0! THE THERMAL_UNIT_LINK(TRANS) INFORMATION.
0! THE TOTAL COST AT EACH CAPACITY FACTOR IS TOTAL FIXED (INTERCEPT)
0! THE TRANSACTION GROUP. ALLOW FOR NEGATIVE VALUES.
0! THE TWO CRITICAL ROUTINES.  THEY ARE HOOKED-UP TO EXISTING UNITS.
0! THE UNIT IS LOADED.
0! THE VALUES FOR A VECTOR ARE RETURN FOR THE AVAILABLE DATA YEARS
0! THEN ADD THE NEW CHARACTERISTICS
0! THEN CALCULATE REGIONAL STORAGE.
0! THEN DO IT.
0! THEN MAKE AN ASSUMPTION OF THE SIZE OF THE SUPPLY AND ELASTICITY OF DEMAND IN THAT HOUR.
0! THERE ARE A NUMBER OF WAYS THAT THE CODE NEEDS TO BE MADE MORE ROBUST:
0! THERE ARE ACTIVE DERIVATIVES IN THE MONTH.
0! THERE ARE NO MARGINS GREATER THAN .1 $/MWH OR NO ADDITIONAL RESOURCES ARE
0! THERMAL RESOURCE LINK
0! THERMAL RETROFIT OVERLAY ! 052609
0! THESE ARE DIMENSIONED M NOT CS.
0! THESE ARE DIMENSIONED M NOT GS.
0! THESE ARE THE MW'S USED FOR OPERATIONS FOR THE REST OF THE YEAR.
0! THESE LOAD CURVES ARE BEFORE THE MONTHLY HYDRO ROUTINES.
0! THESE MAKEBINs AND DYNAMIC VECTOR ALLOCATIONS FOR CP&L MUST BE RUN BEFORE
0! THESE VARIABLES DO NOT SEEM TO BELONG HERE !     
0! THINK THAT THERE ARE TOO MANY 0. MW TRANSACTION.
0! THIRD: IF MORE PROFITABLE, THEN KEEP THE UNIT UP UNTIL THE END OF THE DAY
0! THIS ALLOWS FOR THE POSSIBILITY OF REUSING THE CURRENT PC
0! THIS APPEARS TO GET RID OF LONG PATH                                 
0! THIS ASSUMES THAT R_VALUE HAS BEEN ESCALATED TO THE PREVIOUS YEAR
0! THIS CAN BE MOVED AND BUILD A LIST OF RETIREMENTS TO TEST
0! THIS CODE RESETS THE CURVES FOR THE NEXT OUTAGE CONDITIONS.
0! THIS CREATES A MIDAS DATA READABLE CL FILE
0! THIS DEFINES THE MODEL CREATED LONG PATH     
0! THIS ESTABLISHES A UNIQUE UNIT ID VALUE FOR EACH RUN
0! THIS FIX WILL ALLOW UNITS OF OTHER TYPES TO BE ADDED IF 
0! THIS HARD-WIRES IN WEEKDAYS AS PEAK DAYS
0! THIS HOUR.  IF NOT, THE HOURLY STATE WILL REVERT TO ZERO.
0! THIS INITIALIZES THE OUTAGES TO TRUE FOR THE MONTH
0! THIS IS A 1X1 OPTION
0! THIS IS A 1X24 OPTION
0! THIS IS A FORMATED ASCII FILE
0! THIS IS A FORMATTED ASCII FILE
0! THIS IS A PROBLEM AND SHOULD BE FLAGGED.            
0! THIS IS A VALID PA UNIT
0! THIS IS ACCOMPLISHED BY RECALCULATING THE TOTAL DELIVERED COST OF EACH
0! THIS IS CONSISTENT WITH THE FORWARD SALE.  A SALE INCREASES DEMAND ON THE SYSTEM.
0! THIS IS FROM THE COAL_NODES FILE
0! THIS IS FROM THE GAS_NODES FILE
0! THIS IS ONE WAY TO CHARACTERIZE DEMAND
0! THIS IS TEMPORARY CODE UNTIL THE EXTENSION PERIOD IS > 30
0! THIS IS THE CODE BEFORE MODIFYING TO BE COMPATIBLE WITH LOTUS
0! THIS IS THE DEFAULT CASE               
0! THIS IS THE DEPENDENT VARIABLE            
0! THIS IS THE INDEPENDENT VARIABLE         
0! THIS IS THE MAXIMUM THAT CAN BE:
0! THIS IS THE RECYCLE POINT FOR AUTO_OPTIM OPERATION
0! THIS IS TO ADJUST TO HAVING MULTIPLE ROOTS OF THE TREE
0! THIS IS TO OBTAIN THE NUMBER OF VALID PATHS.
0! THIS IS TO OBTAIN THE SETS OF INITIAL AND TERMINATION NODES
0! THIS IS USED TO EFFICIENTLY GROUP CLASSES INTO TRANSACTION GROUPS, CUSTOMER GROUPS
0! THIS IS WHERE WE NEED TO ADD LOGIC FOR MINIMUM UP TIME.
0! THIS LOOKS WRONG. SHOULD ONLY BE INITIALIZED IN FIRST YEAR?
0! THIS MEANS THAT THE INTERSECTION OCCURS AT A NEGATIVE TRANSACTION VALUE.  
0! THIS MOVES THE ORIGIN BACK TO ZERO.  MUCH MORE CONVENIENT.      
0! THIS NEED TO BE RELAXED IF THE SYSTEMS ARE IN A CONSTRAINED BUY SITUATION
0! THIS NEEDS TO BE AUTOMATED. 3 = UK IN THE EUROPEAN DATABASE
0! THIS NEEDS TO BE IDENTIFIED ABOVE. IT IS WAY TOO BIG.
0! THIS NEEDS TO BE REDEFINED
0! THIS PROGRAM IS COPIED HEAVILY FROM ANNUAL_SCREENING ABOVE.
0! THIS ROUTINE IS NOT CALLED UNLESS THE MARGINAL COST MODULE IS ACTIVE
0! THIS ROUTINE NEEDS TO BE ADDED AFTER PRICES HAVE BEEN CALCULATED
0! THIS SECTION ADDS MW'S OF PLANNING CAPACITY
0! THIS SECTION ADDS MW'S TO THE SYSTEM
0! THIS SECTION CHECKS ALL (8) UNIQUE CASES OF:
0! THIS SECTION ELMINATES STRATEGIES THAT DON'T MEET MIN_UP_TIME REQUIREMENTS
0! THIS SECTION MOVED UP TO ACCOMODATE SPECIAL CONDITIONS.
0! THIS SECTION SEEMS TO DETECT FORCED OUTAGES AND THEN ALTERS THE ALL_HOURS STRATEGY ACCORDINGLY
0! THIS SHOULD BE INTERNALLY CALULATED
0! THIS SHOULD BE MOVED INTO COAL MODEL
0! THIS SHOULD BE MOVED INTO GAS MODEL
0! THIS SHOULD REALLY BE MOVED INTO CAL_AFTER_EL_LOAD.
0! THIS WAS REMOVED 3/12/93 FOR KEPCO IT MAY OR MAY NOT NEED TO BE IN
0! THIS WILL PROBABLY NEED TO BE AN EXTERNALLY DEFINED TABLE.
0! THIS WILL PROVIDE A CONSISTENT BASIS FOR OPERATING ON SUPPLY, DEMAND AND LINKS.
0! THIS WILL WORK ONLY FOR ASSET ANALYST.
0! THIS YEAR'S DATA BECOMES LAST YEAR'S DATA NEXT YEAR. GOT IT?
0! THRESHOLD_CAPACITY LOGIC
0! THRESHOLD_CAPACITY VARIABLES:  
0! THUS, IF A TRANSACTION GROUP HAS LESS CAPACITY THAN RESOURCE, IT WOULD
0! TIE CONSTRAINTS 5/3/93 MSG COPYRIGHT M.S. GERBER & ASSOCIATES, INC
0! TIE VARIABLES
0! TIER Calculatio
0! TIG IS NOT NECESSARY
0! TIME FRAME FOR CALCULATING ECONOMICS
0! TIME LOOPING HERE: SET FOR DAY IN WEEK.
0! TIME ON INDEXING
0! TO ADD VARIABLES TO THE MAKEBIN AND MAKEOVL FUNCTIONS SET LAST_VAR_NUM
0! TO BE USED FOR FORECASTED DAYS REPORTS
0! TO CAPTURE RAMP-UP AND RAMP-DOWN ISSUES
0! TO CHANGE THE PROMOD PROBLEM CAUSED BY INCREMENTAL HEAT RATES GOING
0! TO GENERATE MONTHLY CAPACITIES
0! TO GET THE FIRST RECORD
0! TO PASS TO ASSET ANALYST. MAY WANT TO INDEX TO ASSET CLASS HERE?
0! TO REDUCE ARRAY SIZES, ALL REPORTING WILL BE DONE MONTHLY
0! TO THE LAST NUMBER USED IN THE FINANCIAL PARAMETERS FILE.
0! TO TRAP FOR DOUG'S PROBLEM
0! TODO:  Add qualifying_gen_db, grx_qual_gen_db, save_grx_qual_gen_db
0! TODO:  Determine proper placement of module members.
0! TODO:  EXTRACT_METHOD apply_trans_energy (end)
0! TODO:  Find block close and Fix/remove
0! TODO:  Fix years so that they're handled consistently.
0! TODO:  Get rid of if not needed
0! TODO: Determine whether spreadsheet interface should be removed.
0! TODO: Determine whether three writes to MON_NU_TRANS_UNIT_NO
0! TODO: Determine why I put the following code in and took it back out:
0! TODO: EXTRACT_METHOD HANDLE_ANNUAL_TRANS_REPORT
0! TODO: EXTRACT_METHOD accumulate_production_costs
0! TODO: EXTRACT_METHOD accumulate_production_costs (end)
0! TODO: EXTRACT_METHOD collect_emissions_costs
0! TODO: EXTRACT_METHOD collect_emissions_costs (end)
0! TODO: EXTRACT_METHOD collect_fiscal_data (end)
0! TODO: EXTRACT_METHOD collect_fuel_data
0! TODO: EXTRACT_METHOD collect_group_data
0! TODO: EXTRACT_METHOD collect_nox_data
0! TODO: EXTRACT_METHOD collect_nox_data (end)
0! TODO: EXTRACT_METHOD handle_annual_output_report
0! TODO: EXTRACT_METHOD handle_annual_output_report (end)
0! TODO: EXTRACT_METHOD handle_block_and_summary_report_items
0! TODO: EXTRACT_METHOD handle_block_and_summary_report_items (end)
0! TODO: EXTRACT_METHOD handle_capacity_enrg_and_emissions
0! TODO: EXTRACT_METHOD handle_capacity_enrg_and_emissions (end)
0! TODO: EXTRACT_METHOD handle_complex_inputs (end)
0! TODO: EXTRACT_METHOD handle_contracts
0! TODO: EXTRACT_METHOD handle_contracts (end)
0! TODO: EXTRACT_METHOD handle_fiscal_reporting_for_season
0! TODO: EXTRACT_METHOD handle_for_monthly_trans_heat (end)
0! TODO: EXTRACT_METHOD handle_market_data (end)
0! TODO: EXTRACT_METHOD handle_monthly_pw_report
0! TODO: EXTRACT_METHOD handle_monthly_pw_report (end)
0! TODO: EXTRACT_METHOD handle_monthly_trans_report
0! TODO: EXTRACT_METHOD handle_monthly_trans_report (end)
0! TODO: EXTRACT_METHOD handle_transact_fuel_report
0! TODO: EXTRACT_METHOD handle_transact_fuel_report (end)
0! TODO: EXTRACT_METHOD prepare_annual_output_report
0! TODO: EXTRACT_METHOD prepare_icap_summary_report
0! TODO: EXTRACT_METHOD record_emission_types (end)
0! TODO: EXTRACT_METHOD record_emission_types (failed)
0! TODO: EXTRACT_METHOD set_emission_report_titles
0! TODO: EXTRACT_METHOD set_emission_report_titles (end)
0! TODO: Newgen_capsize
0! TODO: Remove fragment
0! TODO: Remove spaces in variable names.
0! TODO: integration note
0! TOM TO ASSOCIATE VARIABLES HERE (AND IN NEW_CL_UNITS_READ).
0! TOOK OUT 012508.
0! TOOK OUT CONDITIONAL ON 1/13/98. GAT.
0! TOOK OUT JANUARY 13TH 2003. I STILL NEED OUTAGES IF
0! TOTAL
0! TOTAL (WHOLESALE = TOTAL - RETAIL)
0! TOTAL ACROSS CLASSES
0! TOTAL ACROSS CLASSES AND MONTHS
0! TOTAL ACROSS MONTHS
0! TOTAL CASH AND ITEMS NOT AFFECTING CASH/OLD NEG PREFERRED DIVIDENDS
0! TOTAL CASH USED OF INVESTMENT/OLD External Financing Required,V122
0! TOTAL COST
0! TOTAL COST TO INTERRUPTIBLE CUSTOMER (REVENUE TO THE GENERATOR)
0! TOTAL DEMAND
0! TOTAL DIVIDENDS/OLD TOTAL CAPITAL SERVICE PAYMENTS,V117
0! TOTAL GWH MW
0! TOTAL INTEREST,V58
0! TOTAL ON OR OFF PEAK
0! TOTAL REVENUE DIFFERENCE BETWEEN POINTS
0! TOTAL REVENUES,V30
0! TOTAL SALES <= NATIVE LOAD => NET BUYER FROM THE MARKET
0! TOTAL SALES > NATIVE LOAD => NET SELLER TO THE MARKET
0! TOTAL SUPPLY
0! TOTAL TAXES/OLD FUNDS FLOW V109
0! TOTAL TIME
0! TOTAL TRANSACTIONS BY SEASON
0! TOTALS
0! TOUGH PART. REDUCE EXISTING SYSTEM LINKS LOADING AND TOTAL_DELIVERED_QUANT EFFICIENTLY                  
0! TRACK ASSET CLASS INFO
0! TRACKER ITEMS
0! TRACKS PRICE AT RETAIL AND WHOLESALE, IF IT IS A SALE
0! TRANSACT C POSITION
0! TRANSACT C REPORTING
0! TRANSACT DETAILED REPORT OVERHEAD
0! TRANSACT INPUT
0! TRANSACT TIE 
0! TRANSACT TIE OVERLAY
0! TRANSACTION
0! TRANSACTION CONSTRAINT 4/11/98. GAT.
0! TRANSACTION CONSTRAINTS OVERLAY! 4/11/98. GAT.
0! TRANSACTION FORECAST OVERLAY
0! TRANSACTION GROUP FOR ADDITIONAL RESOURCE. IF AN EXTERNAL SOURCE CAN SUPPLY
0! TRANSACTION GROUP REPORT
0! TRANSACTION GROUP VARIABLES FOR DISPATCH REPORT
0! TRANSACTION GROUPS
0! TRANSACTION GROUPS OVERLAY! 1/9/98. GAT.
0! TRANSACTION PATH 4/1/98. GAT.
0! TRANSACTION PATHS OVERLAY! 4/1/98. GAT.
0! TRANSACTION SYSTEM FORECAST
0! TRANSACTIONS WILL ALWAYS USE THE OTHER STUFF AND MULTI-AREA MODULE
0! TRANSFER PRICING INFO.
0! TRANSFER TO COMMON CODE
0! TRANSFORM HOURLY LOADS WITH LINEAR EQUATION PREVIOUSLY
0! TRANSFORM...
0! TRANSOBJ
0! TRANVERSE EACH LINK FROM LEAF TO ROOT TO CALCULATE LOCAL_QUANT WITH LOSSES
0! TRAP FOR EARLY BUY PRICES IN SHORT REGIONS
0! TRAP FOR EVENTS GENERATED EXTERNALLY
0! TRAP THE BOUNDARIES, JUST LIKE ABOVE. ELSE, FIND THE INTERVAL (1,6)
0! TREE FOR THE PC SET AND RECORD THE TOTAL COST FOR THE PC SET.
0! TRIPLE INDEX.
0! TRY TO FIGURE OUT HOW TO GET THE VALUE FROM DEMAND PEAK
0! TRY TO TAKE THE UNIT (LOCAL_QUANTITY(2)) FIRST.
0! TRYING TO INPROVE THE SORT TIME OF THE DISPATCH ROUTINE
0! TURN UNITS OFF THAT ARE NOT ECONOMIC DUE TO MINIMUM-UP CONDITIONS.
0! TVA A&I OUTPUT ADDED 9/8/92 MSG FOR DOUG WALTERS
0! TWO BLOCK
0! TWO CASES: STRADDLE AND WHOLE BLOCK
0! TWO EQUATIONS, TWO UNKNOWNS
0! TWO ISSUES: IS THE UNIT PROFITABLE TOMORROW?
0! TYPE DECLARATION FOR CHECKING FILE EXISTANCES
0! TYPE DECLARATION FOR EXISTING OVERLAY FILES /FILEOVLY/
0! TYPE DECLARATION FOR THE CHECKING THE HISTORICAL LOAD DATA
0! TYPE DECLARATION FOR VARIABLES RELATED TO MOVE OF LOADPROB FROM PROCOST
0! TYPE.  CALLED FROM MAKEBIN AND MAKEOVLS 11/30/94
0! The demand cost were removed 1/28/04 based on report from Accumen
0! The fact that you're reading this, means the activity was successful.
0! There was code below this comment, so don't know whether
0! Third dimension
0! Third element: Mode - capacity or energy 
0! This is the monthly transact report (monthly thermal units).
0! This should be changed to increase the dimension of VECTOR_VALUES to
0! This unit isn't in the active units in IM then by pass.
0! Todo: shorten this statement. Specifying indices is not needed.
0! Todo: support new PMS by uncommenting (end)
0! Total Expenses,V41 New variable
0! Trim basins
0! UNCONSTRAINED CHARGE, CONSTRAINED DISCHARGE.
0! UNCONSTRAINED CHARGE, CONSTRAINED DISCHARGE. MARKET HYBRID.
0! UNCONSTRAINED CHARGE, UNCONSTRAINED DISCHARGE.
0! UNCONSTRAINED HOURLY GENERATION: UN_GEN
0! UNEXPECTED RESULTS???
0! UNION DEFINITION OF REVENUE: IE SPOT ENERGY SALES REVENUE
0! UNION DERIVATION OF TOTAL REVENUE: SPOT ENERGY SALES REVENUE
0! UNIT CAN BE BROUGHT-UP TO MEET WHEEL MARGIN
0! UNIT CONTINGENT VARIABLES
0! UNIT OUTAGE OVERLAY ! 3/4/99. GAT. JLG.
0! UNIT OUTAGES 
0! UNIT SIZES (MW) 1-99 100-199 200-299 300-399 400-599 600-799 800-1000 1000+
0! UNIT TO BE FLIPPED IS A MUST RUN
0! UNITS
0! UNLESS WE GET INTO RAMPING, WHERE INTER-HOUR MW CHANGES ARE IMPORTANT.
0! UPDATE ALL COST COMPONENTS OF THE RESOURCE
0! UPDATE DERATE, NOT OUTAGE
0! UPDATE OUTAGE AND DERATE
0! UPDATE OUTAGE, NOT DERATE
0! UPDATE SERVICE CHARGES AND CAPACITY AND ENERGY PATTERN DISTRIBUTIONS
0! UPDATE: 9/8/94. GAT.
0! UPDATING CAPACITY MARKETS
0! UPDATING CO2 EMISSIONS CONSTRAINT
0! UPDATING UNIT-BASED CONSTRAINTED
0! USE ESCALATION VECTOR 1 (BASE INFLATION)
0! USE L
0! USE PEAK AND ENERGY FROM MONTHLY INPUTS
0! USE THE MIN(LOWEST COST TRANSFER,INTERNAL COST) AS THE TRIGGER
0! USE THIS ROUTINE TO NORMALIZE THE STORAGE SCALAR
0! USE TO DETERMINE THE NUMBER OF DEFINED ASSET CLASS IN EACH DATA
0! USED FOR LONGER-TERM OPTION VALUATION
0! USED FOR MONTHLY ENERGY AND TOTAL COST ROUTINE
0! USED IN DSM CLASS RATES SECTION
0! USED IN ECONOMY INTERCHANGE
0! USED IN FINANCIAL SECTION
0! USED TO TRACK RPS ADDITIONS
0! USED TO VERIFY GENERATION IN cal_mar_monthly_energy_routine
0! USED UP ABOVE FOR ICAP REVENUES
0! USER DAY  
0! USER DAY OVERLAY ! 04/15/02. GAT. TMS.
0! USES
0! USES DOUBLE INDEX (TG).
0! USING AFTER EL LOADS SHOULD BE AN OPTIONAL SWITCH FOR THIS ROUTINE.
0! USING AN EXTERNAL MARKET PRICE
0! USING I INDEX FOR THE MOMENT.
0! USING MARKET PRICES SHOULD BE AN OPTIONAL SWITCH FOR THIS ROUTINE.
0! USUAL CASE           
0! US_GEN = US_GEN + AV_GEN
0! UTILIZE THE CALL OPTIONS WITH THE HIGHEST NET MARGIN.
0! Used to check the optimization of fuel switching going from right to
0! Utility Library Reference manual, Revision E, April 1992 that AGT had;
0! VALID UNITS FOR DISPATCH
0! VAR(37) = COST TO PRODUCE WHOLESALE POWER
0! VAR(38) = POWER GENERATED TO SERVE OWN LOADS
0! VAR(39) = REVENUE FROM NATIVE LOADS: PROVIDES A BETTER
0! VAR(44) = SUM OF EMISSION COSTS
0! VARIABLE COST, FIXED COST, RFT, RPM, EMISSIONS COST IF SET, TG,
0! VARIABLE DECLARATIONS:
0! VARIABLE FOR THE FUEL EMISSIONS FILE 12/21/92
0! VARIABLE OF THE CALCULATION OF THE OBJECTIVE FUNCTION
0! VARIABLES FOR REPORTING
0! VARIABLES FOR STORING OBJECTIVE FUNCTION VALUES
0! VARIABLES FOR THE DETAILED REPORTS
0! VARIABLES FOR THE POSTFIX CALCULATIONS
0! VARIABLES NEEDED ACROSS ROUTINES
0! VARIABLES NOT USE IN cnw
0! VARIABLES OF THE DESCRIPTION OF THE OBJECTIVE FUNCTION VARIABLES
0! VARIABLES THAT CAN NOT PROPAGATE LEFT TO RIGHT
0! VARIABLES THAT MUST BE INITIALIZED:
0! VARIABLES TO SIZE THE MODEL
0! VARIABLES USED IN cnw
0! VAULES USED IN OTHER INITIAL_CONTRACTS ROUTINE PLACED HERE TO MAKE THE
0! VIEW OF GROSS MARGIN WITH 'W' SWITCH
0! VideoMod(iMode) ! clears screen as it resets the current mode
0! VideoTyp=iand(Regs(1),Z'ff')
0! WABASH AREA ALLOCATION
0! WABASH DYNAMIC RESOURCE ALLOCATION
0! WABASH VALLEY STUFF January, 1994
0! WARN IF THERE IS NOT A CORRESPONDING DEVICE IN THE
0! WAS A COMMON BLOCK FOR FINANCIAL RUN SWITCHES
0! WD_INDEX 5/13/01.
0! WE ARE REMOVING BIDIRECTIONAL NODES FROM THE DATABASE.
0! WE NEED THE WHEELING CHARGE HERE.
0! WEATHER DEMAND
0! WEATHER_DEMAND OVERLAY !040601. TS
0! WEEKLY HYDRO
0! WEEKLY_HYDRO OVERLAY ! 8/17/00. TS, GAT. ACTIVATED 4/5/01.
0! WEST KOOTNEY NEW CUSTOMER 3808 CONTRACT LOGIC
0! WESTERN: 
0! WHAT BUY PRICE DO I SEE FOR THAT SELLER_TEST_CAP?
0! WHAT IS THE MARKET PRICE? IT IS THE POINT WHERE MARGINAL REVENUE EQUALS
0! WHEN NEXT DECISION PLANNING IS BEING USED NUNITS CAN CHANGE EACH
0! WHEN TO SUM?, WHAT IS THE BEST LOOPING PROCEDURE?
0! WHERE B IS THE NEGATIVE OF THE BALANCE WHERE THERE IS NO
0! WHICH SYSTEM IS CHEAPER
0! WHOLE BLOCK SERVES EXTERNAL MARKET
0! WHOLESALE FOR STRADDLE
0! WHOLESALE PURCHASE PORTION
0! WH_INDEX 6/11/01.
0! WILL ONLY WORK FOR STATIC GAS
0! WILL USE THIS STUFF.
0! WITH LOAD MANAGEMENT IS MADE, AND THE NUMBERS MUST CORRESPOND TO
0! WITH THE HIGHEST TRANSACTION MARGIN. MARKET CLEARS WHEN
0! WKP FUNDS FLOW STATEMENT
0! WKP INCOME STATEMENT VARIABLES
0! WKP NEW BALANCE SHEET VARIABLES
0! WKP OBJECT ADDED 7/28/93 M.S.G. ALL RIGHTS OWNED BY M.S.G.
0! WOLF CREEK MAINTENANCE EXPENSE 12/23/92 USING UNUSED GROUP VARIALBES
0! WORKING ALLOCATABLE ARRAYS
0! WOULD BE BETTER IF WE COULD REPRESENT EACH STORAGE FACILITY IN THIS FILE 
0! WRITE EACH TRANSACTION
0! WRITE HOURLY UNIT AVAILABILITY REPORT (DAYS TYPES/TRANSACT OUTAGE)
0! WRITE OUTPUT
0! WRITE RECORD
0! WRITE RELATIVE TO BASIS VALUES, REMEMBER MONTHLY STUFF, ...
0! WRITE REPORT
0! WRITE THE HOURLY DISPATCH ORDER HERE
0! WRITE THE SUPPLY CURVE AS CUMULATIVE.
0! WRITE THE SUPPLY CURVE REPORT.
0! WRITE TOTAL BY COST TYPE
0! WRITE TOTAL BY TRANSACTION TYPE
0! WRITES PRODUCT MARGINAL COST REPORT BY DEPTH/MONTH
0! WTI         
0! WVPA NON_FUEL REPORT VARIABLES
0! XML FILE DIRECTORY SET-UP
0! Y = AX + B
0! YEAR IS 1 BASED
0! YEAR.
0! YEAR.  THIS REQUIRES THAT THE ARRAYS BE RESET.  THE 10/14/94 SOLUTION
0! ZERO ARRAYS
0! ZERO CAPACITY UNIT STUFF ADDED 10/25/96. GAT.
0! a monthly_trans_report, so document differences.
0! above in ($/kT) as specified by GAT 20120625 '$1000/Ton'
0! added 4/78/11 to eliminate supply limits
0! added the coal expansion units to the list of coal demand.
0! and diagnose commands that have no case defined.
0! are evidently month-specific, need to be replaced by something like
0! array size allocation dimension values
0! assume 10000btu/lb of coal
0! assume that units can be aggregated by plant
0! bank credits purchased are added at the end at the cost of the credits bought to meet cap
0! bank credits used increase the co2 cap
0! basin arrays dimensioned using nBasin
0! beginning of optional output
0! call cls4(0,0,24,79)
0! call cls4(iRow,0,iRow,79)
0! call flush(DafUnit) ! neither did this solve the above problem
0! call intrup(Regs,Z'10')
0! call intrup(Regs,Z'16') ! AGT found no DOS-level function for this
0! call intrup(Regs,Z'21')
0! can be combined into a single function call.
0! change log
0! changes 7/19/10
0! character array.
0! character*1 AnyChar
0! chhanged spinfunc.for to spinfunc.f90
0! cls_load.f90
0! code to run coal model as a stand alone
0! combines variables from reports TB, RX, UZ,MX,
0! contracts  arrays
0! create a list of plants that has a pointer from unit to plant
0! debt coverage (net income + dep expense + LTD Interest)/
0! declarations for interface variables and arrays
0! declarations shared by Dat() and Clk()
0! do
0! do jCh=1, len(s)
0! double-word), but believes this is a bug in the LF95 v5.50f compiler
0! during refactoring.
0! end basin arrays
0! end contracts  arrays
0! end demand  arrays
0! end do
0! end generic demand  arrays
0! end of declarations
0! end of eliminating supply limits
0! end of optional, beginning of mandatory output
0! end of planning switch information
0! end supply  arrays
0! end transportation link arrays
0! existing plant demand  arrays
0! exiting plant transportation link arrays
0! first read
0! following are approximations of the documented Spindrift routines:
0! for speed-critical uses, disable the next two subroutines here and
0! for the following subitems
0! force in WVPA actual values
0! from size_array_dimensions module, no longer in codebase:
0! generic demand  arrays
0! generic plant transportation link arrays
0! go to
0! grx_planning_routines and GRXModules.
0! header is considered to have index rec=0 in F77L3, rec=1 in LF95
0! hence they are merely stubbed out to satisfy the linker;
0! i<=32767 by assumption [else these format codes may be extended]
0! iMode=iand(Regs(1),Z'ff')
0! iRow=Regs(4) shr 8 ! DX has cursor row and column as needed below
0! iScroll=iand(Regs(1),16)>0
0! if subscript order on MAINT_INDEX_MONTHLY_MW were reversed, we could avoid
0! in other modules may belong in this module.
0! include Year = 0 (Base Year Value).
0! includes North America NA and District of Columbia DC
0! integer (kind=1) ::   pTailCount
0! integer (kind=2) ::   iMode
0! integer (kind=2) ::   jCh,iRow,jCol
0! intrinsics sometimes return the actual variable length or
0! is not currently called from anywhere, however.)
0! it refers to the code below anymore.
0! j1=80
0! jCol=iand(Regs(4),Z'ff')
0! last variable used 628 12/11/97 msg
0! last variable used 650 4/23/98 GAT
0! last variable used 651 6/5/98 MSG GOVERNMENT REVENUES
0! last variable used 652 7/1/98 MSG LTD PS ISSUE EXPENSE
0! last variable used 653-657 8/8/98 MSG SRP VARIABLES
0! last variable used 658-659 9/28/98 MSG CASH CS DIVIDENDS,PS_DIVIDEND_CASH_PAYMENTS
0! last variable used 660-663 10/2/98 MSG ACCOUNTS RECEIVABLE, FUEL INVENTORY,
0! last variable used 664 10/10/98 MSG Cash Flow Amortization
0! last variable used 665 10/12/98 MSG Capacity Sales Revenues
0! last variable used 666 10/21/98 MSG Invectment in acquisitions
0! left.  4/26/93 MSG
0! line with: MSG 041710
0! link in the .OBJ files from the corresponding assembly-language code
0! mark for winmerge
0! max_prod_types (clr) went to 23 from 19. 19 was
0! max_prod_types allocations:
0! max_prod_types might be up to five larger for tf_objt2.for.
0! max_prod_types went to 23 from 19. 19 was
0! may not adequately reflect resources provided, and resources
0! moved 4/11/10 to put convergenc check on reports written below.
0! moved below by mark 3/20/10
0! new declarations
0! other discrepancies between F77L3 and the current (LF95) compiler:
0! pass back expansion unit prices for units added before this year/iteration.
0! pass current SO2 costs to arrays used by LP
0! passing NUNITS, making MAINT_SCHEDULER simpler and more elegant.
0! plant delivery limits
0! push the national table which is 0
0! quantity changes by year
0! read(5,*) AnyChar ! note that this requires a terminating <Enter>
0! reference_loads.f90
0! reference_loadsi2.f90
0! replaced character*256 to character (len=256)
0! report the maximum-feasible capacity factor
0! retirement unit price is set here. retros are in
0! routines to provide correct output write record and end point number
0! sc_fuel_clause IS FORWARD THE APPROXIMATION IS CUURENT YEAR
0! set up report
0! shared_vars_interg82.f90
0! solution in the continuous domain, which we do not have here):
0! sorts iSup items into ascending order based on values in key array a;
0! sorts iSup items into increasing order based on values in (1-based) array a;
0! sorts iSup items into order based on values in key (1-based) array a;
0! state. Therefore, the SO2 tables have been updated. 10-3-11 MSG
0! supply arrays
0! temp
0! temp code to look at run differences 2/19/95
0! the call to undocumented UNDER0() in MIDAS.F90 was disabled.
0! the following 2 lines replace the commented out line 10/22/01 msg FUEL_ID can be zero
0! the following are not related to the Spindrift routines, but deal with
0! the following call order must be kept.
0! the following text-window routines are undocumented in the Spindrift
0! the last increment added for DG, so 
0! the retro fit comparison should be based on the change in theunit CO2 output
0! thermal demand by plant
0! they is useful under DOS and WinConsole, but not under Windows GUI.
0! they require linking with .obj-files extracted from LF9555\lib\cw32.lib:
0! this list must match the names of subroutines below
0! thus filling out an integer :: number of 16-bit words (and an entire 32-bit
0! todo: promote_pm
0! trans_slope.f90
0! trans_weekend_peak_days.f90
0! transportation price
0! transportation report
0! transportation route results
0! triming the transportation links.
0! use NodeProb(x) to weight LDC, where by construction
0! use SpinFuncLocals
0! used becasue of iterations in GRX routines
0! were named based on their type.
0! write the direct-access file's header, compatible with existing F77L3 files
0! write(*,'(1x,3i4,f12.3,a)') nIter,rDel,kIns,zO,'=z'
0! write(*,*)AsciiCode,char(AsciiCode)
0! write(DafUnit,rec=1) -9_1,RecordLeng,-1_1 ! item lengths in bytes:  1,2,1
0!!
0!!        
0!!               VAR_OM_PER_MWH(CN) = ANNUAL_VOM_COST/ ANNUAL_ENERGY
0!!              R_DSM_PEAK_RESERVE_ALLOCATION(1,CLASS) = 0.
0!!              R_DSM_PEAK_RESERVE_ALLOCATION(2,CLASS) = 0.
0!!              R_DSM_PEAK_RESERVE_ALLOCATION(3,CLASS) = 0.
0!!            ANNUAL_VARIABLE_COST(CN) = ANNUAL_VOM_COST +
0!!            ENDIF
0!!            HYBRID_OPT_POINTER = INDEP(CN)
0!!            HYBRID_PROD_POINTER =
0!!            IF(ANNUAL_ENERGY > 0.000001) THEN
0!!            INDEP_ANNUAL_ENERGY = ANNUAL_ENERGY
0!!            INDEP_ANNUAL_ENERGY_REVENUE =
0!!            INDEP_ANNUAL_VOM_COST = ANNUAL_VOM_COST
0!!            INDEP_EMIS_COST = ANNUAL_EMIS_COST
0!!            INDEP_FUEL_COST = ANNUAL_FUEL_COST(CN)
0!!            VOM_COST_MM(CN) = ANNUAL_VOM_COST * 0.000001
0!!           !!!!!!!!!!!!!!!!!!!!!!!!!!!!
0!!           DO CLASS = 1, MAX_LOAD_CLASSES
0!!           ENDDO
0!!        ELSE
0!!        ENDIF
0!!      CALCULATE ALLOCATION FACTOR FOR CAROLINA
0!!      CALCULATE ALLOCATION FACTOR FOR SC
0!!      CALCULATE LOAD FACTOR !!
0!!      CALCULATE THE ALLOCATION FACTOR FOR NC AND SC
0!!      SUBROUTINE LOAD_FACTOR_CALCU
0!!      SUBROUTINE NORTH CAROLINA ALLOCATION FACTOR
0!!      SUBROUTINE SC AND NC ALLOCATION FACTOR
0!!      SUBROUTINE WHOLESALE ALLOCATION FACTOR
0!!      WHOLESALE WITH 12 CP METHOD
0!!      WITH !!!!!! AVERAGE METHOD !!!!!!
0!!      WITH SINGLE COINCIDENT METHOD
0!!     +                                             INDEP_EMIS_COST
0!!     +                         GET_TRANS_FOR_GRX_ID(HYBRID_PROD_POINTER)
0!!     +                         Transport_Price_Escalation,
0!!     +                      Maximum_Daily_Withdrawal(I) *
0!!     +                     GET_GRX_RESOURCE_LINK_ID(HYBRID_OPT_POINTER)
0!!  ADDED TESTING_PLAN ON 4/19/94. GAT.
0!!  ANYCHANGES TO THIS COMMON BLOCK MUST ALSO BE DONE IN DSEC_OBJ.FOR
0!!  AsciiCode=iAChar(KeyedChar)
0!!  KeyedChar=AltChar(AsciiCode)
0!!  MSG 8/21/93
0!! ***********************************************************************
0!! GROW THE MONTHLY PEAK AND ENERGY FROM PREVIOUS YEAR VALUES
0!! NO TRANSFORM REQUIRED
0!! TEST ALLOWING THE LONG PATH
0!! TRIPLE INDEX.
0!! Todo: support new PMS by uncommenting
0!! call cMove(Sour(SourOfs),Dest(DestOfs),nBytes)
0!!!
0!!! RECORD LENGTH UPDATED WITH VARIABLE CHANGES
0!!! TEMPORARY !!! 09/11/01
0!!! TESTING. 11/5/99. GAT. !!!
0!!!!
0!!!!                  WRITE(TEMP_STR,'(I3.3)') TEMP_I
0!!!! 040412 !!!! TEMPORARY.
0!!!! 052312 !!!! IN UNTIL BETTER SOLUTION
0!!!! NOTE DOUBLE INDEX ON TG TO SAVE SPACE !!!
0!!!!!! GAS MODEL
0!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!      
0!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0!!KeyType is coded to conform with Spindrift; ignore Function keys F11 & F12
0!!SOFTWARE TOOLS IN PASCAL, by Kernighan & Plauger, Addison-Wesley 1981
0!!Shell sort adapted from the source on page 110 of
0!!based on values in (1-based) key array a;
0!!colors and attributes defined by Spindrift:
0!!elseif(('A'<=UCKC).and.(UCKC<='Z')) then; KeyType:= 2; ! Alphabetic
0!!end if ! decoding the keyboard-specific scan-codes
0!!if(AltPrefix .and.((15<=AsciiCode).and.(AsciiCode<=50))) then
0!!nCol:= Regs(1) shr 8;
0!!set global variable for use in cls and PrintS subroutines
0!!string sent to system is limited to 122 characters; AGT sees no faster way
0!!write(*,*)AltPrefix,CtlPrefix,NulPrefix,EscKeyStruck,AsciiCode,char(AsciiCode)
0!!write(*,*)KeyType,AsciiCode,KeyedChar
0!######################################################################
0!#else
0!#endif
0!#ifdef UsingF90
0!$DEFINE LOTUS
0!$ELSE
0!$ENDIF
0!$IF DEFINED(LOTUS)
0!$endif
0!$if defined(test_it)
0!$ifdefined(remove_code)
0!$ifdefined(wabash_hoosier) CONDITIONAL COMPLIES DO NOT WORK IN LF95
0!*
0!*                                                                           *
0!*                                                                     *
0!*                        DSM_FINANCIAL_COSTS                          *
0!*                       ALL RIGHTS RESERVED                           *
0!*                       DSM_BOOK_DEP_CAL                              *
0!*                       DSM_CAPITAL_ITEMS                             *
0!*                     DSM_TAX_DEP_CAL                                 *
0!*                     ZERO_DSM_RESULTS                                *
0!*               RESULTS TO A SEQUENTIAL BINARY FILE
0!*          COPYRIGHT (C) 1982, 1990   M.S. GERBER & ASSOCIATES, INC   *
0!*          COPYRIGHT (C) 1982,1990 M.S. GERBER & ASSOCIATES, INC.     *
0!*          COPYRIGHT (C) 1990   M.S. GERBER & ASSOCIATES, INC         *
0!*          COPYRIGHT (C) 1990 M.S. GERBER & ASSOCIATES, INC.          *
0!*       ALLOCATION FACTORS FOR DEMAND, ENERGY, CUSTOMERS              *
0!*       BASED ON THE ACCELERATED COST RECOVERY SYSTEM (ACRS) AS       *
0!*       COST_SERVICE_ALLOCATORS READS AND STORES THE REVENUE          *
0!*       DEPTAX CALCULATES THE ANNUAL DEPRECIATION FOR FEDERAL TAXES   *
0!*       SETS THE DSM FINANCIAL RESULTS TO ZERO.                       *
0!*       SPECIFIED IN THE ECONOMIC RECOVERY TAX ACT (ERTA) OF 1981, OR *
0!*       THE ASSET DEPRECIATION RANGE (ADR), OR STRAIGHT LINE.         *
0!*       THE MEHTOD USED IS SPECIFIED FOR EACH ACCOUNT                 *
0!*    PURPOSE:                                                         *
0!*    READ THE HOURLY LOAD DATA FROM LOGICAL UNIT "ILDIN"
0!* WRITE AVERAGE WEEKDAY, AVE WEEKEND W/HOLIDAY AND AVERAGE PEAK DAY
0!********** END OF THE DATA DECLARATIONS *********
0!***********************************
0!************************************
0!************************************************************
0!*************************************************************
0!***************************************************************
0!*****************************************************************
0!******************************************************************
0!********************************************************************
0!**********************************************************************
0!***********************************************************************
0!************************************************************************
0!+++++
0!++++++++
0!-----
0!------
0!-------
0!--------
0!01/17/03 GREG'S ATTEMPT TO SUPPRESS THE TRANSACT OUTAGES WHILE STILL
0!032015. THIS IS FLAWED. THIS SEEMS TO ASSUME THAT THE START UPS
0!=======================================================================
0!ASSUMES ALL INTERRUPTIBLES ARE PHYSICAL
0!ASSUMES ALL LF ARE PHYSICAL
0!BUY CONIDITION
0!C***********************************************************************
0!CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
0!CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
0!Dbg    if(RoutQty(j)>0.1) write(DbgU,'(2i5,a,2f9.0)')
0!Dbg    write(DbgU,'(/2i7,a)') iReq,iCol,ReqDesc(iReq)
0!Dbg    write(DbgU,'(/2i7,a)') iReq,iPolStGrp,ReqDesc(iReq)
0!Dbg    write(DbgU,'(3i7,12x,a)') jVar,iLbV,iUbV,VarDesc(jVar)
0!Dbg    write(DbgU,'(3i7,f11.2,1x,a)') jVar,iLbV,iUbV,
0!Dbg  nLbV=nSNdU ! 0 ! nSNdU+nDNdU
0!Dbg  nUbV=nSNdU+SumSUsd ! 0 ! nNdVar
0!Dbg  write(DbgU,'(3i7,a)') iStUBSup,jVar,nVar,' aft SO2 vars'
0!Dbg  write(DbgU,'(3i7,a)') iStUBSup,jVar,nVar,' bef SO2 vars'
0!Dbg +    '=mills RoutQty/RoutUB ',RoutQty(j),RoutUB(j) ! /RUB_mult
0!Dbg +    UbValu(iUbV),VarDesc(jVar)
0!Dbg +    j,nint(1e3*GQ(RoutQty(j),RoutUB(j))),
0!Dbg! KLUDGE (except zeroes) failed to regain feasibility 20110731
0!Last change: MSG 1/22/2004 12:56:02 PM
0!Lib                  EXIT
0!Lib                  IF(OPT_NWKSX7+DAY2-OPT_PAIRJ1/=THIS_WIDTH) STOP
0!Lib                  OptimizeAnew=B0
0!Lib                DAY2=K
0!Lib                END IF
0!Lib                EXIT
0!Lib                IF(OPT_PAIRJ0>0) THEN
0!Lib                IF(OPT_PAIRJ1>0) THEN
0!Lib                OPT_NWKSX7=K-J
0!Lib                OPT_PAIRJ0=J ! opt day1 for part having multiple of 7 days
0!Lib                OPT_PAIRJ1=J
0!Lib                OptimizeAnew=B0
0!Lib              DAY0=J+K
0!Lib              DayOnMt(DAY0)=iAnd(1,iShft(J2,K-15)) ! K==0 gets the MSb
0!Lib              ELSE
0!Lib              END IF
0!Lib              IF((MOD(K-J,7)==0).AND.(OPT_NWKSX7==0)) THEN
0!Lib              IF(DAY0>=LENGYR_DA) EXIT
0!Lib              IF(K-J==THIS_WIDTH) THEN
0!Lib              J1=J1+DayOnMt(DAY0)
0!Lib              J1=K
0!Lib              J=0 ! open search for first cycle
0!Lib              J=0 ! search for second cycle
0!Lib              J=K+1 ! MOD is never needed here; both cycles start @DAY1<=LENGYR_DA
0!Lib            DO K=0,15 ! assign bits in left-to-right order as if a string
0!Lib            ELSEIF((J<0).and.(DayOnMt(K)==0)) THEN
0!Lib            ELSEIF((J>0).and.(DayOnMt(K)==0)) THEN
0!Lib            END DO
0!Lib            END IF
0!Lib            IF(   (J==0).and.(DayOnMt(K)==1)) THEN
0!Lib            J2=LibRecord(J/16,IYR)
0!Lib            K=MOD(DAY0,LENGYR_DA)
0!Lib          CALL UPDATE_LIB_MS(I,OPT_PAIRJ0,           OPT_NWKSX7,
0!Lib          CALL UPDATE_LIB_MS(I,OPT_PAIRJ1,THIS_WIDTH-OPT_NWKSX7,
0!Lib          DAY2=0
0!Lib          DO DAY0=0,LENGYR_DA*2 ! allow for WRAP_EOY searching for two 0>1>0 cycles
0!Lib          DO J=0,LENGYR_DA,16 ! 16 bits per INT*2 element
0!Lib          END DO
0!Lib          END DO ! DAY1
0!Lib          IF(DayOnMt(LENGYR_DA-1)>0) J=-1 ! block start on WRAP_EOY
0!Lib          IF(J1/=THIS_WIDTH) STOP
0!Lib          J1=0 ! bit 367 (LSb of LibRecord(22,IYR)) is the 'usable' bit
0!Lib          J=0
0!Lib          OPT_NWKSX7=0 ! default implying required days are not split
0!Lib          OPT_PAIRJ0=0 ! default implying not yet assigned
0!Lib          OPT_PAIRJ1=0
0!Lib        END IF
0!Lib        END IF ! re LibRecord usable
0!Lib        IF((I4ST==0).AND.(iAnd(LibRecord(22,IYR),1)/=0)) THEN
0!Lib        IF(OWR_LIB_MS(K2).EQV.B1) CALL UPDATE_LIB_MS(I,J,THIS_WIDTH,
0!Lib        IF(OWR_LIB_MS(K2).EQV.B1) THEN
0!Lib        READ(LibUnit,rec=INT4(I),iostat=I4ST) LibRecord
0!Lib      END IF ! re LibExtant
0!Lib      IF(LibExtant.and.USE_LIB_MS(K2)) THEN
0!Lib  CLOSE(LibUnit)
0!Lib  INTEGER*1 DayOnMt(0:383) ! 366 is insufficient for 12*32-1
0!Lib +                  'LibRecord days do not match requirement.'
0!Lib +          'LibRecord days do not match requirement.'
0!Lib +          LENGYR_DA,IYR,LibUnit,LibRecord,B0)
0!Lib +          LENGYR_DA,IYR,LibUnit,LibRecord,B1)
0!Lib +        LENGYR_DA,IYR,LibUnit,LibRecord,B1)
0!NOT  call ExpleteFinal4Col()
0!NOT:   cVect(jVar)=SNodPri(iSNod)*1000.0 ! in ($/T)
0!Not    call CNWIncrLB() ! Garrick Hoops 20110730 denied need for LB on state emissions
0!Obs      LbValu(iLbV)=t4*0.125 ! KLUDGE to achieve feasibility ! not needed after 20110831
0!Obs      k=k+1
0!Obs    ReVec(iReq)=1 ! for LEQ
0!Obs    bVect(iReq)=StGroupUB(iPolStGrp)
0!Obs    deallocate(zbColHold,zbRowHold,ConsEHold) ! free swap-space
0!Obs    deallocate(zbColOfNze,zbRowOfNze,ConsMtxNze)
0!Obs    iPlnt=DNodOfLk(iLink)
0!Obs    if(BasnQtyUB(iBasn)>=999998.0) cycle ! ignore both bounds on this basin
0!Obs    if(r4>=999998.0) cycle
0!Obs    jVar=1+(iSNod-1)*(1+nCCSegs) ! for kT from Supply
0!Obs    k=0
0!Obs    write(DbgU,'(1x)')
0!Obs  ContFrTo=0
0!Obs  DnOfPlnt=0
0!Obs  InfDvdCst=1e12
0!Obs  LinkFrTo=0
0!Obs  PlntQty=0.0
0!Obs  SupDvdCst=0.0
0!Obs  call AppendI2w5(OutU,PriID)
0!Obs  call ReleaseCNWOptimizingArrays() ! void if cVect etc. are sufficient
0!Obs  end if
0!Obs  if(iBnUB>0) then
0!PER KJ.
0!PROBLEMWITH USING A POINTER FOR THE COST AND HAVE THE UPDATE MONTH NOT
0!TMS20071002 SCENARIO_INDEX 52 AND 53 ARE FINANCIAL VARIABLES 24 AND 25
0!Tue May  7 13:53:17 EDT 2024
0!assume for expansion units that there is an existing coal unit in that
0!c          DA_RQ_REM=DA_RQ_REM-Z1 ! ... so this is obsolete
0!c         y(iCase)=yMin
0!c        DA_RQ_REM=DA_RQ_REM-Z1 ! ... so this is obsolete
0!c        MAINT_SCHEDULED_FRACT(K2,JCM)= ! allow for the possibility of more ...
0!c       elseif(ThisExponent>10.0d0.or.ThisExponent<=0.0d0) then ! avoid crashing at 0**(ThisExpo<0)) then
0!c      write(4,*) iCase,z(iCase),ThisExponent
0!c      x1 = ySpan
0!c      x2 = z(iCase)
0!c      x3 = z(iCase)**ThisExponent
0!c   +      MIN(1.,MAINT_SCHEDULED_FRACT(K2,JCM)+Z1/Z2) ! ... than one outage per unit per month
0!c   +    MAINT_SCHEDULED_FRACT(K2,JCM)+Z1/Z2 ! ... than one outage per unit per month
0!define OobWidth 0.001 0.01 inadequate
0!define OobWidth 0.01 adequate if dataset were feasible, at least 10 if not:
0!define OobWidth 0.10
0!define RUB_mult 1e3 disabled 20110428 per GT and GH request
0!define call_AppendF8p2(u,r,b) write(u,'( f8.2,",")',advance='no') r
0!define ignore_plant_SO2UB
0!end
0!end function IsPmDirect
0!end function IsPmIndirect
0!endif ContByPlant
0!function IsPmDirect(pm)
0!function IsPmIndirect(pm)
0!ifdef ContByPlant
0!include "TypesLtd.fp1"
0!integer :: index
0!integer, intent(in) :: PM
0!integer, intent(in) :: pm
0!logical :: IsPmDirect, return_value
0!logical :: IsPmIndirect, return_value
0!msgmtrcl monthly thermal units.  The third write is also
0!note:  LimNSeg herein limits # of mine-cost curve segments to be used;
0!reduce LimNSeg to at least 1 to reduce size of constraint matrix;
0!subroutine MovBytes(Sour,SourOfs,Dest,DestOfs,nBytes)
0!unused                    SELLER_INTERCEPT = MAX_PRICE
0C
0C				ADJ_PURCHASE_CAP_DOLLARS =
0C				ADJ_RESERVE_CAP_DOLLARS =
0C			L_RESERVE_CAPACITY_DOLLARS(R_COMPANY) = 
0C			RESERVE_CAPACITY_DOLLARS = 
0C		   ADJ_MCGUIRE_X_CAP_DOLLARS = 
0C		ENTRY ADJ_MCGUIRE_X_CAP_DOLLARS(R_COMPANY)
0C		ENTRY ADJ_PURCHASE_CAP_DOLLARS(R_COMPANY)
0C		ENTRY ADJ_RESERVE_CAP_DOLLARS(R_COMPANY)
0C		RETURN
0C		RETURN	
0C 
0C  
0C   
0C    
0C     
0C     		   IF(OEI_PURCHASED_CAP_PAYMENTS(R_COMPANY) > 0.) THEN
0C     		   IF(OEI_RESERVE_CAPACITY_DOLLARS(R_COMPANY) /= 0.) THEN
0C      
0C       
0C       	RETURN
0C        	                   
0C        	   L_UNADJ_PURCHASE_CAP_DOLLARS(R_COMPANY) = 
0C        	   UNADJ_PURCHASE_CAP_DOLLARS = 
0C         
0C          
0C           
0C           	ENDIF
0C            
0C             
0C              
0C               
0C                
0C                 
0C                  
0C                   
0C                    
0C                     
0C                      
0C                       
0C                        
0C                         
0C                           
0C                               
0C                                   
0C                                       
0C                                         
0C                                             
0C                                                 
0C                                                                      *
0C                                                                      C
0C                                                            KEPCO_WC_DEF_MAINT_ENRG_AMORT
0C                                                PREFERRED_STOCK_ANNUALIZED_DIVS
0C                                              ! CAN BE ADDED WITHOUT A BALANCE
0C                               by NOT 0 basing them here the alinement with
0C                               having to subtract 1 form the array index 6/17/98
0C                               the base year being position 1 works without
0C                              ALL RIGHTS RESERVED
0C                              BAL(MO,I) = BAL(MO-1,I)
0C                              INTEREST_INCOME(MO,I,-1) =
0C                              LOANS_TO_AFILLIATES(MO,I,-1) =
0C                              PRINCIPAL_PAYMENT=MIN(BAL(MO-1,I),
0C                              RET(0,I) = RET(0,I)
0C                              RET(MO,I) = RET(MO,I)
0C                             + A NOT ADDED AJUSTMENT
0C                             ALL RIGHTS RESERVED
0C                             COPYRIGHT (C) 1989
0C                             COPYRIGHT (C) 1992
0C                             COPYRIGHT (C) 1994
0C                             COPYRIGHT (C) 1996
0C                             DEFERRED EXPENSES 
0C                            R P A R M                                 C
0C                           ALL RIGHTS RESERVED
0C                           CALL MTG_PRIN_INTR(LTDRTE,LDLIFE,
0C                           COPYRIGHT (C) 1997
0C                           COPYRIGHT (C) 1998
0C                           COPYRIGHT (C) 2001
0C                           COPYRIGHT (C) 2002
0C                           COPYRIGHT (C) 2003
0C                           LEFT_HEAT(U) = BOTTOM_PROB
0C                           R I N I T                                  C
0C                           RIGHT_HEAT(U) = BOTTOM_PROB
0C                          ADDITIONS & IMPROVMENTS 
0C                          ALL RIGHTS RESERVED
0C                          COPYRIGHT (C) 2006
0C                          COPYRIGHT (C) 2007
0C                          CURRENT_CAPACITY_RATIO=TEST_ANN_CAP/TEST_PEAK
0C                          F I N A N
0C                          LEFT_HEAT(U) = BOTTOM_PROB
0C                          TARGET_MET = 
0C                          TARGET_MET = CURRENT_CAPACITY_RATIO >= 
0C                          TARGET_MET = LOLP_CHECK()
0C                          TARGET_MET = UNSERVED_ENRG_CHECK()
0C                         ALL RIGHTS RESERVED
0C                         C O N V E R                                  C
0C                         COPYRIGHT (C) 2003
0C                         EXTERNAL PRODUCTION COSTS
0C                         MIDAS GOLD     
0C                        ALL RIGHTS RESERVED
0C                        COMMON_DIVIDENDS = COMMON_SHARES(1,CLASS_POS) *
0C                        COPYRIGHT (C) 1992
0C                        COPYRIGHT (C) 1993
0C                        DAILY_LOADS_I4(HR) = WD_DAILY_LOADS_I4(HR)
0C                        ENDIF
0C                        ENERGY(ECBLK,U) =  
0C                        ENERGY(ECBLK,U) =  EAVAIL(U) *
0C                        F I N / A N C E                               C
0C                        GLOBAL ENERGY DECISIONS
0C                        IF(BOTTOM_PROB .LT. RIGHT_HEAT(U)) THEN
0C                        INTEREST(0,I) = INTEREST(0,I) + INTEREST(MO,I)
0C                        M.S. GERBER & ASSOCIATES, INC.
0C                        PLANT_2_SERVICE(0,YR) = PLANT_2_SERVICE(0,YR)
0C                        RIGHT_HEAT(U) = TOP_PROB
0C                        S=S
0C                        SINKING_FUND(MO,I) = 0. 2/23/03
0C                        VARIABLE(117) = VARIABLE(117)   ! NUCL_DECOM_FUND
0C                       AFDC2(J) = AFDC2(J) * RATIO
0C                       ALL RIGHTS RESERVED
0C                       ANNUAL_SUM = ANNUAL_SUM + SINKING_FUND(MONTH,I)                         
0C                       COMMON_SHARES(2,CLASS_POS) = .00001
0C                       COPYRIGHT (C) 1991
0C                       COPYRIGHT (C) 1997,98
0C                       COPYRIGHT (C) 1997-99
0C                       COPYRIGHT (C) 1998
0C                       COPYRIGHT (C) 2001
0C                       COPYRIGHT (C) 2003
0C                       COPYRIGHT (C) 2006
0C                       COPYRIGHT (C) 2009
0C                       ELSEIF(BOTTOM_PROB .GT. LEFT(S)) THEN
0C                       ELSEIF(BOTTOM_PROB .GT. RIGHT(S) .AND.
0C                       LEFT_HEAT(U) = TOP_PROB
0C                       RIGHT_HEAT(U) = TOP_PROB
0C                       R_ADDENDUM_ARRAY(0,I,
0C                       SUBROUTINE HYDRIN                              C
0C                       THIS IS A NULL CASE
0C                       THIS IS A NULL CASE: TEST THIS
0C                       USED ALL THE TIME                              *
0C                       USED WHEN OPERATING_METHOD = <C>OVERAGE        *
0C                       USED WHEN OPERATING_METHOD = NPV               *
0C                       USED WHEN OPERATING_METHOD = OPREV             *
0C                       VECTOR_VALUE = VECTOR_VALUES(AVAIL_DATA_YEARS) ! MODIFIED TO ESCALATE 11/21/06 DR.G
0C                      ALL RIGHTS RESERVED
0C                      ALL RIGHTS RESERVED                             C
0C                      AND STORAGE UNITS                               C
0C                      All Rights Reserved                             C
0C                      COPYRIGHT (c) 1998
0C                      MUNICIPAL_REVENUES                              C
0C                     ALL RIGHTS RESERVED
0C                     ALL RIGHTS RESERVED                              C
0C                     COMMON_SHARES(2,CLASS_POS) = .00001
0C                     COPYRIGHT (C) 1997
0C                     COPYRIGHT (C) 2003                             
0C                     CURRENT_CAPACITY_RATIO = TEST_ANN_CAP/TEST_PEAK
0C                     DO HR = 1, 24
0C                     DO MO = 1, 12
0C                     DRILLING_ACCOUNT_NAME =
0C                     ELSE
0C                     ELSEIF(LEFT(S) .GT. TOP_PROB .AND. 
0C                     ELSEIF(RIGHT_RIGHT > 0.000001) THEN
0C                     ELSEIF(TOP_PROB .LT. RIGHT(S)) THEN
0C                     ENDDO
0C                     ENDIF
0C                     ENERGY(ECBLK,U) = ENERGY(ECBLK,U) +
0C                     FIRST_YEAR_DEP = MIN(6.*MONTHLY_DEP_AMOUNT,NPV)
0C                     HOURLY_MARKET_PRICE = 
0C                     HOURLY_MARKET_PRICE = 999999.
0C                     IF(CLASS_LEVEL >= 1) THEN ! passing tax credits to parent
0C                     IF(CLASS_TYPE /= 'C') THEN
0C                     IF(LAHEY_LF95()) LREC = LREC + 1
0C                     IF(LAHEY_LF95()) LREC = LREC - 1
0C                     IF(SALT_RIVER_PROJECT()) THEN
0C                     IF(TEMPEA(ECBLK,U) == EAVAIL(U)) THEN
0C                     IF(WVPA()) THEN
0C                     INVESTMENT_IN_SUBSIDIARIES(2,0) = 0.
0C                     LREC = LREC + 1
0C                     MONTHLY_ECONOMY_BOUGHT = MONTHLY_ECONOMY_BOUGHT+
0C                     MONTHLY_ECONOMY_COST = MONTHLY_ECONOMY_COST +
0C                     MONTHLY_INTERCEPT = 0.0
0C                     MONTHLY_SLOPE = 1.0
0C                     OPTION_IS_ACTIVE(I) = .FALSE. !!! TEMP !!!
0C                     PLANT_2_SERVICE(0,YR) = 0.
0C                     PREMIUM_DISCOUNT_EXP = 0.
0C                     PREMIUM_DISCOUNT_EXP = PREM_DISC_BALANCE
0C                     SEGMENT_GENERATION=ENERGY(ECBLK,U)*EAVAIL(U) 
0C                     TARGET_MET = 
0C                     TEMP_SELL_ENERGY = 0.
0C                     TEMP_SELL_ENERGY = RR_ENERGY_TO_SELL
0C                     TEMP_SELL_ENERGY = SEGMENT_ENERGY_UNUSED
0C                     VARIABLE(117) = VARIABLE(117)   ! NUCL_DECOM_FUND
0C                     WRITE(4,*) '  and Year',YEAR
0C                     WRITE(4,*) ' '
0C                     WRITE(4,*) 'Record',COAL_DEMAND_YEAR,
0C                     WRITE(4,*) 'Record',GAS_DEMAND_YEAR,
0C                     WRITE(4,*) 'System Forecast.'
0C                     WRITE(4,*) 'The Base TSYtem Forecast File in'
0C                     WRITE(4,*) 'Year in Set Parameters or the Year in'
0C                     WRITE(4,*) 'in Set Parameters. Either reset Base '
0C                     WRITE(4,*) 'is inconsistent with the Base Year',
0C                     WRITE(6,*) '  '
0C                     WRITE(TEMP_STR,'(I6)') ACCTNO
0C                     r8TEMP = MAX(0.d0,HOURLY_TRANSACTION_LOAD(HR,I))
0C                    ALL RIGHTS RESERVED
0C                    ANNUAL_SUM = 0.
0C                    COMMON_STOCK_CASH_DIVIDENDS = COMMON_DIVIDENDS
0C                    COMMON_STOCK_CASH_DIVIDENDS = COMMON_DIVIDENDS +
0C                    COMMON_STOCK_DIV_ACCRUALS =
0C                    COMMON_STOCK_DIV_ACCRUALS = 0.
0C                    CWIP_BALANCE_ADJ = CWIP_BALANCE_ADJ
0C                    CWIP_IN_RATE_BASE_AT(CLASS_LEVEL-1) =
0C                    ENDIF
0C                    FOR KEPCO MAINTENANCE ENERGY IS IN WC MAINTENANCE
0C                    IF(ECBLK .GT. 1 .AND. RIGHT_HEAT(U) .LT. 1.) THEN
0C                    IF(TOP_PROB .GT. LEFT_HEAT(U)) THEN
0C                    LEFT(S) = BOTTOM_PROB
0C                    M.S. GERBER & ASSOCIATES, INC.
0C                    MONTHLY FUEL PRICE MODULE
0C                    MONTH_VARS(MO,DATA_POS) = MONTH_VARS(MO,DATA_POS) +
0C                    NUC_FUEL_RATE_BASE_AT(CLASS_LEVEL-1) = 
0C                    POINTR = OPTION_POINTR(PLAN_BEING_TESTED(I))
0C                    RIGHT(S) = MIN(BOTTOM_PROB,RIGHT(S))
0C                    SINKING_FUND(0,I) = ANNUAL_SUM
0C                    TARGET_MET = LOLP_CHECK()
0C                    TARGET_MET = UNSERVED_ENRG_CHECK()
0C                    TAX CONVERGENCE ROUTINE                           *
0C                    THEN TAKE THE DB VALUE FOR THE EXPENSE
0C                    VARIABLE(91) = VARIABLE(91)+SUBSIDARY_VARIABLES(91) 
0C                   CLASS_INTEREST_PS_DIVIDENDS                        C
0C                   COPYRIGHT (C) 1986                             
0C                   M.S. GERBER & ASSOCIATES, INC.
0C                   THE DEPRECIATION & AFUDC FOR TVA ON 
0C                   THE MIDAS GOLD MODEL                               C
0C                  ALL RIGHTS RESERVED VENTYX
0C                  AMOUNT = AMOUNT + MONTHLY_VALUES(MO,YR)
0C                  BY MULTI-AREA TRANSACTION GROUP
0C                  CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,COAL_DEMAND_YEAR)
0C                  CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,GAS_DEMAND_YEAR)
0C                  CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,TF_YEAR)
0C                  CALL LOCATE (12,5)
0C                  CUMULATIVE_BOOK_DEP_ADJUSTMENTS(0) = +
0C                  DO MO = 0,12
0C                  DO MO = 1, 12
0C                  ELSE
0C                  ELSE  ! USE THE CENTRAL DISPATCH MARGINAL COST
0C                  ELSEIF(LAHEY_LF95()) THEN
0C                  ELSEIF(SEGMENT_ENERGY_UNUSED .GT. 0.) THEN
0C                  ENDDO
0C                  ENDIF
0C                  ENDIF 
0C                  ENDIF                  
0C                  ENERGY_DIF = ENRG2 + UNUSED_ENRG - ENRG1
0C                  ENRG2 = ENRG2 + RR_OFPEAK_ENRG
0C                  ENRG2 = ENRG2 - RR_PEAK_ENRG
0C                  GOPINC-TO-INTEREST CONVERGENCE ROUTINE              *
0C                  HOURLY_MARKET_PRICE = 
0C                  HOURLY_MARKET_PRICE = HOURLY_MARGINAL_COST(BUYER,HOUR_IN_DAY)
0C                  HOURLY_MARKET_PRICE = MONTHLY_MARKET_PRICES(HR) *
0C                  HOURLY_TRANS_GROUP_GEN_ACTIVE(I) =
0C                  IF(CLASS_TYPE /= 'C') THEN
0C                  IF(COAL_DEMAND_YEAR /= YEAR - STUDY_BASE_YEAR) THEN
0C                  IF(CURRENT_YR == ISSYR .AND.
0C                  IF(GAS_DEMAND_YEAR /= YEAR - STUDY_BASE_YEAR) THEN
0C                  IF(I == 0) THEN
0C                  IF(NUM_OF_SUBSIDIARIES > 0) THEN
0C                  IF(RR_ENERGY_TO_SELL .LT. SEGMENT_ENERGY_UNUSED) THEN
0C                  IF(S .LT. NUMBER_OF_SEGMENTS-1) GOTO 40
0C                  IF(SALT_RIVER_PROJECT()) THEN
0C                  IF(YR == RUN_YEAR) START_MO = ISSMO
0C                  INIT_CLASS_RUN_SWITCH_FILE                          C
0C                  LOAD MODIFICATION PROGRAM                           C
0C                  LXLIM = LXLIM + DELX
0C                  LXLIM = LXLIM - DELX
0C                  MONTHLY_ECONOMY_SOLD = MONTHLY_ECONOMY_SOLD +
0C                  MONTH_ENDING=GET_MONTH_NUMBER(MIDAS_LAST_MONTH(YR))
0C                  NON_BASE_REVENUES = OPERATING_REVENUES(2,0)
0C                  OPERATING REVENUE CONVERGENCE ROUTINE               *
0C                  OTHER_DD_BALANCE(2,0) = OTHER_DD_BALANCE(2,0)
0C                  PARENT_ACQUISITION_GOODWILL(I) = 0.
0C                  PARENT_ACQUISITION_OF_SUB_COST(I) = 0.
0C                  PLANT_2_SERVICE(0,YR) = TEMP_PLANT_2_SERVICE(YR)
0C                  PROB_2_SERVE_B4_SALES = 0.               
0C                  PROB_2_SERVE_B4_SALES = GET_PROB_2_SERVE(DATA_BASE)
0C                  PROGRAMS BY MULTI-AREA TRANSACTION GROUP
0C                  RETURN ON NPV CONVERGENCE ROUTINE                   *
0C                  ROUTINE TO CONVERT COAL_LINKS FILE
0C                  ROUTINE TO CONVERT COAL_STORAGE FILE
0C                  ROUTINE TO CONVERT GAS_LINKS FILE
0C                  ROUTINE TO CONVERT GAS_STORAGE FILE
0C                  ROUTINE TO CREATE A FUEL DERIVATIVE FILE
0C                  ROUTINE TO CREATE A REGIONAL OUTAGES FILE
0C                  ROUTINE TO CREATE A REGIONAL PARAMETER FILE
0C                  ROUTINE TO CREATE A SCENARIO MAKER FILE
0C                  RR_OFPEAK_ENRG = + RR_OFPEAK_ENRG + UNUSED_ENRG
0C                  SEGMENT_ENERGY_UNUSED = 
0C                  SUBSIDARY_VARIABLES(51) = SUBSIDARY_VARIABLES(79)/ !COMMON EQUITY
0C                  SUBSIDARY_VARIABLES(52) = SUBSIDARY_VARIABLES(51) *
0C                  SUB_DIVIDEND_PAYMENTS_2_PARENT(I) = 0.
0C                  SUB_EARNINGS_2_COMMON(I) = 0.
0C                  SUB_EARNINGS_2_EXCLUDE(I) = 0.
0C                  SUB_EQUITY_NEEDS_FROM_PARENT(I) = 0.
0C                  SUB_INVESTMENT_IN_SUBS(I) = 0.
0C                  SUB_TOTAL_SUB_INCOME(I) = 0.
0C                  THIS_IS_REPORTING_CLASS = .FALSE.
0C                  VOID_LOGICAL = 
0C                  WRITE(4,*) "  "
0C                  WRITE(4,*) "HOUR = ",HR,"  MONTH = ",R_MONTH
0C                  WRITE(4,*) "More than 100 transactions within hour"
0C                  WRITE(4,*) ' '
0C                  WRITE(4,*) 'Record',RR_YEAR,'  and Year',YEAR
0C                  WRITE(4,*) 'Record',WH_YEAR,'  and Year',YEAR
0C                  WRITE(4,*) 'System Forecast.'
0C                  WRITE(4,*) 'The Base TSYtem Forecast File in'
0C                  WRITE(4,*) 'Year in Set Parameters or the Year in'
0C                  WRITE(4,*) 'in Set Parameters. Either reset Base '
0C                  WRITE(4,*) 'is inconsistent with the Base Year',
0C                 ADD THE ANNUAL AMORTIZATION EXPENSE TO THE
0C                 ADDITIONS_BALANCE=ADDITIONS_BALANCE+MONTHLY_ADDITIONS
0C                 ADJUSTMENT_CLAUSE_REVENUES=ADJUSTMENT_CLAUSE_REVENUES
0C                 AMTINCOME = AMTINCOME - ENVIRONMENTAL_TAX
0C                 AND ADD BALANCE TO DEFERRED DEBIT ACCOUNT
0C                 AND CONVERT TO BINARY FORMAT
0C                 ANNUAL_VALUES(YR) = ANNUAL_VALUES(YR) +
0C                 ASSET_CLASS_NAME =
0C                 BASE_RATES_REVENUES = BASE_RATES_REVENUES  
0C                 BUY HEAT RATE CALCULATIONS
0C                 BUY UNTIL THE RR PRICE IS GREATER THAN SEGMENT_COST 
0C                 CALL CPL_ACCOUNTING_4_DEFERRED_FUEL(CLASS,
0C                 CALL MONTHLY_BOOK_VALUES_IN_DOLLARS(VECTOR_DATA,
0C                 CALL TREND_ANNUAL_INPUT(PLANT_2_SERVICE,
0C                 CLASS_OTH_LIAB_SALE_ASSETS = CASH_FROM_SALE_OF_ASSETS-
0C                 COMMON_STOCK(2,0) = COMMON_STOCK(2,0) + 
0C                 CONSOLIDATED_FED_NOL_GEN = 0.
0C                 CONSOLIDATED_FED_NOL_USED = 0.
0C                 CUMTXNORM(2,0) = CUMTXNORM(1,0) +
0C                 CUMTXNORM(2,0) = EXCLUDE_SUB_TAX_DEFERRALS_DR  ! CHANGED TO BELOW 3/13/98
0C                 CURVE ON AN ODD SPACED GRID
0C                 CUSTOMER_DEPOSIT_INTEREST_ON = MONTHLY_INTEREST +
0C                 DEFERRED_FUEL_EXPENSE=ADJUSTMENT_CLAUSE_REVENUES
0C                 DEF_TAX_CR_BALANCE(2,CLASS_POS) =
0C                 DO DATA_POS = 1, LAST_INCOME_LINE
0C                 ELSE
0C                 ELSE TAKE THE STRAIGHT LINE UNTIL NPV IS ZERO
0C                 END = STUDY_PERIOD+1
0C                 ENDDO
0C                 ENDIF
0C                 FILE NOT UP DATED.  INTEREST PAID MONTHLY               
0C                 FIRST_AC_TG(AC) = TG
0C                 IF(ECBLK .GT. 1 .AND. RIGHT_HEAT(U) .LT. 1.) THEN
0C                 IF(EMPIRE_IS_ACTIVE) THEN
0C                 IF(LAHEY_LF95()) IREC = IREC + 1 
0C                 IF(NUM_OF_REGULATED_UNITS > 0)
0C                 INTEREST(MO,YR) = DIVIDENDS_DECLARED
0C                 LEFT(S) = MAX(MIN(RIGHT(S-1),TOP_PROB),LEFT(S))
0C                 M.S. GERBER & ASSOCIATES, INC.
0C                 M.S. GERBER & ASSOCIATES, INC.                       C
0C                 MONTHLY_INTEREST = INTEREST_ON_CUSTOMER_DEPOSITS/12. *
0C                 NET_DD_BALANCE(2,CLASS_POS) =
0C                 REARNC(2,0) = REARNC(2,0) + SUBSIDARY_VARIABLES(78)
0C                 RIGHT(S) = MAX(RIGHT(S),MIN(LEFT(S),TOP_PROB))
0C                 SBU_LTD_ELIM = SBU_LTD_ELIM + LONG_TERM_DEBT_ISSUED -
0C                 SBU_LTD_ELIM=SBU_LTD_ELIM+LONG_TERM_DEBT(2,CLASS_POS)
0C                 SBU_PS_ELIM = SBU_PS_ELIM + PREFERRED_STOCK_ISSUED -
0C                 SBU_PS_ELIM=SBU_PS_ELIM+PREFERRED_STOCK(2,CLASS_POS)
0C                 SBU_STD_ELIM = SBU_STD_ELIM + SHORT_TERM_DEBT_ISSUED
0C                 SBU_STD_ELIM=SBU_STD_ELIM+SHORT_TERM_DEBT(2,CLASS_POS)
0C                 SELL HEAT RATE CALCULATIONS
0C                 STDMIN = MIN(STD_MAX,SHORT_TERM_DEBT(1,CLASS_POS)
0C                 SUBSIDARY_VARIABLES(101) = PARENT_COMMON_STOCK_ISSUED
0C                 SUBSIDARY_VARIABLES(59) = PARENT_AVERAGE_EQUITY
0C                 SUBSIDARY_VARIABLES(73) = CUMTXNORM(2,0)
0C                 TDDB(I,CLASS)   = TDDB(I,CLASS) + DDB(I) * ALLOCATOR
0C                 THEN ADD BALANCE TO RATE BASE DEFERRED DEBIT
0C                 TOTAL AMORTIZATION EXPENSE
0C                 Transferred to MIDAS in 1985                         C
0C                 VOID_LOGICAL = SET_DRILLING_DATA_CASH_TRUE()
0C                CARRY_OVER = 0.
0C                CASH_PAYMENTS(MO,YR) = CASH_PAYMENTS(MO,YR)+CARRY_OVER
0C                EXIT
0C                FOR LHS DISTRIBUTIONSF
0C                FUNDS = FUNDS + NUCL_FUND_RETURN ! 6/29/04 ADDED TO NON_CASH_ATL_REVENUES
0C                M.S. GERBER & ASSOCIATES, INC.
0C                ROUTINE TO CALCULATE DUKE CATAWBA COSTS
0C                ROUTINE TO CONVERT CATAWBA CAPACITY CHARGES
0C                ROUTINE TO CONVERT CATAWBA ENERGY CHARGES
0C                ROUTINE TO CONVERT CATAWBA WHEELING CHARGES
0C                ROUTINE TO CONVERT RDI BASE CASE FILE
0C                ROUTINE TO CONVERT RDI FILE
0C                ROUTINE TO CONVERT USER_DAY FILE
0C                ROUTINE TO READ FUEL DERIVATIVES FILE
0C               1  OPERATION                                           *
0C               2  MAINTENANCE                                         *
0C               3  FOSSIL FUEL                                         *
0C               4  PURCHASED POWER                                     *
0C               5  PURCHASED GAS                                       *
0C               ADJ_SUPPLEMENTAL_CAP_DOLLARS = 
0C               AMCHEK = ((RXLIM+LXLIM)*(M1-M2)/2.+B1-B2)*(RXLIM-LXLIM)
0C               AMOUNT = 0
0C               APPLY_FACTOR = A_FACTOR(R_COMPANY)
0C               APPLY_FACTOR = B_FACTOR(R_COMPANY)
0C               Alto's method of calculating revenues and transfers.   C
0C               CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,WH_YEAR)
0C               CALL PASS_LEVEL_2_VARS(VARS_2_PASS,
0C               CALL SET_INIT_CLASSES(CLASS_NUM,
0C               CARRY_OVER = CARRY_OVER + INTEREST(MO,YR)
0C               CASH_PAYMENTS(MO,YR) = INTEREST(MO,YR)
0C               COMMON_SHARES(2,CLASS_POS) = .0001
0C               COPYRIGHT (C) 1982,1983,1984,1985, 1995                C
0C               CUSTOMER_DEPOSIT_INTEREST_ON = 0.
0C               CYCLE
0C               DELX = DELX * .5
0C               DO I = 1, MAX_LINKED_LEVEL
0C               DO MO = 0, 12
0C               DO MO = 1, 12
0C               DO MO = 1, 12 
0C               DOWHILE(RIGHT(NEXT_K) .GE. RIGHT(K) 
0C               DPS THE ITC CONVERGENCE TAKES PRIORITY.                C
0C               ELSE
0C               ELSEIF(TEMP_TRANSACTION > 0. .AND.
0C               ENDDO
0C               ENDIF
0C               ENRG2 = ENRG1 + IPUMEN(LPUMP)
0C               EXCLUDE_FED_TAXES = EXCLUDE_FED_TAXES + FEDERAL_TAXES
0C               EXISTING ASSET ANALYSIS MODULE--MOD 1                  C
0C               FOR ROR AND PEAKING HYDRO UNITS                        C
0C               HOURLY_MARKET_PRICE =  MONTHLY_MARKET_PRICES(HR)
0C               I = I + 1
0C               IF(CENTRAL_DISPATCH_TRANSACT) THEN
0C               IF(CURRENT_YR > ENDYR) EXIT
0C               IF(ENRGBL-AMCHEK > 0.) THEN
0C               IF(LAHEY_LF95()) LREC = LREC + 1
0C               IF(MONTHLY_MIDAS_ACTIVE .AND.  ! WVPA CHANGE
0C               IF(RR_YEAR /= YEAR - STUDY_BASE_YEAR) THEN
0C               IF(TEMP_INTERP_TRANSACTION > 0.d0 .AND.
0C               IF(WH_YEAR /= YEAR - STUDY_BASE_YEAR) THEN
0C               INCOME, DIVIDENDS PER SHARE AND ITC TAKEN FOR EACH     C
0C               MODEL'S FINANCING EQUATIONS BEGIN HERE
0C               MONTHLY_ITC_EARNED(MO,YR-1) = RTITC *
0C               MONTHLY_VALUES_IN(1:12,YR) = TEMP_MONTHLY_VALUES(1:12)
0C               NUCL_DECOM_FUND = NUCL_DECOM_FUND + 
0C               OPENING_BALANCE = BAL(12,YR-1)
0C               OPERATING_REVENUE_TAX = OPREV_TAX_RATE *
0C               OTHER_TAXES = 0.
0C               OTHER_TAXES = CLASS_OTHER_TAXES_RATE/100. *
0C               PART OF THE PICAM MODEL                                C
0C               PREMIUM_BAL(ISSMO,I) = PREM_DISC_BALANCE
0C               RTEMP_FIXED_COST = ABS(RTEMP_FIXED_COST)
0C               RTEMP_VARCST = ABS(RTEMP_VARCST)
0C               R_COMMON_SHARES_BUY_FROM_EQUITY =
0C               R_COMMON_SHARES_ISSUED_2_EQUITY =
0C               R_CURRENT_LTD_RETIRE = R_CURRENT_LTD_RETIRE
0C               R_LTD_PREM_BAL = LTD_PREM_BAL(12,YR,ASSET_CLASS)
0C               THE MIN() BELOW.
0C               The increments to LTD and PS of interest       ,       C
0C               The module computes the annual totals for gross        C
0C               VARIABLE = 0.
0C               VARIABLE(636) = FASB143_NET_ASSET_VALUE(2,CLASS_POS)
0C               VECTOR_VALUE = VECTOR_VALUES(AVAIL_DATA_YEARS) ! MODIFIED TO ESCALATE 11/21/06 DR.G
0C               VOID_LOGICAL = WVPA_STORE_TRACKER_INFO(MO,
0C               WROTE_REPORT =  WRITE_CONTRIBUTION_REPORT(HR,I)
0C               YEAR.  IF THE OPERATING METHOD IS NOT NPV OR NOT       C
0C               and retirements.                                       C
0C               balance sheet, and the tax and interest expenses       C
0C               converts percent values to fractions.                  C
0C               depreciation on existing plant and the annual          C
0C               developed in January, 1992 based on the City of Palo   C
0C               dividends, and retirements are computed.               C
0C               for a municipal utility.  The orginal version was      C
0C               module computes the liabilities portion of the         C
0C               on the income statement.                               C
0C               plant retirements.                                     C
0C               plant value, book depreciation, tax depreciation,      C
0C               run switch file for each class by year.                C
0C              ADDITIONS_BALANCE = CUSTOMER_DEPOSITS_BAL(1,CLASS_POS)
0C              AFTER THEY HAVE BEEN OPERATED UPON BY HYDRO ROUTINES
0C              AFUDC METHOD IS 1
0C              ALLOC_EXPEN(1,0) = ADDENDUM(1) * ALLOCATION_VALUE(1)/100. 
0C              ALLOC_EXPEN(1,0) = ADDENDUM(1) * ASSET_ALLOCATOR 
0C              AND ADD BALANCE TO DEFERRED DEBIT ACCOUNT
0C              ANNUAL_VALUES(YR) = 0.
0C              ASSET_ALLOCATION_LIST(1) = 100.
0C              ASSET_ALLOCATION_LIST(2) = 0.
0C              ASSET_CLASS_LIST(1) = ASSET_CLASS
0C              ASSET_CLASS_LIST(2) = 0.
0C              AVE_RUNNING_RATE(COUNT+1) = AVE_RUNNING_RATE(COUNT-1)
0C              AVE_RUNNING_RATE(COUNT+1) = RUNNING_RATES(I) / OBS(I))
0C              BAL(I) = [ value retained from prior invocation ]
0C              CALL GET_ASSET_VAR(ABS(ASSET_ALLOCATION_VECTOR),
0C              CALL GET_ASSET_VAR(ABS(ASSET_CLASS),
0C              CALL GET_ASSET_VAR(IVEC,DUMMY_TYPE,VECTOR_DATA_CASH)
0C              CALL GET_ASSET_VAR(IVEC,DUMMY_TYPE,VECTOR_DATA_PLNT)
0C              CALL SET_ALL_OUTPUT_VARIABLES
0C              CAP_MW = MIN(GET_CLASS_PEAK_NET_DSM_FOR_CAP(
0C              CHECK FOR ABILITY TO BUY ENERGY
0C              CLASS_DEFERRED_FUEL_BALANCE = SBU_VARIABLES(392)
0C              CONSOLIDATED_TAX_ADJUSTMENT =
0C              CONSOLIDATED_TAX_ADJUSTMENT = 0.
0C              CONSOLIDATED_TAX_ADJUSTMENT = FEDERAL_TAXES
0C              CONSOLIDATED_TAX_ADJUSTMENT = FEDERAL_TAXES +
0C              COPYRIGHT (C) 1991, 1995 M.S. GERBER & ASSOCIATES, INC.
0C              CUMULATIVE_GPV_ADJUSTMENTS(CLASS_POS) =
0C              CUSTOMER_DEPOSITS_INTR_PAYABLE = MONTHLY_INTEREST
0C              DEBT WAS ISSUED DURING THIS MODEL YEAR
0C              DEFERRED_FUEL_EXPENSE = 0.
0C              DEFERRED_FUEL_EXPENSE = DEFERRED_FUEL_EXPENSE
0C              DO MO = 1, 12
0C              ELSE
0C              ENDDO
0C              ENDIF
0C              ESTIMATE NET_INCOME
0C              FOR FIVE EMISSIONS GROUPS
0C              FROM_RESERVES=ABS(CHANGE_IN_RESERVES +
0C              IF(BALANCE(MO,YR) == 0.) THEN   ! REMOVED 8/28/99 SO THAT INTEREST 
0C              IF(CLASS_TYPE(CLASS_POS) == SBU) THEN ! ASSET_CLASS_TYPE
0C              IF(CPL_IS_ACTIVE) THEN
0C              IF(DUKE_IS_ACTIVE) THEN
0C              IF(IOS /=0 .AND. IREC > MAX_SIMULATION_YEARS) EXIT
0C              IF(MONTHLY_EL_REPORT_ACTIVE) THEN
0C              IF(YR == IYR .AND. MO < ISSMO) CYCLE ! GOTO 67
0C              INTEREST(I) = 0. [ value retained from initialization ]
0C              INTEREST(MO,YR) = 0.
0C              ISSUE_EXPENSE_BAL(12,0) = ISSUE_EXPENSE_BALANCE
0C              ISSUE_EXPENSE_BAL(ISSMO,I) = ISSUE_EXPENSE_BALANCE
0C              LOCAL_NAME = UNITNM(UNIT_NO)
0C              LOCAL_POINTER = ABS(MONTHLY_CAPACITY_POINTER)
0C              LONG_TERM_DEBT_ISSUED = LONG_TERM_DEBT_ISSUED -
0C              LONG_TERM_DEBT_RETIREMENTS = LONG_TERM_DEBT_RETIREMENTS -
0C              MAY WANT TO RESORT HIGHEST TO LOWEST IN THE FUTURE
0C              NF_NON_CASH_EXPENSE = NF_NON_CASH_EXPENSE +
0C              NO TRANSACTION TAKE PLACE
0C              PARENT_CLASS_ID_NUM = ASSET_CLASS_ID
0C              POINTR = OPTION_POINTR(PLAN_BEING_TESTED(I))
0C              PREFERRED_STOCK_ISSUED = PREFERRED_STOCK_ISSUED -
0C              PREFERRED_STOCK_RETIREMENTS=PREFERRED_STOCK_RETIREMENTS - 
0C              RECOMPUTE THE YEAR'S POST-ANNIVERSARY INTEREST BY DEDUCTING
0C              ROUTINE FOR READING ENVIRONMENTAL EMISSIONS DATA
0C              RTEMP = GOPINC + OTHINC + INTINC +
0C              SINKING_FUND(I) = [ value retained from prior invocation ]
0C              SINKING_FUND(MO,I) = 0. [ value retained from initialization ]
0C              SUBSIDARY_VARIABLES(77) = EXCLUDE_SUB_COMMON_EQUITY
0C              SUBSIDARY_VARIABLES(78)=EXCLUDE_SUB_RETAINED_EARNINGS
0C              SUBSIDARY_VARIABLES(79)=EXCLUDE_SUB_RETAINED_EARNINGS+
0C              SUB_EQUITY_NEEDS_FROM_PARENT(CLASS_LEVEL-1) =
0C              SUBs_LINKED_TO_PARENT(1) = PARENT_CLASS_ID_NUM
0C              TAKE CARE OF THE NON-DECREASING RIGHT'S
0C              TG = GET_TRANS_GROUP_INDEX(TRANS)
0C              THE AMOUNT AT OLDRAT DURING POST-PAYMENT PART OF THE YEAR
0C              THE RE-AMORTIZATION BEGINS WITHIN THE CURRENT YEAR;
0C              THEN ADD BALANCE TO RATE BASE DEFERRED DEBIT
0C              THIS_YEARS_RECORD = THIS_YEARS_RECORD - 13
0C              TO_RESERVES = ABS(CHANGE_IN_RESERVES + 
0C             ASSET VECTOR FILES.
0C             BECAUSE THE VALUE IS ESCALATED FROM BASE YEAR TO CURRENT YEAR
0C             CHANGE_IN_FUNDS_B4_FINANCING = CHANGE_IN_FUNDS_B4_FINANCING
0C             CONVERSION ROUTINE FOR MIDAS 2.X ASSET PARAMETERS AND
0C             FUNCTION TO READ CAPITAL RATES FOR MIDAS GOLD     
0C             FUNCTION TO READ VARIABLE UNIT PARAMETERS FOR MIDAS     
0C             INTEREST VECTOR FILES TO MIDAS GOLD ASSET RATE AND
0C             Monthly Module for Monthly MIDAS Gold
0C             PROGRAM TO MANAGE SHORT-TERM DEMAND FORECASTS
0C             THE ADDITIONS & IMPROVMENTS ANALYSIS MODULE FOR TVA
0C            ALLOCATE(ASSET_CLASS_POINTER(MAX_ASSET_CLASS_NUM))
0C            AMORTIZATION_OF_FUEL_INVENTORY = 0.
0C            ASSETS_NEC = OPREV_IN_ASSETS_NEC *
0C            B = A + ENERGY
0C            CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,COAL_DEMAND_YEAR)
0C            CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,GAS_DEMAND_YEAR)
0C            CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,TF_YEAR)
0C            CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,WH_YEAR)
0C            CALL RETURN_ADDENDUM_CLASS_POINTER(ASSET_CLASS_POINTER)
0C            CALL RETURN_FA_POINTER(ASSET_CLASS_POINTER)
0C            CALL RETURN_FA_POINTER(TEMP_LIST)
0C            CASH_ADDITIONS_2_FUEL_INVENTORY = 0.
0C            CASH_VARIABLES = 0.
0C            CHANGE_IN_WORKING_CAPITIAL = WCCUM(2,CLASS_POS) -
0C            CHARACTER (LEN=256) :: HELP_MSG
0C            CLASSES_FOUND = LOAD_MASTER_CLASS_LIST(MAX_FA_CLASS_NUM,
0C            CLOSE(951,IOSTAT=IOS)
0C            COLLECTION_GROUP = 
0C            COMMON_SHARES(2,INIT_CLASS) = .0001
0C            CONSOLIDATED_CLASS = 'Y'
0C            DEFERRED_EXPENSE_CASH = DEFERRED_EXPENSE_CASH +
0C            DEFERRED_TAX_BASIS=DEFERRED_TAX_BASIS+NF_DEFERRED_TAX_BASIS
0C            DELX = (RXLIM - LXLIM)*.5
0C            DIVIDEND_PAYOUT = 0.   
0C            DO MO = 0, 12
0C            DO YR = 10, AVAIL_DATA_YEARS
0C            DOWHILE(ABS(ENRGBL - AMCHEK) > .01 .AND. I < 10)
0C            ELSE
0C            ELSE! IF(PARENT_CLASS .OR. SUBSIDIARY_CLASS) THEN ! CLASS_TYPE(CLASS_POS) /= SBU .AND.
0C            END OF FINANCING FOR NPV OPERATING MODE
0C            END OF FINANCING IF ROE OPERATION MODE
0C            ENDDO
0C            ENDIF
0C            ENERGY = AVAILABLE_CONTRACT_ENRG
0C            ENERGY = ENERGY - OFF_LOAD_ENRG
0C            ENRG_ONLY_ENRG_USED = OFF_LOAD_ENRG
0C            FUNCTION TO READ CAPITAL RATES AND ADJUST THEM
0C            HOURLY_MARKET_PRICE = GET_MARGINAL_COST(
0C            I = 0
0C            IF(ABS(WLOADS(I+1,CURRNT) -LXLIM) < .000001 ) I = I + 1
0C            IF(ABS(WLOADS(J+1,CURRNT)-PEAKCP-LXLIM) < .000001) J = J + 1
0C            IF(BASE_DATE + MO >= BEGIN_ASSET_ANALYST_TRANSFER) EXIT
0C            IF(CASH_VALUES_VECTOR == 0.) THEN  ! REMOVED 3/12/06 MSG NOT NEEDED
0C            IF(CASH_VECT /= 0 .AND. MONTHLY_MIDAS_ACTIVE .AND.   ! CHANGED FOR WVPA TO CONTINUE TO USE MONTHLY DATA
0C            IF(CASH_VECT /= 0 .AND. MONTHLY_MIDAS_ACTIVE .AND. ! CHANGED FOR WVPA TO GET MONTHLY INFOR IF THERE
0C            IF(DELETE >= 8 .OR. VECTOR_ACTIVE == 'N') THEN
0C            IF(FIRSTYR_VEC > LAST_STUDY_YEAR) CYCLE ! Changed to below to pull investment in the study period
0C            IF(INTEREST_ON_LONG_TERM_DEBT /= 0.)
0C            IF(ISSYR <= BASE_YR) PREMIUM_BAL(12,0) = PREM_DISC_BALANCE
0C            IF(IYEAR == 2001 .AND. IN_SERVICE_MONTH < 9) CYCLE
0C            IF(MONTHLY_MIDAS_ACTIVE .AND. 
0C            IF(OEI_SUPPLEMENTAL_CAP_DOLLARS(R_COMPANY) /= 0.) THEN
0C            IF(R_COMPANY < 3) THEN                      
0C            IF(USE_MARKET_PRICING) THEN
0C            IF(VARIABLE == Monthly Emission Credits) CYCLE
0C            INTERVAL_AREA = 0.
0C            LINEC(2,CLASS_POS) = OPREV_IN_LIBS_NEC *
0C            LODDUR(LOAD_POINT) = A
0C            LPROB(LOAD_POINT) = LEFT
0C            L_SUPPLEMENTAL_CAP_DOLLARS(R_COMPANY) = 
0C            MWB = ABS(MWB)
0C            M_HOURLY_LOAD_B4_SALES(0,HOUR_IN_DAY) = r8TEMP
0C            OFF_LOAD_ENRG = ENERGY - AVAILABLE_CONTRACT_ENRG
0C            OFF_LOAD_ENRG = MIN(OFF_LOAD_ENRG,
0C            OTHER_DD_BALANCE(2,CLASS_POS) =
0C            PARENT_CLASS_LOC = PARENT_CLASS_LOC - 1
0C            PRODUCTION_METHOD_TITLE =
0C            PRODUCTION_METHOD_TITLE = 'Derating Production Cost Method'
0C            PURCHASE_ENERGY_OUT = PURCHASE_AREA
0C            RECLN = trim(RECLN)//',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'
0C            REMAINING_ENRG_ONLY_ENRG = REMAINING_ENRG_ONLY_ENRG-
0C            RTEMP_FIXED_COST = ABS(RTEMP_FIXED_COST)
0C            RTEMP_VARCST = ABS(RTEMP_VARCST)
0C            R_CLASS_POINTERS(1:MAX_BC_CLASS_ID_NUM) =
0C            R_CLASS_POINTERS(1:MAX_OL_CLASS_ID_NUM) =
0C            R_MAX_CLASS_NUM = MAX_BC_CLASS_ID_NUM
0C            R_MAX_CLASS_NUM = MAX_OL_CLASS_ID_NUM
0C            R_MONTHLY_ECONOMY_COST = PURCHASE_COSTS(R_MONTH)
0C            R_MONTHLY_ECONOMY_REVENUE = SALES_REVENUE(R_MONTH)
0C            R_NUM_OF_CLASSES = NUM_OF_BC_ASSET_CLASSES
0C            R_NUM_OF_CLASSES = NUM_OF_OL_ASSET_CLASSES
0C            STI_CASH_LAG = 0
0C            STOP
0C            SUPPLEMENTAL_CAP_DOLLARS = 
0C            TEMP_MONTHLY_VALUES(1:12) = MONTHLY_VALUES_IN(1:12,10)
0C            THIS_VERSION_IS_RealWIN = .TRUE.
0C            TO THE WRITE OFF DEFERRED TAX VECTOR
0C            TOP_LIMIT = TOP_LIMIT + 1
0C            TRANS_GROUP = GET_TRANS_GROUP_POSITION(R_TG)
0C            UNUSED_ENRG = (ENRG_BAL-ENRG_INC)*FLOAT(HOURS)
0C            USE_TRANSACT_ANALYST_RESULTS(MO) = .FALSE. 
0C            WCCUM(2,CLASS_POS) = ASSETS_NEC - LINEC(2,CLASS_POS)
0C            WLOADS(INEXT,NEXT) = WLOADS(I,CURRENT)
0C            WLPROB(INEXT-1,NEXT) = WLOADS(LDCPTS,CURRENT)
0C            WRITE(4,*) ' '
0C            WRITE(4,*) 'Record',COAL_DEMAND_YEAR,'  and Year',YEAR
0C            WRITE(4,*) 'System Forecast.'
0C            WRITE(4,*) 'The Overlay System Forecast File  ',
0C            WRITE(4,*) 'Year in Set Parameters or the Year in'
0C            WRITE(4,*) 'in Set Parameters. Either reset Base '
0C            WRITE(4,*) 'is inconsistent with the Base Year',
0C            WRITE(6,*) "ERROR CODE: TOO LITTLE BASE IN PEAK SHIFT"
0C           ACTIVE_TAX_LOSS_CLASSES = READ_TAX_LOSSES(MAX_CLASS_NUM,
0C           ADD THE DISALLOWED TAX PORTION OF THE BOOK WRITE OFF TO
0C           ADDED 3/10/93. GAT. TRAP FOR MULTIPLE IDENTICLE RIGHT VALS
0C           ADDED 4/30/92 TO TRAP FOR DELTA LOAD = 0
0C           ADJ_2_FOEDERAL_TAXES = 0.
0C           ADJ_2_STATE_TAXES = 0.   ! NEED TO ADD TO PARM FILE
0C           AFDC1(I+IOFFSET) = VECTOR_DATA(I)
0C           AFDC2(I+IOFFSET) = VECTOR_DATA(I)
0C           AFUDC METHOD IS 1
0C           ALL RIGHTS RESERVED
0C           ALL RIGHTS RESERVED M.S. GERBER & ASSOCIATES, INC.
0C           ALLOCATOR = ASSET_ALLOCATION_LIST(CLASS_POINTER)/100.
0C           AMORT = INT_CAMORT * ASSET_ALLOCATOR
0C           AND THE NEXT HIGHEST VALUE BECOMES THE NEW BOTTOM VALUE.
0C           ANNUAL AFUDC ON CONSTRUCTION EXPENSES            AFDC1     *
0C           ANNUAL AMORTIZATION EXPENSE
0C           ANNUAL AMOUNT OF PLANT ENTERING SERVICE          CEP       *
0C           ANNUAL AMOUNT OF PLANT ENTERING SERVICE         CEP        *
0C           ANNUAL CASH EXPENDITURES                         CE        *
0C           ANNUAL CASH EXPENDITURES                        CE         *
0C           ANNUAL CWIP IN RATE BASE                         RBCWIP    *
0C           ANNUAL INTEREST ON CONSTRUCTION EXPENSES        PCAPINRST  *
0C           ANNUAL INTEREST ON PLANT ENTERING SERVICE       CAPINRST   *
0C           ANNUAL YEAR END CWIP BALANCE                     CWIP      *
0C           ANNUAL YEAR END CWIP BALANCE                    CWIP       *
0C           ANNUAL afudc_on_plant ENTERING SERVICE           AFDC2     *
0C           ASSET_ALLOCATION_LIST(1) = 100.
0C           ASSET_ALLOCATION_LIST(1) = FLOAT(R_ASSET_CLASS_VECTOR)
0C           ASSET_ALLOCATION_LIST(2) = -99.
0C           ASSET_ALLOCATION_LIST(2) = 0.
0C           ASSET_CLASS_LIST(1) = ASSET_CLASS
0C           ASSET_CLASS_LIST(1) = R_ASSET_CLASS
0C           ASSET_CLASS_LIST(2) = 0
0C           BAL(I) = 0. [ value retained from initialization ]
0C           BALANCE THE AFUDC VALUES BASED ON SWITCH 1 OR 2
0C           BY TRANSACTION GROUP ASSET CLASS AND CUSTOMER GROUP
0C           BY TRANSACTION GROUPASSET CLASS AND CUSTOMER GROUP
0C           CALCULATE UNUSED ENERGY. THE PROGRAM IS TERMINATED 
0C           CALL BOOK_DEP_USING_VECTOR(VECTOR,GPV,BOOK_DEP,CUM_BOOK_DEP)
0C           CALL CLOSE_FUTURE_ASSET_FILE
0C           CALL CMOVE(TEMP_ASSET_CLASS_POINTER,
0C           CALL GET_ASSET_VAR(ABS(ASSET_CLASS),
0C           CALL GET_ASSET_VAR(ABS(ASSET_CLASS_VECTOR),
0C           CALL GET_ASSET_VAR(ABS(R_ASSET_CLASS),
0C           CALL GET_ASSET_VAR(ABS(R_ASSET_CLASS_VECTOR),
0C           CALL GET_ASSET_VAR(IVEC,DATA_TYPE,BKDEPV)
0C           CALL Integrate(ENRG1,LODDUR,LPROB,LDCPTS,HOURS,LODDUR(1))
0C           CALL TAXES(OPERATING_METHOD,RUN_YEAR,SPMETH,BASE_YEAR,
0C           CAPITALIZATION FOR THE MIDAS GOLD VERSION
0C           CASH_2_LT_INVESTMENTS = STI_CHANGE_IN_CASH -
0C           CEP(I)   = MIN(CEP(I),1.) * TEMP_CWIP
0C           CHANGE_IN_LONG_TERM_INVESTMENTS = CASH_2_LT_INVESTMENTS +
0C           CHANGE_IN_RESERVES = CHANGE_IN_RESERVES + 
0C           CLASS_BTL_REVENUES = CLASS_BTL_REVENUES + NUCL_FUND_RETURN
0C           CLASS_GPV(1,CLASS) = 0.
0C           CLASS_GPV(2,CLASS_POS) = CLASS_GPV(2,CLASS_POS) +
0C           CLASS_NET_NF_VALUE(2,CLASS_POS) = 
0C           CLASS_OTH_LIAB_SALE_ASSETS = CASH_FROM_SALE_OF_ASSETS -
0C           COMPUTE THE ANNUAL AMOUNT OF THE WRITE OFF TO AMORTIZE
0C           COMPUTE THE YEAR END UNAMORTIZED BALANCE AND ADD IT
0C           COMPUTE THE YEAR END UNAMORTIZED TAX BALANCE AND ADD IT
0C           COPYRIGHT (c) 1991 M.S. GERBER & ASSOCIATES, INC
0C           CUMULATIVE_BOOK_DEP(0,I,ASSET_CLASS) =
0C           CUMULATIVE_NUCLEAR_BURN(CLASS_POS) =
0C           CUM_DEFERRED_EXPENSE_CASH(CLASS_POS)=DEFERRED_EXPENSE_CASH +
0C           DDAMTC(2,CLASS_POS) = DDAMTC(2,CLASS_POS) +
0C           DEFERRED_FUEL_BALANCE(CLASS_POS) =
0C           DOWN HERE SO THAT WE CAN GET THE INTERPOLATED VALUE
0C           ELSE
0C           ELSE   
0C           ELSEIF(ADDITIONAL_REVENUES .LT. ABS(CHANGE_IN_RESERVES))THEN
0C           ELSEIF(MONTHLY_CAPACITY_POINTER < 0 .AND.
0C           ENDIF
0C           ENDIF   
0C           ENERGY VIOLATED?
0C           FED_TAX_CREDIT_PASSED_UP = FED_TAX_CREDIT_PASSED_UP + 25. ! NEED TO ADD TO PARM FILE
0C           FOR THE LAST LDC POINT.
0C           I = I + 1
0C           IF THE BALANCE TO BE AMORTIZED IS LESS THAN THE
0C           IF THERE ISN'T SUFFICIENT ENERGY LEFT IN THE TAIL,
0C           IF(ADDITIONAL_REVENUES .GT. ABS(CHANGE_IN_RESERVES)) THEN
0C           IF(ALLOCATED(CLASSIFICATION_TYPES))
0C           IF(ASSET_CLASS < 0) THEN
0C           IF(OBS(I) .GT. 0 ) THEN
0C           IF(USE_DEFERRED_FUEL_ACCOUNTING) THEN
0C           IF(YEAR > LAST_AVAILABLE_MONTHLY_YEAR .OR.
0C           IF(YR ==1 .AND. CLASS_TYPE(CLASS_POS) == SBU) THEN
0C           LIQUID_INVESTMENTS(2,R_CLASS_POS) =
0C           LIQUID_INVESTMENTS(2,R_CLASS_POS)=MAX_SHORT_TERM_INVESTMENT
0C           LPROB(COUNT+1) = LPROB(COUNT-1) - DELTA_PROB
0C           LTD_STD_INTEREST = LTDINT(RUN_YEAR) + STDINT(2)
0C           MWB = ABS(MWB)
0C           NOTE: BASE YEAR AFDC1 BALANCE IS ELEMENT AFDC1(1)
0C           NUC_FUEL_RATE_BASE(2,CLASS_POS) =
0C           OTHER_EXPENSE_2 = OTHER_EXPENSE_2 +
0C           PFESCR(I) = 0
0C           PREFERRED_DIVIDENDS = DEBT_FILE_PREFERRED_DIVIDENDS+PSRATE *
0C           ROUTINE TO CREATE A REGIONAL PARAMETER AND OUTAGE FILE
0C           TAFDC1  = TAFDC1 + VECTOR_DATA(I)
0C           TAFDC2  = TAFDC2 + VECTOR_DATA(I)
0C           TARGET_MET = LOLP_CHECK(LOLP)
0C           TARGET_MET = UNSERVED_ENRG_CHECK(UNSERVEC_ENERGY)
0C           TEMP_CWIP  = TEMP_CWIP + CE(I)
0C           TEMP_CWIP  = TEMP_CWIP - CEP(I)
0C           TGPV(0,I,ASSET_CLASS) = TGPV(0,I,ASSET_CLASS) + GPV(0,I) *
0C           THE DEFERRED TAX ADJUSTMENT VECTOR
0C           THE PREVIOUS HIGH VALUE BECOMES THE NEW HIGH VALUE
0C           THE TOP AND BOTTOM DEFINE THE TRANSACTION INTERVAL.
0C           THEN ASSUME THE TAIL STAYS THE SAME, TRUNCATE THE TAIL, 
0C           TO THE APPROPRIATE DEBIT ACCOUNT
0C           TOTAL_RESERVE_BALANCE(2) = TOTAL_RESERVE_BALANCE(2) +
0C           USE CODE SPECIFIC TO COVERAGE_RATIO OF 2 OR 3
0C           VALUES ABOVE ARE VALID JUST AFTER PAYMENT ON THE ANNIVERSARY DATE
0C           VALUE_IS_A_RATE = .FALSE.
0C           YEAR_START = R_YEAR - BASE_YEAR
0C           and the project is expensed for revenue purposes)
0C           expensed for revenue purposes)
0C          1                     RB             RB
0C          2                     RB             DD
0C          3                     RB             EE
0C          4                     DD             DD
0C          5                     DD             EE
0C          6                     EE             EE
0C          ALL RIGHTS RESERVED
0C          ALL RIGHTS RESERVED M.S. GERBER & ASSOCIATES, INC.
0C          CALCULATE INTEREST PAID ON LTD                       
0C          CALCULATION SUBROUTINE
0C          COPYRIGHT (C) 1983 M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1983 M.S. GERBER & ASSOCIATES, INC.           *
0C          COPYRIGHT (C) 1983, 84, 85  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1983-1993  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1983-95  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1983-98  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1984-88  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1991 M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1991-92  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1991-94 M.S. GERBER & ASSOCIATES,INC.         C
0C          COPYRIGHT (C) 1992  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (C) 1993  M.S. GERBER & ASSOCIATES, INC.
0C          COPYRIGHT (c) 2007 DrG-Solutions, LLC
0C          CREATE THE BASE FILE
0C          Copyright (c) 1992 M.S. Gerber & Associates, Inc.           C
0C          MIDSA GOLD CAPABILITIES ADDED JUNE, 1991
0C          OBJECT TO CONVERT DATA FILES TO DIRECT ACESS BINARY
0C          ROUTINE TO CONVERT FROM ASCII TO DIRECT-ACESS BINARY
0C          ROUTINE TO CONVERT METAFILE FILES TO DIRECT ACESS BINARY
0C          ROUTINE TO CONVERT METAFILE FILES TO DIRECT-ACESS BINARY
0C          ROUTINE TO CREATE OVERLAY FILES
0C          SUBROUTINE TO CALCULATE FUTURE ASSET VALUE
0C          SUBROUTINE TO CALCULATE FUTURE ASSET VALUE                  *
0C          SUBROUTINE TO CALCULATE NUCLEAR FUEL VALUES
0C          SUBROUTINE TO CONVERT ACSII FILES TO DIRECT ACESS BINARY
0C          SUBROUTINE TO CONVERT METAFILE FILES TO DIRECT ACESS BINARY
0C          SUBROUTINE TO READ PURCHASE CONTRACTS BINARY DATA FILES
0C          if(PrtDetail>1) write(*,'(2i4,2f6.1,2f8.1)')
0C          write(*,'(i4,f8.3)') iHr,R_WEEKLY_LOAD_MOD(DescOrder(iHr))
0C          write(*,'(i4,f8.3)') iHr,R_WEEKLY_LOAD_ORG(DescOrder(iHr))
0C         ADDENDUM_TYPE = ADDENDUM_POSITION(R_ADDENDUM_CLASSIFICATION,
0C         ALLOCATE(OUT_RECORD(0:MAX_ACCOUNTS_TRACKED,
0C         AREA = MAXIMUM_ENERGY ! DONE IN INIT SO THAT MAXIMUM_CONTRACT_ENERGY IS USED
0C         B = A + ENERGY
0C         B = A + TOTAL_AVAILABLE_CONTRACT_ENRG
0C         BASE_DATE = (BASE_YEAR + YEAR - 1900) * 100
0C         CALCULATED PAYMENTS
0C         CALL CALCULATE_TSYTEM_PEAKS(TSY_FC_DATA,YEAR)
0C         CALL CLASS_BELONGS_TO_COMPANY(ASSET_CLASS_NUM,COMP_ID)
0C         CALL CLOSE_FUTURE_ASSET_FILE
0C         CALL CLOSE_NEWPLT_FILE
0C         CALL CMOVE(ASSET_CLASS_NUM,R_ASSET_CLASS_NUM,
0C         CALL CMOVE(ASSET_CLASS_VECTOR,R_ASSET_CLASS_VECTOR,
0C         CALL OPEN_COAL_HOURLY_LOAD_FILE( TEMP_LOAD_NAME,
0C         CALL OPEN_FUTURE_ASSET_FILE(INT2(11))
0C         CALL OPEN_NEWPLT_FILE(10)
0C         CALL OPEN_TRANS_HOURLY_LOAD_FILE( TEMP_LOAD_NAME,
0C         CALL RECALCULATE_FUEL_COSTS(I)
0C         CALL RETURN_NEW_ISSUE_INTEREST_RATES(YEAR,CLASS,
0C         CALL RETURN_NUM_OF_ADDENDUM_CLASSES(NUM_OF_ASSET_CLASSES,
0C         CALL RETURN_NUM_OF_FA_CLASSES(NUM_OF_FA_CLASSES,
0C         CAPACITY_PLANNING_PEAK = NET_PLANNING_PEAK(R_YEAR)
0C         COPYRIGHT (C) 1981 M.S. GERBER & ASSOCIATES, INC.            C
0C         COPYRIGHT (C) 1983, 84, 85, 04 M.S. GERBER & ASSOCIATES, INC.
0C         COPYRIGHT 1983 (C) M.S. GERBER & ASSOCIATES, INC.            C
0C         DIFF = LXLIM - dble(ILEFT) -.001
0C         DIFFE = dble(ILEFT + 1) - LXLIM
0C         DO  MO = 0, 12
0C         DO FILE_ID = 0, FUTURE_ASSETS_FILES
0C         DO I = 1, R_MAX_HYDRO_LOAD_GROUPS
0C         DO I = 1, R_MAX_TRANS_LOAD_GROUPS
0C         DO J = 1, 6
0C         DO MO = 1, 12
0C         DO YR = 1, FINANCIAL_SIMULATION_YEARS
0C         DUKE_WHEELING_CHARGES = .TRUE.
0C         DUKE_WHEELING_COSTS =
0C         DUKE_WHEELING_RATE = S_DUKE_WHEELING_RATE(R_COMPANY)
0C         ELSE
0C         ELSEIF(COVERAGE_RATIO == 2 .OR. COVERAGE_RATIO == 3 .OR.
0C         ELSEIF(COVERAGE_RATIO_TYPE == 10) THEN
0C         ELSEIF(PROCMETH() == 1) THEN
0C         ELSEIF(PROCMETH() == 2) THEN
0C         ELSEIF(PROCMETH() == 3) THEN
0C         ENDDO
0C         ENDFILE(11)
0C         ENDIF
0C         ENERGY = AVAILABLE_CONTRACT_ENRG
0C         ENERGY = B - A
0C         ENERGY = TOTAL_AVAILABLE_CONTRACT_ENRG
0C         ENRG_ONLY_ENRG_USED = AREA - MAXIMUM_ENERGY
0C         ENTRY RESERVE_CAPACITY_DOLLARS(R_COMPANY)
0C         ENTRY SUPPLEMENTAL_CAP_DOLLARS(R_COMPANY)
0C         ENTRY UNADJ_PURCHASE_CAP_DOLLARS(R_COMPANY)
0C         FIRST_BLOCK_DISP_SWITCH = FIRST_BLOCK_DISP_SWITCH_ACTIVE
0C         FUTURE_ASSET_REPORT = DRILLING_REPRT_LEVEL /= 'O' .AND.
0C         GET_RESERVE_CAPACITY_COSTS = 0.
0C         GOTO 100
0C         GOTO 210
0C         GROSS_CASH_FLOW = FUNDS_FROM_OPERATIONS
0C         GROUP = 4
0C         I = 1
0C         IF (DIFF > DIFFE) DIFF = DIFFE -.001
0C         IF( ABS(ENRGBL-AMCHEK) > .01) THEN
0C         IF(ALLOCATED(ASSET_CLASS_POINTER))
0C         IF(COAL_DEMAND_YEAR /= YEAR - STUDY_BASE_YEAR) THEN
0C         IF(EARNINGS_AVAILABLE_TO_COMMON == 0.) THEN
0C         IF(FACET_IS_PRODUCTION_METHOD) THEN
0C         IF(FUASTOL == 'OL') THEN
0C         IF(HYDRO_EXPENSE_ASSIGNMENT(J) == 'T') GROUP = 5
0C         IF(HYTYPE(J) == 'S' .AND. 
0C         IF(ITERATE_GRX_PLANNING() .AND. GRX_ITERATIONS > 1) RETURN REMOVED 3/4/11 
0C         IF(MAX_ASSET_CLASS_NUM > 0) THEN
0C         IF(MAX_FA_CLASS_NUM > 0) THEN
0C         IF(MONTHLY_MIDAS_ACTIVE) THEN
0C         IF(OFF_LOAD_ENRG .GT. 0. .AND. 
0C         IF(OFF_LOAD_ENRG .GT. 0.) THEN
0C         IF(SALT_RIVER_PROJECT()) THEN
0C         IGNORE_NON_UTILITY = IGNORE_NON_UTILITY_CHR
0C         INTRA_FIXED_EXPENSES = 0.
0C         INTRA_PURCHASE_EXPENSES = 0.
0C         INTRA_SALES_REVENUE = 0.
0C         INTRA_VARIABLE_EXPENSES = 0.
0C         INVESTMENT_SALVAGE_OTHER = CASH_OTH_ASSET + DSM_CAPITIAL -  
0C         ISTART = 2
0C         ISTART = MAX(ISTOP,2)
0C         LEASE_RECEIPTS = CAPITIALIZED_LEASE_ADDITIONS +
0C         LOAD_UNIT = 2101
0C         M.S. GERBER & ASSOCIATES, INC.  ALL RIGHTS RESERVED
0C         NET PLANT VALUE, OPERATING INCOME, PRICE, OR COVERAGE RATIO 
0C         OFF_LOAD_ENRG = ENERGY - AVAILABLE_CONTRACT_ENRG
0C         PLANNING_CAPACITY =  CL_PLANNING_CAPACITY(3,R_YEAR) +
0C         PLANNING_PEAK(R_YR) = R_PEAK
0C         PLANNING_TRIGGER = CAPACITY_PLANNING_TRIGGER_VALUE
0C         PURCHASE_CAPACITY_OUT = MAX(0.,LODDUR(PTS) -  A + 
0C         REMAINING_ENRG_ONLY_ENRG = REMAINING_ENRG_ONLY_ENRG -
0C         REMOVE_NIGHTIME_SCARCITY = REMOVE_NIGHTIME_SCARCITY_CHR
0C         RESOURCE_ID = 0
0C         RETURN
0C         R_ANNUAL_ECONOMY_REVENUE = R_ANNUAL_ECONOMY_REVENUE +
0C         R_BASE_ELECTRIC_REVENEUS = ST_JOE_BASE_ELECTRIC_REVENEUS
0C         R_CURRENT_LTD_RETIRE = SFLTD(R_PERIOD,YR+1,-1)
0C         R_MAX_CLASS_NUM = MAX(MAX_BC_CLASS_ID_NUM,MAX_OL_CLASS_ID_NUM)
0C         R_RESERVE_CAPACITY_SALES = 0.
0C         STDCUM(2) = STDCUM(1) + STDISS
0C         STDISS = STDISS + (FUNDS - PREFERRED_STOCK_ISSUED -
0C         STOP
0C         S_DUKE_WHEELING_RATE(R_COMPANY) = 
0C         TEMP_LOAD_NAME = "MK166"
0C         TEMP_LOAD_NUMBER = 1
0C         TRANS = 1
0C         TRANS_REPRESENTATION = TRANS_REPRESENTATION_CHR
0C         TRANS_TIME_FRAME = TRANS_TIME_FRAME_CHR
0C         UPPER_TRANS_GROUP = MAX(MAX_TRANS_LOADS,
0C         USE_TRANSACT_ANALYST_RESULTS = .TRUE. 
0C         VARIABLE(299) = NOT_AVAIL ! Year-end Shares Outstanding
0C         VARIABLE(53) = NOT_AVAIL ! Average Shares Outstanding
0C         VARIABLE(54) = NOT_AVAIL ! Market to Book Ratio
0C         WAS SPECIFIED FOR INCOME BASE
0C         WRITE(6,*) 'A =',A
0C         WRITE(6,*) 'B =',B
0C         WRITE(6,*) 'B**2-4AC =',B2_4AC
0C         WRITE(6,*) 'C =',C
0C         WRITE(6,*)"REAL SOLUTION TO ENERGY MAX CONSTRAINT NOT FOUND"
0C        (2,R_CLASS_POS) = SBU_VARIABLES()
0C        ... AND PRORATE INTEREST LINEARLY TO THE BALANCE OF THE CURRENT YEAR
0C        1=$,2=METER,3=BUSBAR
0C        ABANDONMENT ITEMS
0C        ACCOUNT FOR THE FRACTIONAL OVERFLOW INTO THE YEAR OF MATURITY
0C        ADD THE ANNUAL AMORTIZATION EXPENSE TO THE
0C        AFDC ITEMS
0C        AFTER THEY HAVE BEEN OPERATED UPON BY ENRGLIMT.FOR
0C        AFUDC CALCULATES:                                             *
0C        AND RETIREMENTS OF LTD AND PERFERRED STOCK                    *
0C        AND TAX PURPOSES.                                             *
0C        ANNUAL AMORTIZATION EXPENSE
0C        ASSET_ALLOCATION_LIST(1) = 100.
0C        ASSET_ALLOCATION_LIST(2) = 0.
0C        ASSET_ALLOCATOR = ALLOCATION_VALUE(1)/100.
0C        ASSET_CLASS = R_ASSET_CLASS
0C        ASSET_CLASS_LIST(1) = ASSET_CLASS
0C        ASSET_CLASS_LIST(1) = R_ASSET_CLASS
0C        ASSET_CLASS_LIST(2) = 0
0C        B = A + ENERGY
0C        BAL(2) = 0. [has always been zero since initialization in DEBTC]
0C        BAL(I) & SINKING_FUND(I) retain prior mid-year values; payment is due in 1 year
0C        BOOK ITEMS
0C        BYRBAL EXISTS FOR ONLY A PORTION OF THE MATURITY YEAR
0C        CALCULATES THE ACE DEPRECIATION FOR FUTURE ASSETS             *
0C        CALL ASSET_CLASS_ANALYSIS(RUN_YEAR)
0C        CALL BLDB(5,23,0,STATUS_LINE,INVERSE)
0C        CALL BOOK_DEP_USING_VECTOR(VECTOR,GPV,BOOK_DEP,CUM_BOOK_DEP)
0C        CALL CALCULATE_RATE_BASE(YR) ! MOVED 12/2/99
0C        CALL CMOVE(DEBIT_BC_ASSET_CLASS_POINTER,
0C        CALL CMOVE(DEBIT_OL_ASSET_CLASS_POINTER,
0C        CALL CMOVE(TEMP_ASSET_CLASS_POINTER,
0C        CALL CRITICAL_ERROR_MSG8
0C        CALL GET_ASSET_VAR(ABS(ASSET_CLASS),
0C        CALL GET_ASSET_VAR(ABS(ASSET_CLASS_VECTOR),
0C        CALL GET_ASSET_VAR(ABS(R_ASSET_CLASS),
0C        CALL GET_ASSET_VAR(ABS(R_ASSET_CLASS_VECTOR),
0C        CALL GET_ASSET_VAR(IVEC,DATA_TYPE,BKDEPV)
0C        CALL GET_ASSET_VAR(IVEC,DATA_TYPE,VECTOR_DATA)
0C        CALL INIT_ASSET_CLASS_INFO
0C        CALL LOCVS(1000,VS_ROW,0)
0C        CALL LOCVS(1000,VS_ROW,15)
0C        CALL PRINTV(1000,OPTION_STRING(1:14))
0C        CALL READ_CLASS_INITIALIZATION_FILE
0C        CALL RETURN_MONTHY_RC_CASH_REVENUES(R_CLASS,MONTH_VARS)
0C        CALL RETURN_NUM_OF_DEBT_CLASSES(NUM_OF_ASSET_CLASSES,
0C        CALL SET_TAX_ARRAYS
0C        CALL STORE_REPORTING_VALUES(SUBSIDARY_VARIABLES) ! forces consolidated into output
0C        CAPACITY OF THESE UNITS                                       C
0C        CASE ('Other Revenue')
0C        CASE ('Secondary Sales')
0C        CLASSIFICATION_TYPES(22) = "Other Taxes" + "Property Taxes" + "Environmental Tax"
0C        CLASS_DEFERRED_FUEL_BALANCE=DEFERRED_FUEL_BALANCE(R_CLASS_POS)
0C        CLASS_PROPERTY_TAXES = PROPERTY_TAX_RATE/200.*PROPERTY_VALUE + 
0C        COMMON_DIVIDENDS = 0.
0C        COMMON_EQUITY(2,R_CLASS_POS) = SBU_VARIABLES(79) +
0C        COMMON_STOCK(2,R_CLASS_POS) = SBU_VARIABLES(77) +
0C        COMPUTE THE AMOUNT TO WRITE OFF FOR BOOK PURPOSES
0C        COMPUTE THE ANNUAL AMOUNT OF THE WRITE OFF TO AMORTIZE
0C        COMPUTE THE YEAR END UNAMORTIZED BALANCE AND ADD IT
0C        CONSTRAINT.                                                   C
0C        CONTAIN PROPER VALUES FROM A PRIOR INVOCATION OF REMORT
0C        CONTROLLED UNITS LIKE PONDAGE HYDRO
0C        COPYRIGHT (C) 1982  M.S. GERBER & ASSOCIATES, INC.
0C        COPYRIGHT (C) 1995 M.S. GERBER & ASSOCIATES, INC.
0C        CROSS A SINGLE RR SEGMENT
0C        CUMMULATE TOTAL COMPANY
0C        CWIP_IN_RATE_BASE(2,R_CLASS_POS) =
0C        CWIP_IN_RATE_BASE_AT(CLASS_LEVEL) = 0.
0C        Copyright (c) 1982 M.S. Gerber & Associates, Inc.             C
0C        Copyright (c) 1982, 1983 M.S. Gerber & Associates, Inc.       C
0C        Copyright (c) 1991, 1993, 1994 M.S. Gerber & Associates, Inc. C
0C        Copyright (c) 1995 M.S. Gerber & Associates, Inc.             C
0C        DEALLOCATE(VARIABLE,SUBSIDARY_VARIABLES)
0C        DEBT CALCULATES THE INTEREST, SINKING FUND PAYMENTS           *
0C        DEFERRED_DEBITS_RATE_BASE(2,R_CLASS_POS) = SBU_VARIABLES(146)+
0C        DELTA_PROB = OBS(I-1)/FLOAT(HOURS_INCREMENT)
0C        DEPBOK CALCULATES THE BOOK DEPRECIATION FOR FUTURE            *
0C        DETAILED_REPORTS_OBJECT READ THE DETAILED REPORTS FILE AND 
0C        DO WHILE ((I+IOFFSET) <= FINANCIAL_SIMULATION_YEARS .AND.
0C        EDPBOK CALCULATES THE BOOK DEPRECIATION FOR FUTURE            *
0C        ELSE
0C        ELSE       
0C        ENDDO
0C        ENDFILE(11)
0C        ENDIF
0C        ENERGY = AVAILABLE_CONTRACT_ENRG
0C        ENERGY VIOLATED?
0C        EXPENS AGGREGATES  THE EXPENSE ITEMS INTO THE FIVE            *
0C        EXPENSE CATAGORIES:                                           *
0C        FEDERAL_TAX_RATE = FEDERAL_INCOME_TAX_RATE(YR)/100.
0C        FILL OUT THE AMORTIZATION SCHEDULE, ASSUMING NEWRAT REMAINS CONSTANT
0C        FIRST_FINANCIAL_ADDITION = .TRUE.
0C        FOR (I /= 2), THE ARRAYS INT, SINKING_FUND, BAL ALREADY
0C        FOR DEVELOPMENT OF AMORTIZATION FACTOR ABOVE, SEE *FOOTNOTE BELOW
0C        FOR FORWARD PRICE DEVELOPMENT AND CONVERT TO BINARY FORMAT
0C        FROM A HYDRO FILE.                                            C
0C        HALF YEAR CONVENTION                                          *
0C        I = 1
0C        IF A > BASE
0C        IF THE BALANCE TO BE AMORTIZED IS LESS THAN THE
0C        IF( SERVYR == 1985 ) INYR = 2
0C        IF( SERVYR > 1985 ) INYR = 3
0C        IF(ASSET_CLASS < 0.) THEN
0C        IF(CLASS_LEVEL == 1 .AND. 
0C        IF(I .LT. INTERVALS) THEN
0C        IF(LIQUID_INVESTMENTS(1,R_CLASS_POS)+STI_CHANGE_IN_CASH < 
0C        IF(R_ASSET_CLASS < 0.) THEN
0C        IF(R_ASSET_CLASS_VECTOR /= 0.) THEN
0C        IF(YR == 1) DEALLOCATE(BY_ADJUSTMENT_2_ECONOMIC_ASSETS)
0C        INFORMATION NECESSARY FOR THE LOAD-CLIPPING PROGRAM           C
0C        IOFFSET = MIN(FINANCIAL_SIMULATION_YEARS,
0C        IPOT = IPNT()
0C        IREC = RECORDS_IN_BASE_FILE
0C        IS ADDED TO THE PEAKING HYDRO TO REDUCE PEAK LOADS.           C
0C        ISTART = 2
0C        ISTART = 2 + INT(A-BASE)/DX
0C        IVEC = ABS(AFDC_CAP_VECTOR)
0C        LIQUID_INVESTMENTS(2,R_CLASS_POS) = SBU_VARIABLES(74) +
0C        LONG_TERM_DEBT(2,R_CLASS_POS) = SBU_VARIABLES(81) +
0C        LONG_TERM_INVESTMENTS(R_CLASS_POS) = SBU_VARIABLES(289) +
0C        LUMP MTG AND LTD TOGETHER
0C        MAXIMUM OUTPUT MINUS THE MINIMUM OUTPUT OF THE HYDRO          C
0C        MIDAS GOLD CHANGES 6/11/91; 1/15/93                           C
0C        NEXT COMPUTE THE ANNUAL 12/31/YR PAYMENT NEEDED TO AMORTIZE BAL(I) ...
0C        NUC_FUEL_RATE_BASE(2,R_CLASS_POS) =
0C        NUC_FUEL_RATE_BASE_AT(CLASS_LEVEL) = 0.
0C        PLANT ENTERING SERVICE USING STRAIGHT LINE WITH               *
0C        PREFERRED_DIVIDENDS = DEBT_FILE_PREFERRED_DIVIDENDS + PSRATE *
0C        PREFERRED_STOCK(2,R_CLASS_POS) = SBU_VARIABLES(80) +
0C        PROGRAM TO MANAGE CUSTOMER FORECASTS, REVENUES AND COSTS
0C        PROGRAM TO MANAGE WEEKLY HYDRO FORECASTS, REVENUES AND COSTS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON COAL NODE NODES
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON COAL SUPPLY NODES
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON COAL_WEATHER DEMAND
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON GAS NODE NODES
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON GAS SUPPLY NODES
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON GAS_WEATHER DEMAND
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON GLOBAL REGIONALS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON GLOBAL SCENARIOS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON LOADS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON MARKET GROUPS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON RPS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON TRANSACTION GROUPS
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON WEATHER DEMAND
0C        PROGRAM TO READ MULTI-TAB INFORMATION ON WEEKLY HYDRO
0C        REARNC(2,R_CLASS_POS) = SBU_VARIABLES(78) +
0C        RETAINED_EARNINGS = NET_INCOME     PRE ADJUSTMENT
0C        RETURN
0C        RETURNS THE APPROPRIATE VALUES TO THE CALLING PROGRAM
0C        R_VARIABLE_VALUE() = REPORTING_VARIABLES() ! 
0C        R_VARIABLE_VALUE(100) = REPORTING_VARIABLES() ! AMT ITC Used 
0C        R_VARIABLE_VALUE(101) = REPORTING_VARIABLES() ! AMT NOL
0C        R_VARIABLE_VALUE(102) = REPORTING_VARIABLES() ! AMT NOL Used
0C        R_VARIABLE_VALUE(20)  = REPORTING_VARIABLES(87)  ! LESS DEF TAXES CR
0C        R_VARIABLE_VALUE(475) = LTDRET(RUN_YEAR) + PSRED(RUN_YEAR)
0C        R_VARIABLE_VALUE(5)   = REPORTING_VARIABLES(68)  ! NPV(2)
0C        R_VARIABLE_VALUE(94) = REPORTING_VARIABLES() ! AMT Depreciation Preference Item
0C        R_VARIABLE_VALUE(96) = REPORTING_VARIABLES() ! AMT Available Credits
0C        R_VARIABLE_VALUE(97) = REPORTING_VARIABLES() ! AMT Credit Generated
0C        R_VARIABLE_VALUE(98) = REPORTING_VARIABLES() ! AMT Credit Used
0C        R_VARIABLE_VALUE(99) = REPORTING_VARIABLES() ! AMT Tax
0C        SL_OFFSET = MACRS_TABLE(ADR_TAX_LIFE,DB_RATE,TAX_LIFE)
0C        STD_INTEREST_OWED = 0.
0C        STI_CHANGE_IN_CASH = CHANGE_IN_CASH -
0C        STORAGE UNITS LIKE PUMPED STORAGE UNITS
0C        SUM_AFUDC = AFDC1 + DEF_REVENUES
0C        SUM_DEFERRED_ITEMS = ITC_ITCAMT + TXDEFP + TXNORM -
0C        TAKE INTO ACCOUNT THE CASE WHERE MULTIPLE UNITS CAN
0C        TAX ITEMS
0C        THE MINIMUM HOURLY LOADS.                                     C
0C        THE MORTGAGE SECURITY EXISTED IN THE BASE_YEAR, AND EXPIRES THIS YEAR
0C        THE PEAKEN AND CAPACITY INPUT TO THE DEVICE IS ADDED TO       C
0C        THE PURPOSE OF THIS SUBROUTINE IS TO CALCULATE THE            C
0C        THE RETIREMENTS, AND GROSS PLANT VALUE FOR BOOK               *
0C        THEN CUMMULATE THE ACCOUNTS
0C        THEN USE THE DOLLAR AMOUNT VECTORS
0C        TO THE APPROPRIATE DEBIT ACCOUNT
0C        TOTAL AMORTIZATION EXPENSE
0C        TOTAL TOTALS THE ANNUAL BOOK AND TAX DEPRECATION,             *
0C        UNCONTROLLED UNITS LIKE ROR UNITS WITH POSITIVE OR NEGATIVE ENERGY
0C        UNITS.  THIS REDUCTION IS SUBJECT TO THE PEAKEN REDUCTION     C
0C        USE_ALL_FED_TAX_BENEFITS = .TRUE. ! .false. ! needs to be true for KCP&L
0C        VALUE_IS_A_RATE = .TRUE.
0C        VARIABLE(119) = LONG_TERM_DEBT_RETIREMENTS ! Debt and Preferred Stock Retirements
0C        VARIABLE(127) = DEFERRED_EXPENSE_CASH  
0C        VARIABLE(213) = FEDERAL_INCOME_TAX_RATE()
0C        VARIABLE(240) = SBU_VARIABLES(240) + VARIABLE(240)  ! CAWTABA & CP&L EXPENSE
0C        VARIABLE(59) = NOT_AVAIL ! Average Equity
0C        VARIABLE(74) = SBU_VARIABLES(74) + VARIABLE(74)  ! CASH_BALANCE),
0C        VARIABLE(75) = SBU_VARIABLES(75) + VARIABLE(75)  ! ASSET_NEC),
0C        VARIABLE(76) = SBU_VARIABLES(76) + VARIABLE(76)  ! TOTAL_ASSETS),
0C        VARIABLE_VALUE(261) = NOT_AVAIL
0C        VARIABLE_VALUE(262) = NOT_AVAIL
0C        VARIABLE_VALUE(263) = NOT_AVAIL
0C        VARIABLE_VALUE(33)   ! Other Income
0C        VARIABLE_VALUE(34)   ! Interest Income
0C        VARIABLE_VALUE(4) + ! OPERATING_REVENUES(2)
0C        VARIABLE_VALUE(68) + ! NPV(2)
0C        VARIABLE_VALUE(87) + ! LESS DEF TAXES CR
0C        VOID_INT2 = RETURN_MONTHY_CL_CASH_REVENUES(R_CLASS,MONTH_VARS)
0C        VOID_LOGICAL = ZERO_TOTAL_EMIS_VARS()
0C        WHEN THE UNIT DOES NOT CROSS A LOAD INTERVAL
0C        WRITE (9,1000) AMCHEK,LXLIM,RXLIM,ENRGBL
0C        do iHr=1,168
0C        end do
0C        if(PrtDetail>1) write(*,'(2i4,2f6.1,2f8.1)')
0C        if(PrtDetail>1) write(*,'(4i4,2f6.1,4f6.3,2f6.2,f8.1,L2)')
0C        write(*,'(i4,f8.3)') iHiW,R_WEEKLY_LOAD_MOD(iHiW)
0C        write(*,'(i4,f8.3)') iHiW,R_WEEKLY_LOAD_ORG(iHiW) ! NO CONSOLE I/O
0C       1982 CHANGE IN ACRS
0C       2 == DEFINED PURCHASE TO MEET NATIVE LOAD
0C       3 == ECONOMY PURCHASE TO MEET NATIVE LOAD
0C       4 == ECONOMY SALES WHICH INCREASE LOAD
0C       A = S(P * (1+r)^-i ,1,M)
0C       A = initial amount of loan
0C       FOR ANNUAL VALUES THE 0 MONTH POSITION CONTAINS THE ANNUAL TOTAL
0C       I4ST=SeedRan32(J,I,IYR)
0C       M = duration of loan in years
0C       NORMALIZE THE WRITE OFF OF THE TAX BENEFIT
0C       P = (A * r) / (1 - (1+r)^-M )
0C       P = fixed annual payment of principal & interest
0C       S(1/(1+r),0,M-1) = ( (1+r)^-M - 1 ) / ( (1+r)^-1 - 1 )
0C       S(x      ,0,M-1) = (   x  ^ M - 1 ) / (   x      - 1 ) or
0C       S(x,j,k) = the sum of powers x^i, where i ranges from j to k
0C       SUBROUTINE TO INITIALIZE THE SCREEN CONTROL VARIABLES
0C       THE FOLLOWING TWO LINES WERE COMMENTED OUT DUE TO THE
0C       r = annual interest rate
0C      ALL RIGHTS RESERVED GLOBAL ENERGY DECISIONS
0C      ALL RIGHTS RESERVED M.S. GERBER & ASSOCIATES, INC.
0C      AND REMOVED STD INTEREST FROM THE RATIO
0C      AVE_RUNNING_RATE(1) = RUNNING_RATES(1) / OBS(1)
0C      CALL ANNUAL_EL_REPORT  ! MOVED FOR DYNAMIC HYDRO.
0C      CALL CINITW(FO_BEG_HR(1,1,I),INT4(MAX_FO_PER_MONTH)*12,0)
0C      CALL CINITW(FO_BEG_HR(1,1,I),INT4(MAX_FO_PER_MONTH*12),0) ! default valid for EoM/EoY wrap
0C      CALL CINITW(FO_END_HR(1,1,I),INT4(MAX_FO_PER_MONTH)*12,0)
0C      CALL CINITW(FO_END_HR(1,1,I),INT4(MAX_FO_PER_MONTH*12),0)
0C      CALL GET_CHRONO_HOURS_PER_MONTH(R_ISEAS,LOAD_HOURS_IN_PERIOD)
0C      CHARACTER*40 DRILLING_ACCOUNT_NAME
0C      CHARACTER*40 OUTPUT_OPTION_NAME
0C      DD = put into a deferred debit account (no return is earned
0C      DEF_TAXES_AMT_CREDITS = R_DEF_TAXES_AMT_CREDITS
0C      DEMAND_AFTER_EL = GET_DEMAND_AFTER_EL(R_ISEAS,START_MONTH,END_MONTH)
0C      EE = extraordinary expense (written off below the line)
0C      ELSE
0C      END
0C      ENDFILE(11)
0C      ENDIF
0C      ENTRY DUKE_WHEELING_COSTS(R_COMPANY)
0C      ENTRY DUKE_WHEELING_RATE(R_COMPANY)
0C      ENTRY FIRST_BLOCK_DISP_SWITCH
0C      ENTRY GET_RESERVE_CAPACITY_COSTS(R_RESERVE_CAPACITY_SALES,R_YEAR)
0C      ENTRY IGNORE_NON_UTILITY
0C      ENTRY PLANNING_TRIGGER
0C      ENTRY PRODUCTION_METHOD_TITLE
0C      ENTRY REGULATED_FINANCING(RATE_BASE,COMEQU,PSCUM,LTDCUM)
0C      ENTRY REMOVE_NIGHTIME_SCARCITY
0C      ENTRY RETURN_FA_POINTER(R_CLASS_POINTERS)
0C      ENTRY RETURN_NUM_OF_FA_CLASSES(R_NUM_OF_CLASSES,
0C      ENTRY RETURN_ST_JOE_BASE_REVENUES(R_BASE_ELECTRIC_REVENEUS)
0C      ENTRY SBU_2_PARENT_ADJUSTMENTS(R_CLASS_POS)
0C      ENTRY TRANS_REPRESENTATION
0C      ENTRY TRANS_TIME_FRAME
0C      FUEL USAGE MODULE FOR SWITCHING FUEL TYPES BASED ON INVENTORY
0C      FUNCTION DUKE_WHEELING_CHARGES()
0C      IF(
0C      IF(ADD_2_INCOME_STATEMENT == 'T') THEN
0C      IF(OFF_LOAD_ENRG .GT. 0. .AND.
0C      IF(TOTAL_AVAILABLE_CONTRACT_ENRG .LT. ENERGY) THEN
0C      IF(UTILITY_TYPE() == 'I') ITC_RATE = .10
0C      IF(WKP_ACTIVE .AND. AREA /= MAXIMUM_ENERGY) THEN
0C      IF(YEAR <= MAX_SIMULATION_YEARS) THEN
0C      INCREMENTAL_ENERGY =  MAXIMUM_ENERGY - AREA
0C      INTEGER (KIND=2) :: MAX_YEARS
0C      INTEGER (KIND=2) :: START_YR
0C      INTEGER ALL_VERSIONS,LF77_VERSION,LF95_VERSION,WIN95_VERSION
0C      INTEGER*2 HOURS_IN(12)
0C      INTEGER*2 HOURS_IN_YEAR(12)/1,745,1417,2161,2881,3625,4345,5089,
0C      INTEGER*2 R_COMPANY
0C      ITC_RATE = 0.
0C      LOGICAL*1 DUKE_WHEELING_CHARGES
0C      LOGICAL*1 TEST_DEPTH_2_ADVANCE
0C      MAX_TRANS_GROUPS = MAX(MAX_TRANS_LOADS,GET_MAX_TRANS_GROUPS()) !REMOVE 10/12/01 
0C      MAX_YEARS = RUN_YEARS() + EXTENSION_YEARS()
0C      OFF_LOAD_ENRG = ENERGY - AVAILABLE_CONTRACT_ENRG
0C      PCITC = 0.
0C      RB = put into rate base (a return is earned and the amount is
0C      REAL (KIND=4) :: AVERAGE_MULTIPLIER
0C      REAL MARKET_RATES_CUSTOMERS(4) !3/26/95 MARKET PRICES AT SYSTEM LEVEL MSG
0C      REAL TSY_FC_DATA(4,12)
0C      REAL*4
0C      REAL*4 CHANGE_IN_COMMON_EQUITY
0C      REAL*4 DEF_TAXES_AMT_CREDITS
0C      REAL*4 MONTH_VARS(0:12,1:*)
0C      REAL*4 NET_DEFERRED_CASH_VALUE
0C      REAL*8 UNUSED_ENRG
0C      REAL_HOURS = FLOAT(HOURS)
0C      RETURN
0C      SAVE      COAL_GROUPS_DATA
0C      SAVE      GAS_GROUPS_DATA
0C      SAVE      TRANS_GROUPS_DATA
0C      SAVE BEGIN_ASSET_ANALYST_TRANSFER
0C      SAVE DEF_TAXES_AMT_CREDITS
0C      SAVE S_DUKE_WHEELING_RATE
0C      SETS THE FUEL INVENTORY DATA FOR ANNUAL AND MONTHLY AMOUNTS
0C      USE SIZECOM
0C      do iHiW=1,168
0C      end do
0C      end if
0C      if(PrtDetail>1) then ! output the org/mod LDC for graphing
0C      if(PrtDetail>1) write(*,'(a)')
0C     (AVE_ENERGY) AND SOLVING FOR THAT VALUE THAT WILL ACHEIVE
0C     *************************************************************
0C     +				L_RESERVE_CAPACITY_DOLLARS(R_COMPANY) +
0C     +				L_UNADJ_PURCHASE_CAP_DOLLARS(R_COMPANY) +
0C     +				MCGUIRE_X_CAPACITY(R_COMPANY) *
0C     +				MCGUIRE_X_CAPACITY_RATE(R_COMPANY) 
0C     +				OEI_PURCHASED_CAP_PAYMENTS(R_COMPANY) +
0C     +				OEI_RESERVE_CAPACITY_DOLLARS(R_COMPANY) +
0C     +				PEAK_REVISION_TRUE_UPS(R_COMPANY)
0C     +				PURCHASED_CAPACITY_RATE(R_COMPANY)
0C     +				PURCHASE_CAP_TRUE_UPS(R_COMPANY)
0C     +				PURCHASE_CAP_TRUE_UPS(R_COMPANY) -
0C     +				PURCHASE_INTEREST_CREDIT(R_COMPANY)
0C     +				SUPPLEMENTAL_CAPACITY(R_COMPANY) *
0C     +				SUPPLEMENTAL_CAPACITY_RATE(R_COMPANY) *
0C     +			RESERVE_CAPACITY_MW(R_COMPANY) * 
0C     +			RESERVE_CAPACITY_RATE(R_COMPANY) 
0C     +   			APPLY_FACTOR	
0C     +      	                  L_UNADJ_PURCHASE_CAP_DOLLARS(R_COMPANY)
0C     +                                                                ! adjusted for the amortization which 
0C     +                                                   BTL Lease Cash, ! = 10,
0C     +                                                   TEMP_BUY_ENERGY
0C     +                                                  STUDY_BASE_YEAR
0C     +                                                 MAX_FA_CLASS_NUM)
0C     +                                                 STUDY_BASE_YEAR
0C     +                                                ADDENUM_2_LIBS_NEC
0C     +                                                INTERVAL_AREA)
0C     +                                                Interest Earnings)
0C     +                                                RETAINED_EARNINGS)
0C     +                                                TAX_TYPE,SubClass)
0C     +                                                WCCUM(1,CLASS_POS)
0C     +                                               ENRG_ONLY_ENRG_USED
0C     +                                               FUTURE_ASSET_REPORT
0C     +                                               MARKET_PRICE_SCALAR
0C     +                                              .OR. MO /= MTH) THEN
0C     +                                              5833,6553,7297,8017/
0C     +                                              ADDENUM_2_ASSETS_NEC
0C     +                                              INT(2*HYDRO_UNITS))
0C     +                                              MAX_ASSET_CLASS_NUM)
0C     +                                              OPTION_MAX_CAPACITY)
0C     +                                              STUDY_BASE_YEAR
0C     +                                             PARENT_MARKET_TO_BOOK
0C     +                                             TEMP_SELL_ENERGY
0C     +                                            - CASH_PAYMENTS(MO,I))
0C     +                                            -DEBT_FILE_LTD_ISSUED,
0C     +                                            SBU_ATL_LEASE_PAYMENTS ! 60
0C     +                                            SINKING_FUND(MO,I)
0C     +                                          + PLANT_2_SERVICE(MO,YR)
0C     +                                          GET_MAX_TRANS_ID_USED())
0C     +                                          TEMP_PLANT_2_SERVICE(YR)
0C     +                                         CONSTR_SUMRY_REPT_COLS))
0C     +                                         M_HOURLY_LOAD_B4_SALES(I)
0C     +                                         R_MAX_CLASS_NUM)
0C     +                                         R_MONTHLY_ECONOMY_REVENUE
0C     +                                        COMMON_SHARES(2,CLASS_POS)
0C     +                                        COVERAGE_RATIO == 13) THEN
0C     +                                        HOURLY_MARKET_PRICE)
0C     +                                       MAX_ASSET_CLASS_NUM)
0C     +                                      + ISS(MO,I) - RET(MO,I) 
0C     +                                      + QRT_DIVIDEND_PER_SHARE(2))
0C     +                                      + QRT_DIVIDEND_PER_SHARE(4))
0C     +                                      - SINKING_FUND(MO,I)
0C     +                                      999999.)
0C     +                                      DATA_BASE,
0C     +                                      LOANS_TO_AFILLIATES(MO,I,-1) 
0C     +                                      M_HOURLY_LOAD_B4_SALES(I),I,
0C     +                                      TEMP_LIST,MASTER_CLASS_LIST)
0C     +                                     (QRT_DIVIDEND_PER_SHARE(1)
0C     +                                     (QRT_DIVIDEND_PER_SHARE(3)
0C     +                                     - NET_OF_TAX_NUCL_FUND_RETURN
0C     +                                     ADDED_TO_CURRENT_VALUE)
0C     +                                     OTHER_DD_BALANCE(2,CLASS_POS)
0C     +                                     OVERLAY_FAMILY_NAME,','
0C     +                                     R_YEAR,LOAD_UNIT)
0C     +                                     TEMP_LOAD_NUMBER,
0C     +                                     TEMP_STR//' '//WORKORDER_NAME
0C     +                                     TEMP_TRANSACTION,HOUR_IN_DAY)
0C     +                                    + CS_ISSUE_EXP_BAL ! is shown as an interest or dividends
0C     +                                    + LTD_ISSUING_BAL
0C     +                                    + LTD_ISSUING_BAL  ! adjusted for the amortization which 
0C     +                                    + PRINCIPAL_PAYMENT
0C     +                                    + PS_ISSUING_BAL
0C     +                                    + PS_ISSUING_BAL   ! These are net balances which are
0C     +                                    - PRINCIPAL_PAYMENT
0C     +                                    LTD_ISSUE_YR_INTEREST_BOOKED,
0C     +                                    LTD_ISSUE_YR_INTEREST_PAYMENT,
0C     +                                    MTG_DEBT_RETIREMENTS)
0C     +                                    OFF_LOAD_ENRG
0C     +                                   + CONSOLIDATED_FED_TAX_ADJ
0C     +                                   + CONSOLID_AMT_CREDITS_CREATED
0C     +                                   + INVESTMENT_INCOME  ! 6/16/04
0C     +                                   + PRINCIPAL_PAYMENT
0C     +                                   - CONSOLIDATED_FED_CREDITS_USED
0C     +                                   - CONSOLID_AMT_CREDITS_USED
0C     +                                   - CONSOLID_SEC_29_CREDITS_USED
0C     +                                   - MONTHLY_TAX_EXPENSE(MO,YR-1))
0C     +                                   CONSOLD_FED_TAXES_B4_CREDITS
0C     +                                   DEALLOCATE(ASSET_CLASS_POINTER)
0C     +                                   LONG_TERM_DEBT_ISSUED
0C     +                                   MONTHLY_CASH_VALUES_EXIST) THEN
0C     +                                  (MO == ISSMO .OR. MO == 0)) THEN
0C     +                                  + COMMON_SHARES(2,CLASS_POS) *
0C     +                                  + QRT_DIVIDEND_ADDENDUM(1)
0C     +                                  + QRT_DIVIDEND_ADDENDUM(2)
0C     +                                  + QRT_DIVIDEND_ADDENDUM(3)
0C     +                                  + QRT_DIVIDEND_ADDENDUM(4)
0C     +                                  + VARIABLE(235) ! NET_OF_TAX_NUCL_FUND_RETURN
0C     +                                  GET_MARGINAL_COST(
0C     +                                  INTEREST_ON_CUSTOMER_DEPOSITS,
0C     +                                  KEPCO_WC_CURENT_MAINT_ENRG_COST
0C     +                                  NET_UTILITY_PLANT(2,CLASS_POS) +
0C     +                                  NUCL_DECOM_FUND_RETURN,
0C     +                                  OCI_NUCL_DECOM_FUND_RETURN,
0C     +                                  OCI_RETURN_RETIREMENT_FUND)
0C     +                                  RETURN_ON_LONG_TERM_INVESTMENTS,
0C     +                                  RETURN_ON_ST_INVEST,
0C     +                                  RETURN_RETIREMENT_MEDICAL_FUND,
0C     +                                  STD_INTEREST_RATE,
0C     +                                 + CON_DEF_TAX_DR_NOLS_AMT_CREDITS ! REMOVED FOR TESTING 12/28/11
0C     +                                 ENERGY(ECBLK,U) * TEMPEA(ECBLK,U)
0C     +                                 MONTHLY_BASE_FUEL_DOLLARS(MO),
0C     +                                 MONTHLY_BASE_NONFUEL_DOLLARS(MO),
0C     +                                 MONTHLY_FUEL_ADJ_DOLLARS(MO),
0C     +                                 MONTHLY_NONFUEL_DOLLARS(MO),
0C     +                                 MONTHLY_SCR_DOLLARS(MO))
0C     +                                 OPERATING_REVENUES(1,CLASS_POS) +
0C     +                                 RATE_CODE(I),
0C     +                                 RATE_TRACKER(I),
0C     +                                - PENSION_EXPENSE_CASH
0C     +                                - TOTAL_BASE_RATES_REVENUES
0C     +                                DATA_BASE,999999.)
0C     +                                INTEREST_ON_LONG_TERM_DEBT
0C     +                                LEVEL_SUMATION(0,CLASS_LEVEL),
0C     +                                SBU_VARIABLES)
0C     +                                SYSTEM_HOURLY_LOADS(HR,0),
0C     +                               (CLASS_GPV(I,CLASS)+ GPV_ADDITIONS)
0C     +                               + ADJUSTMENT_2_OP_REV_TAX
0C     +                               + EXCLUDED_REVENUE_TAX(CLASS_LEVEL)
0C     +                               + RETLTD(R_PERIOD,YR+1,ASSET_CLASS)
0C     +                               + SFLTD(R_PERIOD,YR+1,ASSET_CLASS)
0C     +                               + VARIABLE(235) ! NET_OF_TAX_NUCL_FUND_RETURN
0C     +                               + WVPA_EMISSIONS_EXPENSE
0C     +                               - MONTHLY_CURRENT_INTEREST(MO,YR)
0C     +                               CLASS_REVENUE_TAX_REVENUES
0C     +                               RR_COST)/2.
0C     +                               RR_ENERGY_TO_SELL / TEMPEA(ECBLK,U)
0C     +                               TEMP_BUY_ENERGY*RR_COST
0C     +                              (BOOK_EXPEN(MO,YR-1)
0C     +                              (CLASS_GPV(I,CLASS) + GPV_ADDITIONS)
0C     +                              + STORM_EXPENSE_CASH 
0C     +                              + VACATION_PAY_CASH
0C     +                              + WVPA_PROPERTY_TAXES_IN_POWER_COSTS
0C     +                              - STORM_EXPENSE_NON_CASH
0C     +                              - VACATION_PAY_NON_CASH
0C     +                              MONTHLY_PLANT_IN_SERVICE_EXIST) THEN ! .AND. DATA_TYPE == 'D') THEN
0C     +                              SALVAGE_TRANSACTIONS 
0C     +                              SRP_RATIO)
0C     +                              TEMP_SELLER_TRANSACTION < 0.d0) THEN
0C     +                              TEMP_SELLER_TRANSACTION < 0.d0) THEN ! LINEAR INTERSECTION
0C     +                             + CLASS_OTH_LIAB_SALE_ASSETS
0C     +                             HOURLY_MARGINAL_COST(0,HOUR_IN_DAY) *
0C     +                             L_RESERVE_CAPACITY_DOLLARS(R_COMPANY)
0C     +                             L_SUPPLEMENTAL_CAP_DOLLARS(R_COMPANY)
0C     +                             R_BTL_TAXABLE_INCOME,
0C     +                            MWBLOK(S) * (1. - MAINTENANCE_RATE(U))
0C     +                           -EXCLUDED_OTHER_TAXES_EXP(CLASS_LEVEL))
0C     +                           -EXCLUDED_OTHER_TAXES_REV(CLASS_LEVEL))
0C     +                           HOURLY_MARGINAL_COST(BUYER,HOUR_IN_DAY)
0C     +                           MWBLOK(S) * (1. - MAINTENANCE_RATE(U))
0C     +                           NPV_IN_LIBS_NEC *
0C     +                          (CLASS_NON_VARIABLE_EXPENSE
0C     +                          (OPERATING_REVENUES(2,CLASS_POS)
0C     +                          + RETLTD(R_PERIOD,YR+1,-1)
0C     +                          DEFERRED_DEBITS_RATE_BASE(2,R_CLASS_POS)
0C     +                          DEMAND_ON_TRANSMISSION_SYSTEM(R_COMPANY)
0C     +                          INTEREST_ON_SHORT_TERM_DEBT(2,CLASS_POS)
0C     +                          NET_UTILITY_PLANT(2,CLASS_POS) +
0C     +                          OPERATING_REVENUES(1,CLASS_POS) +
0C     +                          REMAINING_ENRG_ONLY_ENRG)
0C     +                         'Modified Booth Production Cost Method'
0C     +                         + EXPENSES_MONTHLY(PERIOD,YR,ASSET_CLASS,
0C     +                         + LIABS_NEC_BAL_ADJ
0C     +                         - ASSETS_NEC_BAL_ADJ
0C     +                         YEAR <= LAST_AVAILABLE_MONTHLY_YEAR) THEN
0C     +                        (INTEREST_ON_LONG_TERM_DEBT + NET_INCOME)/
0C     +                        ADJUSTMENT_CAPACITY(R_YEAR) +
0C     +                        BC_FA_CLASS_POINTER(1:MAX_BC_CLASS_ID_NUM)
0C     +                        CAPACITY_BEING_TESTED
0C     +                        CT_PLANNING_CAPACITY(3,R_YEAR) +
0C     +                        EL_PLANNING_CAPACITY(3,R_YEAR) +
0C     +                        INTEREST_INCOME(MO,I,-1) + INTEREST(MO,I)
0C     +                        LM_PLANNING_CAPACITY(R_YEAR)   +
0C     +                        TRANS_GROUP_GEN_ACTIVE(DATA_BASE) .AND.
0C     +                       'Facet Optimization Production Cost Method'
0C     +                       + CLASS_ADDENDUM_2_OTHER_TAXES
0C     +                       + EXCLUDED_OTHER_TAXES(CLASS_LEVEL)
0C     +                       + FASB143_LT_LIABILITY_VALUE(2,R_CLASS_POS)
0C     +                       + OTHER_TAXES_PERCENT_OF_EXPENSES/100. *
0C     +                       REMAINING_ENRG_ONLY_ENRG .GT. 0.) THEN
0C     +                      CUMULATIVE_BOOK_DEP_ADJUSTMENTS(0) +
0C     +                      CUMULATIVE_DEP_ON_SOLD_ASSETS -
0C     +                      FA_WO_ADJUSTMENT_2_CUM_BOOK_DEP
0C     +                      SALVAGE_TRANSACTIONS -
0C     +                      TEMP_BUY_ENERGY* (BLOCK_DISP_COST(U,ECBLK)+
0C     +                     + CASH_TIMING_ADJUSTMENTS ! 8/26/04
0C     +                     + COMMON_STOCK_CASH_DIVIDENDS ! COMMON_DIVIDENDS +
0C     +                     + LEASE_PRINCIPAL_PAYMENTS
0C     +                     + OTHER_PAYMENTS_TO_TRUST_FUNDS
0C     +                     + PENSION_EXPENSE_CASH
0C     +                     + PS_DIVIDEND_CASH_PAYMENTS  ! PS DIVIDEND PAYMENTS
0C     +                     + R_VARIABLE(293) ! INTEREST EXPENSE
0C     +                     + STORM_EXPENSE_CASH
0C     +                     + VACATION_PAY_CASH
0C     +                     - CASH_FROM_SALE_OF_ASSETS
0C     +                     - CIAC_CASH
0C     +                     - CUSTOMER_DEPOSITS
0C     +                     EFFECTIVE_DATE*8, ! CHAR*8
0C     +                     EFFECTIVE_DATE, ! MO/DA/YR
0C     +                     UNIT_STATUS_CODE, ! CHAR*20
0C     +                     YEAR, ! INT2
0C     +                     YEAR, ! INT2 ! DOESN'T NEED TO BE SAVED
0C     +                     trim(EFFECTIVE_DATE), ! MO/DA/YR
0C     +                    .AND. NEXT_K .LE. NUMBER_OF_SEGMENTS)
0C     +                    INDEX('ABNX',(HYDRO_EXPENSE_COLLECTION(UNIT)))
0C     +                    LEASED_NF_BURN 
0C     +                    REMAINING_ENRG_ONLY_ENRG .LE. 0.) THEN
0C     +                   COMMON_STOCK_ISSUED - LONG_TERM_DEBT_ISSUED -
0C     +                   NPV_IN_ASSETS_NEC *
0C     +                   OL_FA_CLASS_POINTER(1:MAX_OL_CLASS_ID_NUM)
0C     +                  (1. - MAINTENANCE_RATE(U)) * EAVAIL(U) -
0C     +                  CURRENT_CAPACITY_RATIO >= CURRENT_TARGET_RATIO
0C     +                  RIGHT(S) .LT. TOP_PROB) THEN
0C     +                  TRANS_GROUP_CAP(DATA_BASE) >
0C     +                 + NOTES_PAYABLE_BALANCE
0C     +                 + NOTES_RECEIVABLE(:,YR,ASSET_CLASS,
0C     +                 + SHORT_TERM_DEBT(2,R_CLASS_POS)
0C     +                 /744,672,744,720,744,720,744,744,720,744,720,744/
0C     +               GET_PRODUCTION_LEVEL(  HOURLY_MARKET_PRICE,
0C     +               HOURLY_LAMDA,
0C     +               HOURLY_TRANS_GROUP_GEN_ACTIVE)
0C     +               HOURLY_TRANS_GROUP_LOAD_ACTIVE,
0C     +               MWBLOK(S) * 
0C     +               M_HOURLY_LOAD_B4_SALES,
0C     +               M_MARGINAL_COST_DELTA,
0C     +               M_MONTHLY_LOAD_AFTER_SALES,
0C     +               M_MONTHLY_LOAD_B4_SALES,
0C     +               M_MONTHLY_PRO_COST_AFTER_SALES,
0C     +               M_MONTHLY_PRO_COST_B4_SALES,
0C     +               M_TIE_FLOW,
0C     +               PRODUCTION_COST_AFTER_SALES)
0C     +               PRODUCTION_COST_AFTER_SALES,
0C     +               PRODUCTION_COST_B4_SALES,
0C     +               RECORD_TRANSACTION_TO_TIE(SELLER,BUYER,
0C     +               TEMP_ASSET_CLASS_POINTER
0C     +               TRANSACTIONS_WITHIN_HOUR,
0C     +              'Modified Booth and Derating Production Cost Method'
0C     +              COMMON_STOCK_ISSUED_SHARES(MO,YR,ASSET_CLASS,Equity)
0C     +              PURCHASED_CAPACITY_MW(R_COMPANY) *
0C     +             COMMON_STOCK_BUYBACK_SHARES(MO,YR,ASSET_CLASS,Equity)
0C     +            + BALANCE_SHEET_ROLLUPS(2,ARO Liabilities,CLASS_LEVEL)
0C     +            + MONTHLY_RETIREMENT_FUND_EARNINGS_ADJ(MO)
0C     +            ADDRESS_1,
0C     +            ADDRESS_2,
0C     +            CENSUS_REGION,
0C     +            COMP_ID,
0C     +            COUNTRY,
0C     +            DATE ! INT
0C     +            GET_MONTHLY_TL_MWH,
0C     +            L_SUPPLEMENTAL_CAP_DOLLARS(R_COMPANY) +
0C     +            OEI_SUPPLEMENTAL_CAP_DOLLARS(R_COMPANY) + 
0C     +            PHONE_NUM,
0C     +            PLANT_ADDRESS_1,
0C     +            PLANT_ADDRESS_2,
0C     +            SUPPLEMENTAL_TRUE_UPS(R_COMPANY)
0C     +            ZIP_CODE,
0C     +           GRX_UPDATES_CO2_PRICES
0C     +          R_CLASS_POINTERS(*)
0C     +          TEMP_ASSET_CLASS_POINTER(:)
0C     +         COVERAGE_DRIVER_RATIO =
0C     +         DEMAND_ON_TRANSMISSION_SYSTEM
0C     +         DUKE_WHEELING_COSTS /
0C     +         DUKE_WHEELING_COSTS,
0C     +         DUKE_WHEELING_RATE,
0C     +         FIXED_TRANSMISSION_AG(R_COMPANY) +
0C     +         FIXED_TRANSMISSION_AG,
0C     +         FIXED_TRANSMISSION_OM(R_COMPANY) +
0C     +         FIXED_TRANSMISSION_OM,
0C     +         OTHER_WHEELING_REVENUES(R_COMPANY)
0C     +         OTHER_WHEELING_REVENUES,
0C     +         S_DUKE_WHEELING_RATE(4),
0C     +         TRANSMISSION_DEPRECIATION(R_COMPANY) +
0C     +         TRANSMISSION_DEPRECIATION,
0C     +         TRANSMISSION_INCOME_TAXES(R_COMPANY) +
0C     +         TRANSMISSION_INCOME_TAXES,
0C     +         TRANSMISSION_ROI(R_COMPANY) +
0C     +         TRANSMISSION_ROI,
0C     +         TRANSMISSION_TAX_ADJ_FACTOR(R_COMPANY) *
0C     +         TRANSMISSION_TAX_ADJ_FACTOR,
0C     +         TRANS_OTHER_TAXES(R_COMPANY) +
0C     +         TRANS_OTHER_TAXES,
0C     +         TRANS_RENTS(R_COMPANY) +
0C     +         TRANS_RENTS,
0C     +       CONSOLD_BOY_,
0C     +      .OR. (START_MO == 1 .AND. END_MO == 12) ) THEN
0C     +      NON_UTIL_COST_ESCAL,
0C     +      NON_UTIL_CUST_COST,NON_UTIL_NEW_CUST_COST,
0C     +      nFullCapHr,iHr,OriginalLoad,ShoulderLoad,SumGenMWH,TgtGenMWH
0C     +     M_MARGINAL_COST_DELTA(:,:),
0C     +     M_TIE_FLOW(:,:),
0C     +     NON_UTIL_CUST_COST,NON_UTIL_NEW_CUST_COST,
0C     +     PRODUCTION_COST_AFTER_SALES(:),
0C     +     PRODUCTION_COST_B4_SALES(:),
0C     +    FracHrCurLoad,
0C     +    GPRank,GPHour,
0C     +    HrsUse,
0C     +    IncrHrCurLoad,
0C     +    R_WEEKLY_LOAD_ORG(GPHour(0)),
0C     +    R_WEEKLY_LOAD_ORG(GPHour(1)),
0C     +    SumGenMWH,GPShoulder
0C     +    nFullCapHr,iHr,OriginalLoad,ShoulderLoad,SumGenMWH,TgtGenMWH
0C     +  ' --- --- --- --- ----- ----- ----- ----- ----- -----'//
0C     +  ' ----- ----- ------- -'
0C     +  ' RkG RkP HrG HrP LoadG LoadP IncrG IncrP FracG FracP'//
0C     +  ' nHrsG nHrsP  GenMWH v',
0C     12/3/93. GAT. ADDED MONTHLY_EL_REPORT.
0C     A PRESPECIFIED TYPE OF PURCHASE. DEVELOPED FOR WKP. 8/13/97. GAT.
0C     A SUBROUTINE TO CALCULATE THE HOURLY IMPACT OF DIFFERENT HYDRO 
0C     A SUBROUTINE TO FIND THE RIGHT BOUNDARY NEEDED TO SATISFY THE
0C     A SUBROUTINE TO INTEGRATE THE Load-Duration CURVE TO FIND THE ENERGY
0C     A SUBROUTINE TO INTEGRATE THE PROB CURVE TO FIND THE ENERGY
0C     A SUBROUTINE TO LOAD A RESOURCE WITH MINIMUM ENERGY AND CAPACITY
0C     A SUBROUTINE TO PRODUCE CALENDAR CORRECT HOURLY MARGINAL COSTS
0C     ACCOUNT FOR THE HALF-YEAR OVERFLOW INTO THE YEAR OF MATURITY
0C     ACCUMLULATE THE BOOK AND TAX DEPRECIATIONS, THE RETIREMENTS,
0C     ADDED MIDAS GOLD 7/24/91
0C     ADJUST ASSESTS NEC BY LIAB NEC TO GET WORKING CAPITAL
0C     ADJUST SELECTED PARAMETERS
0C     ADJUST THE TAX EXPENSE VECTOR
0C     ADJUSTMENTS ARE MADE TO THE PLANT PARAMETERS
0C     AFDC ITEMS
0C     AFTER INITIALIZATION OF THE AMORTIZATION SCHEDULE IN ISSYR OR I=2,
0C     AFUDC WO ABOVE THE LINE
0C     AFUDC WO BELOW THE LINE
0C     AFUDC WRITE OFF CALCULATIONS FROM HERE TO STATEMENT #140:
0C     ALGORITHM CREATES THE LODDUR,LPROB FOR THE LDC. EXACT
0C     ALL FINANCING BRANCHES CONVERGE HERE;
0C     ALPHA = (BASE + DX/2.) * FLOAT(HOURS_INCREMENT) OUT 3/25/92
0C     AMOUNT OF TAX AMORTIZED IN A DEFERRED TAX ACCOUNT
0C     AMOUNT OF TAX DEDUCTION THAT GOES TO RATE PAYERS
0C     AND THE AMOUNT TO NORMALIZED IF REQUIRED
0C     AND THE EXISTING GROSS PLANT VALUE FOR BOOK AND TAX
0C     ASSET_CLASS = R_ASSET_CLASS
0C     ASSUMING ANNUAL PAYMENT ON DECEMBER 31.
0C     ATTEMPT TO ADJUST USING TWO_AREAS
0C     Add to off-peak load and energy if these units are available
0C     BASE_YEAR_LOAD = PUT_REFERENCE_LOAD(BASE_YEAR_LOAD)
0C     BOOK ITEMS
0C     BOOK WO ABOVE THE LINE
0C     BOOK WO BELOW THE LINE
0C     CALCULATE AFDC ON CONSTRUCTION AND AFUDC ENTERING SERVICE
0C     CALCULATE BOOK DEPRECIATION
0C     CALCULATE BOOK DEPRECIATION ON BRICKS AND MORTAR
0C     CALCULATE BOOK DEPRICATION ON BRICKS AND MORTOR
0C     CALCULATE BOOK TAX DEPRICATION
0C     CALCULATE DEFERRED TAXES
0C     CALCULATE TAX EXPENSES
0C     CALCULATE THE BORROWED PORTION OF AFUDC
0C     CALCULATE THE CHANGES FROM AN ABANDONMENT
0C     CALCULATE THE RIGHT AND LEFT NON-COMPLETE DX INTERVALS
0C     CALCULATE YEAR END CWIP BALANCE AND  CWIP IN RATE BASE
0C     CALENDAR CORRECT YEAR
0C     CALL GET_CT_SO2_EMISSIONS(CLASS,CLASS_CT_SO2_ANNUAL)
0C     CALL SET_ASTOLOL_OL
0C     CASE #1: LEFT TO ISTART,ISTART TO ISTOP, ISTOP TO RIGHT
0C     CASE #2: LEFT TO ISTART=ISTOP, ISTART=ISTOP TO RIGHT
0C     CASE #3: LEFT TO RIGHT
0C     CHARACTER*1 COUNTRY,CANADA
0C     CHARACTER*1024 RECLN
0C     CHARACTER*128 RECLN
0C     CHARACTER*2 HOURLY_CHAR
0C     CHARACTER*20 MONTH_NAME
0C     CHARACTER*4 MIDAS_LAST_MONTH(LAST_AVAILABLE_MONTHLY_YEAR)
0C     CHARACTER*50 COMMENT
0C     CHECKING THE IMPACT FOR BG&E OF EXTERNAL RUNNING COSTS
0C     CODE MODIFICATION TO REMOVE THE PROBLEM OF THE COMEQU
0C     COMMON BLOCKS
0C     COMMON/AITVAFIN/CL_AI_INVESTMENT(MAX_CL_UNITS),
0C     COMMON/FOSHYD/ OFLINE(MAX_CL_UNITS),OFF_LINE(MAX_EL_UNITS),
0C     COMPUTE INITIAL PARAMETER VALUES FROM THE VALUES JUST READ
0C     COMPUTE THE BIENNUAL PAYMENT NEEDED TO AMORTIZE BALORG
0C     COMPUTE THE INCREMENTAL CHANGES TO LTD ITEMS
0C     COMPUTE THE PREFERRED STOCK ITEMS
0C     COMPUTES AN 'MTG' AMORTIZATION SCHEDULE ASSUMING CONSTANT 
0C     CONTINGENCY_EXPENSES = CONTINGENCY_EXPENSES + MNEXP
0C     CREATE THE NEW LDC
0C     DECLARATION FOR /FAINPT/
0C     DECLARATION FOR INPUT VARIABLES FOR NUCLEAR ASSETS
0C     DECLARATION FOR WORLD VARIABLES FOR FUTURE ASSETS
0C     DECLARE VARIABLES
0C     DECLARE VARIABLES     
0C     DEFERRED DEBITS SECTION
0C     DEP METH IS SYD
0C     DEP METH IS SYD WITH SWITCH TO SL
0C     DETERMINE LOCAL_MAX_NUM_MARKET_AREAS, MIN_YEAR, MAX_YEAR
0C     DISTRIBUTES IT EVENLY ACROSS IPNT-1 POINTS.
0C     DISTRIBUTES IT EVENLY ACROSS LOAD_POINTS-1 POINTS.
0C     ELIMINATE HYDRO AND STORAGE GENERATION FROM SYSTEM RESOURCES.    C
0C     ELSE
0C     ELSE (YR = YRMAT)
0C     ELSE THE USER PROVIDED THE INFORMATION
0C     ELSEIF(A <= BASE .AND. ENERGY >= AVAILABLE_CONTRACT_ENRG) THEN
0C     END
0C     END MARK'S SECTION OF THE CODE
0C     ENDIF
0C     ENRG1  = DEMAND
0C     ENTRY TRANSFER_ZERO_ASSETS(R_CLASS_POS)
0C     ENVIRONMENTAL VARIABLES
0C     EXACTLY THE SAME ENERGY FOUND IN THE ORIGINAL INTERVAL.
0C     EXTERNAL VARIABLES
0C     FILL OUT THE AMORTIZATION SCHEDULE, ASSUMING LTDRTE REMAINS CONSTANT
0C     FINANCIAL_SIMULATION_YEARS = RUN_YEARS() + EXTENSION_YEARS() + 1
0C     FINANCIAL_SIMULATION_YEARS=MIN(MAX_FINANCIAL_SIMULATION_YEARS,
0C     FINASSET MODULE 5/7/85
0C     FIND THE UNIT ASSOCIATED WITH MINIMUM LOAD
0C     FINDING THE WEIGHTED AVERAGE BETWEEN THE TWO INTERVALS
0C     FOR DEVELOPMENT OF AMORTIZATION FACTOR ABOVE, SEE *FOOTNOTE BELOW;
0C     FOR PEAKING HYDRO THE HIGHEST LOADS ARE REDUCED BY THE           C
0C     FOR ROR HYDRO EACH LOAD IS REDUCED BY THE MINIMUM OUTPUT         C
0C     FOR STORAGE DEVICES THE PEAKEN AND CAPACITY FROM THE DEVICE      C
0C     FOR TOTAL COMPANY
0C     FORECAST_GROWTH_YEARS = AVAIL_DATA_YEARS
0C     FOUND BY TAKING THE ENERGY FOUND BETWEEN TWO "INTERVALS",
0C     Flip the working arrays around again so that peak is now in
0C     I RUNS THROUGH THE RR'S. K RUNS THROUGH THE MARGINAL SEGMENTS,
0C     IF NPV AND DPS ARE NOT USED, INCREMENT THE NUMBER OF ITERATIONS
0C     IF THE BASE CASE AND FIRST YEAR
0C     IF THE BOOK LIFE IS GREATER THAN 98 YEARS DEPRECIATION IS NOT
0C     IF THE BOOK LIFE IS LESS THAN ONE YEAR THE ASSUMPTION IS THAT
0C     IF THE TAX LIFE IS GREATER THAN 98 YEARS, IT IS ASSUMED
0C     IF(.NOT. ALLOCATED(CUMULATIVE_CASH_ADJUSTMENT))
0C     IF(ASSET_CLASS < 0.) THEN
0C     IF(DEPMET == ACRS) THEN
0C     IF(R_ASSET_CLASS < 0.) THEN
0C     IN ANY CASE, IT IS CALLED ONLY WHEN (YR <= YRMAT)
0C     INCLUDE 'CL_ASSETS.FOR'
0C     INCLUDE 'ENVIRCOM.MON'
0C     INCLUDE 'NAMESCOM.MON'
0C     INCLUDE 'OVLYCOM.MON'
0C     INCLUDE 'PRODCOM.MON'
0C     INCLUDE 'SHRTFORM.MON'
0C     INITIALIZE VARIABLES
0C     INQUIRE(FILE=FILE_NAME,OPENED=FILE_EXISTS,NUMBER=UNIT_NUMBER)
0C     INQUIRE(UNIT=12,OPENED=FILE_EXISTS)
0C     INTEGER*2 EA_REPORTING_UNIT
0C     INTEGER*2 GROUP
0C     INTEGER*2 J
0C     INTEGER*2 OFLINE,OFF_LINE,NUNITS,HYDRO_UNITS,
0C     INTEGER*2 R_PARENT_CLASS_ID
0C     INTERNAL VARIABLES
0C     IREC = YEAR
0C     ISSUE DEBT AND COMPUTE RETAINED EARNINGS
0C     ISSUED COMMON AND PREFERRED STOCK
0C     ISSUES: 1 USING LAST I; 2 USING THE MINIMUM PART OF THE LDC
0C     Initialize the working arrays in reverse order.
0C     LIMITS OF INTEGRATION ARE FOUND. 
0C     LIST INDIVIDUAL ACCOUNT INFORMATION TO DISK FILE
0C     LOGICAL*1 USE_ALL_FED_TAX_BENEFITS
0C     LOGICAL*1 USE_STATE_TAX_BENEFITS_NOW
0C     Last change: 
0C     Last change: MSG 1/10/2010 2:58:00 PM
0C     Last change: MSG 1/10/2010 3:00:11 PM
0C     Last change: MSG 1/29/2007 2:01:29 PM
0C     Last change: MSG 1/29/2007 3:53:38 PM
0C     Last change: MSG 4/29/2014 11:22:23 AM
0C     Last change: MSG 8/9/2011 12:16:38 PM
0C     Last change: MSG 9/26/2011 4:37:40 PM
0C     Last change: MSG 9/7/2011 11:52:50 AM
0C     Last change: msg 3/17/2022 11:56:39 AM
0C     Last change: msg 9/20/2016 4:05:35 PM
0C     MARGINAL COSTING VARIABLES
0C     MAXIMUM ENERGY CONSTRAINT.
0C     MONTHLY CAPITAL COST RATES FOR MIDAS GOLD
0C     MOVED ABOVE PEAK SALE. 6/5/97. GAT.
0C     NOTE: THE VARIABLE VALUE WAS ADDED 5/25/91 FOR INTEREST
0C     NRTXWO = TAXWO * ABTAX
0C     OF CONTRACTS
0C     OF THE LDC IS THE BASE AND THE UPPER BOUND IS THE PEAK. THE
0C     One can show from the Present-Worth formula for payments made at
0C     PARAMETER(CANADA='C')
0C     PARAMETER(INIT_VALUES=34-27,
0C     PEAK IS CONTAINED IN THE LAST ENERGY INTERVAL. THE LOWER BOUND
0C     PLACES HYDRO LOADS INTO LOAD_POINTS/2 - 1 INTERVALS
0C     PLACES LOADS AND RUNNING RATES INTO IPOT/2 - 1 INTERVALS
0C     PLACES TRANS LOADS INTO LOAD_POINTS/2 - 1 INTERVALS
0C     PREVIOUS ALGORITHM (SINGLE PRECISION CALC.) AND
0C     PROBABILITY ASSOCIATED WITH THE FIRST LDC POINT IS 1 AND THE 
0C     PROBABILITY ASSOCIATED WITH THE LAST LDC POINT IS ZERO. 
0C     PROPERTY TAX ON CONSTURCTION
0C     PURPOSE:                                                         *
0C     PURPOSE:                                                         C
0C     PURPOSE:  CONVER CHECKS FOR CONVERGENCE OF GROSS OPERATING       C
0C     Purpose:  CLASS_INTEREST_PS_DIVIDENDS is used to calculate       C
0C     Purpose:  FIN/ANCE is the heart of the FIN system.  This         C
0C     Purpose:  This module calculates the annual book and tax         C
0C     Purpose:  This subroutine calculates revenues and cash flows      C
0C     Purpose:  This subroutine reads the asset class                  C
0C     Purpose:  This subroutine reads the initialization file and      C
0C     Purpose:  This subroutine reads the parameter file and           C
0C     READ EXECUTION FILE AND OPEN ASSET FILES, OUTPUT FILES
0C     READ PARAMETER FILE
0C     REAL :: RR_OBS(LOAD_CURVE_POINTS),
0C     REAL :: SYS_FC_VALUES(4,12)
0C     REAL CAP_FRAC_OWN,CAP_PLANNING_FAC
0C     REAL CIAC_CASH,CIAC_RATEBASE(2)
0C     REAL CL_AI_INVESTMENT,EL_AI_INVESTMENT
0C     REAL MAXLIM
0C     REAL TSY_FC_VALUES(4,12)
0C     REAL*4 CATAWBA_BY_DEBITS_BALANCE,CATAWBA_BY_DEF_TAX_BALANCE
0C     REAL*4 R_VARIABLE_VALUE(0:*)
0C     REAL*4 TREND_NORM
0C     REAL*8  SLOPE,INTERCEPT,A,B,C,DBLE_INT_CAP,DBLE_MIN_CAP,
0C     REAL*8 DIFFE
0C     ROUTINE FOR CLASSIFYING POOLING COSTS TO THE MEMBERS
0C     ROUTINE TO CALCULATE THE HYDRO LOAD PROBABILITY 
0C     ROUTINE TO CALCULATE THE TRANS LOAD PROBABILITY 
0C     Reduce the peak load and energy if peaking units are available
0C     S RUNS THROUGH THE TRANSACTION SEGMENTS.
0C     SAVE ADD_OTHER_DEBT_SERVICE,ADD_DSM_EXPENDITURES
0C     SEARCH FOR THE CROSSOVER PROB
0C     SEARCH FOR THE FRACTIONAL SEGMENTS AND ADJUST THE LDC
0C     SEARCH FOR THE LOAD SEGMENTS CONTAINING THE MINIMUM
0C     SEMI-ANNUAL PAYMENTS OF PRINCIPAL AND INTEREST 
0C     SUM TOTAL COMPANY EXPENSES
0C     TAKEN
0C     TAX DEDCUTION
0C     TAX ITEMS
0C     THAT NO TAX DEPRECIATION WILL OCCUR
0C     THAT NO TAX DEPRECIATION WILL OCURR
0C     THE BASE IS CONTAINED IN THE FIRST ENERGY INTERVAL AND THE
0C     THE PURPOSE OF THIS PROGRAM IS TO MODIFY HOURLY LOADS TO         C
0C     THE REMAINING POINTS, BETWEEN THE "INTERVALS" POINTS, ARE
0C     THE TOTAL AMOUNT OF CEP AND AFDC2 ARE TO BE EXPENSED IN ONE
0C     THE USER SPECIFIED DEP VALUES ARE USED
0C     THEN ABANDONMENT ITEMS ARE COMPUTED
0C     THEN ABANDONMENT ITEMS ARE ZEROED
0C     THERE ARE TO BE IPNT POINTS ON THE LDC, 
0C     THIS ROUTINE ALTERS THE LOAD DURATION CURVE ACCORDING TO
0C     THIS ROUTINE IS CALLED ONLY WHEN NEWRAT DIFFERS FROM THE OLD RATE;
0C     THIS SECTION TAKES THE ROUNDING ERROR FROM THE 
0C     THREE CASES: 
0C     TO REFLECT THE WRITE-OFF AMOUNTS
0C     TOTAL AFUDC WO
0C     TOTAL BOOK WO
0C     TOTAL BOOK WO OF BRICKS AND MORTAR
0C     TOTAL COMPANY
0C     TOTAL TAX DEDUCTION OF THE WO
0C     TYPE DECLARATION FOR /FAINPT/
0C     TYPE DECLARATION FOR /HYDRVL/
0C     TYPE DECLARATION FOR /LCARRY/
0C     TYPE DECLARATION FOR /LOADCR/
0C     TYPE DECLARATION FOR /OPPARM/
0C     TYPE DECLARATION FOR /VFCOST/
0C     TYPE DECLARATION FOR /WKARRY/
0C     TYPE DECLARATION FOR /WORK/
0C     USE_STATE_TAX_BENEFITS_NOW = .TRUE.
0C     Using the notation that
0C     VALUE CHANGING BUT NOT THE VALUE OF EQRATO * FUNDS ETC.
0C     VALUES FOR THE LDC ARE FOUND FOR "INTERVALS" POINTS.
0C     VARIABLES FOR CAPACITY PLANNING
0C     WARN IF UNITS WERE CONVERTED TO RR
0C     WHEN THE FIRST PAYMENT IS DUE ON 31 DECEMBER OF ISSUE YEAR
0C     WHERE IPNT IS AN ODD NUMBER, AND IPNT-1 ENERGY INTERVALS.
0C     WRITE (9,1000) AMCHEK,LXLIM,RXLIM,ENRGBL
0C     WRITE THE CUMULATED RESULTS TO A FILE
0C     WRITE THE CUMULATED RESULTS TO THE ASSET FILE
0C     WRITE THE RESULTS TO BE READ BY PROCOST
0C     YEAR
0C     and from the sum-of-powers formula
0C     position 1 and base is in position LDCPTS.
0C     that
0C     the end of years 1 through M
0C    ***** SEC RATIOS *******
0C    +                                                          OPERATING_ASSETS_YEAR_START
0C    +                                                        OPERATING_ASSETS_YEAR_END)/2.
0C    +                                                     COST_OF_CAPITAL_RISK_ADJUSTMENT)
0C    +                                                   (1. -  (FDTXR*(1.-STTXR) + STTXR))
0C    +                                                   ASSET_ALLOCATOR            
0C    +                                                   PS_ROLLOVER
0C    +                                                  LTD_ROLLOVER
0C    +                                               ADDITIONAL_REVENUES
0C    +                                               TYPETAXPAID,INTLTD)
0C    +                                              AVAIL_DATA_YEARS)+1)
0C    +                                              CURRENT_TARGET_RATIO
0C    +                                              MONTHLY_DATA_UNITS,
0C    +                                              MONTHLY_VECTOR_DATA,
0C    +                                              MONTH_ENDING)
0C    +                                             + JAN_JUN_STD_ISSUED)
0C    +                                             ACCOUNT_TYPE == 'E'))
0C    +                                             CLASS_TYPE=='S') THEN
0C    +                                             MONTHLY_VALUES(MO,YR)
0C    +                                             REARNC(2,R_CLASS_POS)
0C    +                                            CPL_FUEL_REVENUES,
0C    +                                            DEFERRED_FUEL_EXPENSE)
0C    +                                            MASTER_CLASS_LIST)
0C    +                                            NUM_OF_ACTIVE_CLASSES,
0C    +                                           + INTRA_COMPANY_REVENUE
0C    +                                           >= CURRENT_TARGET_RATIO
0C    +                                           SBU_NF_NON_CASH_EXPENSE
0C    +                                           SUBSIDARY_VARIABLES(28) ! 3/13/98
0C    +                                          (I <= AVAIL_DATA_YEARS))                
0C    +                                         ACCOUNT_TYPE == 'E'))THEN
0C    +                                         BTL_LEASE_AMORTIZATION)  
0C    +                                        LONG_TERM_DEBT_RETIREMENTS
0C    +                                       + CPL_FUEL_REVENUES
0C    +                                       - NEW_SUBSIDIARY_INVESTMENT ! 6/10/98
0C    +                                       COMMON_STOCK(2,R_CLASS_POS)
0C    +                                       CONSOLIDATED_TAX_ADJUSTMENT 
0C    +                                       ENVIRONMENTAL_TAX
0C    +                                       FED_INCOME_TAX_DEDUCTIONS -
0C    +                                       LOCAL_TAXES -
0C    +                                       NET_OF_TAX_NUCL_FUND_RETURN
0C    +                                       PREFERRED_STOCK_RETIREMENTS
0C    +                                       STATE_TAXES -
0C    +                                       STATE_TAX_ON_CAPITAL -
0C    +                                       TAXABLE_INCOME -
0C    +                                      - BAL_SHEET_RE_SUB_ADJ
0C    +                                      COMMON_EQUITY(2,R_CLASS_POS)
0C    +                                      CUSTOMER_DEPOSIT_INTEREST_ON
0C    +                                      DUMMY_TYPE,ASSET_CLASS_LIST)
0C    +                                      MAX_ASSET_CLASS_NUM)
0C    +                                     + NUC_DECOM_FUND_LIABILITY(0)
0C    +                                     LONG_TERM_DEBT(2,R_CLASS_POS)
0C    +                                     NET_OF_TAX_NUCL_FUND_RETURN ! keeps the balance sheet balanced
0C    +                                    + DD_DEFERRED_EXPENSE_CASH
0C    +                                    - PS_ROLLOVER_DIVIVEND
0C    +                                    ADDEDUM_TO_BOOK_GAIN_LOSS
0C    +                                    ATL_AMORT_OF_BOOK -
0C    +                                    BTL_AMORT_OF_BOOK +
0C    +                                    BTL_NUC_FUEL_DECOM_LIABILITY +
0C    +                                    CLASS_ADDENDUM_TO_PROPERTY_TAX
0C    +                                    CUMULATIVE_DEP_ON_SOLD_ASSETS-
0C    +                                    CWIP_IN_RATE_BASE(2,CLASS_POS)
0C    +                                    FINANCIAL_SIMULATION_YEARS)
0C    +                                    FUNDS_CONSOLIDATING_ADJUSTMENT
0C    +                                    GROSS_VALUE_OF_SOLD_ASSETS +
0C    +                                    IOFFSET,
0C    +                                    MAX_OL_INIT_CLASS_ID_NUM,
0C    +                                    PREFERRED_STOCK(2,R_CLASS_POS)
0C    +                                    VECTOR_DATA,
0C    +                                   + CUSTOMER_DEPOSIT_INTEREST_ON
0C    +                                   - LTD_ROLLOVER_INTEREST
0C    +                                   -(ATL_LEASE_AMORTIZATION +
0C    +                                   .AND. .NOT. CPL_IS_ACTIVE) THEN
0C    +                                   ADDEDUM_TO_BOOK_GAIN_LOSS
0C    +                                   ATL_AMORT_OF_BOOK -
0C    +                                   BTL_AMORT_OF_BOOK +
0C    +                                   CHANGE_IN_LONG_TERM_INVESTMENTS
0C    +                                   CONSOLIDATED_FEDERAL_TAXES_PAID
0C    +                                   CUMULATIVE_DEP_ON_SOLD_ASSETS -
0C    +                                   GROSS_VALUE_OF_SOLD_ASSETS +
0C    +                                   KEPCO_WC_CURENT_MAINT_ENRG_COST
0C    +                                   MAX_SHORT_TERM_INVESTMENT) THEN
0C    +                                   NUC_FUEL_RATE_BASE(2,CLASS_POS)
0C    +                                   NUM_OF_OL_INIT_CLASSES,
0C    +                                   SUB_FED_TAX_PAYMENTS_2_PARENT -
0C    +                                   TEMP_ASSET_CLASS_POINTER)
0C    +                                  + DD_DEFERRED_EXPENSE_CASH
0C    +                                  + NUCL_FUND_RETURN
0C    +                                  + NUC_DECOMMISSIONING_COST +
0C    +                                  - DEF_TAXES_AMT_CREDITS
0C    +                                  CATAWBA_BY_DEBITS_BALANCE(CLASS)
0C    +                                  CWIP_IN_RATE_BASE(2,R_CLASS_POS)
0C    +                                  DEALLOCATE(CLASSIFICATION_TYPES)
0C    +                                  EXPENSE_COLLECTION) ! NEED THIS FOR BTL REVERSALS
0C    +                                  INTRA_EXPENSE_COLLECTION) ! NEED THIS VALUE
0C    +                                  NET_DD_BALANCE(2,CLASS_POS) +
0C    +                                  NUC_FUEL_TOTAL_BURN +
0C    +                                  PURCHASE_POWER_EXPENSE *
0C    +                                  PURCHASE_POWER_IN_DEFERRED_FUEL)
0C    +                                  R_FED_TAXABLE_INCOME_B4_NOLS(MO)
0C    +                                 + CALCULATED_2_ACTUAL_FED_ADJ
0C    +                                 + CATAWBA_OTHER_NET_REVENUES
0C    +                                 + CS_ISSUE_EXP_AMORT
0C    +                                 + NF_CAPITIALIZED_INTEREST
0C    +                                 + SBU_VARIABLES(393)
0C    +                                 - CONSOLIDATED_FEDERAL_TAXES
0C    +                                 - CONSOLIDATED_FEDERAL_TAXES_PAID !CONSOLIDATED_FEDERAL_TAXES
0C    +                                 - PARENT_CASH_CS_DIVIDEND_PAYMENT ! COMMON_DIVIDEND_PAYMENT(CLASS_POS)
0C    +                                 CATAWBA_BY_DEF_TAX_BALANCE(CLASS)
0C    +                                 CL_CAP_AREA_LINKED(UNIT_NO)) THEN
0C    +                                 DEF_TAX_CR_BALANCE(2,CLASS_POS) +
0C    +                                 DUMMY_TYPE,ASSET_ALLOCATION_LIST)
0C    +                                 DUMMY_TYPE,ASSET_CLASS_LIST)
0C    +                                 EXCLUDE_SUB_COMMON_EQUITY
0C    +                                 LIQUID_INVESTMENTS(2,R_CLASS_POS)
0C    +                                 NUC_FUEL_RATE_BASE(2,R_CLASS_POS)
0C    +                                 QUARTERLY_COMMON_DIVIDENDS(4)
0C    +                                 R_ASSET_CLASS,ADDENDUM_TYPE) = 0.
0C    +                                 TEST_PEAK,TEST_ANN_CAP,R_YEAR)
0C    +                                + CLASS_OTH_LIAB_SALE_ASSETS
0C    +                                + DEFERRED_FUEL_BALANCE(CLASS_POS)
0C    +                                CLASS_NET_NF_VALUE(2,CLASS_POS) -
0C    +                                CUMULATIVE_NUCLEAR_BURN(CLASS_POS)
0C    +                                DEFERRED_FUEL_BALANCE(CLASS_POS) -
0C    +                                DEFERRED_FUEL_EXPENSE
0C    +                                INT(2*MAX_BC_DEBIT_CLASS_ID_NUM))
0C    +                                INT(2*MAX_OL_DEBIT_CLASS_ID_NUM))
0C    +                                LIQUID_INVESTMENTS(1,R_CLASS_POS))
0C    +                                LONG_TERM_INVESTMENTS(R_CLASS_POS)
0C    +                                MAX(STUDY_PERIOD+EXTENSION_PERIOD,
0C    +                                NUC_FUEL_RATE_BASE(2,CLASS_POS) -
0C    +                                RATE(MO,I)*(1.-FRACTION)*BAL(MO,I)
0C    +                                SUBSIDARY_VARIABLES(77)
0C    +                               - (FUEL_EXPENSE +
0C    +                               - NUC_FUEL_LEASED_BURN   
0C    +                               -ENVIRONMENTAL_TAX
0C    +                               CUM_BOOK_DEP(0,I) * ASSET_ALLOCATOR
0C    +                               CWIP_IN_RATE_BASE_AT(CLASS_LEVEL) + 
0C    +                               JAN_JUN_STD_ISSUED,
0C    +                               LIQUID_INVESTMENTS(1,R_CLASS_POS) +
0C    +                               NUC_DECOM_FUND_LIABILITY(CLASS_POS)
0C    +                               STI_CHANGE_IN_CASH
0C    +                               TIME_FROM_FIRST_DAY(MATMO,MATDA,YR)
0C    +                              - QUARTERLY_COMMON_DIVIDENDS(4)
0C    +                              CUMULATIVE_NUCLEAR_BURN(CLASS_POS) +
0C    +                              CUM_DEFERRED_EXPENSE_CASH(CLASS_POS)
0C    +                              NUC_FUEL_RATE_BASE_AT(CLASS_LEVEL) + 
0C    +                              NUC_FUEL_TOTAL_BURN
0C    +                              PARENT_CASH_CS_DIVIDEND_PAYMENT  ! COMMON_DIVIDEND_PAYMENT(CLASS_POS) -
0C    +                             (MAX_SHORT_TERM_INVESTMENT -
0C    +                             + NET_OF_TAX_NUCL_FUND_RETURN ! keeps the balance sheet balanced
0C    +                             + NUCL_FUND_RETURN
0C    +                             + NUC_DECOM_FUND_LIABILITY(CLASS_POS)
0C    +                             + TRANSFER_VALUE(0,YR,ASSET_CLASS,13) ! CWIP ADJUSTMENTS
0C    +                             - BTL_AMORT_OF_BOOK
0C    +                             CUMULATIVE_GPV_ADJUSTMENTS(CLASS_POS)
0C    +                             CWIP_IN_RATE_BASE_AT(CLASS_LEVEL-1) +
0C    +                            - SBU_VARIABLES(288) ! SBU NUC LIAB            
0C    +                            CUMULATIVE_BOOK_DEP(0,I,ASSET_CLASS) +
0C    +                            DEFERRED_EXPENSE_AMORT
0C    +                            NUC_FUEL_RATE_BASE_AT(CLASS_LEVEL-1) +
0C    +                            PARM_AMORTIZATION_ADJUSTMENT +
0C    +                            REPORTING_VARIABLES(48) -  ! CSDIV
0C    +                           + NUC_DECOM_FUND_LIABILITY(0)
0C    +                           + NUC_DECOM_FUND_LIABILITY(0)      !PLANT
0C    +                           + NUC_DECOM_FUND_LIABILITY(R_CLASS_POS)
0C    +                           + NUC_DECOM_FUND_LIABILITY(R_CLASS_POS)  !PLANT
0C    +                           + YEAR_END_UNUSED_CREDIT_BAL
0C    +                          + CALCULATED_2_ACTUAL_STATE_ADJ
0C    +                          + CASH_2_LT_INVESTMENTS
0C    +                          + FED_DEFERRED_TAXES_FROM_NOL
0C    +                          - DEF_TAXES_FROM_NOLS_AMT_CREDITS
0C    +                          HYDRO_EXPENSE_ASSIGNMENT(J) /= 'R') THEN
0C    +                         + CHANGE_2_DECOMMISSIONING_LIAB
0C    +                         + NUC_DECOMMISSIONING_COST
0C    +                         + NUC_DECOM_FUND_LIABILITY(0)
0C    +                         CLASS_TYPE(CLASS_POS) == SUBSIDIARY) THEN
0C    +                        (ACCOUNT_TYPE == 'R' .OR.
0C    +                        (ADDITIONS_BALANCE + MONTHLY_ADDITIONS/2.)      
0C    +                        CATAWBA_TOTAL_LEVEL_CAP_PAYMTS(RUN_YEAR)
0C    +                        FA_CUMULATIVE_BOOK_DEP +DSM_CUM_BOOK_DEP +
0C    +                        NUCL_FUND_RETURN -
0C    +                        RETURN_RESERVE_MARGIN_RATIO(
0C    +                        R_DEBIT_CLASS_POINTERS,
0C    +                       BASE_OUTPUT_RECORD = BASE_OUTPUT_RECORD + 1
0C    +                      + NUC_DECOMMISSIONING_COST
0C    +                      YEAR_START,LOCAL_NAME,LOCAL_POINTER),CAP_MW)
0C    +                     + (2,R_CLASS_POS)
0C    +                     BOTTOM_PROB .LT. LEFT(S) ) THEN
0C    +                     DEBIT_BC_ASSET_CLASS_POINTER,
0C    +                     NEW_SUB_INVESTMENT
0C    +                     SUB_EQUITY_NEEDS_FROM_PARENT(CLASS_LEVEL-1) +
0C    +                    'Consolidated '//trim(CLASS_NAME(CLASS_POS))
0C    +                    .AND. CLASS_TYPE(CLASS_POS) /= REGULATED_GROUP ! PARENT OR SUB
0C    +                    CLASS_TYPE(CLASS_POS) /= REGULATED_GROUP) THEN ! PARENT OR SUB
0C    +                    REPORTING_VARIABLES(48) + ! CSDIV
0C    +                   (ACCOUNT_TYPE == 'R' .OR. ACCOUNT_TYPE == 'E'))
0C    +                   .NOT. MONTHLY_MIDAS_ACTIVE .OR. ITER == 1) THEN
0C    +                   CATAWBA_OTHER_NET_REVENUES ! Deferred cash expense
0C    +                  + NUC_DECOM_FUND_LIABILITY(R_CLASS_POS)
0C    +                  CASH_AMOUNTS_PAYABLE(MO,ASSET_CLASS,DATA_POS)
0C    +                  DEBIT_OL_ASSET_CLASS_POINTER,
0C    +                 + LONG_TERM_DEBT_RETIREMENTS
0C    +                 + MIN_ST_INVESTMENTS
0C    +                 + MTG_DEBT_RETIREMENTS
0C    +                 + PREFERRED_STOCK_RETIREMENTS
0C    +                 + SBU_COMMON_STOCK_BOUGHT
0C    +                 + SUBSIDIARY_INCOME
0C    +                 +DEF_TAXES_FROM_NOLS_AMT_CREDITS
0C    +                 - LIQUID_INVESTMENTS(1,CLASS_POS)
0C    +                 BKDPPT + BDPAFC + AMTEXP
0C    +                 MAX(FIRSTYR - BASEYR,1))
0C    +                 TXPROP - STDINT(2) + 
0C    +                + DEF_TAXES_AMT_CREDITS
0C    +                - CASH_VARIABLES(MO,cash_total_tax_payments)
0C    +                EL_AI_INVESTMENT(MAX_EL_UNITS)
0C    +               (1.+RETURN_ON_RESERVES/200.) * ADDITIONAL_REVENUES)
0C    +               (ACCOUNT_TYPE == 'R' .OR. ACCOUNT_TYPE == 'E'))THEN
0C    +               + ALLOCATOR * R_GPV(MO,YR)
0C    +               - DEF_TAXES_AMT_CREDITS
0C    +               AI_CL_REMAINING_LIFE(MAX_CL_UNITS),
0C    +               AI_EL_REMAINING_LIFE(MAX_EL_UNITS),
0C    +               CAP_FRAC_OWN(MAX_CL_UNITS),
0C    +               CAP_PLANNING_FAC(MAX_CL_UNITS)
0C    +               NUNITS,HYDRO_UNITS,
0C    +               ONLINE(MAX_CL_UNITS),ON_LINE(MAX_EL_UNITS),
0C    +              (1. + RETURN_ON_RESERVES/200.) * ADDITIONAL_REVENUES
0C    +              + MONTHLY_CWIP(MO)
0C    +            (PREFERRED_STOCK_ISSUED-DEBT_FILE_PREFERRED_ISSUED)/2.
0C    +            AI_CL_REMAINING_LIFE,
0C    +            AI_EL_REMAINING_LIFE,
0C    +            ONLINE,ON_LINE
0C    +          F9.4,' ENRGBL = ',F10.6)
0C    +          Monthly Earnings 2 Common,
0C    +         DBLE_MAX_CAP
0C    +       R_ISSUE_EXPENSE_AMORT(0:12,0:*),
0C    +       R_ISSUE_EXPENSE_BAL(0:12,0:*),
0C    +     LONG_TERM_DEBT_ANNUALIZED_INT,
0C    +   STD_INTEREST_RATE,
0C    +  ALLOCATE(CUMULATIVE_CASH_ADJUSTMENT(FINANCIAL_SIMULATION_YEARS))
0C    ABANDONMENT METHODS       CWIP           AFUDC
0C    ALL RIGHTS RESERVED
0C    ANNUAL DECOMPOSTION METHOD AS DESCRIBED BY STOLL
0C    APPEARS THAT THIS INFO ISN'T USED
0C    COPYRIGHT (C) 1993 M.S. GERBER & ASSOCIATES, INC
0C    CWIP WRITE-OFF CALCULATIONS FROM HERE TO STATEMENT # 100:
0C    IN "LEAST-COST UTLITY PLANNING", 1989, JOHN WILEY & SONS
0C    WRITE OFF  EFFECTS ARE COMPUTED IN NEXT SEVEN LINES:
0C    WRITE OFF EFFECTS ARE COMPUTED IN NEXT SEVEN LINES:
0C   ADDED 6/17/91             7/28/91
0C   ALL RIGHTS RESERVED
0C   CLASS_BTL_EXPENSES = 0.
0C   CLASS_BTL_REVENUES = 0.
0C   CLASS_OTHER_REVENUE = 0.
0C   COPYRIGHT (C) 1995
0C   INITIALIZE VALUES
0C   IPUMCP.  The original curve uses the I counter, while the higher one
0C   M.S. GERBER & ASSOCIATES, INC.
0C   PEAKCP.  The original curve uses the I counter, while the lower one
0C   READ AND MAINTAIN TAX LOSS DATA
0C   ROUTINE TO CONVERT PRODUCTION PARAMETER FILE DATA
0C   This subroutine increases the base loads by shifting forward along
0C   This subroutine reduces the peak loads by shifting back along the
0C   WLOADS curve and attempting to subtract the PEAKCP.  You get two
0C   a slope-intercept equation for a segment of both curves, and
0C   curve until the cumulative area exceeds exceeds the energy the unit
0C   curve until the cumulative area exceeds the energy the unit needs
0C   curves; the original one and one which is identical but higher by
0C   curves; the original one and one which is identical but lower by
0C   is capable of producing.  Then the left limit is defined so as to
0C   limit before the energy was exceeded).  At this point, the program
0C   reassigns the WLOAD values to reflect the increase in energy and
0C   reassigns the WLOAD values to reflect the reduction of energy and
0C   solves a quadratic equation (as a result of integrating) to define
0C   the WLOADS curve and attempting to add the IPUMEN.  You get two
0C   the area.  This process is repeated at each discontinuity of the
0C   the change in shape.
0C   to produce.  Then the right limit is defined so as to
0C   two curves represents the energy increase.  This program computes
0C   two curves represents the energy reduction.  This program computes
0C   uses the J counter.  The area described by the difference of the
0C   yield the correct amount of energy (the left limit being the last
0C   yield the correct amount of energy (the right limit being the last
0C  (110) the full capacity cannot be taken off without violating the
0C  *FOOTNOTE ON AMORTIZATION FORMULA [ APPLICABLE ONLY FOR INTEGER M ]:
0C  *FOOTNOTE ON AMORTIZATION FORMULA [ APPLICABLE ONLY FOR INTEGER M ]: 
0C  2/3/93    CURRENT INTEREST VECTOR
0C  2/7/93    MADE THE MODULE SIZECOM.MON DEPENDENT
0C  4/13/92   REAL PROPERTY VALUE ADDED FOR PROP TAX CALCULATIONS
0C  5/25/91   CAPITIALIZED INTEREST RATE
0C  6/ 4/91   ACE DEPRECIATION FOR EA AND FUTURE ASSETS
0C  7/26/93. GAT.    ISTOP = ISTART + NINT((B-LODDUR(ISTART))/DX)
0C  90 IF(DEPMET == SL) THEN
0C  ACCURRALS
0C  AS CHANGES
0C  All Other 
0C  At this point the energy has been exceeded.  Now the exact limits
0C  BALANCE THE AFDC1 AND AFDC2
0C  BayShore
0C  CALCULATE AFDC1
0C  CALCULATE AFDC2
0C  CALCULATE ALLOCATION FACTOR FOR OP METHOD ADJUSTMENTS
0C  CALCULATE COMPOUNDING AMOUNTS
0C  CALCULATE OP INCOME
0C  CLINTON'S BTU TAX ON HYDRO
0C  Coal
0C  DATE      ADDITION OR CHANGE
0C  DETERMINE WHICH AFUDC RATE TO USE
0C  DUKE 8/8/96 M.S.G.
0C  FILE FUTASSET.FOR 6/19/85
0C  FILE NUCFUEL.FOR 2/16/84
0C  GET ELIMINATION INFORMATION FOR THE BASE YEAR.
0C  Gas
0C  In this case, the full peaking capacity was taken, and the matter
0C  It tests to see if the full capacity can be used.  It also computes
0C  MANY      DO LOOPS CHANGED FROM DO 10... TO DO WITH AN ENDDO STATEMENT
0C  NOTE:  ADDITITONS FOR MIDAS GOLD COPYRIGTH (c) 1991
0C  Now a sort for the peaking units; from least capacity factor
0C  Nuclear
0C  Other
0C  REPLACE WITH ARRAY ASSIGNMENT IN LF95
0C  SECTION
0C  THIS TAKES CARE OF ANY RIPPLE PROBLEMS 3/23/93 MSG
0C  TRANSFER VALUES
0C  The following section shifts along the curve and accumulates energy.
0C  The following section shifts along the curve and cumulates energy
0C  This section assigns the new values to WLOADS.  In the first case
0C  WRITE-BASE YEAR DATA HERE
0C  Water
0C  a slope-intercept form for each line between discontinuities on
0C  at a lower level.  When the left boundary of energy reduction is
0C  energy constraint.
0C  is complicated by having to follow the original curve's contour
0C  monthly_current_assets
0C  of integration are found.
0C  reached, decisions must be made about how to assign points.
0C  the curve.
0C  to greatest capacity factor.
0C  until the capacity or energy limit is reached.  It also computes
0C (1) NEED TO ADJUST FOR LF > 50% IE NEED TO TRAP FOR X1 > 1;  DONE. 4/7.
0C (2) NEED TO MAKE CHECKS THAT THERE IS ENOUGH LDC LEFT;
0C (3) NEED TO TRAP FOR THE PROB VALUE CLOSEST TO X1. DONE. 4/6.
0C **********************************************************************
0C .AND. RIGHT_RIGHT > 0.) ! 1/13/95. TEMP TEST.
0C 1 = SOX, 2 = NOX, 3 = CO2 1 4 = OTHER 2 5 = OTHER 3
0C 1/27/09 added Production Taxes Credits (PTC)
0C 1/27/93 GAT. ADDED TO TRAP FOR CASE WHERE BASE - A > AVAIL ENRG         
0C 10/15/97 SUM OF SBUs AND SUBs
0C 10/18/93. GAT. ADDITIONAL PEAK SHIFTING LOGIC
0C 10/9/96 OPERATING METHOD MAY NEED TO BE ADJUSTED HERE
0C 11/03/06 Dr. G
0C 11/21/02                  LINEC(2,0) = LINEC(1,0)
0C 11/21/02                  WCCUM(2,0) = WCCUM(1,0)
0C 12/20/92 THE FOLLOWING LOGIC IS FOR KEPCO IT ASSUMES THAT SOME KEPCO
0C 12/22/95 ADDED TO PUT RESERVE EXPENSES ON THE INCOME STATEMENT
0C 12/3/93. GAT. CHANGED MONTHLY COST AND REVENUE TO REFLECT $MM     
0C 120 IF(DEPMET == SYD) THEN
0C 2.  THIS IS WRONG ON 11/15/95 I CHANGED IT TO SET IT TO 2 IF THE SWITCH IS
0C 2/23/95. GAT. OUT BECAUSE CLOSED TWICE
0C 3/29/94. GAT. ADDED FOR SRP. MODIFIED 7/12/94.
0C 5/18/99 MODIFICATION TO FIX NOLs
0C 5/20/92 ADDED FOR EL_GROUP; 8/16/92 PUMP_GROUP OUT
0C 5/20/92 ADDED GROUP CAPABILITY
0C 5/20/92 ADDED VARIABLES FOR EL_GROUP; 8/16/92 PUMP_GROUP OUT
0C 6/10/97 NEED TO ADD A SPECIFIC ENTRY IN A DATA FILE FOR THE UNAMORTIZED
0C 6/20/96. GAT. ADDED FOR SRP.
0C 7/15/96 VARIABLES ADDED FOR OE
0C 8/14/95. GAT. ALTERED FOR EXTENSION PERIOD.
0C 8/16/92 TRAP FOR SALES/PUMP
0C 9/5/00 NEED TO ADD ACQUISTION OF NEW SUB.
0C A LOGICAL ARRAY THAT IS TRUE IF THE VALUE IS A VALUE NOT AN ESCALATION
0C A&I VARIABLES
0C ABANDONMENT 6 WAS SPECIFIED.  THE CWIP AND AFUDC AMOUNTS ARE
0C ABANDONMENT ITEMS
0C ACCELERATE THE IN-SERVICE VECTOR
0C ACCOUNT BASED REPORTING
0C ACCOUNT FOR THE PARTIAL YEAR UNDER OLDRAT, POSSIBLY .NEQ. NEWRAT
0C ACCOUNT INFORMATION
0C ACTUAL TAX VALUES
0C ADD ALLOCATED AMOUNTS TO TOTAL EXPENSE B4 TAXES
0C ADD ANNUAL VALUES TO TOTAL VALUES
0C ADD BALANCES TO PREVIOUSLY CALCULATED BALANCES
0C ADD BASE YEAR PAYMENTS
0C ADD DRILLING INFORMATION
0C ADD EL SO2 TO SO2 EMISSION TYPE 1
0C ADD EXPENSES
0C ADD IN THE REVENUES AND EXPENSES
0C ADD PREVIOUS LEVELS
0C ADD REVENUES
0C ADD SBU AND SUB TOGETHER
0C ADD STD INTEREST EXPENSE THAT HAS BEEN LAGGED BY THE EXPENSE FILE
0C ADD THE VERSION LOGIC HERE
0C ADD THEN SUBSTRACTED FOR TAXES AND AT THE END OF THE FINANCING LOOP
0C ADD-IN OF MONTHLY CAPITAL RATES
0C ADDED 1/17/98
0C ADDED 10/22/92 TO TRAP THE CASE WHERE ALL THE ENERGY NEEDED IS UNDER
0C ADDED 10/28/92 FOR KEPCO
0C ADDED 10/30/92 MSG
0C ADDED 10/7/92 FOR TIM BG&E MSG
0C ADDED 12/10/92
0C ADDED 3/21/05
0C ADDED 3/26/93 FOR UPA AND OTHERS
0C ADDED 4/13/92 FOR WPK WORK 
0C ADDED 4/13/92 MIDAS GOLD FOR REAL PROPERTY VALUES
0C ADDED 4/27/88 from FIN               
0C ADDED 5/24/94 FOR SRP M.S.G.
0C ADDED 5/5/93 FOR FP&L TC WORK     ITEMS 93-100
0C ADDED 6/15/91 FOR MIDAS GOLD
0C ADDED 6/18/93 FOR WKP 
0C ADDED 7 PASS THROUGHT VARIABLES FOR TVA 10/93
0C ADDED 7/15/93 FOR WKP ITEMS 105-108
0C ADDED 7/2/98
0C ADDED 9/29/92 FOR SRP
0C ADDED 9/29/92 FOR SRP ADDED PROPERTY TAX BACK INTO THE COVERAGE RATIO
0C ADDED CATAWBA STUFF IN BODY OF PROGRAM 4/15/97
0C ADDED TO HARDWIRE INTEREST 10/21/98 MSG
0C ADDED TO PASS BASE AND ADJUSTMENT REVENUE INFORMATION TO COST OF SERVICE
0C ADDED USER SPECIFIED ELIMINATIONS
0C ADDING CREDITS AT PARENT LEVEL
0C ADDING NOLS AND AMT CREDITS TO BALANCE SHEET 4/14/98
0C ADDITIONAL SECTION
0C ADDITIONS TO INCOME STATEMENT
0C ADD_FINANCIAL_RECORD VARIABLES
0C ADJUST AMOUNTS FOR OWNERSHIP FOR CP&L 4/9/99 MSG
0C ADJUST FED TAXES PAYABLE FOR THE PARENT
0C ADJUST FOR CREDITS AND ADJUSTMENTS
0C ADJUST LTD INTEREST FOR AMORTIZATION
0C ADJUST NEW LTD INTEREST AND STD INTEREST RATE BY THE SCENARIO DRIVER
0C ADJUST THE DATA OR USE THE DATA IN THE COOP TABLES
0C ADJUST TO MEET ACTUAL TAXES
0C ADJUSTMENT TO AMT AND EINVIRONMENTAL 1/7/98
0C ADJUSTMENTS
0C ADJUSTMENTS FOR NEW SUBSIDIARY ACQUISITIONS
0C ADJUSTMENTS TO ITEMS THAT ARE MAINTAINED AS BALANCES BUT ARE ENTERED
0C AFUDC
0C AFUDC ADJUSTMENTS-STILL NEEDED FOR NUCLEAR
0C AI CLASS OUTPUT
0C ALINE THE BOOKED VALUES WITH THE CASH FLOWS
0C ALL RIGHTS RESERVED
0C ALLOCABLE SECTION
0C ALLOCATE EXPENSE ITEMS
0C ALLOCATE OP METH ADJUSTMENTS 
0C ALLOCATE OP METHOD ADJUSTMENT
0C ALLOCATE RESULTS TO CLASSES
0C ALLOCATE TO ASSET CLASSES
0C ALLOCATE TO THE COST VALUES TOTAL COMPANY AND ASSET CLASSES
0C ALLOCATE TO TOTAL COMPANY AND ASSET CLASSES
0C ALLOCATED TO THE REVENUE TAX TO  MONTHS UNTIL SPECIFIC MONTHLY INFO IS AVAILABLE
0C ALLOCATOTAL COMPANY AND ASSET CLASSES
0C ALTERNATIVE SOLUTION TO THE QUADRADTIC  1/28/93
0C AMEREN ADJUSTMENT TO MARKET SALES AND PURCHASES
0C AMEREN ADJUSTMENTS
0C AMORTIZED O&M FOR DQE 1/25/98
0C AMT ADJUSTMENTS FOR FEDERAL INCOME TAXES
0C AMT PREFERENCE CALCULATION 
0C ANNAUAL ITEMS
0C ANNUAL AMORTIZATION EXPENSE
0C ANNUAL TAX STUFF
0C ANNUAL TOTAL CREDIT VALUES
0C ANNUAL TOTAL DEBIT VALUES
0C ANNUAL UNIT TRANSACTIONS
0C ANNUALIZED COST VALUES
0C APPLY DIRECT TRANSFERS AFTER CALCULATING THE UNADJUSTED BALANCE
0C ARGUMENT VARIABLES
0C ARRAYS THAT WERE NOT BEING DEALLOCATED AS OF 8/8/01 MSG         
0C ARTICLES_OF_INCORPORATION
0C ASSET ADDITIONS SECTION
0C ASSET ALLOCATION STUFF
0C ASSET ANALYST SWITCHES 1/16/03 MSG
0C ASSET ANALYST TRANSFER 1/16/03 MSG
0C ASSET CLASS ADDITIONS
0C ASSET CLASS ANALYSIS
0C ASSET CLASS EXPENSE AND REVENUE INFORMATION
0C ASSET SECTION
0C ASSETS ADDED BY MIDAS
0C ASSETS NEC
0C ASSIGN CALCUALTED VALUES
0C ASSIGN VARIABLES
0C ASSIGNING VARIABLES
0C ASSUME THE THAT THE NEW ESCALATION RATES IS BEING USED.
0C ASSUMES STORAGE UNITS OCCUPY THE FIRST AUX CONSTRAINTS.
0C ATL AND BTL ALLOCATION OF EMISSIONS CREDIT EXPENSE AND GAINS
0C ATL ITEMS
0C AUTO EXCLUSION VALUES
0C AVERAGE CLOSING COMMON SHARES
0C AVERAGE REVENUE PER SALE         
0C AVERAGE TOTAL PRODUCTION COST
0C Actuals
0C Adjustment below are not active
0C BALANCE NOLS GENERTED DURING THE YEAR WHICH WOULD OFFSET TAXABLE INCOME
0C BALANCE SHEET AND RATE BASE VALUES
0C BALANCE SHEET ASSETS (63-100)
0C BALANCE SHEET BALANCED?
0C BALANCE SHEET ITEMS
0C BALANCE SHEET UPDATE
0C BALANCE SHEET YEAR END IN THE 12 MONTH
0C BALANCE SHEET-ASSETS
0C BALANCE SHEET-LIABILITIES
0C BANKING OPTION: 
0C BASE YEAR OPERATING_ASSETS_YEAR_END
0C BASE YEAR SHAREHOLDER VALUE
0C BE EFFECTIVE ON THE ISSUE'S ANNIVERSARY DATE MATMO/MATDA/BASE_YEAR;
0C BEGIN TAX STUFF
0C BEGINING OF THE CAPACITY PLANNING SECTION 
0C BEGINNING FINANCING LOOP
0C BEGINNING NUCLEAR FUEL SECTION
0C BOOK RECEIPTS AND PAYMENTS
0C BTL INCOME ITEMS
0C BTL INCOME TAXES
0C BTL ITEMS
0C BTL ITEMS ARE NOT OFFSET
0C BTL TAXES
0C BTL_EXPENSES ARE REMOVED FROM OTHINC AND ADDED BACK AT THE END OF FINANCE
0C BUGET SECTION
0C BUY EMISSIONS TO MEET MINIMUM.
0C CALCUALATE ASSETS AND LIABS NEC
0C CALCUALTE THE STATE TAX
0C CALCUALTE TOTAL REVENUES
0C CALCULATE ACE_BOOK_DEP FOR THE AMT TAX CALCULATION
0C CALCULATE AFUDC IN CWIP
0C CALCULATE AMORTIZATION OR GET IT FROM A VECTOR
0C CALCULATE ANNUAL INTEREST
0C CALCULATE ANNUAL SURPLUS / DEFICIT
0C CALCULATE BOOK DEPRECIATION FOR AFDC
0C CALCULATE BOOK DEPRECIATION FOR DEFFERED TAXES
0C CALCULATE BOOK ITEMS FOR NUCLEAR FUEL
0C CALCULATE BTL NET TAXABLE INCOME
0C CALCULATE CHANGE IN GPV DUE BY RETIREMENTS
0C CALCULATE CREDIT AND DEBIT INFORMATION
0C CALCULATE DEFERRED TAXES DR CAUSED BY NOLs
0C CALCULATE EPA SETASIDE CREDITS AND REVENUES FOR SO2
0C CALCULATE EXCLUSTIONS
0C CALCULATE FREQUENCY DISTRIBUTION
0C CALCULATE IMPLIED ESCALATION RATES
0C CALCULATE PROXIE FOR TAXABLE INCOME
0C CALCULATE QUARTERLY POWER RATES
0C CALCULATE RATIOS FOR SALES
0C CALCULATE REAL PROPERTY TAX VALUE IF BEING USED
0C CALCULATE REVENUES BY CUSTOMER FOR REPORTING AND ASSET CLASS NEEDS
0C CALCULATE TAX DEPRECIATION ON PLANT
0C CALCULATE TAX DEPRECIATION PREFERANCE ON PLANT
0C CALCULATE TAX ITEMS FOR 1986 TAX REFORM ACT
0C CALCULATE TAX STRAGHIT LINE DEPRECIATION FOR DEFERRED TAXES
0C CALCULATE TAX VALUE AND ITCs
0C CALCULATE THE BASIS FOR DEFFERED TAXES
0C CALCULATE THE CHANGES FROM AN ABANDONMENT
0C CALCULATE THE MONTHLY CONSOLIDATED FEDERAL INCOME TAXES
0C CALCULATE monthly_customer_deposits
0C CALCULATED DOLLAR AMOUNTS FROM CAP STRUCTURE RATES 
0C CALCULATED SRP OUTPUT VARIALBES
0C CALCULATION LOOP STARTS HERE
0C CALCULATION RESERVE BALANCES
0C CALCULATION.  THE ASSUMPTION HERE IS THAT IT IS PAID MONTHLY
0C CAPACITY LIMITED ADDITIONS
0C CAPITAIL SERVICE
0C CAPITAL EXPENDITURES
0C CAPITAL SERVICE
0C CAPITALIZE THE INTEREST
0C CAPITIALIZED O&M ADDERS
0C CAPTURE ACQUISTIONS
0C CARRY FORWARDS
0C CASE 2 WITH BINARY MARKET FILES
0C CASH
0C CASH BALANCE
0C CASH EXPENSES
0C CASH FLOW AND ISSUED STATEMENT
0C CASH ITEMS
0C CASH MOVE UPS
0C CASH RECEITS AND PAYMENTS
0C CASH SECTION
0C CASH STUFF
0C CASH TRANSFERS
0C CAUSING COMMON DIVIDENDS TO BE RE-CALCULATED.
0C CD/CIAC POSITIONS
0C CHANGE IN ACCOUNTS RECEIVABLE
0C CHANGE IN CASH 
0C CHANGE IS EXPENSES PAYABLE
0C CHANGE RATES TO BALANCE THE NEED FOR CASH
0C CHANGED FROM INTEGER*2 TO REAL 5/14/92 ADDED IDS AS INTEGER*1
0C CHARACTER SECTION
0C CHARACTER VALUES ARE IN A SEPARATE ROUTINE FOR LF95
0C CHECK FOR ACTUAL FEDERAL INCOME TAXES
0C CHECK FOR ACTUAL STATE INCOME TAXES
0C CHECK FOR CONVERGENCE
0C CHECK FOR DUPLICATE VECTORS
0C CHECK FOR INCLUDING EXPENSES & REVENUES IN FINANCIAL DRILLING
0C CHECK FOR THE EQUITY RATIO TO BE SATISFIED.  
0C CHECK I IN THE INTERVAL
0C CHECK SINGLE OPTIONS
0C CHECKS TO SEE IF DIVIDENDS-PER-SHARE MATCHES THE REQUIRED VALUE;
0C CICA STUFF 7/15/93
0C CL AND EL REVENUES
0C CL EXPENSES
0C CLASS A&I VALUES
0C CLASS EMISSIONS
0C CLASS RESULTS VALUES
0C CLASS VARAIBLES
0C CLINTON'S BTU TAX ADDED 3/14/93
0C CLINTON'S ENERGY TAX ADDED 3/14/93 MSG
0C CODE TO GET STARTING BALANCES         
0C CODES TO READ(5, FROM A FAMILY OF BASE FILES
0C COMMON DIVIDENDS
0C COMMON DIVIDENDS BY QUARTER
0C COMMON DIVIDENDS QUARTERLY 
0C COMMON SECTION
0C COMMON TO ALL INCOME DRIVER METHODS
0C COMPUTE ANNUAL ADDITIONS, RETIREMENTS, AND INTEREST PAYMENTS
0C COMPUTE CALCULATED OPINCO FROM LAST ITERATION
0C CONSOLIDATED ADJUSTMENTS TO PARENT
0C CONSOLIDATING ADJUSTMENT USEING BALANCE SHEET VARIABLES
0C CONSOLIDATING ADJUSTMENTS 
0C CONSOLIDATING AND INTRA NA
0C CONSOLIDATION CALCULATION ADJUSTMENTS
0C CONSTRUCTION
0C CONVERGENCE VARIABLES
0C CONVERT DETAILED REPORTS
0C CONVERT THE ADDENDUM FILE
0C CONVERT THE ASSET RATES FILE
0C CONVERT THE ASSET-VECTOR FILE
0C CONVERT THE CLASS LOAD-SHAPE FILE
0C CONVERT THE CLASS-FORECAST-DATA FILES
0C CONVERT THE CLASS-HISTORY FILE
0C CONVERT THE COAL_LINK FILE
0C CONVERT THE COAL_NODE GROUPS FILE
0C CONVERT THE COAL_STORAGE FILE
0C CONVERT THE COAL_SUPPLY GROUPS FILE
0C CONVERT THE DAY_TYPE FILE
0C CONVERT THE DEBIT FILE
0C CONVERT THE DEBT-ACCOUNTS FILE
0C CONVERT THE ENVIRONMENTAL FILE
0C CONVERT THE EXISTING-ASSET FILE
0C CONVERT THE EXPANSION-PLANT FILE
0C CONVERT THE EXPENSE FILE
0C CONVERT THE FINANCIAL-PARAMETERS FILE
0C CONVERT THE FUTURE-ASSET-COMMITTED FILE
0C CONVERT THE GAS_LINK FILE
0C CONVERT THE GAS_NODE GROUPS FILE
0C CONVERT THE GAS_STORAGE FILE
0C CONVERT THE GAS_SUPPLY GROUPS FILE
0C CONVERT THE INITIALIZATION FILE
0C CONVERT THE INPUT DATA TO DOLLARS
0C CONVERT THE LOAD-MANAGEMENT APPLICATION FILE
0C CONVERT THE LOAD-MANAGEMENT DEVICE FILE
0C CONVERT THE LOAD-MANAGEMENT FINANCIAL FILE
0C CONVERT THE MARKET GROUPS FILE
0C CONVERT THE NUCLEAR FUEL FILE
0C CONVERT THE PAYABLES FILE
0C CONVERT THE PRODUCTION-PARAMETERS FILE
0C CONVERT THE PURCHASE-CONTRACTS FILE
0C CONVERT THE RBC FILE
0C CONVERT THE RDI FILE
0C CONVERT THE SYSTEM-FORECAST FILE
0C CONVERT THE TAX INFORMATION FILE
0C CONVERT THE TRANSACTION GROUPS FILE
0C CONVERT THE USER_DAY FILE
0C COPY ELIMINATION DATA INTO WORKING ARRAY
0C COPYRIGHT (C) M.S. GERBER & ASSOCIATES, INC
0C CORRECTS FOR CHANGES IN RB THAT DON'T INVOLVE CASH 3/15/98
0C COVERAGE RATIO RESULT FOR THE RATIO CHOOSEN
0C COVERAGE RATIOS
0C CREATE THE FIXPOST NOTATION QUE FOR CALCULATING THE OBJECTIVE FUNCTION
0C CREDIT AMORTIZATIONS
0C CREDIT BALANCE SHEET OPTIONS
0C CREDIT BALANCES
0C CREDIT PURCHASE PRICE DIRECT OR AVERAGE
0C CREDIT SELLING PRICE DIRECT OR AVERAGE
0C CURRENT PORTION OF LTD
0C CURRENT_INTEREST_CAP_RATE ARE ONLY PASSED TO AFUDC
0C CURRENT_INTEREST_CAP_RATE IS USED IN THIS ROUTINE
0C Calculate NF monthly fuel prices in $/MWh 7/18/96
0C DEBIT BALANCE SHEET OPTIONS
0C DEBIT SECTION
0C DEBT ISSUE IS EITHER LTD OR PFS (TREATED ALIKE)
0C DEBT OF QUANTITY AMT IS ISSUED IN Ith YEAR
0C DEBT SECTION
0C DEBT SERVICE CALCULATION
0C DECLARATION FOR /ADDENDUM FILE/
0C DECLARATION FOR /DEBIT FILE/
0C DECLARATION FOR /DEBT FILE/
0C DECLARATION FOR /EXISTING ASSETS FILE/
0C DECLARATION FOR /EXPENSE FILE/
0C DECLARATION FOR /FOSSIL FILE/
0C DECLARATION FOR /FUTURE ASSETS FILE/
0C DECLARATION FOR /LOAD MANAGEMENT FINANCIAL FILE/
0C DECLARATION FOR /PAYABLES FILE/
0C DECLARATION FOR CLASS FORECASTS
0C DECLARATION FOR CLASS HISTORY FILE
0C DECLARATION FOR CLASS-LOAD VARIABLES
0C DECLARATION FOR CONTRACTS DATA
0C DECLARATION FOR DATA FILE VARIABLES
0C DECLARATION FOR DAY TYPE DETERMINANTS
0C DECLARATION FOR DBREAD COMMON BLOCK
0C DECLARATION FOR EMISSION STUFF
0C DECLARATION FOR ESCALATION RATES FILE
0C DECLARATION FOR FINANCIAL PARAMETER FILE
0C DECLARATION FOR GENERATING UNIT PARAMETERS
0C DECLARATION FOR INPUT VARIABLES FOR NUCLEAR ASSETS
0C DECLARATION FOR LOAD MANAGEMENT APPLICATION VARIABLES
0C DECLARATION FOR LOAD MANAGEMENT DEVICE VARIABLES
0C DECLARATION FOR LOCALS
0C DECLARATION FOR REAL VALUES
0C DECLARATION FOR RUN SPECS
0C DECLARATION FOR SYSTEM FORECAST VARIABLES
0C DECLARATION FOR TRANSACT COAL_LINK DETERMINANTS
0C DECLARATION FOR TRANSACT COAL_STORAGE DETERMINANTS
0C DECLARATION FOR TRANSACT GAS_LINK DETERMINANTS
0C DECLARATION FOR TRANSACT GAS_STORAGE DETERMINANTS
0C DECLARATIONS FOR THE POSTFIX CALCULATION STACKS
0C DECOMMISION FUND EARNINGS
0C DECOMMISSIONING LIABILITY
0C DEFAULT
0C DEFAULT HOLDING POSITIONS ARE -2==All, -3==Parent, etc.
0C DEFERRED CASH EXPENSE CALCULATIONS
0C DEFERRED CREDITS
0C DEFERRED DEBIT STUFF NEEDS TO BE MOVED TO CORRECT LOCATION
0C DEFERRED FUEL MUST BE CALCUALTED ON THE CLASSES CONTRIBUTION ONLY
0C DEFERRED TAX CALCULATION
0C DEFERRED TAXES CR
0C DEFERRED TAXES CR AND CIAC ARE AT ZERO COST.
0C DEFERRED TAXES DR
0C DEFERRED WOLF CREEK MAINTENANCE ENERGY EXPENSE FOR THE FIRST TWO YEARS 
0C DEFERRED_EXPENSE_AMORT
0C DEGINNING OF TAX ISSUES 11/25/99
0C DELAY THE IN-SERVICE VECTOR
0C DEP ON REMAINING LIFE 
0C DEPRECIATION IS NOT TAKEN.
0C DEPRECIATION RECONCILING ITEMS 111-124; 132-137  total in 125
0C DERIVAIVES REVENUE
0C DERIVATIVE
0C DERIVATIVE INFORMATION
0C DETERMING BALANCE SHEET POSITION
0C DISTRIBUTE THE ANNUAL TAX DEP ACROSS MONTHLYS
0C DISTRIBUTION 66-75 
0C DIVIDE BY 12 VALUES
0C DIVIDEND YIELD
0C DO NOT INDENT THE FOLLOWING LINES
0C DRILLING REPORT
0C DSM CASH EXPENDITURES
0C DSM COSTS
0C DSM FUNCTION TO FUNCTIONALIZE IMPORTANT DSM VARIABLES
0C DSM INFORMATION
0C DSM SECTION
0C DUKE CATAWBA STUFF
0C DUKE STUFF
0C DYNAMIC PUMPED STORAGE VARIABLES
0C Deleted a large chunk of code below this comment.
0C EARNINGS ON FUNDS
0C ECONOMY REPORT VARIABLES
0C EFFECTIVE MW'S OF PLANNING CAPACITY
0C EFFECTIVE TAX RATE
0C EITHER BANKING OR NOTHING TO SELLING.
0C ELIMINATE NA3 ODEC INCOME STATEMENT TRANSACTIONS
0C ELIMINATION CLASS ADJUSTMENTS FOR CONSOLIDATING 11/21/02
0C ELSE (YR < ISSYR) => NO COMPUTATIONS YET
0C ELSE TAKE THE STRAIGHT LINE UNTIL NPV IS ZERO
0C ELSE THE USER PROVIDED THE INFORMATION
0C ELSE USE THE AMORTIZATION SCHEDULE PREVIOUSLY COMPUTED
0C EMISSION CREDITS
0C EMISSIONS BLENDING ADDED 12/30/92
0C EMISSIONS REPORT INFORMATION
0C END 5/14/92 CHANGES
0C END ALTERNATIVE
0C END AMEREN CODE
0C END ARRAYS
0C END BALANCE SHEET ITEMS
0C END BALANCE SHEET OUTPUT
0C END CHANGE
0C END CONSOLIDATION CALCULATION ADJUSTMENTS
0C END EFFECTS INITIALIZATION
0C END FINANCING LOOP
0C END INCOME STATEMENT
0C END INCOME TAX DISTRIBUTION
0C END LHC MODIFICATIONS
0C END NUC FUEL SECTION
0C END OF AMEREN
0C END OF CAPACITY PLANNING SECTION
0C END OF DATA DECLARATIONS
0C END OF TAXES
0C END PTCs
0C END RESERVE BALANCES
0C END ROUTINE CALLS
0C END SET ACCOUNT POSITIONS
0C END SPCapEx VARIABLES
0C END SRP VARIABLES
0C END TAX
0C END TAX STUFF
0C END VARIABLE DECLARATIONS
0C ENDOF CALCULATION LOOP
0C ENDOF SBU ADDITONS TO INCOME STATEMENT
0C ENERGY INFORMATION
0C ENERGY LIMITED EXPENSE IITEMS
0C ENERGY SALES OPTIONS
0C ENERGY SPLIT INFORMATION
0C ESTABLISH A LIST OF DEFINED CLASSES
0C ESTABLISH REVENUE TAX ALLOCATION
0C ESTIMATE NET INCOME NI
0C ESTIMATES, THEN USE THIS SLOPE AND THE LAST NET_INCOME ESTIMATE TO GET
0C EXCEPT FOR THE FOLLOWING WHICH ARE INITIALIZED BY READING THE 
0C EXCHANGE AND ZERO VARIABLES
0C EXISTING ASSETS SECTION
0C EXPENSE
0C EXPENSE FILE VARIABLES
0C EXPENSE ITEMS 31-80 AND REVENUES ITEMS 1-30
0C EXPENSE ITEMS ARE OFFEST BY  EXP_OFFSET_LINE WHICH IS 30
0C EXPENSE LINES
0C EXPENSE SECTION
0C EXPENSE TRANSFER TO ASSET CLASS MODULE
0C EXPENSES
0C EXPENSES POSITIONS
0C EXTERNAL FINANCING
0C EXTERNALITY VARIABLES
0C End code added 11/03/06 to extend the fuel vectors Dr. G
0C Extended the FUEL_PRICE variable beyond the 30 year limit
0C FASB 143 AND CAP X ITEMS
0C FASB 143/ARO and FASB 87
0C FASB 87 ACCOUNTING FOR IPL
0C FAST TAX RATE 34 25,50,25
0C FEDERAL INCOME TAX PAYMENT CARRY OVERS
0C FEDERAL INCOME TAXES
0C FEDERAL TAX CALCULATIONS
0C FEDERAL TAX RATE
0C FEDERAL TAXES PAID
0C FFO Interest Coverage
0C FFO/Total Debt
0C FILE NAME = ENRGLIMT.FOR
0C FINANCIAL DRILLING AT ANNUAL OR MONTHLY LEVEL
0C FINANCIAL PARAMETER FILE
0C FINANCING FOR IOU UTILITIES
0C FINANCING IS MINIMUMIZED 1/10/98 COPYRIGHT (C) 1997
0C FINANIAL COMMON BLOCK ITEMS
0C FIND THE PAYMENT TYPE
0C FIND TOTAL NUMBER OF ENDPOINTS
0C FINISH THE FOLLOWING
0C FINISH THE INCOME STATEMENT TAX ITEMS
0C FINISH TRACKER
0C FIRST ORDER STATE & FEDERAL INCOME TAXES 10/12/99
0C FOR A REASON I DON'T REMEMBER THE AFUDC SWITCH ON NEW UNITS WAS SET TO 
0C FOR DYNAMIC PUMPED STORAGE UNITS
0C FOR ITERATION 1, ESTIMATED NET_INCOME IS CALCULATED HERE
0C FOR ITERATION 2, USE FIRST NET_INCOME ESTIMATE AND ESTIMATE OF SLOPE
0C FOR ITERATIONS BEYOND 2, FIND SLOPE USING LAST 2 GOPINP ESTIMATES,
0C FOR ITERATIONS BEYOND 2, FIND SLOPE USING LAST 2 OPREVP
0C FOR MIDAS GOLD ADDED MAY 25, 1991
0C FOR OFF SYSTEM SALES
0C FOR PEAK OFF SYSTEM SALES
0C FOR THE NEXT YEAR.  AMT CREDITS ARE ASSUMED TO NEVER EXPIRE.
0C FORM IC-IV-1
0C FORM IC-IV-2
0C FORMER RUN SPECS PRODUCTION VARIABLES
0C FP&L STUFF ADDED 5/5/93 M.S.G.
0C FREE CASH FLOW
0C FUEL CALCULATIONS
0C FUEL PRICE VARIABLES
0C FUNCTION DECLARATIONS
0C FUNCTION FOR READING THE SYSTEM LOAD FILE BY YEAR AND PASSING IT TO 
0C FUNCTION TYPE DEFINITIONS
0C FUNDS FLOW SECTION
0C FUNDS FROM OPERATIONS
0C FUTURE ASSETS SECTION
0C FUTURE PLANT 91-97
0C Federal Income Taxes Paid
0C Federal Tax on Capital
0C Fossil Non-fuel expense
0C GAURD AGAINST BAD BASE YEAR STOCK PRICE
0C GENERAL 76-90
0C GENERATION AND SALES
0C GET A PLAN TO TEST
0C GET ALLOCATION FACTORS
0C GET CLASS USING A VECTOR
0C GET EXPENSE FILE PROPERTY TAXES
0C GET FILE STATUS INFO
0C GET SUMMED
0C GET THE CLASS INFORMATION
0C GET THE GAIN AMORTIZATIONS
0C GET THE O&M AMORTIZATION
0C GRAND TOTAL IS AT 120
0C GREG, THE FOLLOWING VARIABLES WERE ADDED.
0C GROSS CASH FLOW TO TOTAL DEBT=MOODY'S
0C Gas Wholesale Revenues 31
0C HEAT MODIFIED 10/30/92 MSG NOTE LOOP ADDED AFTER ECONOMY INTERCHANGE
0C HIGH REQUIREMENT FOR FUNDS
0C HOOSIER SECTION
0C IDENTIFY TAX TYPE        
0C IE STUFF
0C IF A SUBSIDIARY NEED TO PASS ALL THE CASH UP THE STACK SO THAT
0C IF NO POINTER HAS BEEN SPECIFIED FOR THE PEAK MONTH
0C IF PARENT CLASS COPY TO CONSOLIDATED
0C IF REVENUE AND EXPENSE CASH IS USED THEN MODIFY CASH_POSITION TO NOT INCLUDE
0C IF SO, RETURNS DONE = YES SO THAT THE VALUES COMPUTED ON THE LAST
0C IF TEST FAILS IN TWO AREAS, AREA IS NOT RESET.            
0C IF THE BALANCE TO BE AMORTIZED IS LESS THAN THE
0C IF THE BOOK DEPRECIATION PERCENTAGE IS ZERO
0C IF THE BOOK RATE IS GREATER THAN 100% THE ASSUMPTION IS THAT
0C IF THE CAPITIAL STRUCTURE IS REGULATED
0C IF THE MORTGAGE SECURITY EXISTED IN THE BASE_YEAR; CONSIDER BYRBAL TO
0C IF THE UTILITY IS NOT AN IOU SKIP THE PS AND CS FINANCING LOGIC
0C INCLUDE COMMON BLOCK OF YEARLY SYSTEM FORECAST STATISTICS
0C INCOME B4 INTEREST
0C INCOME ITEMS
0C INCOME STATEMENT
0C INCOME STATEMENT 
0C INCOME STATEMENT ITEMS
0C INCOME STATEMENT MODIFICATIONS
0C INCOME STATEMENT VARIABLES
0C INITIALIZATION FILE 
0C INITIALIZE BALANCE SHEET AND OUTPUT INFORMATION
0C INITIALIZE THE BOOK DEP VALUES IF DEP VECTOR IS USED
0C INITIALIZE VALUES
0C INITIALIZE VARIABLES
0C INITILIZE REGIONAL PLANNING PARAMETERS PER DOUG
0C INTEGER*2
0C INTER-TIE INFORMATION
0C INTEREST ON CUSTOMER DEPOSITS
0C INTEREST REVENUE
0C INTERNAL VARIABLES
0C INTERNAL VARIABLES THAT ARE NOT IN THE OUTPUT DATA SET
0C INTERVAL VARIABLES
0C INTRA COMPANY ITEMS
0C INTRA COMPANY NOTES 1/19/05 MSG
0C INTRA COMPANY RECEIVABLES AND PAYABLES ADJUSTMENTS
0C INTRA-COMPANY BOOK RECEIPTS AND PAYMENTS
0C INTRA-COMPANY TRACKING
0C INVESTMENT INFORMATION
0C INVESTMENT POSITIONS
0C IS FROM THE FINANCIAL PARAMETER FILE WHERE IT IS READ IN AS
0C ISSUE COMMON EQUITY
0C ISSUE EXPENSE AMORTIZATION
0C ISSUE LONG TERM DEBT
0C ISSUE PREFERRED STOCK
0C ITC AMORTIZATION RATE
0C ITEMS 116-119 9/6/94 FOR OHIO EDISON
0C ITEMS 120-121 3/9/95 ADDED FOR SHAREHOLDER VALUE
0C ITEMS 120-122 3/9/95 ADDED FOR SHAREHOLDER VALUE
0C ITEMS 133-140 10/16/96 ADDED FOR SRP AND GENERAL
0C ITEMS 140-149
0C ITEMS FROM INIT FILE AND THE PARAMETER FILE
0C ITERATION ARE STORED.  IF NOT, RETURNS DONE = NO,
0C KEEP THIS LINE UNTIL INITIALIZATION HAS BASE YEAR RATE
0C KEPCO STUFF 5/29/97
0C LAM FILE NAMES
0C LARRY KEYS
0C LAWRENCE CO. 31-40     
0C LEASE PAYMENTS
0C LH_GLOBAL FUNCTIONS
0C LIABILITIES NEC
0C LOAD BASE YEAR ALLOCATION                  
0C LOAD INFORMATION TRANSACTIONS
0C LOAD MANAGEMENT 56-65
0C LOAD THE CASH ADDITIONS
0C LOCAL VARIABLES
0C LOGICAL*1
0C LOW REQUIREMENT FOR FUNDS MINIMUM AMOUNTS OF DEBT ISSUED
0C LOWER LEVEL DEBIT AMORTZATION WAS NOT BEING PASSED UP.
0C LTD INTEREST
0C LTD ITEMS REQUIRE THE MONTHLY SPLIT TO GET INTEREST CORRECT 5/5/99 MSG
0C LTD SECTION 
0C LUMP MTG AND LTD TOGETHER
0C Last change: MSG 1/9/2012 5:14:11 PM
0C M.S. GERBER & ASSOCAITES, INC.
0C MARKET PRICES
0C MARKET REVENUE RATES FOR UNION STUDY 8/7/97
0C MISCELLANEOUS VARIABLES
0C MISSING DELALOCTED ARRAYS 8/8/01 MSG
0C MODIFICATION OF WHAT GETS PASSED TO SUBs FROM SUBs
0C MODIFIED HEAT CALCULATION 10/30/92 MSG
0C MODIFIED: 10/19/92 FOR POOLING TRANSACTIONS                     
0C MODIFY INTEREST RATE USING LATIN HYPERCUBE
0C MODIFY QUANTIES USING LATIN HYPERCUBE
0C MODIFY QUANTITIES USING LATIN HYPERCUBE MODIFIED 10/10/06 Dr.G
0C MONTHLY AFUDC
0C MONTHLY BOOK VALUES
0C MONTHLY BOOK VALUES                     
0C MONTHLY CASH VALUES
0C MONTHLY DEP VECTOR VARIABLES
0C MONTHLY INCOME STATEMENT ITEMS
0C MONTHLY INFORMATION
0C MONTHLY INTEREST RATES
0C MONTHLY ITEMS
0C MONTHLY LIMIT DATA
0C MONTHLY MIDAS GOLD ADDITIONS 2/13/98
0C MONTHLY RETIREMENT FUND RETURN
0C MONTHLY TAX RATES
0C MONTHLY TAX VECTOR STUFF
0C MONTHLY VARIABLES
0C MORTAGE INDENTURE
0C MORTGAGE DEBT BY TYPE
0C MOVE CASH ACCURRED LAST YEAR TO THIS YEAR
0C MOVE CASH TO MONTHLY VIEW
0C MOVE PLANT TO MONTHLY VIEW
0C MOVE THE SBU REVENUES AND EXPENSES TO THE PARENT
0C MOVE TO PARENT AND TO CONSOLIDATED
0C MOVED ABOVE     BASE_OUTPUT_RECORD = BASE_OUTPUT_RECORD - 1
0C MOVED BELOW 12/10/96 TO GET NUC FUEL RATE BASE CORRECT
0C MOVED CALCULATION TO READ PARAMETERS 3/15/98
0C MOVED FORM GET_PARAMETERS 6/29/04
0C MOVED FROM ABOVE 9/30/99
0C MOVED TO LINE 5590 BECAUSE NET_UTILITY_PLANT WASN'T DEFINED FOR CURRENT YEAR-7/29/01 MSG
0C MSG 8/1/04
0C MULTI-EXPENSE FILES VARIABLES
0C MULTI-FILE VARIABLES
0C MULTI-TABLE ADDITIONS
0C MUNICIPAL OVERLAY
0C MUST ADD THE CREDITS ADJUSTMENTS 
0C Monthly State Tax on Capital
0C NEED ERROR MESSAGE
0C NEED ERROR MESSAGE FOR PREVIOUS ANNUAL FUEL ID
0C NEED TO ACCOUNT 4 NOLs AT THE SUB LEVEL USING DIT(DR)
0C NEED TO ADD LOGIC TO INPLEMENT SEASONAL AND ANNUAL LIMITS USING THE 
0C NEED TO ADD THIS TO THE RESULTS MODULE AND THE DETAILED REPORT      
0C NEED TO DISTRIBUTE AMOUNT MONTHS
0C NEED TO GET MONTHLY INFORMTION INTO THIS FILE 9/20/98
0C NEED TO HAVE A MEANS TO HAVE A PLANT UNDER CONSTRUCTION
0C NEED TO ISSUE THE MIN OF CASH_NEEDED OF UNISSUED LTD 4/19/99
0C NEED TO PASS THE A&I STUFF TO THE CL OR EL OBJECT
0C NEED TO SET THE EQUITY TEST ON
0C NEEDED FOR CASH ORGINAL CODE IS THE COMMENTED OUT PIECE.
0C NET_INCOME ESTIMATE
0C NEW ACQUISITION COSTS
0C NEW ESTIMATE.
0C NEW SECTION FOR OUTPUT VARIABALES THAT ARE CALCULATED
0C NEW VARAIBLES
0C NEXT PEAK AND VALLEY OFF SYSTEM SALES
0C NON REGULATED REVENUES
0C NON UTILITY PROPERTY 98-105
0C NON-CASH EXPENSES
0C NON-CASH ITEMS AND TAXES. MOVE CASH_POSITION HERE AND CHECK INCOME POSITON.
0C NON-INCOME TAX EXCLUSION VARIABLES
0C NON_INCOME_TAXES_ACCRUAL_ADJ
0C NOT EQUAL TO 0 MSG)
0C NOTE 10/19/92: TRANSACTIONS VARYING BY AVERAGE NOT MARGINAL COST                     
0C NOTE OTNINC IS NET OF BLT_EXPENSES
0C NOTE THAT FOR MORTGAGE DEBT THE SINKING AMOUNT IS THE ANNUAL 
0C NOTE THAT THE VARIABLE POSITIONS ARE OFFSET BY 30 TO USE THE ANNUAL LOCATION
0C NOTE TOTAL_CAPITAL IS USED INTEGER*2 THE SRP SECTION
0C NOTE YEARS_TO_RUN CAN BE 31 FUEL_PRICE IS DIMENSIONED 0:30
0C NOTE!!! EXPENSE VARIABLES ARE SET TO ZERO IN THE FOLLOWING ROUTINE
0C NOTE: 1 == PRODUCTION FROM RESOURCE TO MEET NATIVE LOAD
0C NOTE: 6/30/94 AFDCRT,AFDCBR,INTEREST_CAP_RATE ARE ONLY PASSED TO
0C NOTE: 6/30/94 AFDCRT,AFDCBR,INTEREST_CAP_RATE, 
0C NOTE: 7/11/96 NEED A LAST LOAD VALUE THAT'S BETTER THAN
0C NOTE: ALL VALUES ARE ESCALATIONS RATE AFTER THE 30TH YEAR.
0C NOTE: FOR CUMULATIVE VALUES THE 0 MONTH POSITION IS BEGINNING AMOUNT
0C NOTE: ONLY CASH RECEIPTS AND CASH PAYMENTS ARE USED ELSEWHERE IN THE CODE
0C NOTES PAYABLE INTEREST
0C NOW HAVE ANNUAL CASH AMOUNT IS MILLIONS OF DOLLARS
0C NUC DECOMISSIONING FUND RETURN
0C NUCLEAR DECOMMISSIONING FUNDS BALANCES
0C NUCLEAR FUEL
0C NUCLEAR FUEL RATEBASE ADDERS
0C NUCLEAR FUEL SECTION
0C Net Margin
0C Nuclear Non-fuel expenses
0C ON THE OUT SIDE
0C OPEN ANNUAL AND MONTHLY OUTPUT FILE
0C OPEN DETAIL REPORT FILE
0C OPEN PALO ALTO PARAMETER FILE
0C OPEN PARAMETER FILE
0C OPEN REPORT FILE
0C OPERATING ASSETS
0C OPERATING INCOME
0C OPERATING METHOD PRIOR YEARS INFORMATION
0C OPERATING REVENUE TAX RATE
0C OPERATING TAXES
0C OPERATING_METHOD IS RETURN ON EQUITY
0C OPERATIONS FILE
0C OPTIONS CHECKING
0C ORGINAL 9/29/92 CODE STARTS HERE
0C OTHER 11-20     
0C OTHER ASSETS
0C OTHER TAXES
0C OTHER TAXES EXPENSE RATE
0C OTHER TAXES IS OLD TXSS 
0C OTHER TAXES REVENUE RATE
0C OTHER TAXES SECTION
0C OUPUT RESULTS
0C OUT FOR TESTING 10/25
0C OVER RIDE FOR THE FIRST TWO YEARS OF CASH
0C OVERLAY DETAILED REPORTS
0C OVERLAY THE ADDENDUM FILE
0C OVERLAY THE ASSET RATES FILE
0C OVERLAY THE ASSET-VECTOR FILE
0C OVERLAY THE CLASS LOAD-SHAPE FILE
0C OVERLAY THE CLASS-FORECAST-DATA FILES
0C OVERLAY THE CLASS-HISTORY FILE
0C OVERLAY THE COAL_LINK FILE
0C OVERLAY THE COAL_STORAGE FILE
0C OVERLAY THE DAY TYPE FILE
0C OVERLAY THE DEBIT FILE
0C OVERLAY THE DEBT-ACCOUNTS FILE
0C OVERLAY THE ENVIRONMENTAL FILE
0C OVERLAY THE EXISTING-ASSET FILE
0C OVERLAY THE EXPANSION-PLANT FILE
0C OVERLAY THE EXPENSE FILE
0C OVERLAY THE FUTURE-ASSET-COMMITTED FILE
0C OVERLAY THE GAS_LINK FILE
0C OVERLAY THE GAS_STORAGE FILE
0C OVERLAY THE GENERATING-UNIT PARAMETER FILE
0C OVERLAY THE INITIALIZATION FILE
0C OVERLAY THE LOAD-MANAGEMENT APPLICATION FILE
0C OVERLAY THE LOAD-MANAGEMENT DEVICE FILE
0C OVERLAY THE LOAD-MANAGEMENT FINANCIAL FILE
0C OVERLAY THE NUCLEAR FUEL FILE
0C OVERLAY THE PAYABLES FILE
0C OVERLAY THE PRODUCTION-PARAMETERS FILE
0C OVERLAY THE PURCHASE-CONTRACTS FILE
0C OVERLAY THE REGIONAL PARAMETER FILE
0C OVERLAY THE SYSTEM-FORECAST FILE
0C OVERLAY THE TARGET CAPACITY-LH_GLOBAL FILE
0C OWNED OR LEASOR FUEL NEED TAX DEP AND BOOK DEP 
0C One level retained earnings adjustment flow to parent
0C Operating Margin
0C Other
0C PARAMETER  VARIABLES
0C PARAMETER FILE VALUES
0C PASS MONTHLY BACK TO OLD ANNUAL VARIABLES
0C PASS RESULTS TO NEXT LEVEL
0C PASS-UP CASH ITEMS
0C PASS-UP INCOME ITEMS
0C PAYMENTS POSITIONS
0C PEAK SALE USING PUMP LOGIC
0C PLANT RECONCILING ITEMS 106-109  THE TOTAL IS IN 110
0C POSITIONS
0C POST RETIREMENT MEDICAL BALANCES
0C PREFERRED SECTION
0C PREMIUM/DISCOUNT AMORTIZATION
0C PRINCIPLE PAYMENTS. ALL OTHER SINKING FUND INFO IS LOST
0C PROCESS
0C PROCESS BASE FILE
0C PROCESS OVERLY FILE
0C PROCESS THE ADDENDUM FILE
0C PROCESS THE ADDENDUMS
0C PROCESS THE DATA 
0C PROCESS THE LAG INFORMATION
0C PRODUCTION PARAMETER FILE VARIABLES
0C PRODUCTION RUN SPECS ENTRY'S
0C PROPERTY TAX RATE
0C PROPERTY TAXES
0C PROPERTY TAXES FOR CONSOLIDATED
0C PROSYM INTERFACE
0C PS DIVIDENDS
0C PSCR TRACKIER
0C PURCHASE INFORMATION
0C PURCHASE POWER COST-AVERAGEs
0C PURCHASE POWER EXPENSE
0C PURCHASE POWER QUANTIITIES
0C PUT EXTENSION PERIOD MULTIPLIER HERE
0C Pre-Tax Interest Coverage
0C Pre-Tax Interest Coverage  Var 782
0C ProSym Interface 7/9/04
0C RATE BASE
0C RATE BASE CALCULATION
0C RATE BASE POSITIONS
0C RATE BASE SECITON
0C RATE BASE STUFF
0C RATE IS RETURNED ORDERED BY VECTOR NUMBER.  
0C RATIOS
0C RATIOS AND PERFORMANCE MEASURES
0C RB ITEMS
0C RE CALC 
0C RE-CALCULATE FUEL PRICES ! TESTING THIS
0C RE-READ THE FILE AND PROCESS THE INFORMATION
0C READ A DATA RECORD
0C READ A DATABASE RECORD
0C READ ASSET FILE
0C READ CLASS SWITCH FILE
0C READ MASTER FILE INFORMATION
0C READ PARAMETER FILE INFORMATION
0C READ PRICES/COSTS FROM DATA FILE
0C READ SALES FILE
0C READ SINKING FUND REQUIREMENTS WHICH ARE PRINCIPAL PAYMENTS
0C READ TAX LOSS FILES MOVED ABOVE 9/17/98
0C READ TAX LOSS FILES MOVED HERE TO GET TAX RATES
0C READ TAX LOSSES
0C READ THE TABLES INTEGER*2 THE ENVIRONMENT DATA FILE
0C REAL*8
0C RECALCULATE LTD ISSUED
0C RECEIVABLES AND PAYABLES
0C RECOMPUTE BOOK DEPRECIATION THAT INCLUDES SALVAGE VALUE
0C REDUCTIONS TO INCOME STATEMENT
0C REGULATED REVENUES
0C REMOVE EXCLUDED TAX BASIS FROM THE PARENT CALCULATIONS
0C REMOVE THIS CODE WHEN CLASS LEVEL DRILLING IS AVAILABLE
0C REMOVED 10/22/92 MSG THIS FUNCTION IS AT THE BEING OF THIS ROUTINE
0C REPLACE MODEL VARIABLE AND FIXED O&M WITH EXPENSE FILE O&M FOR
0C REPLACE THE CALCULATED WITH ACTUAL
0C REPLACE WITH ACTUAL CASH PAYMENTS
0C REPORT CONSTRUTION SUMMARY VARIABLES
0C REPORT OUTPUT VARIABLES
0C REPORT SPECIFIC VARIABLES
0C REPORT SUB-TOTALS
0C REPORT TOTALS
0C REPORTING HANDLES
0C REPORTING SECTION
0C RESERVE MARGIN LEVEIZING COST VARIABLES
0C RESERVE MARGIN PURCHASE/SALES
0C RESET PAYABLE VALUES
0C RESPONSE FILES
0C RESULTS MODULE VARIABLES     
0C RESUM THE CASH FLOW STATEMENT
0C RETIREMENT FUND RETURN
0C RETURN ON EQUITY WAS SPECIFIED FOR INCOME BASE
0C RETURNS THE CONSOLIDATED ACTUAL PAYMENTS AND/OR THE ADDITIONS TO THE 
0C REVENUE ALLOCTION TO CLASSES
0C REVENUE SECTION
0C REVENUE TAXES
0C REVENUE TAXES SECTION
0C REVENUES
0C REVENUES FROM CLASS FORECAST FILES
0C REVENUES MONTHLY AND ANNUAL POSITIONS ARE THE SAME FOR REVENUES
0C REVERSE THE RECEIVABLES AND PAYABLES
0C RIPPLE DOWN PLANT AND CASH VALUES
0C RIPPLE RETIRE INFO DOWN
0C RIPPLE THE MONTHLY VALUES
0C ROLL-UP THE PAYABLE CHANGES
0C ROUTINE TO CALCULATE THE LOAD PROBABILITY CURVE ON A 51 POINT GRID
0C ROUTINE TO CONVERT METAFILE FILES TO DIRECT ACCESS BINARY
0C RULE IF DATA_TYPE IS NOT D THEN MONTHLY PES PATTERNS ARE NOT ALLOWED
0C RUN SPECS PRODUCTION HERE
0C RUN SPECS PRODUCTION VARIABLES
0C RUN SPECS STUFF         
0C RUN SPECS VARIABLES     
0C RUN SPECS VARIABLES      
0C RUN SWITCHES
0C R_FEDERAL_TAXES_ACCRUAL_ADJ
0C R_STATE_TAXES_ACCRUAL_ADJ
0C SALE OF ASSETS
0C SAME AS ESCALATED_MONTHLY_VALUE, EXCEPT ACTIVE_VECTOR_VALUES REPLACE WITH VECTOR_VALUES
0C SAVE AREA 8/15/01 MSG
0C SAVE CLASS LEVEL VARIABLES
0C SAVE CURRENT PATTERN FOR TREND ANALYSIS
0C SAVE DEFINED CLASS POINTER LIST
0C SBU CUSTOMER DESPOSITS MUST SUM TO THE PARENT OR SUB-PARENT
0C SBU USING ANUALIZED LTD AND PS AS A % COST VS $M
0C SECTION 3.2 PART A (RATE TEST) (CASH FLOW TEST)
0C SECTION 3.2 PART B
0C SECTION FOR READING ADDENDUMS FORM THE ADDENDUMS FILE
0C SEE ABOVE DEFINITION OF YEARS_TO_RUN
0C SELL EMISSIONS TO MEET MAXIMUM.
0C SEND THE CALCULATED MONTHLY TAXES BACK
0C SERVICE TRANSACTION REVENUES
0C SERVICE TRANSACTIONS EXPENSE
0C SET CATWABA FOR DISPLAY PURPOSES 4/15/97
0C SET RATES TO BAD VALUE TO CHECK TO USE THE DEFAULT OR NOT. 
0C SET REPORTING TITLES
0C SET START VALUES FOR LOOP BELOW
0C SET SUMMING VARIABLE TO ZERO
0C SET TAX ITEMS
0C SET THE AUTO ELIMINATIONS
0C SET UP ASSETS AND LIABS NEC
0C SET UP VIRTUAL SCREEN FOR OPTIONS SELCECTED AND OPTIONS TESTED
0C SET-UP CASH FLOW AND PLANT ENTERING SERVICE VECTORS
0C SET-UP PLANT VALUES
0C SET-UP SINKING FUND ANNUAL AMOUNTS USING A VECTOR POINTER
0C SET-UP THE PAYMENT ARRAYS
0C SETS THE BEGINNING YEAR AND MONTHLY BALANCE FOR FUEL INVENTORIES      
0C SETUP ARRAYS TO LATER SEARCH FOR THE AMONTS TO TRANSFER
0C SHAREHOLDER VALUE
0C SHAREHOLDER VALUE CALCUALTIONS 
0C SHIFT MATRIX FOR SUBSTITUTING ACTUALS
0C SHORT FORM ITEMS
0C SHOW FILE NAME ON SCREEN
0C SOLD CHECKING ON PARENT BL 2543 INIT_ASSET_CLASS_INFO
0C SPCapEx VARIABLES 11/18/06
0C SPCapEx Variables place holders
0C SPCapEx Variables place holders before any new SP variables
0C SPCapEx additions Nov. 2005
0C SPECIAL CODE FOR AMEREN 1/23/02
0C SPR VARIABLES
0C SRP STUFF
0C SRP VARIABLES
0C ST JOE IRP STUFF 
0C STACK EMPTY ERROR
0C STANDARD ACCOUNT REPORTING
0C STANDARD CALCULATION OF INTEREST COVERAGE WITH AND WITHOUT AFUDC
0C STANDARD VARIABLES FOR GETTING MONTHLY VECTORS
0C START OF INCOME TAX CALCULATIONS
0C STATE CONSOLIDATED TAX PAYMENTS
0C STATE TAX RATE
0C STATE TAXES BASED ON TAXABLE INCOME
0C STATE TAXES FOR ALL CLASS EXCEPT CONSOLIDATED
0C STATE TAXES PAID
0C STD AND CUSTOMER DEPOSIT INTEREST EXPENSE
0C STD INTEREST
0C STEAM 1-10    
0C STORE END OF YEAR CARRY OVER
0C STORE TRACKER INFO
0C STUFF FROM THE MAIN ROUTINE
0C SUB ACCOUT POSITIONS
0C SUB TOTAL REPORT DATA BASE
0C SUM EACH CASH VARIABLE TO AN ANNUAL AMOUNT
0C SUM NEW VALUES
0C SUM SUB-CLASS INTO THE O CLASS
0C SUM TO COMPANY TOTAL
0C SUPLUS CASH ADD TO RESERVES
0C SYSTEM INFORMATION
0C SYSTEM PEAK VARIABLES
0C Sale/Removal POSITIONS
0C Shareholder Value POSITIONS
0C TAKE DEDUCTIONS
0C TAKEN OUT. GAT. 9/9/99.                       
0C TAL TAXES ITES 81-95; TOTAL EXPENSE 150 OP INCOME 151 INCOME_VARIABLES(0:12,mthy_fed_atl_income_tax_pd)
0C TAX DEDUCTIONS FEDERAL
0C TAX DEDUCTIONS STATE
0C TAX DEPRECIATION
0C TAX ITEMS
0C TAX LOSS VARIABLES
0C TAX ON CAPITAL
0C TAX POSITIONS
0C TAX RATES
0C TAX RATES SECTON
0C TAX REPORT
0C TAX SECTION
0C TAX STUFF
0C TAX TIMING
0C TAXABLE DEDUCTIONS
0C TAXES 
0C TEMP INSTALLATION OF NUCLEAR FUEL
0C TEMP SETTING OF THE CAP STRUCTURE
0C TEST THE INCREASED INTERVAL
0C THAT OCCURRED BEFORE THE NOL WAS GENERATED.
0C THE ADJUSTMENT TO RETAINED_EARNINGS WAS ADDED 5/2/89 FOR SRP
0C THE FOLLOW CALL GETS 12 MONTHS OF PRODUCTION VALUES
0C THE FOLLOWING CODE WAS COPIED FROM ST-FIN WHICH IS COPYRIGHTED BY
0C THE FOLLOWING IS A FUDGE OF ACC DEP 1/30/99
0C THE FUEL PRICE FILES HAVE BEEN POLLED TO FIND THE SIZE
0C THE IF THEN ELSE WAS ADDED TO MOVE THE LTD ISSUES TO THE MONTH 
0C THE LEVELS VALUES HAVE BEEN USED ZERO THEM OUT.
0C THE LOAD CURVE BELOW THE BASE
0C THE MODULE THAT CALCULATES 8760 LOAD POINTS
0C THE NEW VALUE IS RETURNED
0C THE PURPOSE OF THIS ROUTINE IS TO ADJUST THE 15 YEAR CARRY FORWARD
0C THE TIMING OF THE TAX PAYMENT HAS TO BE RECONIZED IN THE EARNINGS
0C THE TOTAL AMOUNT IS EXPENSED IN ONE YEAR
0C THE VALUES FOR A VECTOR ARE RETURN FOR THE AVAILABLE DATA YEARS
0C THE VALUES FOR A YEAR ARE RETURNED ORDERED BY VECTOR NUMBER
0C THE number of values is returned and ignored (should be a subroutine).
0C THEN CREDITS
0C THEN TAKE THE DB VALUE FOR THE EXPENSE
0C THEN USE THIS SLOPE AND THE LAST NET_INCOME ESTIMATE TO GET A NEW ESTIMATE.
0C THERE IS AT LEAST ONE FUEL PRICE FILE TO PROCESS
0C THIS ALLOWS FOR THE POSSIBILITY OF SWITCHING FROM 
0C THIS ASSUMES THAT R_VALUE HAS BEEN ESCALATED TO THE PREVIOUS YEAR
0C THIS CODE REMOVED 10/22/92 IT'S FUNCTION IS IN THE ABOVE CODE
0C THIS SECTION ADDS MW'S TO THE SYSTEM
0C THIS WORKS WITH ARRAYS THAT HAVE THE BASE YEAR AS THE ZERO YEAR
0C TIER
0C TIMES INTEREST & PS DIV BEFORE INCOME TAXES SEC METHOD INCLUDING AFUDC
0C TIMES INTEREST & PS DIV BEFORE INCOME TAXES SEC METHOD WITHOUT AFUDC
0C TIMES INTEREST BEFORE INCOME TAXES SEC METHOD INCLUDING AFUDC
0C TIMES INTEREST BEFORE INCOME TAXES SEC METHOD WITHOUT AFUDC
0C TO SET THE LEFT AND RIGHT FOR HEAT CALCULATIONS TO THE CORRECT VALUES
0C TOTAL ALL CLASSES
0C TOTAL ANNUAL AMOUNTS
0C TOTAL ITEMS
0C TOTAL MWH SALES, LOSSES AND TOTAL OF BOTH
0C TOTAL TAXABLE INCOME
0C TOTAL THE MONTH
0C TOTAL USES
0C TOTALS FOR PURCHASE POWER
0C TOTALS FROM OTHER SOURCES
0C TRACK FUEL, PURCHASE POWER FOR CP&L BUDGET NEEDS
0C TRACK NEXT LEVEL'S EXCLUSIONS
0C TRACK SUB STATE TAX ITEMS NOLs
0C TRACK THE ELIMINATION 
0C TRACKING DEFERRED TAXES DR
0C TRANSACT 
0C TRANSACT VARIABLES 5/27/98. GAT.
0C TRANSFER
0C TRANSMISSION  41-55
0C TRAP FOR POOLING 
0C TRY AT IMPLIED SHAPE
0C TRYING TO GET THE FIRST ENTRIES TO SET THE ORDER OF THE CLASS NAMES
0C TVA ASSUMES ALL A&I CASH IS PUT INTO CWIP AT MID-YEAR
0C TVA STUFF
0C TYPE DECLARATION FOR /FAINPT/
0C TYPE DECLARATION FOR /WKARRY/
0C TYPE DECLARATION FOR EXISTING OVERLAY FILES /FILEOVLY/
0C The energy limit was reached.  Find the intercept value and adjust
0C The new value(s) are set in R_VALUE_ARRAY directly.
0C Total Expenses
0C Total Investment Income
0C Total Non-member Revenues
0C Total O&M Expenses
0C Total Other Expenses
0C Transfers
0C UNDER CONSTRUCTION
0C UNIT SPECIFIC VALUES MOVED 10/7/92
0C USE CODE SPECIFIC TO COVERAGE_RATIO 4 OR 5
0C USE CODE SPECIFIC TO COVERAGE_RATIO 6 OR 7
0C USE CODE SPECIFIC TO COVERAGE_RATIO OF 11 FOR WVPA 8/1/2002
0C USE CODE SPECIFIC TO COVERAGE_RATIO OF 8 OR 9 FOR UPA3/26/93
0C USE CODE SPECIFIC TO DSCR OF FOR WVPA 7/2004
0C USE CODE SPECIFIC TO TVA
0C USE INPUTTED ACTUAL OR CALCUALTED CONSOLIDATED STATE TAX
0C USED TO TRANSFER VECTOR VALUES TO SINGLE MONTHLY ARRAYS
0C VACATION, PENSION, STORM
0C VALUES BY THE CREDITS USED THIS YEAR AND SUM THE REMAINING CREDITS
0C VALUES FROM THE PARAMETER FILE ARE NEEDED READ THEM
0C VALUES.  
0C VAR and FIXED O&M CALCULATIONS
0C VARIABLE ADDITIONS AND CHANGES 01/17/07 DR.G
0C VARIABLE FOR REGULATED GROUP
0C VARIABLE IN SEC RATIOS REPORT
0C VARIABLES
0C VARIABLES 626-COMMON SHARES ISSUED THIS PERIOD; AND 627-STD INTEREST RATES DO NOT
0C VARIABLES FOR REGULATED GROUP
0C VARIABLES FOR STORING OBJECTIVE FUNCTION VALUES
0C VARIABLES THAT DO NOT PROPAGATE LEFT TO RIGHT
0C VARIABLES TO CHECK
0C VARIABLES USING OUTPUT DATA SET
0C VARIABLES USING SPECIFIC SUMMING ARRAYS
0C VARIBLE ASSIGNMENT
0C VARIBLES FOR CAPACITY PLANNING PEAKS
0C VARIOUS COVERAGE RATIOS
0C VECTORS, VECTOR TYPES AND THEIR MAPPING TO VECTOR NUMBER ARE RETURNED  
0C VERMILLON CO. 21-30     
0C VIRTUAL SCREEN VARIABLES
0C WABASH VALLEY PROPERTY CALCULATION
0C WC MAINTENANCE-M.S.G.
0C WHEN THE 30TH YEAR IS REACHED SAVE THE 29TH YEAR
0C WRITE ASSET RESULTS
0C WRITE DRILLING ITEMS
0C WRITE FIRST RECORD OF CURRENT ENDPOINT
0C WRITE INCOME STATEMENT RESULTS
0C WRITE OUTPUT
0C WRITE RECORD
0C WRITE RESULTS
0C WRITE RESULTS TO MASTER FILE FOR TOTAL COMPANY
0C WRITE SUB TOTALS
0C WRITE SUMMARY REPORT
0C WRITE THE ACCUMLATED DEPRECIATION REPORT
0C WRITE THE CONSOLIDATED INFORMATION
0C WRITE THE CURRENT STATE OF THE BINARY FILE TO THE MASTER OL FILE
0C WRITE THE FUASSET FILE 
0C WRITE THE PARENT AND STRUCTURE INFORMATION 
0C WRITE THE PLANT BALANCES REPORT
0C WRITE THE SAVED PLANS TO DISK FROM FIRST TO WORST
0C WRITE-OFF VARIABLES
0C WRITTEN OFF TO EXTRAORDINARY EXPENSE.
0C WVPA ADDED VARIABLES
0C WVPA ADDITIONS
0C WVPA BUGET CONTROL REPORT
0C WVPA DATA ITEMS
0C WVPA RECEIVABLES
0C WVPA TRACKER DATA BASE TRANSFER
0C WVPA WORKORDER CONTROL REPORT
0C Working Capital POSITIONS
0C ZERO
0C ZERO 
0C ZERO ANNUAL ARRAYS
0C ZERO ANNUAL RESULTS VARIABLES
0C ZERO ARRAYS
0C ZERO LOWER LEVEL
0C ZERO MONTHLY ARRAYS
0C ZERO OUT THE COST OF CAPITAL STUFF INTEGER*2 THE SUBSIDIARY TOTALS
0C load curve points.
0C monthly_net_dfrd_debits
0C mthy_state_atl_incm_tax_pd
0C!
0C! NOTE THAT
0C!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0C$endif
0C$ifdefined(capcaity_cost_2_income)
0C$ifdefined(reg_capital_structur)
0C*                                                                     *
0C*                              A F U D C                              *
0C*                             D E B T                                 *
0C*                             T O T A L                               *
0C*                            INTEREST_CAP                             *
0C*                           ADDENDUMS                                 *
0C*                           D E P B O K                               *
0C*                           DEP_ACE                                   *
0C*                           E D P B O K                               *
0C*                           E T X B O K                               *
0C*                           E X P E N S E S                           *
0C*                           F A A B N D                               *
0C*                           N F A B N D                               *
0C*                           N F T O T L                               *
0C*                           PAYABLESS                                 *
0C*                          D E F T A X                                *
0C*                          D E P T A X                                *
0C*                          E D P T A X                                *
0C*                          TAX_INFORMATION                            *
0C*                         ALL RIGHTS RESERVED                         *
0C*                         DEFERRED DEBITS                             *
0C*                         W R I T E O F F                             *
0C*                        CCA_TAX_DEP                                  *
0C*                        FAST_TAX_RATE_34                             *
0C*                        FOR THE ST-FIN MODEL                         *
0C*                        T A X V A L U E                              *
0C*                        TAX INFORMATION FILE                         *
0C*                       ALL RIGHTS RESERVED                           *
0C*                       MIDAS GOLD ADDITIONS                          *
0C*                      REAL_PROPERTY_VALUES                           *
0C*                     COPYRIGHT (C) 1982, 1994, 1999                  *
0C*                     M.S. GERBER & ASSOCIATES, INC                   *
0C*                    COPYRIGHT (C) 1982,1994, 1998                    *
0C*              MODIFIED AND MORED TO MIDAS GOLD                       *
0C*             COPYRIGHT (C) 1998 M.S. GERBER & ASSOCIATES, INC        *
0C*          COPYRIGHT (C) 1982    M.S. GERBER & ASSOCIATES, INC.       *
0C*          COPYRIGHT (C) 1982   M.S. GERBER & ASSOCIATES, INC         *
0C*          COPYRIGHT (C) 1982 M.S. GERBER & ASSOCIATES, INC.          *
0C*          COPYRIGHT (C) 1982, 1994 M.S. GERBER & ASSOCIATES, INC     *
0C*          COPYRIGHT (C) 1982,1994 M.S. GERBER & ASSOCIATES, INC      *
0C*          COPYRIGHT (C) 1982,85,86 M.S. GERBER & ASSOCIATES, INC     *
0C*          COPYRIGHT (C) 1982-93 M.S. GERBER & ASSOCIATES, INC.       *
0C*          COPYRIGHT (C) 1983    M.S. GERBER & ASSOCIATES, INC        *
0C*          COPYRIGHT (C) 1983    M.S. GERBER & ASSOCIATES, INC.       *
0C*          COPYRIGHT (C) 1986 M.S. GERBER & ASSOCIATES, INC.          *
0C*          COPYRIGHT (C) 1990    M.S. GERBER & ASSOCIATES, INC        *
0C*          COPYRIGHT (C) 1990   M.S. GERBER & ASSOCIATES, INC         *
0C*          COPYRIGHT (C) 1991   M.S. GERBER & ASSOCIATES, INC         *
0C*          COPYRIGHT (C) 1992 M.S. GERBER & ASSOCIATES, INC.          *
0C*          COPYRIGHT (C) 1993 M.S. GERBER & ASSOCIATES, INC.          *
0C*          COPYRIGHT (C) 1995 M.S. GERBER & ASSOCIATES, INC.          *
0C*          COPYRIGHT (C) 1997 M.S. GERBER & ASSOCIATES, INC           *
0C*          COPYRIGHT (C) 1997,1994 M.S. GERBER & ASSOCIATES, INC      *
0C*          COPYRIGHT (C) 1998 M.S. GERBER & ASSOCIATES, INC           *
0C*          MODIFIED AND ADDED TO MIDAS 12/16/86                       *
0C*       BASED ON THE ACCELERATED COST RECOVERY SYSTEM (ACRS) AS       *
0C*       BASED ON THE ACCELERATED COST RECOVERY SYSTEM (ASRS) AS       *
0C*       CALCULATES THE ANNAUL TAX VALUE OF THE ASSET AND CANADIAN     *
0C*       CALCULATES THE ESCALATING GROSS PLANT AND NPV OF NEW PLANT    *
0C*       CALCULATES THE TAC VALUE AND THE TAX DEP FOR CANADIAN         *
0C*       CAPITAL COST ALLOCATION, CCA                                  *
0C*       DEBITS.                                                       *
0C*       DEFDEB CALCULATES THE ANNUAL AMORTIZATION EXPENSE OF          *
0C*       DEFERRED DEBITS AND THE YEAR END BALANCE FOR DEFERRED         *
0C*       DEFTAX CALCULATES THE DEFFERRED TAX ITEMS                     *
0C*       DEPTAX CALCULATES THE ANNUAL DEPRECIATION FOR FEDERAL TAXES   *
0C*       EDPTAX CALCULATES THE ANNUAL DEPRICEATION FOR FEDERAL TAXES   *
0C*       FAST TAX RATE 34                                              *
0C*       OR THE ASSET DEPRECIATION RANGE (ADR), OR STRAIGHT LINE.      *
0C*       SPECIFIED IN THE ECONOMIC RECOVERY TAX ACT (ERTA) OF 1981,    *
0C*       SPECIFIED IN THE ECONOMIC RECOVERY TAX ACT (ERTA) OF 1981, OR *
0C*       TAXVALUE CALCULATES THE TAX VALUE OF THE ASSET.               *
0C*       THE ASSET DEPRECIATION RANGE (ADR), OR STRAIGHT LINE.         *
0C*       THE MEHTOD USED IS SPECIFIED FOR EACH ACCOUNT                 *
0C*    PURPOSE:                                                         *
0C*  FIN MODEL AND IS COPYRIGHTED BY M.S. GERBER & ASSOCIATES, INC      *
0C*  TAKEN FROM FIN ON JUNE 5, 1991 BY M. GERBER FOR USE IN MIDAS GOLD  *
0C*  THIS CODE IS A DERIVATIVE OF CODE DEVELOPED BY M.S.G. OF THE       *
0C**
0C**                     ALL RIGHTS RESERVED
0C**                     COPYRIGHT (C) 1998
0C**               M.S. GERBER & ASSOCIATES, INC.
0C**            (ALLOCATION SECTION)
0C**            DATE : DECEMBER 16, 1998
0C**            FILE :CPLMAINS.FOR
0C**            SOURCE FILE FOR NORTH CAROLINA POWER LINE
0C********************************************************
0C***************************************************************
0C******************************************************************
0C********************************************************************
0C*********************************************************************
0C**********************************************************************
0C**********************************************************************      
0C***********************************************************************
0C***********************************************************************   
0C***********************************************************************      
0C************************************************************************
0C**-------------------------------------------------------------------
0C**--------------------------------------------------------------------
0C1000    FORMAT(' AMCHECK = ',F10.6,' LXLIM = ',F9.4,' RXLIM = ',
0CC
0CC        CONTRACT BELOW MINIMUM CAPACITY.
0CC        ENERGY VIOLATED?
0CC 5/25/92 TRAP FOR (BASE - A) EXCEEDING ENERGY OF THE CONTRACT
0CC***********************************************************************
0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
0CHARACTER (LEN=25) :: BUILD_NUM
0CHARACTER (LEN=256):: WINDOW_NAME
0CHARACTER(len=256) :: BASE_FILE_DIRECTORY, get_base_file_directory
0CHARACTER(len=256) :: GET_RESULTS_DIRECTORY, get_results_dir
0CHARACTER(len=256) :: directory_for_base_files, WVPA_ACTUAL_PURCHASES, get_ilb_filename
0CHARACTER(len=5) :: GET_SCENAME, get_scenario_name
0CONTAINS
0c 
0c      
0c           
0c                              DO MO = 1, 12
0c                              ENDDO
0c                             BOOK_EXPEN(1,YR) = PLANT_2_SERVICE(0,YR) -
0c                           ADDL Expansion: Probably need to change LRECL
0c                           DO MO = 1, 12
0c                           ENDDO
0c                           EXPENDITURES_ProjToDate = BOOK_EXPEN(MO,YR)
0c                           INTEREST(MO,I) = 30.*RATE(MO,I)*BAL(MO,I)
0c                           LAST_CAP_YEAR = J
0c                           YearToDate = YearToDate
0c                          CALL STORE_CONSOLIDATED_INIT_RECORD(IREC)
0c                          CONVERGENCE_PATH = 4.
0c                        ALLOC_EXPEN(I,0) = SUM(ALLOC_EXPEN(I,1:))
0c                        DO MO = 1, 12
0c                        ENDDO
0c                        FRACTION = TIME_FROM_FIRST_DAY(MO,
0c                        IF(MONTH > MO) SINKING_FUND(MONTH,I) = 0.
0c                        IF(SINKING_FUND(0,NORMALIZE_YR) /= 0. .AND.
0c                        INTEREST_AMORTIZATION_BAL(MO,YR,ASSET_CLASS,ACCT_TYPE) =
0c                        LEVEL_SUMATION(342,CLASS_LEVEL-1)=VARIABLE(342)+
0c                        LEVEL_SUMATION(347,CLASS_LEVEL-1)=VARIABLE(347)+
0c                        LEVEL_SUMATION(371,CLASS_LEVEL-1)=VARIABLE(371)+
0c                        LEVEL_SUMATION(372,CLASS_LEVEL-1)=VARIABLE(372)+
0c                       CALL STORE_CONSOLIDATED_INIT_RECORD(IREC)
0c                       LEVEL_SUMATION(,CLASS_LEVEL-1) = VARIABLE() +
0c                       LTDINT(I) = LTDINT(I) + (LTD_BAL - REMAIN) * LTDRTE
0c                       LTDINT(I) = LTDINT(I) + LTD_BAL * LTDRTE/2.
0c                       LTDRET(I) = LTDRET(I) + LTD_BAL
0c                       LTDRET(I) = LTDRET(I)+CURRENT_SINKING_FUND_PAYMENT
0c                     BKDPTX(J) = MONTHLY_TAX_BOOK_DEP(0,J-1)
0c                     DO MONTH = MO+1, 12
0c                     ENDDO
0c                     ENDIF
0c                     IF(INTRA_COMPANY_TRANSACTION == 'Y') THEN
0c                     IF(MO > 0)
0c                     IF(MO > 0) THEN
0c                     INCOME_CONVERGED = .FALSE.
0c                     LTD_PS_ISSUE_TAX_EXPENSE(MO,I,ASSET_CLASS) =
0c                     SBU_VARIABLES(117) = SBU_VARIABLES(117)   ! NUCL_DECOM_FUND
0c                     SUBSIDARY_VARIABLES(117) = SUBSIDARY_VARIABLES(117)   ! NUCL_DECOM_FUND
0c                     WRITE(4,'(" OPJ0>0",I3,5I4)') I,
0c                     WRITE(4,'(" OPJ1>0",I3,5I4)') I,
0c                    CSMAX = CSMIN
0c                    CSMAX = MAX(CSMIN,CSMAX)
0c                    DEPSL = ANNUAL_BOOK_DEP_30(AVAIL_DATA_YEARS) *
0c                    DEPSL = ANNUAL_BOOK_DEP_30(AVAIL_DATA_YEARS)/12.
0c                    EXCLUDE_SUB_INVESTMENT = EXCLUDE_SUB_COMMON_EQUITY+
0c                    LREC = LREC + 365
0c                    LREC = LREC - 366
0c                    R_CASH_VALUES(MO,) =
0c                    R_CUMULATIVE_BOOK_DEP =
0c                    R_EATAXBOKDEP = R_EATAXBOKDEP +
0c                    R_EA_DEF_TAX  = EA_DEF_TAX(YR,ASSET_CLASS)/12.
0c                    R_EA_DEF_TAX = EA_DEF_TAX(YR,ASSET_CLASS)
0c                    R_EA_DEF_TAX_BASIS  = R_EA_DEF_TAX_BASIS +
0c                    R_PROPERTY_TAX_GPV =
0c                    R_PROPERTY_TAX_NPV =
0c                    R_TBOKDP = R_TBOKDP+TBOKDP(MO,YR,ASSET_CLASS)
0c                    R_TGPV   = R_TGPV + TGPV(12,YR,ASSET_CLASS)
0c                    R_TGPV   = R_TGPV + TGPV(MO,YR,ASSET_CLASS)
0c                    R_TTAXDP = R_TTAXDP + TTAXDP(YR,ASSET_CLASS)
0c                    R_TTAXDP = R_TTAXDP + TTAXDP(YR,ASSET_CLASS)/12.
0c                  CALL CMOVE(VALUES(1),VECTOR_VALUES(1,I),INT(120))
0c                  CALL LOCATE(20,0)
0c                  CALL SET_INIT_CLASSES(CLASS_NUM,
0c                  CLASS_BTL_REVENUES = CLASS_BTL_REVENUES +
0c                  CLASS_REGULATORY_ASSETS = REG_ASSESTS_ADJUSTMENT
0c                  CLASS_UNAMORTIZED_INTEREST_BAL =
0c                  CYCLE
0c                  DEBT_COMMON_STOCK_BUYBACK=COMMON_STOCK_BUY_FROM_EQUITY
0c                  DEBT_COMMON_STOCK_ISSUED=COMMON_STOCK_ISSUED_2_EQUITY
0c                  DO J = 1, FINANCIAL_SIMULATION_YEARS
0c                  DO YR = 1, 30
0c                  ELSE
0c                  ENDDO
0c                  ENDIF
0c                  EXIT
0c                  EXPENSE_BC_ASSET_CLASS_POINTER(I) =
0c                  IF(FILE_ID == 0) THEN
0c                  IF(R_TAX_APPLICATION == 'B' .OR.
0c                  IF(SALT_RIVER_PROJECT()) THEN
0c                  INCOME_VARIABLES(:,BTL Monthly LTInvestmet Income) =
0c                  INCOME_VARIABLES(MO,BTL Monthly Amortization) =
0c                  INCOME_VARIABLES(MO,Monthly Amortization) =
0c                  INCOME_VARIABLES(MO,Monthly LTD Amort Interest) =
0c                  LAST_BUY_FOR_TRANSACTION(K) = 0
0c                  LAST_MW_FOR_TRANSACTION(K) = 0.d0
0c                  LAST_SELL_FOR_TRANSACTION(K) = 0
0c                  MONTHLY_FUEL_ADJ_DOLLARS(MO) = 0.
0c                  PLANT_2_SERVICE(MIN(12,SERVICEMO),YR) = 
0c                  R_BALANCE_SHEET_VALUES(MO,mtly_cwip) =
0c                  R_TRANSFER_VARIABLES(MO,) =
0c                  STD_INTEREST_CASH_PAYMENT = STD_INTEREST
0c                  SUBSIDARY_VARIABLES(730) = CONSOLID_OCI_EARNINGS_BAL ! 7/7/04
0c                  SUBSIDARY_VARIABLES(91) = TOTAL_SUB_INVESTMENT
0c                  UNAMORTIZED_INTEREST_BALANCE(2,0) =
0c                  WRITE(6,1010) trim(RECLN)
0c                 AFDC1(J) = RCWIP * EFFAFDCRATE(J) * 
0c                 AFDC1(J) = RCWIP * EFFAFDCRATE(J) * (CE(J)/2. +
0c                 CALL EXPENSE_ACCUMLATION(ASSET_CLASS,ALLOC_EXPEN,
0c                 CALL REVENUE_ACCUMLATION(ASSET_CLASS,ALLOC_EXPEN,
0c                 CALL TALLY_RESULTS_INFO(VARS_2_PASS,
0c                 CALL TALLY_RESULTS_INFO(VARS_2_PASS, 
0c                 COMMON_STOCK_ISSUED = SUB_EQUITY_NEEDS_FROM_PARENT(0)
0c                 CONSOLID_FED_SEC_29_TAX_CREDITS = VARIABLE(371)
0c                 CONSOLID_FED_SEC_42_TAX_CREDITS = VARIABLE(372)
0c                 CSMIN = CSMIN - DEBT_COMMON_STOCK_BUYBACK
0c                 CSMIN = MAX(CSMIN,DEBT_COMMON_STOCK_ISSUED)
0c                 CUMTXNORM(2,0) = CUMTXNORM(2,0) + ! removed 3/13/98
0c                 CYCLE
0c                 ELSE
0c                 ELSEIF(LREC > 366) THEN
0c                 ENDIF
0c                 EXIT
0c                 IF(CSMIN < 0.) THEN
0c                 IF(LREC <= 0) THEN ! removed 4/18/01 for LF95 compatibility
0c                 IF(PLANT_2_SERVICE(0,YR1) == 0.) CYCLE
0c                 IF(R_PERIOD == 0) THEN
0c                 IF(TREND_NORM /= 0.) THEN
0c                 JPR=1
0c                 JPR=2
0c                 LTD_PREM_AMORT = LTD_PREM_AMORT - LTD_ISSUING_AMORT
0c                 MONTHLY_COMMON_SHARES_ACTIVE = .TRUE.
0c                 OTHER_LT_LIABILITY(2,0) = CONSOLIDATED_TAX_ADJUSTMENT+
0c                 PSDIV(I) = PSDIV(I) + (PSINC - REMAIN) * PSRATE
0c                 PSDIV(I) = PSDIV(I) + PSINC * PSRATE/2.
0c                 PSRED(I) = PSRED(I) + CURRENT_SINKING_FUND_PAYMENT
0c                 PSRED(I) = PSRED(I) + PSINC
0c                 PS_PREM_AMORT = PS_PREM_AMORT - PS_ISSUING_AMORT
0c                 PURCHASE_POWER_EXPENSE = PURCHASE_POWER_EXPENSE +
0c                 R_ANN_LTD_INT = R_ANN_LTD_INT +
0c                 R_ANN_PS_DIV = R_ANN_PS_DIV +
0c                 R_ANN_PS_DIV_LTD_INT = R_ANN_PS_DIV_LTD_INT +
0c                 R_LTD_PREM_AMORT = LTD_PREM_AMORT(YR,ASSET_CLASS)
0c                 R_LTD_PREM_AMORT = LTD_PREM_AMORT(YR,ASSET_CLASS)/12.
0c                 R_LTD_PREM_BAL = LTD_PREM_BAL(YR,ASSET_CLASS)
0c                 R_LTD_PREM_BAL = LTD_PREM_BAL(YR,ASSET_CLASS)/12.
0c                 R_MIPS_INCOME_TAX_DEDUCTION =
0c                 R_PS_PREM_AMORT = PS_PREM_AMORT(YR,ASSET_CLASS)
0c                 R_PS_PREM_AMORT = PS_PREM_AMORT(YR,ASSET_CLASS)/12.
0c                 R_PS_PREM_BAL = PS_PREM_BAL(YR,ASSET_CLASS)
0c                 R_PS_PREM_BAL = PS_PREM_BAL(YR,ASSET_CLASS)/12.
0c                 SBU_LTD_ELIM = 0.
0c                 SBU_PS_ELIM = 0.
0c                 SBU_STD_ELIM = 0.
0c                 SBU_UNAMORTIZED_INTEREST_BAL = 0.
0c                 SBU_VARIABLES = 0.
0c                 STOP 'Future Assets'
0c                 SUBSIDARY_VARIABLES(759) = SUBSIDARY_VARIABLES(759)
0c                 SUB_EARNINGS_2_EXCLUDE = SUBSIDARY_VARIABLES(47) +
0c                 USE_ALL_STATE_TAX_BENEFITS_NOW=.NOT.PARENT_CLASS .AND.
0c                 VARIABLE(392) = DEFERRED_FUEL_BALANCE(0)
0c                 VARIABLE(759) = CASH_TIMING_ADJUSTMENTS
0c                 WRITE(6,*) 'Correct account ',OPTION_NAME
0c                 WRITE(6,*) 'Plant Capitalization Vector without Cash'
0c                 WRITE(6,*) 'Vector is not supported in Monthly MIDAS'
0c               ALLOCATE(EXPENSE_BC_ASSET_CLASS_POINTER
0c               BOKLF = MAX(.5,BOKLF-1)
0c               CALL GET_DAY_OF_WEEK_IN_MONTH(    ! doesn't have any effect CALENDAR_DAY_OF_WEEK not used
0c               CALL TREND_MONTHLY_INPUT(PLANT_2_SERVICE,
0c               CAPTURED_OPT_METHOD_REVENUES = SBU_VARIABLES(496) ! prior year captured revenues
0c               CASH_AMOUNTS_RECEIVABLE(1:12,R_CLASS,REV_TYPE) =
0c               CASH_STATEMENT_POSITION = 152 ! INCOME Position=49
0c               CASH_STATEMENT_POSITION = 153 ! INCOME Position=47
0c               CASH_STATEMENT_POSITION = 48 ! INCOME Position=18
0c               COMMON_STOCK(1,CLASS_POS) = COMMON_STOCK(1,CLASS_POS)  
0c               CONSOLD_AVAIL_FED_TAX_CREDIT = FED_TAX_CREDIT_PASSED_UP
0c               CONSOLID_FED_SEC_29_TAX_CREDITS=SEC_29_CREDITS_PASSED_UP
0c               CONSOLID_FED_SEC_42_TAX_CREDITS=SEC_42_CREDITS_PASSED_UP
0c               DEFERRED_FUEL_BALANCE(CLASS_POS) =
0c               DEFERRED_TAXES_ROLLUP_CR = DEFERRED_TAXES_CR
0c               DEFERRED_TAXES_ROLLUP_CR = DEFERRED_TAXES_ROLLUP_CR
0c               DO B_POS = 1, BAL_SHEET_OPTIONS
0c               DO I = 0, VARS_2_PASS
0c               DO I = 1, MAX_BC_EXPENSE_CLASS_ID_NUM
0c               DO I = K, MAX_TRANS_WITHIN_HOUR
0c               DO MO = 0, 12
0c               DO MO = 1, 12 
0c               DO YR = 1, FINANCIAL_SIMULATION_YEARS 
0c               ELSE
0c               ENDDO
0c               ENDIF
0c               EXPENSING_GAS_INVENTORY = EXPENSING_GAS_INVENTORY
0c               EXPENSING_MATRIALS_INVENTORY=EXPENSING_MATRIALS_INVENTORY
0c               FUEL_EXP_TRANSFR_4_POWER_SOLD = TRANSFR_PURCHASE_FUEL_EXPENSES 
0c               I = 21c
0c               IF(INTRA_COMPANY_TRANSACTION == 'Y') THEN
0c               IF(ISSYR <= BASE_YR) ISSUE_EXPENSE_BAL(12,0) =
0c               IF(PARENT_CLASS) THEN
0c               IF(RATE_CODE(I) > 200000 .AND. RATE_CODE(I) < 300000)THEN ! was for pscs 5/5/04
0c               IF(TRANSACT_ANALYST_ONLY() .AND.
0c               IF(UI()) GET_ACCUMULATION_PERIOD_INFO = 1
0c               INTEREST_AMORTIZATION_BAL(MO,YR,0,ACCT_TYPE) =
0c               INTEREST_DIVIDENDS_ACCRUDED = 0.
0c               INTEREST_DIVIDENDS_ACCRUDED = LTDINT(YR,CLASS_POS)        !INTEREST_ON_EXISTING_LTD,
0c               K=1 ! each "month" has 1 "day"
0c               K=LENGCM_DA(JMO) ! why block out the entire month?
0c               LTD_INTEREST_CASH_PAYMENTS = LTDINT(YR,CLASS_POS) !INTEREST_ON_EXISTING_LTD,
0c               OTHER_DD_BALANCE(2,CLASS_POS) =
0c               OTHER_PURCHASE_POWER_EXPENSE =
0c               PEAK_ADJUSTMENTS(I) = ADJ_PK1 + ADJ_PK2
0c               PS_DIVIDEND_CASH_PAYMENTS = PSDIV(YR,CLASS_POS) ! DEBT_FILE_PREFERRED_DIVIDENDS,
0c               RATE_BASE(2,CLASS_POS)=
0c               R_COMPETITIVE_LOSS(I+2) = .000001 *
0c               R_COMPETITIVE_SALES(I+2) = .000001 *
0c               R_COMPETITIVE_SALES_QUANT(I+2) = .000001 *
0c               R_EXPENSE_CLASS_POINTERS(I) = 
0c               R_UNAMORTIZED_INTEREST_BALANCE =
0c               R_VARIABLES(514) = R_VARIABLES(514)
0c               SBU_VARIABLES(393) = 0.
0c               SECONDARY_SALES_REVENUES = SECONDARY_SALES_REVENUES
0c               SUBSIDARY_VARIABLES(107) = 0. ! 3/13/98
0c               SUBSIDARY_VARIABLES(43) = 0. ! Subsidiary Income
0c               UNAMORTIZED_INTEREST_BALANCE(2,CLASS_POS) =
0c               WRITE(4,'("& ",z4)') J2
0c               WRITE(4,*) ' '
0c               WRITE(4,*) 'Record',SF_YEAR,'  and Year',YEAR
0c               WRITE(4,*) 'System Forecast.'
0c               WRITE(4,*) 'The Base System Forecast File in'
0c               WRITE(4,*) 'Year in Set Parameters or the Year in'
0c               WRITE(4,*) 'in Set Parameters. Either reset Base '
0c               WRITE(4,*) 'is inconsistent with the Base Year',
0c               write(4,'(4i5,3f8.2,2i6,a)')iUnit,i2,nBiU,SuccHr,
0c               write(DbgU,'(4i4,a)') iLink,LinkID(iLink),
0c              AFDC1(J) = RCWIP*EFFAFDCRATE(J)*(CE(J) + CWIP(J-1))
0c              BTL_FEDERAL_TAXES = FEDERAL_TAXES - ATL_FEDERAL_TAXES
0c              BTL_INCOME_TAXES = BTL_STATE_TAXES + BTL_FEDERAL_TAXES
0c              BTL_STATE_TAXES = STATE_TAXES - ATL_STATE_TAXES
0c              CAPACITY_SALES_REVENUE = CAPACITY_SALES_REVENUE +
0c              CASH_PAYMENTS(MO,YR) = 0.
0c              COMMON_DIVIDENDS = COMMON_PAYOUT_RATIO *
0c              CONSOLIDATED_FEDERAL_TAXES= MAX(CONSOLD_AMT_MINIMUM_TAX,
0c              DO YR1 = 1, FINANCIAL_SIMULATION_YEARS
0c              ELSE
0c              ELSEIF(YR > AVAIL_DATA_YEARS) THEN
0c              ENDDO
0c              ENDIF
0c              GOPINC = OPERATING_REVENUES(2,CLASS_POS) -
0c              IF(ACCOUNT_TYPE == 'R') THEN
0c              IF(CE(J) == CEP(J)) THEN
0c              IF(DEBT_COMMON_STOCK_ISSUED /= 0. .OR.
0c              IF(LAST_GROUP_WAS_A_SUBSIDARY) THEN
0c              IF(MO == 0) THEN
0c              INTEREST_ON_STD = STD_INTEREST_RATE *
0c              LAST_GROUP_WAS_A_SUBSIDARY = CLASS_TYPE(CLASS_POS) /= SBU
0c              LEVEL_SUMATION(126,CLASS_LEVEL-1) = NEW_SUB_INVESTMENT +
0c              LTDINT(YR,CLASS_POS) = LTDINT(YR,CLASS_POS)
0c              NUCLEAR_FUEL_LEASE_PAYMENTS=NUCLEAR_FUEL_LEASE_PAYMENTS +
0c              OPERATING_REVENUE_TAX = OPREV_TAX_RATE *
0c              R_LTD_ISSUE_EXP_AMORT =
0c              R_LTD_ISSUE_EXP_BAL =
0c              R_PS_ISSUE_EXP_AMORT =
0c              R_PS_ISSUE_EXP_BAL =
0c              SUB_SBU_ACE_TAX_DEPRECIATION(1:) = 0.
0c              SUB_SBU_TAX_PRE_DEPRECIATION(1:) = 0.
0c              goto 220 ! RETURN after copying revised local vars to REAL*4
0c             DNodQty=DNodQty-LinkQty(iLink)*LinkEff(iLink)
0c             ELSE
0c             InfRation=0.999 ! allow next-discovered cycle to have a larger InfRation
0c             JPR=1
0c             K=4 ! dubious
0c             NodeSupplyLtd=NodeQtyLim(iNode)
0c             WRITE(4,'(" read",I3)') I
0c             WRITE(4,'("&",2I4)') J1,THIS_WIDTH
0c             WRITE(4,'(2i5,7i4,f12.3,a)') k3,i,J0,j0,this_width,nwksx7,
0c             WRITE(4,'(2i5,7i4,f12.3,a)') k3,i,j0,j1,this_width,nwksx7,
0c             WRITE(4,'(i5,6i3,4i5,f6.3,a)')
0c             c DO MO = 1, 12
0c             iUbV=nLbV+jVar-nTVar-(iLink-1) ! reduced by count of skipped bounds
0c             if(NodeSupplyLtd>=0.0) OrigUB=NodeSupplyLtd
0c             write(*,'(a,2i3,2f7.2)') ' interchanging',
0c             z(iCase)=dble(iCase-1)/dble(nCases-1)
0c             z(iCase)=dble(nCases-iCase)/dble(nCases-1)
0c            ALLOCATE(TEMP_ASSET_CLASS_POINTER(1024))
0c            CALL CINITW(TEMP_ASSET_CLASS_POINTER,INT(1024),INT2(0))
0c            CALL CLS(3,41,48)
0c            CALL CMOVE(BC_INIT_CLASS_POINTER,
0c            CALL CMOVE(OL_INIT_CLASS_POINTER,
0c            CALL GET_DAY_OF_WEEK_IN_MONTH(
0c            CALL INIT_PRODUCTION_CASH_LAG()
0c            CALL LOCATE(16,23)
0c            CALL LOCATE(16,30)
0c            CALL LOCATE(16,9)
0c            CALL LOCATE(17,9)
0c            CALL LOCATE(20,2)
0c            CALL LOCATE(3,41)
0c            CALL RETURN_EXPENSE_CLASS_POINTER(TEMP_LIST)
0c            CALL RETURN_INITIALIZATION_POINTER(TEMP_LIST)
0c            CAPTURED_OPT_METHOD_REVENUES =
0c            CLASSES_FOUND = LOAD_MASTER_CLASS_LIST(MAX_CL_CLASS_NUM,
0c            CLASSES_FOUND = LOAD_MASTER_CLASS_LIST(MAX_EX_CLASS_NUM,
0c            CLASS_GPV(2,CLASS_POS) = CLASS_GPV(2,CLASS_POS)
0c            CLASS_POS = MASTER_CLASS_LIST(R_CLASS)
0c            CL_MARKET_PURCHASES =  CL_VAR_MARKET_PURCHASES   ! need the split
0c            CURRENT_PORTION_OF_LTD(0) = LTD_RETIREMENTS
0c            DEALLOCATE(TEMP_ASSET_CLASS_POINTER)
0c            DEBT_FILE_UNAMORT_ISS_EXP_BAL(CLASS_POS) = CS_ISSUE_EXP_BAL
0c            DEFERRED_TAXES_CR = DEFERRED_TAXES_ROLLUP_CR
0c            DO I = 1, MAX_BC_EXPENSE_CLASS_ID_NUM
0c            DO I = 1, MAX_BC_INIT_CLASS_ID_NUM
0c            DO I = 1, MAX_OL_EXPENSE_CLASS_ID_NUM
0c            DO I = 1, MAX_OL_INIT_CLASS_ID_NUM
0c            DO MO = 0, 12
0c            DO MO = 1, 12
0c            ELSE
0c            ELSE   
0c            ENDDO
0c            ENDFILE(11)
0c            ENDFILE(LAST_UNIT_NO_OPENED,IOSTAT=IOS)
0c            ENDIF
0c            EXPENSE_OL_ASSET_CLASS_POINTER(I) =
0c            GLOBAL_SCARCITY=GET_GLOBAL_SCARCITY(R_FIRST_CAP,
0c            IF(.NOT. LAHEY) WRITE(4,"('&',I3)") HR
0c            IF(COVERAGE_RATIO == 1 .AND. SWITCH_SETTINGS(10)(2:2)=='0')
0c            IF(COVERAGE_RATIO == 1 .AND. SWITCH_SETTINGS(10)(2:2)=='1')
0c            IF(CURRENT_DEPTH_BEST_VALUE <= LAST_DEPTH_WOREST_VALUE)
0c            IF(CURRENT_DEPTH_BEST_VALUE >= LAST_DEPTH_WOREST_VALUE)
0c            IF(MAX_BC_EXPENSE_CLASS_ID_NUM > 0) THEN
0c            IF(PLANT_VECT /= 0 .AND. MONTHLY_MIDAS_ACTIVE .AND. 
0c            IF(REMAINING_LIFE_DEP) THEN
0c            IF(R_DEACTIVE_YR <= 0) R_DEACTIVE_YR = 199
0c            IF(SF_YEAR /= YEAR - STUDY_BASE_YEAR) THEN
0c            IF(VARIABLE == Cash Emission Credits) CYCLE
0c            IF(VOID_LOGICAL) THEN
0c            IF(WVPA()) THEN
0c            IF(YR<=LAST_AVAILABLE_MONTHLY_YEAR+1 .AND. AFDCSW /= 1) THEN 
0c            INCOME_VARIABLES(:,Monthly Investment Earnings) =
0c            INT_CAP = DBLE_INT_CAP
0c            INT_PROB = INTERCEPT + SLOPE * INT_CAP
0c            IREC = YEAR removed 11/06/06 by Dr.G
0c            LAST_DEPTH_WOREST_VALUE = SET_DEPTH_TEST_VALUES()
0c            MAX_CL_CLASS_NUM = RETURN_CAP_LIMITED_POINTER(TEMP_LIST)
0c            MONTHLY_DOLLARS(0) = SUM(MONTHLY_DOLLARS(1:))
0c            MONTHLY_NUC_DECOM_RATE = MONTHLY_NUC_DECOM_RATE/100.
0c            NucDecom_Discount_Rate = 0.
0c            OTHER_LT_LIABILITY(2,CLASS_POS) =
0c            R_DEACTIVE_YR = 199
0c            R_DEACTIVE_YR = YEAR_CLASS_DEACTIVATED(CLASS_POS)
0c            R_MAX_EXPENSE_CLASS_NUM = MAX_BC_EXPENSE_CLASS_ID_NUM
0c            R_MAX_EXPENSE_CLASS_NUM = MAX_OL_EXPENSE_CLASS_ID_NUM
0c            R_NUM_OF_EXPENSE_CLASSES = NUMBER_OF_BC_EXPENSE_CLASSES
0c            R_NUM_OF_EXPENSE_CLASSES = NUMBER_OF_OL_EXPENSE_CLASSES
0c            SECONDARY_SALES_REVENUES = SECONDARY_SALES_REVENUES
0c            TEMP_CASH_VARS(:,Cash Purchased Power) =
0c            TOTAL_DERIVATIVE_EXPENSE = PHYS_DERIVATIVES_VAR_EXPENSE
0c            TOTAL_DERIVATIVE_REVENUE = PHYS_DERIVATIVES_VAR_REVENUE
0c            UNAMORTIZED_INTEREST_BALANCE(2,CLASS_POS) =
0c            VARIABLE(I) = SBU_VARIABLES(I) + VARIABLE(I)
0c            VOID_REAL = RESET_LAST_DEPTH_WOREST_VALUE()
0c            VOID_REAL = SET_DEPTH_TEST_VALUES()
0c            WRITE(6,"('&',F7.1/)") BEST_OBJECT_FUNCTION_VALUE
0c            WRITE(6,*) 
0c            WRITE(6,*) 'There is no forecast information for the',
0c            WRITE(6,*) 'There is no forecast information in',
0c            WRITE(6,1010) BASE_FILE_NAME
0c            WRITE(6,1030) ' Asset vector mismatch.  Vector ',R_VECTOR,
0c            write(*,'(7i6)') iSup,Gap,i,j,k,p,q
0c           ACTUAL_TAX_POSITION =
0c           ALLOCATE(PAYABLES_BC_ASSET_CLASS_POINTER
0c           ASSET_ALLOCATION_LIST(1) = 100.
0c           ASSET_ALLOCATION_LIST(1) = FLOAT(R_ASSET_CLASS_VECTOR)
0c           CALL CMOVE(PAYABLES_BC_ASSET_CLASS_POINTER,
0c           CALL CMOVE(PAYABLES_OL_ASSET_CLASS_POINTER,
0c           CALL CMOVE(TEMP_ASSET_CLASS_POINTER,
0c           CALL DERIVATIVE_INFO_ANNAUL(ASSET_YR,CLASS,
0c           CALL GET_DAY_RANGE_THISMO(JCM,DAY1,DAY2,LENGCM_DA(JCM),K,K2)
0c           CALL MAP_LAST_MONTH(MIDAS_LAST_MONTH,MONTH_ENDING)
0c           CALL RETURN_DEBT_CLASS_POINTER(ASSET_CLASS_POINTER)
0c           CASE ('Owned Nuclear Fuel','8 Owned Nuclear Fuel','8')
0c           CASE ('Storm Expense')   
0c           CASE ('Vacation Pay')   
0c           CASH_VARIABLES(0,cash_change_ltinvestments) = 0.
0c           COMMON_STOCK_BOUGHT = 0.
0c           COMMON_STOCK_ISSUED = 0.
0c           CONSOLIDATED_FED_CREDIT_USED = AVAIL_CONSOLIDATED_CREDITS 
0c           CONSOLIDATED_FED_CREDIT_USED = R_TAXES_B4_CREDITS 
0c           COVERAGE_RATIO = INDEX('123456789',SWITCH_SETTINGS(10)(1:1))
0c           CPL_TAX__VARIABLES(MO,,ATL) =
0c           ContigHour  (HrInYr)=HrInYr
0c           ContigHour  (SAVE_HrInYr)=SAVE_HrInYr
0c           DA_RQ_REM=MAX(0.,DA_RQ_REM-FLOAT(DAY2-DAY1+1))
0c           DO NWKSX7=7,THIS_WIDTH,7 ! examine all possible # of whole weeks
0c           ELSE
0c           ELSE IF(AFDCSW == 1) THEN
0c           ENDFILE(11)
0c           ENDFILE(12)
0c           ENDIF
0c           GPShoulder=(GPLoad(0)<=GPLoad(1))
0c           HR1=0
0c           HR1=DAY0*24+NINT(0.501+Z1*(FLOAT(SLACK_HR)-0.002))
0c           IF(AFDCSW == 2) THEN
0c           IF(CLASS_TYPE(CLASS_POS) /= SBU .AND.
0c           IF(DELETE < 8) CALL SET_ASSET_CLASSES(ASSET_CLASS_ID,
0c           IF(DIVIDEND_PAYMENT_METHOD /= DPS) THEN
0c           IF(DONT_TALLY_THIS_CLASS) EXIT ! need the reason for this statement
0c           IF(SO_BEG_MODA(2,I)>0)WRITE(4,'(" 2nd B/E_DATEs occupied")')
0c           INTEREST_ON_SHORT_TERM_DEBT(2,CLASS_POS) = 0.
0c           JCM=1+MOD(J-1,12)
0c           LAST_GROUP_WAS_A_SUBSIDARY = .TRUE.
0c           LINKED_LEVEL = 2 
0c           LTD_PREM_AMORT = LTD_PREM_AMORT - LTD_ISSUING_AMORT
0c           LinkNdID(j,iLink)=LinkNdID(k,iLink-1)
0c           LinkNdSN(j,iLink)=LinkNdSN(k,iLink-1)
0c           LnkQCEF(1,1)=LnkQCEF(1,1)-r4*LinkQtySeg(nSegUsd,iLink)
0c           MONTHLY_COMMON_SHARES_ACTIVE = .FALSE.
0c           NEOSO(JCM)=NEOSO(JCM)+1 ! disabled 20021217
0c           NET_DEFERRED_CASH_ADJ = NET_DEFERRED_CASH_VALUE(YR,
0c           NUMBER_OF_REPORTING_CLASSES = DEFINED_CLASSES ! TESTING
0c           NodeQty (j)=NodeQty (k) ! not yet available for Demand nodes
0c           OrigUB=LinkCap(iLink)*LinkFunc(iSeg,2,iLink) ! not used in LP
0c           OrigUB=UbValu(iUbV)
0c           PARENT_HAS_LINKED_SBUS = .TRUE.
0c           PARENT_HAS_LINKED_SUBS = .TRUE.
0c           READ(LOAD_UNIT,REC=367) AEL_PEAK,AEL_PEAKMAX ! remove 4/18/01 for the above MSG
0c           READ(LOAD_UNIT,REC=367) AEL_PEAK,AEL_PEAKMAX !replaced with above 4/18/01 for LF95
0c           READ(LOAD_UNIT,REC=368) AEL_BASE,AEL_BASEMIN
0c           READ(LOAD_UNIT,REC=369) AEL_ENERGY,AEL_ENRGYEAR
0c           REAL_VOID = 
0c           REAL_VOID = STORE_PARM_TABLE_FED_TAX_RATE(TEMP_FED_TAX_RATE)
0c           REFERENCE_BASE_REVENUES = TOTAL_BASE_RATES_REVENUES
0c           RETAINED_EARNINGS = 0
0c           RETAINED_EARNINGS_ADJ = 0.
0c           R_MAX_PAYABLES_CLASS_NUM = MAX_BC_PAYABLES_CLASS_ID_NUM
0c           R_MAX_PAYABLES_CLASS_NUM = MAX_OL_PAYABLES_CLASS_ID_NUM
0c           R_NUM_OF_PAYABLES_CLASSES = NUMBER_OF_BC_PAYABLES_CLASSES
0c           R_NUM_OF_PAYABLES_CLASSES = NUMBER_OF_OL_PAYABLES_CLASSES
0c           TAFDC1  = TAFDC1 + AFDC1(J)
0c           TAX_POSITION = 48
0c           TOTAL_BASE_RATES_REVENUES = TOTAL_BASE_RATES_REVENUES +
0c           UNIT_OUT_SCHD(JCM,NEOSO(JCM))=I
0c           WLOADS(I,J)=dble(WLOADS4(I,J))
0c           WLOADS4(I,J)=sngl(WLOADS(I,J))
0c           WLPROB(I,J)=dble(WLPROB4(I,J))
0c           WLPROB4(I,J)=sngl(WLPROB(I,J))
0c           WRITE(4,'(2i4,f9.3,a)') j,this_width,z1,' before call AMB'
0c           WRITE(4,'(3i5,i3,2f9.4,a)') k3,k2,i,jcm,
0c           WRITE(4,'(4i5,f9.3)') j,jcm,day1,day2,z2
0c           WRITE(4,'(4i5,f9.3,a)') SO_BEG_MODA(1,I),SO_END_MODA(1,I),
0c           WRITE(4,'(4i5,f9.3,a)') SO_BEG_MODA(2,I),SO_END_MODA(2,I),
0c           WRITE(4,'(5I6)') JPR,BEG_O_DATE,END_O_DATE,DAY1,DAY2
0c           WRITE(4,'(5I6)') JPR,BEG_O_DATE,END_O_DATE,DAY3,DAY4
0c           WRITE(4,'(i3,a)') mFRCpm,' mFRCpm exceeded, GetTimesToState'
0c           WRITE(4,'(i5,6i3,4i5,f6.3,a)')
0c           WRITE(4,'(i5,i3,f6.3,5i4,f9.6,4i4)') i,jcm,DAVAIL1,
0c           WRITE(4,'(i5,i3,f6.3,5i4,f9.6,4i4)') i,jcm,EAVAIL1(JCM),
0c           YearStr=R4toA4(f4) ! very slow
0c           Z1=MixRand32()
0c           dO I = 1, 4
0c           else
0c           end if
0c           end if ! re supply-node link
0c           iNode=LinkNdSN(0,iLink)
0c           iUbV=nLbV+jVar-nTVar-(iLink-1) ! reduced by count of skipped bounds
0c           if(LinkNdSN(0,iLink)/=iNode) call ps(1,'logical error')
0c           if(NodeSupplyLtd>=0.0)
0c           if(NodeType(iNode)==1) then ! iLink drains a supply node
0c           if(jFull<=kFull) then
0c           if(x(iCase)>xMin) ThisSumPower= ! avoid crashing at 0**(ThisExpo<0)
0c           if(yDecreasing) then
0c           jFull=FullKey(j)
0c           k=mod(j+1,2)
0c           kFull=FullKey(k)
0c           nSegUsd=nSegsOI(LinkType(iLink))
0c           write(4,'(2i4,2f12.2,a)') iLink,iSeg,LinkQtySeg(iSeg,iLink),
0c           write(4,'(4i4,f9.6,f12.6,a)') iHalfCycle,iCase,nz0,nz1,
0c           write(4,'(9i9,a)') nItems,Gap,i,j,k,
0c           write(DbgU,'( i6.6,2a5,a)',advance='no')
0c           write(DbgU,'( i7.5)',advance='no')  (jCol-nSegUsd)
0c           write(DbgU,'( i7.5)',advance='no') -(jCol-nSegUsd)
0c           write(DbgU,'(2i5,f7.3,e9.2,f17.3,a)')iNode,iLink,NodePri
0c           write(DbgU,'(4i4,i3,3i4,f7.4,a)') CallDepth,iDNod,iNode,
0c           write(DbgU,'(5i6,3e12.5,2(1x,a))') iLink,j,iUbV,jVar,iNode,
0c           write(DbgU,'(i4,a,11f9.2)') iLink,' LQS',LinkQty(iLink),
0c           write(DbgU,'(i4,i9,10f9.0,a)') iLink,jVar,(cVect(iUbV),
0c          write(DbgU,'( i4)',advance='no') NdLkdInto(k,iNode)
0c         ! assignments below needed to preclude 'initiating I/O during I/O' error
0c         ,(' ---',jVar=1,jCol)
0c         A = DBLE(SLOPE / 2.)
0c         ACCOUNT_SUB_CLASSIFICATION = 6 ! IN THE END WANT 6, OTHER TO BE THE DEFAULT
0c         ADDEND=ADDEND+CAP_EFFECTIVE
0c         ALLOCATE(EXPENSE_OL_ASSET_CLASS_POINTER
0c         B = DBLE(INTERCEPT)
0c         BAL(J) = 0.
0c         BAL(J) = MAX(0., BAL(J-1) - SFA(J))
0c         C = DBLE(-1*(MAXIMUM_ENERGY - ENERGY + INTERCEPT*MIN_CAP + 
0c         CALL ADDENDUMS(.TRUE.)
0c         CALL CINITD(R_CASH_EXPENDITURES,
0c         CALL CRITICAL_ERROR_MSG7
0c         CALL LAST_FUTURE_ASSET_RECORD(LAST_FA_RECORD)
0c         CALL LOCATE(15,9)
0c         CALL LOCATE(16,9)
0c         CALL LOCATE(17,9)
0c         CALL LOCATE(4,66)
0c         CALL READ_EXPENSE_BASE_CASE
0c         CALL RETURN_NUM_OF_EXPENSE_CLASSES(NUM_OF_EXP_CLASSES,
0c         CALL RETURN_NUM_OF_EXPENSE_CLASSES(NUM_OF_EX_CLASSES,
0c         CALL STOP_NOFILE(FILE_TYPE,FILE_NAME)
0c         CASH_PAYMENTS(1,1) = PAYABLE
0c         CASH_TIMING_ADJUSTMENTS = CASH_TIMING_ADJUSTMENTS
0c         CLASS_UNAMORTIZED_INTEREST_BAL =
0c         COMMON_STOCK_ISSUED = COMMON_STOCK_ISSUED
0c         CeffMW(0)=CapyMW(0)*ReducedCap/NominalCap
0c         CeffMW(1)=CapyMW(1)*ReducedCap/NominalCap
0c         DBLE_INT_CAP = (-B + (B**2-4*A*C)**.5)/(2*A)
0c         DBLE_MAX_CAP = DBLE(MAX_CAP)
0c         DBLE_MIN_CAP = DBLE(MIN_CAP)
0c         DEFERRED_GAIN_FROM_SALES(2,R_CLASS_POS) = SBU_VARIABLES(412)
0c         DO I = 0, 20
0c         DO I = 0, NUM_ACTIVE_VARIABLES
0c         DO I = 1, MAX_OL_EXPENSE_CLASS_ID_NUM
0c         DO J=MON1,MON2
0c         DO MO = 0, 12
0c         ELSE
0c         ELSE   
0c         END DO
0c         ENDDO
0c         ENDFILE(11)
0c         ENDIF
0c         FASB143_ARO_LIABLILITY_BAL = SBU_VARIABLES(637)
0c         FASB143_ARO_NET_ASSET_BAL = SBU_VARIABLES(636)
0c         FILE_EXISTS = .FALSE.
0c         FUASTOL = 'OL'
0c         GET_ENV_COM_OL = ENV_COM_OL
0c         IF(.NOT. LAHEY) WRITE(4,"('&Hour in Month           ')")
0c         IF(AVAIL_CONSOLIDATED_CREDITS >= R_TAXES_B4_CREDITS) THEN
0c         IF(CAL_REAL_PROPERTY_TAX_VALUES) THEN !removed 2/16/01 by MSG because the real property tax
0c         IF(DBLE_MIN_CAP .LE. DBLE_INT_CAP .AND. 
0c         IF(DELETE < 8) CALL SET_ASSET_CLASSES(ASSET_CLASS_ID,
0c         IF(EXPENSE_OVERLAYS_ACTIVE) THEN ! EXPENOL == 'OL') THEN
0c         IF(IMPA() .AND. OPERATING_METHOD == 'C') 
0c         IF(MAX_CL_CLASS_NUM > 0) THEN
0c         IF(MAX_EX_CLASS_NUM > 0) THEN
0c         IF(MINIMIZED_OBJECT_FUNCTION) THEN
0c         IF(MON2<MON1) MON2=MON2+12 ! for EoY wrap
0c         IF(OPERATING_METHOD == 'C') THEN
0c         IF(OPTION_DEPTH > 1)
0c         IF(R_CLASS > 0) THEN
0c         IF(TEST_DEPTH_2_ADVANCE) THEN
0c         IF(WVPA()) THEN  ! TEMP FIX ON PP SPLIT 5/18/04
0c         INQUIRE(FILE=FILE_NAME,EXIST=FILE_EXISTS)
0c         INTERCEPT = MAX_PROB - SLOPE * DBLE_MIN_CAP
0c         INTRST(J) = LTDRTE * BAL(J-1)
0c         INT_CAP = MIN_CAP
0c         INT_CAP = MIN_CAP + (MAXIMUM_ENERGY-ENERGY)/MAX_PROB
0c         INT_PROB = (MIN_PROB+MAX_PROB)/2.
0c         INT_PROB = MIN_PROB
0c         K =SO_BEG_MODA(1,I)
0c         K2=SO_END_MODA(1,I)
0c         LOAD_ACCUM(IDA)=LOAD_ACCUM(IDA)+ADDEND
0c         LinkAvC(iLink)=0.0 ! these two may ...
0c         LinkEff(iLink)=LinkEff(iLink-1)
0c         LinkID (iLink)=LinkID (iLink-1)
0c         LinkMgC(iLink)=0.0 ! ... remain non-zero
0c         MON1=K /100
0c         MON2=K2/100
0c         OPEN(R_UNIT_NUM,FILE=TRIM(OUTPUT_DIRECTORY())//EXPENOL//
0c         OTHER_PURCHASE_POWER_EXPENSE = PUR_POWER_EXPENSE_PLUS_AMORT
0c         PrevSumPower=PrevSumPower-dble(nz1)
0c         ProSym_Interface_File = TRIM(DIRECTORY_FOR_BASE_FILES)//
0c         RB_EXCLUDED_STORM_RESERVE(2,CLASS_POS) =
0c         RB_EXCLUDE_ACCRUED_VACATION_PAY(2,CLASS_POS) = 
0c         REPORT_HEADER_ACTIVE = .FALSE.
0c         R_DEACTIVE_YR = 199
0c         R_MO_DEACT = 13
0c         R_VARIABLE(769) = ! GRE_NET_MARGIN), ! 769
0c         R_VARIABLES() = NOT_AVAIL
0c         ReducedCap=GPLoad(0)-GPLoad(1)+NominalCap
0c         SFA(J) = BAL(J-1)
0c         SFA(J) = PIBIEN   - INTRST(J)
0c         SLOPE = (MIN_PROB-MAX_PROB)/(DBLE_MAX_CAP-DBLE_MIN_CAP)
0c         SourMgCst=(NodeMgC(iNode)+LinkMgC(iLink)/1000.)/LinkEff(iLink) ! $/MCF
0c         TEMP_PAYABLE_MONTHLY_VALUES = 0.
0c         TEST_DEPTH_2_ADVANCE = .TRUE.
0c         THIS_DIFF=LOAD_ACCUM(JDA-LENGYR_DA)-
0c         THIS_DIFF=LOAD_ACCUM(LENGYR_DA)-LOAD_ACCUM(IDA)+
0c         THIS_WIDTH=INT(Z1+0.999)
0c         THIS_WIDTH=NINT(Z1)
0c         TOTAL_OPERATING_EXPENSES = R_VARIABLES(476) ! Total Cash Expenses
0c         UNPAID_DIVIDENDS = 0.
0c         UbString='infinity'
0c         VALUES_TO_ZERO = INT(FINANCIAL_SIMULATION_YEARS) * 
0c         VARIABLE(364) = NOT_AVAIL ! PREFERRED_STOCK_IN_CAP
0c         VARIABLE(365) = NOT_AVAIL ! LONG_TERM_DEBT_IN_CAP
0c         VARIABLE(366) = NOT_AVAIL ! COMMON_EQUITY_BAL_IN_CAP
0c         VARIABLE(367) = NOT_AVAIL ! SHORT_TERM_DEBT_IN_CAP
0c         VARIABLE(368) = NOT_AVAIL ! FUNDS_4_CONSTRUCTION
0c         VARIABLE(636) = SBU_VARIABLES(636) + VARIABLE(636)  ! FASB143_ARO_NET_ASSET_BAL
0c         VARIABLE(637) = SBU_VARIABLES(637) + VARIABLE(637)  ! FASB143_ARO_LIABLILITY_BAL
0c         VERSION_6_OR_GREATER = .FALSE.
0c         VOID_LOGICAL = REPORT_CLASS_EMISSIONS_INFO(VARIABLE) !155 TO 208
0c         WRITE(4,"('&                        ')") 
0c         WRITE(4,"('&Multi-Party Transaction ')") 
0c         WRITE(4,'(1x,f3.1,a)') nSigma,
0c         WRITE(4,'(2I3,5F9.3,A)') I,J,
0c         WRITE(4,'(2I3,5F9.5,A)') I,JCM,
0c         WRITE(4,'(2i5,4i4,2i5,f12.3,a)') k3,i,j,j1,this_width,jcm,
0c         WRITE(4,'(4i5,f9.3)') j,jcm,day1,day2,
0c         WRITE(4,'(5i4,3f12.3,a)') DURATION,INIT_DAOFS,LENGPD_DA,
0c         WRITE(4,'(5i4,f12.3,a)') DURATION,INIT_DAOFS,LENGPD_DA,
0c         WRITE(4,'(6i4,a)') jmo,leng_thismo,jda,ida,sdo,days_rem,' AMB'
0c         WRITE(4,'(6i5,2i3,a)') ! ,f7.4
0c         WRITE(4,'(6i6)')
0c         WRITE(4,'(6i6)') duration,ida,jda,lengyr_da,bda,eda
0c         WRITE(4,'(7i4)') i,j,k,maint_presch_da,day0,prior_day2,day2
0c         WRITE(4,'(9i5,a)') i,hr_in_yr,day0,j2,julian_date,j0,jcm,
0c         WRITE(4,'(9i5,a,f8.3)') i,hr_in_yr,day0,j2,julian_date,j1,jcm,
0c         WRITE(6,"('&                        ')") 
0c         WRITE(6,"('&',A)") class_name(class_pos)
0c         WRITE(6,"('&',F9.1/)")  OBJECTIVE_FUNCTION_VALUE
0c         WRITE(6,*) 'There is no control area forecast information.'
0c         Z1=MIN(FLOAT(K),DA_RQ_REM) ! preclude overscheduling ...
0c         call EnumerateFields(OneLine,(113+2*10),1,DbgU)
0c         call locate(17,9)
0c         call ps(1,'SBAK out of sorts')
0c         do j=0,1 ! copy IDs and their serial numbers in reverse order
0c         else
0c         else ! UbValu may have been increased by 2.0**n
0c         end do
0c         end if
0c         end if ! re iSeg
0c         endfile(11)
0c         iLink=1+(iUbV-1)/nSegUsd
0c         iSeg=iUbV-(iLink-1)*nSegUsd ! 1+mod(iUbV-1,nSegUsd)
0c         iSeg=iUbV-nPriorSegs(iLink)
0c         iUbV=jVar-nTVar ! ignoring nLbV within nSNod
0c         if((Mandatory.and.(nBiU/=1)) ! decision is forced
0c         if((iLink<mLink).and.(iUbV>nPriorSegs(iLink))) iLink=iLink+1
0c         if((iSeg==nSegUsd).and.(.not.OrigBounds)) OrigUB=OrigUB/2.0
0c         if(ExpansionMultiple==1.0) write(DbgU,'(1x)')
0c         if(NodeQty(iNode)<=0.0) then ! iNode cannot function as a Demand node
0c         if(PredStruck.or.SuccStruck)
0c         if(iLink==PreviLink+1) exit ! this link is 1-way
0c         if(iSeg<nSegUsd) then ! ONLY if nUbV=mLink*(nSegUsd-1)
0c         if(iSeg==nCCSegs) j=1 ! all but final-segment costs
0c         if(j<nSegUsd) then ! after 20070615, let last segment run unbounded
0c         if(z(iCase)<0.000001d0) nz0=nz0+1 ! exclude invariant terms
0c         if(z(iCase)>0.999999d0) nz1=nz1+1 ! exclude invariant terms
0c         jcm=SO_END_MODA(jpr,i)/100
0c         nBidLink=nBidLink+1
0c         write(4,'(2i4,2f9.4,3f12.6,a)') nCases,iExpo,
0c         write(4,'(3i9,2i17,a)')
0c         write(4,'(4i5,3f8.2,2i6,a)') iUnit,i,nBiU,HrInYr,
0c         write(4,'(4i5,3f8.2,i6,6x,a)') iUnit,i,nBiU,HrInYr,
0c         write(DbgU,'( f10.0)',advance='no') NodeQty(iSNod)
0c         write(DbgU,'(2i2,f4.1,-6p,4f11.4)') j,k,r4,r8,
0c         write(DbgU,'(2i4,2e10.3,a)') iLink,iNode,NodePri(iNode),
0c         write(DbgU,'(3i4,2f15.3)') i,j,k,xFrCap(i),yDpMCF(i)
0c         write(DbgU,'(6i5,f5.1,a)') iNode,iReq,jCol,iLink,
0c         write(DbgU,'(i4,a)') iLink,' link is bidirectional'
0c         write(StdOut,'(6i3,3f6.2,2f8.2,a)')
0c         y(iCase)=yMin
0c         y(iCase)=yMin+ySpan*z(iCase)**ThisExponent
0c        ASSET_ALLOCATION_LIST(2) = 0.
0c        ASSET_CLASS_LIST(1) = R_ASSET_CLASS
0c        ASSET_CLASS_LIST(2) = 0
0c        AVAILABLE_AMT_CREDITS = AMT_CREDITS_USED-AVAILABLE_AMT_CREDITS
0c        AVERAGE_SHARES = (COMMON_SHARES(1,CLASS_POS) +  ! removed 3/2/99
0c        CALL GET_ASSET_VAR(ABS(R_ASSET_CLASS),
0c        CALL GET_ASSET_VAR(ABS(R_ASSET_CLASS_VECTOR),
0c        CALL MAP_LAST_MONTH(MIDAS_LAST_MONTH,MONTH_ENDING)
0c        CASE ('')
0c        CLASS_DEFERRED_FUEL_BALANCE = SBU_VARIABLES(392) + ! 10/17 out for testing
0c        DEALLOCATE(TEMP_ASSET_CLASS_POINTER)
0c        DO J = 2, NYRS
0c        EA_ACE_DEPRECIATION(I) = TOTAL_EA_ACE_DEP(I)
0c        EA_DEF_TAX(I,0) = ADD_EA_DEF_TAX(I)
0c        ELSE
0c        ELSEIF(CLASS_TABLE_POINTER(CLASS) /= -1) THEN
0c        ELSEIF(R_ASSET_CLASS_VECTOR > 0) THEN
0c        ENDDO
0c        ENDFILE(11)
0c        ENDIF
0c        IF(DONT_TALLY_THIS_CLASS) THEN  ! 4/29/99 need to know why this is here msg
0c        IF(MAX_BC_PAYABLES_CLASS_ID_NUM > 0) THEN
0c        IF(PAYABLES_OL == 'OL') THEN
0c        IF(R_ASSET_CLASS_VECTOR < 0) THEN
0c        IF(TEMP_FED_TAX_RATE /= -999999.) THEN
0c        INSERVICE = 1. - OUTSERVICE
0c        NET_OF_TAX_EXEXP = NET_OF_TAX_EXEXP + BTL_AMORTIZATION
0c        NPV(12,0) = GPV(12,0) - CUM_BOOK_DEP(12,0)
0c        OUTSERVICE = FLOAT(SERVICEMO-1)/12.
0c        PARM_TABLE_FED_TAX_RATE = 35. ! R_FED_TAX_RATE
0c        REAL_VOID = 
0c        REPORT_ACCOUNT_RESULTS = (DEBT_ASSET_REPORT .AND. DELETE > 1)
0c        RETURN
0c        R_CHANGE_IN_ACCOUNTS_PAYABLE = 0.
0c        R_CHANGE_IN_ACCOUNTS_RECEIVABLE = 0.
0c        R_VARIABLE_VALUE(117) = REPORTING_VARIABLES(301) ! TOTAL_CAPITAL_SERVICE
0c        TEMP_L = GregGetDaysDemand(ErrOrEnd,NodeQty,nNode)
0c        TOTAL_DEF_TAX_RATEBASE(I) = ADD_TOTAL_DEF_TAX_RATEBASE(I)
0c        TTAXDP(I,0) = EATAXDEP(I)
0c        TXDEFC(1) = TXDEFC(1) ! + CATAWBA_DEFERRED_TAXES_BAL_CR        
0c        VARIABLE(247) = SBU_VARIABLES(247) + VARIABLE(247)  ! CAWTABA
0c        VARIABLE(350) = SBU_VARIABLES(350) + VARIABLE(350)  ! BTL_AMORTIZATION_IN_EXPENSES
0c        VARIABLE_VALUE(254) = NOT_AVAIL
0c        VARIABLE_VALUE(255) = NOT_AVAIL
0c        VARIABLE_VALUE(256) = NOT_AVAIL
0c        VARIABLE_VALUE(257) = NOT_AVAIL
0c        VARIABLE_VALUE(258) = NOT_AVAIL
0c        VARIABLE_VALUE(259) = NOT_AVAIL
0c        VARIABLE_VALUE(260) = NOT_AVAIL
0c        VARIABLE_VALUE(264) = NOT_AVAIL
0c        VOID_LOGICAL = DETAILED_REPORTS_OBJECT()
0c        and added copying loops at entry and exit
0c        do I=1,1000
0c        do k=1,nLinkInto(iNode)
0c        end do
0c        endfile(11)
0c        write(DbgU,'( i3,i4,a)',advance='no')NodeType(iNode),iNode,':'
0c        write(DbgU,'(1x)',advance='no') ! expect advance=no to follow
0c        write(DbgU,'(1x)',advance='yes') ! writes CrLf after blank
0c       ! above test is equivalent to IF(K2<=LAST_UNIT_TO_SCHEDULE)
0c       CALL CMOVE(FO_BEG_HR(1,GFHR_MO,GFHR_ORG_UNIT),BEG_HR_FO,I4ST)
0c       CALL CMOVE(FO_END_HR(1,GFHR_MO,GFHR_ORG_UNIT),END_HR_FO,I4ST)
0c       CM_DUR_HR=LENGCM_DA(JCM)*24 ! one-based, <=744
0c       DA_RQ_REM is not used after 20010911 to constrain
0c       DA_RQ_REM=MAINT_REQMT_WK(I)*CALWEEK_DA ! allow for fractional days
0c       DO IDA=FINA_DA+1,LENGYR_DA
0c       DO IDA=INIT_DA,JDA
0c       ELSE ! maint. period would wrap around into January
0c       ELSE IF(IDA>LENGYR_DA-1) THEN ! mt. period would begin after Dec. 31
0c       END DO
0c       END IF
0c       ENDIF
0c       GMDR_CFRA_OUT=SO_CFRA(GMDR_ORG_UNIT)
0c       HR1=0
0c       I4ST=INT4(MAX_FO_PER_MONTH*2)
0c       I4ST=SeedRan32(INT2(NINT(EAVAIL1(1)*4095.0)),FO_SEED,R_YEAR_OR_SCEN)
0c       I4ST=SeedRan32(INT2(NINT(EAVAIL1(1)*4095.0)),I,R_YEAR_OR_SCEN)
0c       I4ST=SeedRan32(INT2(NINT(EAVAIL2(1)*4095.0)),FO_SEED,IYR)
0c       I4ST=SeedRan32(INT2(NINT(EAVAIL2(1)*4095.0)),I,IYR)
0c       I4ST=SeedRan32(J,FO_SEED,R_YEAR_OR_SCEN)
0c       I4ST=SeedRan32(J,I,R_YEAR_OR_SCEN)
0c       I=I_UNIT(K2)
0c       IF(JPR==2) THEN ! reduce DA_RQ_REM by days in range for JPR==1
0c       IF(MAINT_RQ_DA_DEC(ORDER_DEC(LAST_UNIT_TO_SCHEDULE))>0.) EXIT
0c       IF(Z1>0.499) THEN ! optimize only on units that are not 100% prescheduled
0c       JDA=MIN0(FINA_DA,LENGYR_DA) ! evaluate MIN0 FUNCTION only once per I-loop
0c       LENGYR_DA=12
0c       LENGYR_DA=365
0c       LENGYR_DA=52
0c       LinkAvC(iLink)=(NodePri(iNode)+LinkAvC(iLink)/1000.)/
0c       LinkMgC(iLink)=(NodeMgC(iNode)+LinkMgC(iLink)/1000.)/
0c       MAINT_REQMT_WK(I)=FLOAT(NINT(MAINT_REQMT_WK(I)*CALWEEK_DA))/
0c       NodeQty(iNode)=r4 ! NodeQty is used to report Qty supplied by sources
0c       NominalCap=NominalCap+CapyMW(iGP)
0c       ObjectvEF(j)=ObjectvEF(j)+r4 ! if objective can be allocated to excluded/final-seg
0c       PrevSumPower=PrevSumPower-dble(nz1)
0c       PreviLink=iLink
0c       ShoulderLoad=ShoulderLoad+(OriginalLoad-ShoulderLoad)*
0c       ThisSumPower=ThisSumPower+y(iCase)
0c       WRITE(4,'("& ",z4)') DAF_RECORD(IDA,IYR)
0c       WRITE(4,'(1x,4i4)') i,maint_presch_da,day0-1,this_width
0c       WRITE(4,'(2i5,3f9.5,a)')k2,i,maint_reqmt_wk(k2),z2,z1,' befSort'
0c       WRITE(4,'(4I4,F8.1)') I,INIT_DA,DURA_DA,FINA_DA,CAP_EFFECTIVE
0c       WRITE(4,'(4I4,F9.3,A)') I,JCM,J,K,UNIT_OUT_FRAC(JCM,4,I),
0c       WRITE(4,'(4i5)') IPRE_SO,j,beg_so_date,end_so_date
0c       WRITE(4,'(I6,I2,I4,I5,1X,A,13F6.1)')
0c       WRITE(4,'(i4,2f12.3,a)') iFRC,
0c       WRITE(4,'(i4,3f9.3,a)') iFRC,
0c       Z1=FLOAT(NINT(MAINT_REQMT_WK(K2)*CALWEEK_DA-Z2)) ! requirement expressed in "days"
0c       call SkipLines(InpU,1) ! the "9," line
0c       call WriteStrAt(10,5,'solved LP using PCX.exe')
0c       do j=0,1 ! same PWL function applies to both directions (if allowed)
0c       else
0c       else ! NOT if(nBiU==2)
0c       elseif(NodeType(iSNod)==-1) then
0c       elseif(iLink> PreviLink+1) then
0c       end do
0c       end if
0c       if    (NodeType(iSNod)== 1) then
0c       if((s(j:j)==' ').or.(s(j:j)=='/')) s(j:j)='_'
0c       if(ConsMtxOfs(MidIndex)==OneBasedOfs) exit
0c       if(GPSameHour.or.GPShoulder) exit ! reduced-cap operation is not allowed
0c       if(GPSameHour.or.GPShoulder.or.TgtAttained) exit ! reduced-cap operation is not allowed
0c       if(aSup<a(i)) aSup=a(i)
0c       if(iChar(s(i:i))>32) exit ! len(s)=16384 caused 'program stack exhausted'
0c       if(iLink>nSNod) r4=50.0 ! to exacerbate pricing errors
0c       if(iState==0)
0c       if(jFull<kFull) then
0c       if(jVar>nTVar) then
0c       if(mod(k2,PlotModulus)==0) call PlotDiff(LOAD_ACCUM,LENGYR_DA)
0c       if(mod(k3,PlotModulus)==0) call PlotDiff(LOAD_ACCUM,LENGYR_DA)
0c       if(nBiU==1) then
0c       if(r<=0.0) stop 'cannot take log of zero' ! this never caused a problem
0c       if(x(iCase)>xMin.and.ThisExponent<LimExponent.and.
0c       if(yDpMCF(nSegUsd)<=0.0) write(DbgU,'(i4,a)') iLink,' 0-cost link'
0c       j=0
0c       jFull=FullKey(i)
0c       kFull=jFull
0c       r4=0.0
0c       read(OtherField(12),*,err=442,end=442) r4 ! capacity MMCF/D
0c       write(*,'(5i6,i12,a)')
0c       write(4,'(2i4,f8.5,f11.3,2f13.3,a)') nxUnique,iCase,z(iCase),
0c       write(4,'(3i4,2f12.3)') jCase,iCase,nxUnique,x(iCase),y(iCase)
0c       write(4,'(4i4,2f9.4,2f12.6,a)')jCase,iCase,nHalfCycles,nxUnique,
0c       write(4,'(4i4,3f9.4,2f13.6,a)') nHalfCycles,nCases,nz0,nz1,
0c       write(4,'(4i6,a)') i,n,i2Array(i),ThisItem,' II'
0c       write(4,'(i4,2f11.3,f13.3,a)') iCase,x(iCase),y(iCase),
0c       write(4,'(i4,4x,2f9.4,2f12.6,a)') nCases,
0c       write(4,'(i4,f11.3,f8.5,2f13.3,a)') iCase,y(iCase),z(iCase),
0c       write(DbgU,'( 2i4,a)',advance='no') iNode,iReq,' jVar: '
0c       write(DbgU,'( i12)',advance='no') LinkNdBi(iLink)
0c       write(DbgU,'(1x)',advance='no') ! expect advance=no to follow
0c       write(DbgU,'(1x)',advance='yes') ! writes CrLf after blank
0c       write(DbgU,'(2i4,f10.1,a)') j,k,DFValue(j),' Demand as read'
0c       write(DbgU,'(3i4,f9.3,2(1x,a))') iNode,jVar,nSNod,cVect(jVar),
0c       write(DbgU,'(3i4,i9,2(1x,a))') iNode,jVar,nDNod,
0c       write(DbgU,'(3i4,i9,2(1x,a))') iNode,jVar,nSNod,
0c       write(DbgU,'(i4,4e12.5,a)') iNode,NodeQty(iNode),NodePri(iNode),
0c       write(DbgU,'(i6,f16.1,a)') iUbV,UbValu(iUbV),' relaxed UB'
0c       x(i)=xMin+(xMax-xMin)*float(i-1)/167.0
0c      ALLOCATABLE :: ASSET_CLASS_POINTER,
0c      ALLOCATE(TEMP_ASSET_CLASS_POINTER(1024))
0c      CALL CINITW(TEMP_ASSET_CLASS_POINTER,INT(1024),INT2(0))
0c      CALL CLOSE_EXISTING_ASSET_FILE
0c      CALL CLS(17,9,36)
0c      CALL FINDFILE(OBJECTIVE_FUNCTION_FILE_NAME,FILE_NAME)
0c      CALL LOCATE(16,30)
0c      CALL LOCATE(17,9)
0c      CHARACTER*34 CONSTRUCTION_WORKORDER_NAMES(0:131,0:30,0:99)
0c      DEALLOCATE(TEMP_ASSET_CLASS_POINTER)
0c      DIVIDEND_CASH_POLICY = DIVIDEND_PLUS_CURRENT_CASH
0c      DO J=IYEAR+1,MIN(IYEAR+MTGLIF,NYRS)
0c      ELSE
0c      ELSE IF(INDEX(FA_FILE_BASE_NAMES(0),'NONE') == 0) THEN
0c      ELSE IF(INDEX(SYSFRC(),'NONE') == 0) THEN
0c      ELSEIF(MIN_PROB .EQ. MAX_PROB) THEN
0c      ENDDO
0c      ENDFILE(12)
0c      ENDIF
0c      ENERGY = MAXIMUM_ENERGY
0c      ENTRY CATAWBA_BY_DEF_TAXES_BAL(CATAWBA_DEFERRED_TAXES_BAL_CR)
0c      ENTRY GET_ENV_COM_OL
0c      ENTRY OPEN_EX_OUT_FILE(R_UNIT_NUM)
0c      ENTRY RETURN_EXPENSE_CLASS_POINTER(R_EXPENSE_CLASS_POINTERS)
0c      ENTRY RETURN_NUM_OF_EXPENSE_CLASSES(R_NUM_OF_EXPENSE_CLASSES,
0c      ENTRY SBU_2_SBU_ADJUSTMENTS_BY(R_CLASS_POS)
0c      ENTRY SET_FUASTOL_TO_OL
0c      ENTRY TEST_DEPTH_2_ADVANCE
0c      IF (J <= NYRS .AND. BAL(J-1) > 0.) THEN
0c      IF(.NOT. ASSET_ANALYST_ONLY() .AND.
0c      IF(.NOT. TRANSACT_ANALYST_ONLY() .AND. INIT_FILE_IS_ACTIVE()) THEN
0c      IF(.true..or.FIRST_END_POINT .OR. OVERLAY_EXPENSE_FILES_ACTIVE.OR.
0c      IF(ALLOCATED(EXPENSE_OL_ASSET_CLASS_POINTER))
0c      IF(IOS == 0) THEN
0c      IF(LAST_FA_RECORD > 0) CALL CLS(18,70,74)
0c      IF(MAX_OL_EXPENSE_CLASS_ID_NUM > 0) THEN
0c      IF(MIN_PROB .NE. MAX_PROB .AND. MIN_CAP .NE. MAX_CAP
0c      INTEGER*2 ACTIVE_WORKORDERS(0:131,0:30)
0c      INTEGER*2 ASSET_CLASS_POINTER(:)
0c      INTEGER*2 R_EXPENSE_CLASS_POINTERS(*)
0c      IOS = ISERROR()
0c      ISTART = MAX(ISTOP,2)
0c      LOGICAL*1 MONTHLY_MIDAS_ACTIVE/.TRUE./
0c      REAL ASSET_ALLOCATION_LIST(:),ASSET_ALLOCATOR
0c      REAL ASSET_CLASS_LIST(:)
0c      REAL*4 REPORT_DATA(0:131,0:15,0:12,0:30), ! ACCT,VARIABLE,MONTHS,YEARS
0c      RETURN
0c      SAVE
0c      SAVE      USER_DAY_DATA
0c      SAVE  TRANS_MONTHLY_ENERGY,
0c      SAVE ACTUAL_TAX_VALUES
0c      SAVE AI_LAGGED_GPV,
0c      SAVE ASSET_CLASS_LIST,ASSET_ALLOCATION_LIST
0c      SAVE ASSET_CLASS_LIST,ASSET_ALLOCATION_LIST,
0c      SAVE ASSET_CLASS_POINTER
0c      SAVE ASSET_CLASS_POINTER,MAX_ASSET_CLASS_NUM
0c      SAVE ASSET_CLASS_POINTER,NUM_OF_ASSET_CLASSES,MAX_ASSET_CLASS_NUM
0c      SAVE BASE_CASE_NUM_OF_CLASSES,
0c      SAVE BTL_AMORTIZATION_IN_EXPENSES,OTHER_TAXES
0c      SAVE CALUCLATE_NUC_FUEL_PRICES
0c      SAVE CL_MONTH_NAME,TRANS_CLASS_SUM_UNIT
0c      SAVE CWIP,NFIS,NNFV,TAXEXP,NFCE,NFES,AFDC1,
0c      SAVE DEPTH_BEST_PLANS,
0c      SAVE DEPTH_BEST_PLAN_FOUND,LOCATION_OF_BEST_PLAN
0c      SAVE DESC
0c      SAVE FILL_OPTIONS_ACTIVE
0c      SAVE FINANCIAL_SIMULATION_YEARS
0c      SAVE FUEL_OWNERSHIP
0c      SAVE GROUP_NAME,
0c      SAVE GW_LOAD,GW_INDEX
0c      SAVE ID_POINTER,GENERATION_BY_INSERVICE_YEAR
0c      SAVE LAST_DEPTH_WOREST_VALUE,
0c      SAVE MAINTENANCE_RATE,ENRG_BY_FISCAL_YEAR
0c      SAVE MAX_ASSET_CLASS_NUM
0c      SAVE MONTHLY_ACTIVE
0c      SAVE MONTHLY_UNIT_CAPACITY,FUEL_PRICE_FROM_NF_FILE
0c      SAVE NF_SL_TAX_DEPRECIATION
0c      SAVE NUC_FUEL_BURN_YEARS
0c      SAVE NUC_FUEL_COST,ANNUAL_LEASOR_MARK_UP
0c      SAVE NUC_REPORTING_REC
0c      SAVE NUC_REPORTING_UNIT,NUC_FUEL_REPORTING
0c      SAVE NUC_UNITS_FOUND
0c      SAVE NUMBER_OF_RATE_CLASSES,
0c      SAVE NUM_ACTIVE_VARIABLES
0c      SAVE NUM_OF_ASSET_CLASSES,
0c      SAVE NUM_OF_CLASSES,MAX_CLASS_NUM
0c      SAVE NUM_OF_NUC_UNITS
0c      SAVE ODD_PLANS,BAD_EVEN_PLANS,BAD_ODD_PLANS,
0c      SAVE OFFSET_MAINTENANCE_ACTIVE
0c      SAVE OOPINC,ONI,CONVERGE_TEST,EQUITY_TEST,
0c      SAVE OPENING_INVESTMENT_BALANCE
0c      SAVE OPENING_REGION_BALANCE,REGION_AMORT_RATE,
0c      SAVE PASS_THROUGH_VALUES
0c      SAVE PLAN_IDENTIFIER,PLAN_OBJECT_FUNCTION_VALUE,
0c      SAVE REPORTING_UNIT,REPORTING_REC
0c      SAVE REPORTING_VARIABLES
0c      SAVE SECONDARY_SALES_NOT_IN_RATES,
0c      SAVE TAX_TIMING_CLASSIFICATION
0c      SAVE TAX_VALUES,TAX_VALUES_NOLS,
0c      SAVE TCE,TCEP,TTAXDP,TBOKDP,TAFCDP,
0c      SAVE TDDB,TDDRBB,TAMRTE,TNDB,TCAMRT,RB_DD_AMRTE,
0c      SAVE TEMP_YEAR, ! INT2
0c      SAVE TNNFV,TDDB,TDBAMR,TRBDDB,TNFRB,TNFIP,
0c      SAVE TOTAL_CAPITAL
0c      SAVE TOTAL_DEMAND_AFTER_EL,TOTAL_I4_ENERGY,TOTAL_R8_ENERGY
0c      SAVE TOTAL_MONTHLY_FA_VALUES,ASSET_CLASS_POINTER,
0c      SAVE TRANS_CLASS_SUM_REC
0c      SAVE TRANS_LOAD_AFTER_EL,MONTHLY_TRANS_LOAD_MWH,
0c      SAVE TRETIE,TBOKDP,TGPV,TOTAL_NPV_RATEBASE,TTAXDP,
0c      SAVE WD_LOAD,WD_INDEX
0c      SAVE WEEK_HYDRO_VARIABLE,TG_2_HYDRO_WEEK
0c      WRITE(6,1010) 'Error reading the above record.  Look for',
0c      WRITE(6,1010) COAL_GROUPS_FILE()
0c      WRITE(6,1010) FILE_TYPE
0c      WRITE(6,1010) GAS_GROUPS_FILE()
0c      WRITE(6,1010) MARKET_GROUPS_FILE()
0c      WRITE(6,1010) TRANS_GROUPS_FILE()
0c      WRITE(6,1010) trim(RECLN)
0c      do iNode=1,nNode
0c      end do
0c      return
0c      write(DbgU,'(/a)')
0c     ! above excludes final-segment costs
0c     ! round requirement to whole "days"
0c     +	                                MAX_OL_EXPENSE_CLASS_ID_NUM,
0c     +	                             MAX_OL_EXPENSE_CLASS_ID_NUM,
0c     +	   MAX_RATE_CLASS_ID_NUM,
0c     +   	                               MAX_BC_EXPENSE_CLASS_ID_NUM,
0c     +   	                             MAX_BC_EXPENSE_CLASS_ID_NUM,
0c     +                                       
0c     +                                                           I,1)
0c     +                                                           I,2)
0c     +                                                          I,1))
0c     +                                                          I,2))
0c     +                                                     (2,CLASS_POS)
0c     +                                                 + LTD_ISSUING_BAL
0c     +                                                 ISSDA-INT2(1),YR)
0c     +                                                 MAX_EX_CLASS_NUM)
0c     +                                                 STUDY_BASE_YEAR
0c     +                                                + LTD_ISSUING_BAL
0c     +                                                Interest Earnings)
0c     +                                                MAX_EXP_CLASS_NUM)
0c     +                                                UNIQUE_ACCT_TYPE),
0c     +                                               COVERAGE_RATIO = 10
0c     +                                               COVERAGE_RATIO = 11
0c     +                                             Monthly Amortization)
0c     +                                             PLANT_2_SERVICE(0,YR)
0c     +                                           OTHER_INCOME_AFILLIATES
0c     +                                          0:NUM_OF_ASSET_CLASSES,
0c     +                                          ISSUE_EXPENSE_BALANCE
0c     +                                          R_ADDITIONAL_PERCENT(1),
0c     +                                          R_ADDITIONAL_PERCENT(2),
0c     +                                          R_ADDITIONAL_PERCENT(3),
0c     +                                          R_ADDITIONAL_PERCENT(4),
0c     +                                          R_ADDITIONAL_PERCENT(5),
0c     +                                          R_ADDITIONAL_PERCENT(6),
0c     +                                          R_ADDITIONAL_PERCENT(7))
0c     +                                          R_ADDITIONAL_VALUE(1),
0c     +                                          R_ADDITIONAL_VALUE(2),
0c     +                                          R_ADDITIONAL_VALUE(3),
0c     +                                          R_ADDITIONAL_VALUE(4),
0c     +                                          R_ADDITIONAL_VALUE(5),
0c     +                                          R_ADDITIONAL_VALUE(6),
0c     +                                          R_ADDITIONAL_VALUE(7),
0c     +                                          R_FIRST_PERCENT,
0c     +                                          R_SECOND_CAP,
0c     +                                          R_SECOND_PERCENT,
0c     +                                          R_THIRD_CAP,
0c     +                                          R_THIRD_PERCENT,
0c     +                                         + EXPENDITURES_ProjToDate
0c     +                                         BTL Monthly Amortization)
0c     +                                        + SUBSIDARY_VARIABLES(235) ! NET_OF_TAX_NUCL_FUND_RETURN
0c     +                                       + BTL_DEFERRED_TAXES_DR
0c     +                                       + EXP_SERVICE_TRANSACTIONS
0c     +                                       R_MAX_EXPENSE_CLASS_NUM)
0c     +                                       TEMP_ASSET_CLASS_POINTER(I)
0c     +                                      + PSDIV(YR,CLASS_POS)        ! DEBT_FILE_PREFERRED_DIVIDENDS,
0c     +                                      + SBU_VARIABLES(718)
0c     +                                      - LTD_INTEREST_CASH_PAYMENTS !CASH INTEREST PAYMENTS
0c     +                                      - PS_DIVIDEND_CASH_PAYMENTS  ! PS DIVIDEND PAYMENTS
0c     +                                      - TRANSACT_MARKET_PURCHASES
0c     +                                      COMMON_STOCK_CASH_DIVIDENDS)
0c     +                                      COMMON_STOCK_DIV_ACCRUALS,
0c     +                                      INT(NUM_OF_FA_CLASSES+1)
0c     +                                      MONTHLY_COMMON_DIVIDENDS,
0c     +                                      TEMP_LIST,MASTER_CLASS_LIST)
0c     +                                     + COMMON_ISSUED_4_ACQUISITION
0c     +                                     + INTEREST_DIVIDENDS_ACCRUDED ! added 8/25/04
0c     +                                     + INTEREST_EXPENSE_ADJ(MO,I)
0c     +                                     0:FINANCIAL_SIMULATION_YEARS,
0c     +                                     NUMBER_OF_BC_EXPENSE_CLASSES,
0c     +                                     TEMP_ASSET_CLASS_POINTER)
0c     +                                    (MAX_BC_EXPENSE_CLASS_ID_NUM))
0c     +                                    (MAX_OL_EXPENSE_CLASS_ID_NUM))
0c     +                                    + ATL_FEDERAL_TAXES
0c     +                                    + ATL_STATE_TAXES
0c     +                                    + BTL_INCOME_TAXES
0c     +                                    + CAPTURED_OPT_METHOD_REVENUES
0c     +                                    + CLASS_PROPERTY_TAXES
0c     +                                    + CL_MARKET_REVENUES
0c     +                                    + COMMON_DIVIDENDS
0c     +                                    + CS_ISSUE_EXP_BAL ! is shown as an interest or dividends
0c     +                                    + EL_MARKET_REVENUES
0c     +                                    + ENVIRONMENTAL_TAX
0c     +                                    + FEDERAL_TAX_ON_CAPITAL
0c     +                                    + INTEREST_ON_LONG_TERM_DEBT
0c     +                                    + INTEREST_ON_SHORT_TERM_DEBT
0c     +                                    + LOCAL_TAXES
0c     +                                    + OTHER_TAXES
0c     +                                    + PREFERRED_DIVIDENDS
0c     +                                    + SBU_VARIABLES(235) ! NET_OF_TAX_NUCL_FUND_RETURN
0c     +                                    + STATE_TAX_ON_CAPITAL
0c     +                                    OTHER_DD_BALANCE(2,CLASS_POS)
0c     +                                    R_TAX_APPLICATION == 'F') THEN
0c     +                                    TEST_DEPTH_2_ADVANCE = .FALSE. 
0c     +                                   + CHANGE_IN_ACCOUNTS_RECEIVABLE
0c     +                                   + CONSOLIDATED_STATE_TAXES_PAID
0c     +                                   + INVESTMENT_INCOME_RECEIVABLE
0c     +                                   + R_VARIABLE(768))   ! GRE_TOTAL_INTEREST_PAYMENTS), ! 768
0c     +                                   + SBU_VARIABLES(720)
0c     +                                   + SUB_STATE_TAX_PAYMENTS_2_PARENT
0c     +                                   - BTL_CASH_EARNINGS
0c     +                                   -CLASS_AFUDC_IN_CWIP(I-1,CLASS)
0c     +                                   FE_Intra_Company_Utility_Sales)
0c     +                                   NUMBER_OF_BC_EXPENSE_CLASSES,
0c     +                                   NUMBER_OF_OL_EXPENSE_CLASSES,
0c     +                                   TEMP_ASSET_CLASS_POINTER)
0c     +                                  + BOOK_EXPEN(MO,YR)
0c     +                                  + LTD_ISSUING_BAL
0c     +                                  + PS_ISSUING_BAL
0c     +                                  - CONSOLIDATED_TAX_ADJUSTMENT
0c     +                                  - DEFERRED_FUEL_EXPENSE
0c     +                                  - SBU_VARIABLES(393)
0c     +                                  - TRANSACT_MARKET_PURCHASES
0c     +                                  DEFERRED_FUEL_BALANCE(CLASS_POS)
0c     +                                  FE_Intra_Company_Utility_Sales)
0c     +                                  FLOAT(BASE_YEAR+YR),
0c     +                                  IOFFSET,
0c     +                                  Intra Company Interest Earnings)
0c     +                                  MAX_FINANCIAL_SIMULATION_YEARS)
0c     +                                  PLANT_MONTHLY_DATA_UNITS,
0c     +                                  PLANT_MONTH_ENDING,
0c     +                                 (BOOK_EXPEN(MO,YR),MO=1,12)
0c     +                                 + AFILIATE_PURCHASE_POWER_EXPENSE
0c     +                                 + BTL_DEFERRED_TAXES_DR
0c     +                                 + FIN_DERIVATIVES_FIX_EXPENSE
0c     +                                 + FIN_DERIVATIVES_FIX_REVENUE
0c     +                                 + FIN_DERIVATIVES_VAR_EXPENSE
0c     +                                 + FIN_DERIVATIVES_VAR_REVENUE 
0c     +                                 + INTEREST_DIVIDENDS_ACCRUDED
0c     +                                 + LTD_ISSUING_BAL
0c     +                                 + OTHER_LT_LIABILITY(2,CLASS_POS)
0c     +                                 + PHYS_DERIVATIVES_FIX_EXPENSE
0c     +                                 + PHYS_DERIVATIVES_FIX_REVENUE
0c     +                                 + PS_ISSUING_BAL
0c     +                                 + SUB_STATE_TAX_PAYMENTS_2_PARENT
0c     +                                 + TRANSACT_MARKET_REVENUES
0c     +                                 + WVPA_MEMBER_COST_OF_POWER
0c     +                                 + WVPA_NON_MEMBER_COST_OF_POWER
0c     +                                 DA,R_ISEAS,CALENDAR_DAY_OF_WEEK)
0c     +                                 DAY,R_MONTH,CALENDAR_DAY_OF_WEEK)
0c     +                                 EXPENSE_BC_ASSET_CLASS_POINTER(I)
0c     +                                 EXPENSE_OL_ASSET_CLASS_POINTER(I)
0c     +                                 LEVEL_SUMATION(342,CLASS_LEVEL-1)
0c     +                                 LEVEL_SUMATION(347,CLASS_LEVEL-1)
0c     +                                 LEVEL_SUMATION(371,CLASS_LEVEL-1)
0c     +                                 LEVEL_SUMATION(372,CLASS_LEVEL-1)
0c     +                                 OTHER_PURCHASE_POWER_EXPENSE
0c     +                                 UNAMORTIZED_INTEREST_BALANCE(2,0)
0c     +                                'EX','EX','EX','EX','EX','EX'/,
0c     +                                + CAPITIALIZED_LEASE_ADDITIONS
0c     +                                + CAP_LEASES_BAL_ADJ
0c     +                                + CLASS_OTH_LIAB_SALE_ASSETS
0c     +                                + FE_Intra_Company_Utility_Sales
0c     +                                - ATL_LEASE_AMORTIZATION
0c     +                                - ATL_LEASE_PAYMENTS
0c     +                                - ATL_LEASE_PAYMENTS  ! removed 2/4/03 M.S.G
0c     +                                - BTL_LEASE_AMORTIZATION
0c     +                                - BTL_LEASE_PAYMENTS
0c     +                                - BTL_LEASE_PAYMENTS  ! removed 2/4/03 M.S.G
0c     +                                CAPITIALZIED_LEASES(1,CLASS_POS)
0c     +                                CAPITIALZIED_LEASES(2,CLASS_POS)
0c     +                                FLOAT(BASE_YEAR+YR),
0c     +                                NUMBER_OF_OL_EXPENSE_CLASSES,
0c     +                                SLOPE*(DBLE_MIN_CAP)**2/2.))
0c     +                                STORM_RESERVE_BALANCE(2,CLASS_POS)
0c     +                                TEMP_ASSET_CLASS_POINTER)
0c     +                               (BOOK_EXPEN(MO,YR),MO=1,12)
0c     +                               USE_RETAIN_POST_RETIREMENT_EARNINGS
0c     +                              + NF_DEFERRED_TAXES_CR
0c     +                              + R_VARIABLES(233) !Decommissioning
0c     +                              MONTHLY_PLANT_IN_SERVICE_EXIST) THEN ! .AND. DATA_TYPE == 'D') THEN
0c     +                              NORMALIZE_YR + BASE_YR > ISSYR) THEN
0c     +                             'EX_AST.BIN',ACCESS='DIRECT',RECL=64)
0c     +                             + ATL_LEASE_INTEREST
0c     +                             + ATL_LEASE_PAYMENTS ! REMOVED 2/4/03 MSG
0c     +                             + BTL_CASH_EARNINGS
0c     +                             + CL_FIXED_MARKET_PURCHASES
0c     +                             + Exp_AFDCBorrowed
0c     +                             + Exp_AFDCEquity
0c     +                             + NUC_DECOMMISSIONING_COST ! removed 6/27/02
0c     +                             + SBU_DEFERRED_TAXES_CR ! 682
0c     +                             - INVESTMENT_INCOME_RECEIVABLE ! INVESTMENT_INCOME 6/16/04
0c     +                             - UNBILLED_REVENUES
0c     +                             INT(2*MAX_BC_INIT_CLASS_ID_NUM))
0c     +                             INT(2*MAX_OL_INIT_CLASS_ID_NUM))
0c     +                            + FUEL_COST(Water)
0c     +                            + WVPA_MEMBER_COST_OF_POWER
0c     +                            .AND. MAXIMUM_ENERGY .NE. 0. ) THEN
0c     +                            INTRA_ACCT_SUBCLASS, ! 59
0c     +                           'PSB'//TRIM(ProSymBaseDataFile)//'.DAT'
0c     +                           + OPERATING_METHOD_ROLLUP
0c     +                           -TDDRBB(12,YR-1,ASSET_CLASS,ACCT_TYPE)
0c     +                           -TDDRBB(MO-1,YR,ASSET_CLASS,ACCT_TYPE)
0c     +                           CUM_CAPTURED_OPT_METHOD_REVS(CLASS_POS)
0c     +                           INCOME_VARIABLES(MO,
0c     +                           R_BALANCE_SHEET_VALUES(MO,mtly_cwip)
0c     +                          + ATL_AMORTIZATION(MO,YR,ASSET_CLASS,Dr)
0c     +                          + BTL_AMORTIZATION(MO,YR,ASSET_CLASS,Dr)
0c     +                          + FASB143_NET_ASSET_VALUE(2,R_CLASS_POS)
0c     +                          + LTD_PS_DEFERRED_TAX_CR
0c     +                          + NF_DEFERRED_TAXES_CR
0c     +                          -CUMULATIVE_BOOK_DEP(12,I-1,ASSET_CLASS)
0c     +                          ASSET_NEC_IN_RATE_BASE(2,CLASS_POS)
0c     +                          CIAC_RATE_BASE(2,CLASS_POS) +
0c     +                          CUM_DEF_TAX_RATEBASE(2,CLASS_POS) -
0c     +                          CUM_ITC_DEF_RATEBASE(2,CLASS_POS) -
0c     +                          CURRENT_PORTION_OF_LTD(12,0,ASSET_CLASS)
0c     +                          CWIP_IN_RATE_BASE(2,CLASS_POS) +
0c     +                          DEFERRED_DEBITS_RATE_BASE(2,CLASS_POS) +
0c     +                          INCOME_VARIABLES(MO,
0c     +                          NUC_DECOM_RATE_BASE(2,CLASS_POS) -
0c     +                          NUC_FUEL_RATE_BASE(2,CLASS_POS) + 
0c     +                          PLANT_IN_SERVICE_RATE_BASE(2,CLASS_POS)+
0c     +                         ' the primary utility in classes 1-5.'
0c     +                         + COMMON_STOCK_BOUGHT
0c     +                         + DEFERRED_GAIN_FROM_SALES(2,R_CLASS_POS)
0c     +                         + LTD_ISSUING_BAL
0c     +                         + PS_ISSUING_BAL
0c     +                         + SBU_VARIABLES(637) ! NET ARO LIAB VALUE
0c     +                         + SUBSIDIARY_INVESTMENT_ADJ removed 6/5/11 MSG
0c     +                         -CLASS_CUMULATIVE_DEPRECIATION(I-1,CLASS)
0c     +                         ACCRUED_VACATION_PAY_BALANCE(2,CLASS_POS)
0c     +                         ASSET_ALLOCATOR * ISSUE_TAX_EXPENSE(MO,I)
0c     +                         DBLE_INT_CAP .LE. DBLE_MAX_CAP ) THEN
0c     +                         UNAMORTIZED_INTEREST_BALANCE(2,CLASS_POS)
0c     +                        + CS_ISSUE_EXP_BAL                       ! is shown as an interest or dividends
0c     +                        + MONTHLY_BASE_NONFUEL_DOLLARS  ! removed 1/14/04 to match the WVPA actual member revenue MSG
0c     +                        + NET_DERIVATIVES_INCOME
0c     +                        .NOT. INIT_FILE_IS_ACTIVE()) CLASS_NUM = 0
0c     +                        DEALLOCATE(EXPENSE_OL_ASSET_CLASS_POINTER)
0c     +                        R_GOPINC = R_GOPINC- INTEREST_AMORTIZATION 
0c     +                        R_INIT_CLASS_POINTERS,
0c     +                       'Cumulated Plant Depreciation') /= 0)) THEN
0c     +                       + DSM_DEFERRED_DEBIT
0c     +                       + FASB143_LT_LIABILITY_VALUE(2,R_CLASS_POS)
0c     +                       + FE_Intra_Company_Utility_Sales
0c     +                       + NET_DD_WRITE_OFF_BALANCE
0c     +                       + NET_DEFERRED_CASH_ADJ
0c     +                       + NET_DERIVATIVES_INCOME
0c     +                       - CUM_AMORT_ADJUSTMENT(CLASS_POS)
0c     +                       EXPENSE_REVENUES_REPORT(VOID_LOGICAL)) THEN
0c     +                       INT(13*(FINANCIAL_SIMULATION_YEARS+1)),0.)
0c     +                       INTEREST_AMORTIZATION_BAL,
0c     +                       UNAMORTIZED_INTEREST_BALANCE(2,R_CLASS_POS)
0c     +                      + Payroll_Taxes
0c     +                      LTD_PS_ISSUE_TAX_EXPENSE(MO,I,ASSET_CLASS) + 
0c     +                     - R_VARIABLE(761)   ! GRE_TOTAL_INTEREST_EXPENSE), ! 761
0c     +                     - R_VARIABLE(763)   ! GRE_TOTAL_DEPRECIATION), ! 763
0c     +                     FLOAT(R_TG)
0c     +                     FLOAT(TG)
0c     +                     INTRA_ACCT_SUBCLASS ! after budget
0c     +                     TARGET_DSC * (R_VARIABLE(766)      ! GRE_MEMBER_REVENUE_REQUIREMENT), ! 773
0c     +                    + INTEREST_AMORTIZATION_BAL(MO,YR,ASSET_CLASS,ACCT_TYPE)
0c     +                    ASSET_VEC_OL == 'OL' .OR. ESCAL_OL=="OL" .OR.
0c     +                    INTEREST_AMORTIZATION_BAL(MO,YR,0,ACCT_TYPE)
0c     +                    NET_DD
0c     +                   + INTEREST_AMORTIZATION(MO,YR,ASSET_CLASS,Dr)
0c     +                   + NOTES_RECEIVABLE(:,YR,ASSET_CLASS,
0c     +                   INCOME_VARIABLES(:,Monthly Investment Earnings)
0c     +                   INCOME_VARIABLES(MO,Monthly LTD Amort Interest)
0c     +                  + NOTES_RECEIVABLE(:,YR,ASSET_CLASS,
0c     +                  FLOAT(TG)
0c     +                  HOURLY_REFERENCE_NAME,
0c     +                  HOURLY_REFERENCE_NUMBER
0c     +                  INVESTMENT_INCOME(:,YR,ASSET_CLASS,
0c     +                  SCEN_MAKER_VARIABLE,
0c     +                  TIME_FRAME,
0c     +                 ' was found.'
0c     +                 'was requested.  Vector ',VECTOR_NO,
0c     +                 BOOK_EXPEN,
0c     +                 CASH_AMOUNTS_RECEIVABLE(1:12,R_CLASS,REV_TYPE)
0c     +                 INDEX(TRANSFER_CLASSIFICATION,
0c     +                 MONTHLY_AFUDC_ON_PLANT,
0c     +                 MONTHLY_CWIP_IN_RATEBASE)
0c     +                 MONTH_VARS(:,Lease Expense)
0c     +                 PLANT_2_SERVICE,
0c     +               ' secondary pool member in class 6.'
0c     +               + MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,2,0,
0c     +               + MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,3,0,
0c     +               + MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,4,0,
0c     +               -TDDB(12,YR-1,ASSET_CLASS,BAL_SHEET_POS,ACCT_TYPE)
0c     +               -TDDB(MO-1,YR,ASSET_CLASS,BAL_SHEET_POS,ACCT_TYPE)
0c     +               -TNDB(12,YR-1,ASSET_CLASS,BAL_SHEET_POS,ACCT_TYPE)
0c     +               -TNDB(MO-1,YR,ASSET_CLASS,BAL_SHEET_POS,ACCT_TYPE)
0c     +               ASSET_ALLOCATION_LIST
0c     +               ASSET_CLASS_LIST,
0c     +               FLOAT(TG)
0c     +               INTEREST_AMORTIZATION_BAL,
0c     +              ' a "," in a character name.'
0c     +              (MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,1,0,I,1)
0c     +              (MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,1,0,I,3)
0c     +              INTEREST_AMORTIZATION_BAL(MO_BAL,YR_BAL,ASSET_CLASS)
0c     +             -MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,1,0,I,3))
0c     +             INTEREST_AMORTIZATION_BAL,
0c     +            "REAL SOLUTION TO ENERGY MAX CONSTRAINT NOT FOUND"
0c     +            (MONTHLY_AC_CONTRACT_REVENUE(ASSET_CLASS,1,0,I,2)
0c     +            + TEMP_CASH_VARS(:,Cash WVPA Non Member Purchases)
0c     +            ABACCT,
0c     +            INTEREST_AMORTIZATION_BAL,
0c     +            TEMP_CASH_VARS(:,Cash Purchased Power)
0c     +          LRECL=64 + 4*(LAST_DATA_NUMBER)+22)
0c     +         INTEREST_AMORTIZATION_BAL(0:12,
0c     +        VOID_REAL=STORE_DEPTH_BEST_PLANS(OBJECTIVE_FUNCTION_VALUE)
0c     +       (YES_HYDRO_HOURLY_REPORTS .OR. 
0c     +       CONSTRUCTION_DATABASE(0:131,0:10,0:12,0:30,0:99) ! ACCT_PTR,VARIABLES,MO,YR,WORKORDER
0c     +       MAX_RATE_CLASS_ID_NUM,
0c     +      ASSET_2_TRANS_INDEX,
0c     +      ASSET_CLASS_GROUPS_INDEX,
0c     +      ASSET_CLASS_GROUP_2_AC,
0c     +      ASSET_CLASS_HOURLY_LOAD,
0c     +      ASSET_TRANSACTION_CROSS_INDEX,
0c     +      BASECASE_MARKET_AREA_ID,
0c     +      BASECASE_NERC_SUB_ID,
0c     +      BASECASE_TRANS_AREA_ID,
0c     +      COAL_LOAD_2_TRANS_GROUPS,
0c     +      COAL_LOAD_GROUPS_INDEX,
0c     +      COAL_LOAD_GROUP_2_TG,
0c     +      CUST_CLASS_GROUPS_INDEX,
0c     +      CUST_CLASS_GROUP_2_CG,
0c     +      DAY_OF_WEEK,
0c     +      FIRST_AC_TG,
0c     +      FIRST_TABLE_TG,
0c     +      HYDRO_HOURLY_LOAD,
0c     +      LAST_TABLE_FOR_CG,
0c     +      LAST_TABLE_FOR_TG,
0c     +      MONTHLY_AC_CONTRACT_REVENUE,
0c     +      MONTHLY_AC_COST_AT_MARKET,
0c     +      MONTHLY_INDEXED_ENERGY_REVENUE,
0c     +      MONTHLY_UNITS,
0c     +      NUMBER_ASSET_2_TRANS,
0c     +      NUMBER_TRANS_PER_AC_TG,
0c     +      PRICE_INDEX_ACTIVE
0c     +      TABLE_ACTIVE,
0c     +      TABLE_DAY_SHIFT,
0c     +      TABLE_HOURLY_LOAD,
0c     +      TRANS_HOURLY_LOAD,
0c     +      TRANS_LOAD_2_TRANS_GROUPS,
0c     +      TRANS_LOAD_GROUPS_INDEX,
0c     +      TRANS_LOAD_GROUP_2_TG,
0c     +      TRANS_MONTHLY_CUSTOMERS,
0c     +      TRANS_MONTHLY_PEAK,
0c     +      TRANS_WITHIN_AC_TG,
0c     +      WD_INDEX,
0c     +     ACTIVE_OPTIONS,
0c     +     ACTUAL_MONTHLY_TAX_VALUES,
0c     +     ACTUAL_VALUE_FOUND
0c     +     ADDITIONAL_CAPACITY_PERCENT,
0c     +     ADDITIONAL_CAPACITY_VALUE,
0c     +     AFDC1B,AFDCDF,CAPINRST,PCAPINRST,
0c     +     AFDC1C,AFDC2,RBCWIP,DDB,RBDDB,AFCEXP,
0c     +     AI_AFUDC_ON_CASH,
0c     +     AI_ANNUAL_CLASS_DEP,
0c     +     AI_CLASS_CASH,
0c     +     AI_CLASS_EXPENSE
0c     +     AJAFDC,EXEXP,DBAMRT,NFRB,AFDC2C,WODFTX,
0c     +     ANNUAL_CLASS_CUSTOMERS,
0c     +     ANNUAL_CLASS_CUSTOMER_REVENUE,
0c     +     ANNUAL_CLASS_ENERGY,
0c     +     ANNUAL_CLASS_ENERGY_REVENUE,
0c     +     ANNUAL_CLASS_PEAK,
0c     +     ANNUAL_CLASS_PEAK_REVENUE,
0c     +     ANNUAL_CUSTOMERS, ! REAL4
0c     +     ANNUAL_ENERGY, ! REAL4
0c     +     ANNUAL_MULTIPLIER, ! REAL4
0c     +     ANNUAL_PEAK, ! REAL4
0c     +     ANN_CAP,PEAK,OPTION_POINTR,
0c     +     ASSET_CLASS_GROUPS_INDEX,
0c     +     ASSET_CLASS_GROUP_2_AC, 
0c     +     ASSET_CLASS_ID,
0c     +     ASSET_CLASS_ID, ! REAL4
0c     +     ASSET_CLASS_REV_ALLOC_VECTOR,
0c     +     ASSET_CLASS_REV_ALLOC_VECTOR, ! REAL4
0c     +     ATL_AMORTIZATION,
0c     +     ATL_AMORT_SUB_ITEMS,
0c     +     ATL_CURRENT_TAX_EXPENSE,
0c     +     ATL_DEF_TAX,
0c     +     AVAIL_ANNUAL_UNITS,
0c     +     AVAIL_CUM_UNITS,
0c     +     BASECASE_MARKET_AREA_ID,
0c     +     BASECASE_SUBREGION_ID,
0c     +     BASE_CASE_COAL_AREA_ID,
0c     +     BASE_CASE_GAS_AREA_ID,
0c     +     BASE_CASE_MAX_CLASS_NUM
0c     +     BASE_CASE_TRANS_AREA_ID,
0c     +     BEST_OBJECT_FUNCTION_VALUE,
0c     +     BTL_AMORTIZATION,
0c     +     BTL_CURRENT_TAX_EXPENSE,
0c     +     BTL_DEF_TAX,
0c     +     BUDGET_EXPENSE
0c     +     CALCULATION_MODE, ! CHAR*1
0c     +     CAPACITY_ADDER,
0c     +     CASH_REV_EXP_MONTHLY,,
0c     +     CLASS_AFUDC_IN_CWIP
0c     +     CLASS_CUSTOMER_REVENUE,
0c     +     CLASS_ENERGY_REVENUE,
0c     +     CLASS_GPV,CLASS_CUMULATIVE_DEPRECIATION,
0c     +     CLASS_PEAK_REVENUE,
0c     +     COAL_DEMAND_PLANNING_PEAK
0c     +     COAL_GROUP_INDEX,
0c     +     COAL_GROUP_POSITION,
0c     +     COAL_NODE_GROUP,
0c     +     CREATE_HOURLY_PRICE,
0c     +     CURRENT_DEPTH_BEST_VALUE,
0c     +     CURRENT_DEPTH_WOREST_VALUE,
0c     +     CURRENT_TARGET_RATIO,
0c     +     CUSTOMER_CLASS_NAME, ! CHAR*30
0c     +     CUSTOMER_GROUP, ! INT2 
0c     +     DEFERRED_CASH_ADDITIONS,
0c     +     DEPTH_PLANS_2_SAVE,
0c     +     DEPTH_PLANS_SAVED,
0c     +     DEPTH_PLAN_OBJECTIVE_VALUE,
0c     +     DEPTH_WOREST_PLAN_LOCATION,
0c     +     DISTRIBUTION_PRICE, ! REAL4
0c     +     DIST_ENERGY_LOSS_FACTOR, ! REAL4
0c     +     EATAXBOKDEP,EANORMTAXDP,EA_DEF_TAX,
0c     +     EA_DEF_TAX_BASIS,CUMULATIVE_BOOK_DEP
0c     +     EXPENSES_MONTHLY,REVENUES_MONTHLY,CASH_MONTHLY,
0c     +     FINANCIAL_SIMULATION_YEARS
0c     +     FINANCIAL_SIMULATION_YEARS,
0c     +     FIRST_CAPACITY_PERCENT,
0c     +     FIRST_CAPACITY_VALUE,
0c     +     GAS_GROUP_ID,
0c     +     GAS_GROUP_INDEX,
0c     +     GAS_GROUP_POSITION,
0c     +     GAS_NODE_GROUP,
0c     +     GN_2_HYDRO_GROUP,
0c     +     GROUP_ACTIVE,
0c     +     GS_2_HYDRO_GROUP,
0c     +     HOURLY_PRICE_NAME,
0c     +     HYDRO_AGGREGATION_INDEX,
0c     +     HYDRO_AGGREGATION_POSITION,
0c     +     HYDRO_GROUP_2_GN,
0c     +     HYDRO_GROUP_2_GS,
0c     +     HYDRO_GROUP_2_TG,
0c     +     HYDRO_LOAD_AGGREGATION,
0c     +     INDEXED_ENERGY_PRICE,
0c     +     INTEREST_AMORTIZATION,
0c     +     INTEREST_AMORTIZATION_BAL(:,:,:),
0c     +     INTEREST_AMORTIZATION_BAL,
0c     +     JDBAMR,JPCAPINRST,JTXEXP,
0c     +     LAST_LEVEL_PLANS,
0c     +     LAST_THIS_YR_ENERGY,
0c     +     LAST_THIS_YR_PEAK,
0c     +     LEASOR_MARK_UP
0c     +     LEASOR_NF_BOOK_DEPRECIATION
0c     +     LEASOR_NF_DEFERRED_TAX_BASIS,
0c     +     LEASOR_NF_SL_TAX_DEPRECIATION,
0c     +     LEASOR_NF_TAX_DEP,
0c     +     LIST_OF_COMBINATIONS
0c     +     LOCAL_CUSTOMER_NAME,
0c     +     MARKET_CUSTOMER_PRICE, ! REAL4
0c     +     MARKET_DEMAND_PRICE, ! REAL4
0c     +     MARKET_ENERGY_PRICE, ! REAL4
0c     +     MAXIMUM_MARKET_PRICE,
0c     +     MAXIMUM_TESTING_RM,     
0c     +     MAX_ASSET_CLASS_NUM,NUM_OF_ASSET_CLASSES,
0c     +     MAX_BAD_PLANS
0c     +     MAX_HOURLY_RAMP_DOWN,
0c     +     MAX_HOURLY_RAMP_UP,
0c     +     MAX_NUMBER_OF_PLANS_TO_SAVE,
0c     +     MAX_OPTION_DEPTH,MIN_OPTION_DEPTH,
0c     +     MINIMIZED_OBJECT_FUNCTION
0c     +     MINIMIZED_OBJECT_FUNCTION,
0c     +     MINIMUM_MARKET_PRICE,
0c     +     MINIMUM_TESTING_RM    
0c     +     MONTHLY_CLASS_CUSTOMERS,
0c     +     MONTHLY_CLASS_ENERGY,
0c     +     MONTHLY_CLASS_PEAK,
0c     +     MONTHLY_CUSTOMERS, ! (12) REAL4
0c     +     MONTHLY_DEMAND_PRICE_PATTERN, ! REAL4
0c     +     MONTHLY_ENERGY, ! (12) REAL4
0c     +     MONTHLY_ENERGY_PRICE_PATTERN, ! REAL4
0c     +     MONTHLY_HYDRO_BASE,
0c     +     MONTHLY_HYDRO_ENERGY,
0c     +     MONTHLY_HYDRO_PEAK,
0c     +     MONTHLY_PEAK, ! (12) REAL4
0c     +     MONTHLY_TABLE_ENERGY,
0c     +     MONTHLY_TABLE_PEAK,
0c     +     MONTHLY_TRANS_BASE,
0c     +     MONTHLY_TRANS_ENERGY,
0c     +     MONTHLY_TRANS_LOAD_HYDRO_MW
0c     +     MONTHLY_TRANS_LOAD_HYDRO_MWH,
0c     +     MONTHLY_TRANS_PEAK,
0c     +     MRX_VOLATILITY_MULT,
0c     +     NF_BOOK_DEPRECIATION
0c     +     NF_DEFERRED_TAX_BASIS,
0c     +     NF_TAX_DEP,
0c     +     NIGHT_SCARCITY_MULT,
0c     +     NOX_SEASON,
0c     +     NOX_YEAR,
0c     +     NUM_OF_ASSET_CLASSES,MAX_ASSET_CLASS_NUM
0c     +     NUM_OF_BAD_PLANS,NUM_OF_BAD_PLANS_LAST_DEPTH,
0c     +     OFF_PEAK_SPINNING_RESERVE,
0c     +     OFF_PEAK_SPINNING_UNITS,
0c     +     OPTION_ANN_UNITS,OPTION_AVAIL_UNITS,
0c     +     OPTION_CAP,OPTION_LOADING_TYPE,
0c     +     OPTION_DEPTH,
0c     +     OPTION_IS_ACTIVE,
0c     +     OTHER_OM_AMORT,
0c     +     OTHER_REVENUES_NOT_IN_RATES
0c     +     OWNED_NF_SL_TAX_DEPRECIATION,
0c     +     OWNED_NF_TAX_DEP,
0c     +     PEAK_COIN_FACTOR, ! REAL4
0c     +     PEAK_LOSS_FACTOR, ! REAL4
0c     +     PLANNING_TRIGGER_METHOD,
0c     +     PLANS_2_TEST_AT_NEXT_DEPTH,
0c     +     PLANS_SAVED_4_NEXT_DEPTH,
0c     +     PLAN_BEING_TESTED,
0c     +     PLAN_HAS_MUT_EXC_UNIT,
0c     +     PLAN_HAS_MUT_EXC_UNITS,
0c     +     PLAN_OPTION_SEQUENCE,
0c     +     PROPERTY_TAX_GPV,PROPERTY_TAX_NPV,
0c     +     PURCHASE_ASSET_ALLOC_VECTOR
0c     +     PURCHASE_ASSET_CLASS_ID,
0c     +     PURCHASE_POWER_AMORT
0c     +     PURCHASE_POWER_ASSIGN,
0c     +     RATE_ASSET_CLASS_POINTER
0c     +     RBCWIP_AFDC_METH2,RB_AFDC1,
0c     +     RBCWIP_AFDC_METH2,RB_TXEXP,RB_TXDEF,
0c     +     RB_AFDC1,PROPERTY_TAX_GPV,PROPERTY_TAX_NPV,
0c     +     RB_TAXDP,RB_BOKDP,RB_PCAPINRST,
0c     +     RB_TXPREFDEP,RB_AMRTE,RB_ITCPY,RB_ITC,
0c     +     REFERENCE_LOAD_NAME, ! CHAR*5
0c     +     REFERENCE_LOAD_NUMBER, ! INT2
0c     +     REGION_CAP_ALLOCATION,
0c     +     REPORT_CL_CAPACITY,
0c     +     RTO_GROUP,
0c     +     SECOND_CAPACITY_PERCENT,
0c     +     SECOND_CAPACITY_VALUE,
0c     +     SPINNING_RESERVE,
0c     +     SPINNING_UNITS,
0c     +     TABLE_CUSTOMER_REVENUE,
0c     +     TABLE_DEMAND_REVENUE,
0c     +     TABLE_ENERGY_REVENUE,
0c     +     TAFDC1,TAFDC2,TCWIP,TRBCWP,TITCDP,
0c     +     TAFDC2,TAFDC1,TEXEXP,TTXEXP,TAFEXP,TAFCAJ,
0c     +     TAFDCB,TWODFT,TAFDCF,RB_NPV,
0c     +     TAMRTE,TEXEXP,TAFDPA,TCEPTX,TAFCAJ,
0c     +     TAX_TIMING_DIFFERENCES,
0c     +     TBKDPT,TITCPY,TAFEXP,TBKDPA,
0c     +     TF_PLANNING_PEAK
0c     +     TG_2_HYDRO_GROUP,
0c     +     THIRD_CAPACITY_PERCENT,
0c     +     THIRD_CAPACITY_VALUE,
0c     +     TIER_TARGET
0c     +     TIME_ZONE,
0c     +     TITCDF,TTXEXP,TTXDEF,TDDB,TRBDDB,
0c     +     TOTAL_DEF_TAX_BASIS_RATEBASE,
0c     +     TOTAL_DEF_TAX_RATEBASE,EA_ACE_DEPRECIATION,
0c     +     TPCAPINRST,TTXPREFDEP,TOTAL_ACE_BOOK_DEP,
0c     +     TRANSACTION_GROUP,
0c     +     TRANSACTION_GROUP, ! INT2
0c     +     TRANSMISSION_PRICE, !REAL4
0c     +     TRANS_CUSTOMER_REVENUE,
0c     +     TRANS_DEMAND_REVENUE,
0c     +     TRANS_ENERGY_LOSS_FACTOR, ! REAL4
0c     +     TRANS_ENERGY_REVENUE,
0c     +     TRANS_GROUP_INDEX,
0c     +     TRANS_GROUP_POSITION,
0c     +     TRBFIP,TNFCE,TAFC1C,TNFIS,TAFC2C,TNFES,
0c     +     TWODFT,TAFDCB,TAFDCD,TNFCE_LEASED,TPCAPINRST,
0c     +     VARIABLE_OM_AMORT,
0c     +     WEEKEND_SCARCITY_MULT,
0c     +     WRITE_TO_EXPANSION_REPORT,
0c     +  ' source nodes one path-step from destination on left'
0c     +  (TRANSACT_ANALYST_ONLY() .OR. .NOT. INIT_FILE_IS_ACTIVE())) THEN
0c     20020414 AGT changed most REAL*4 to real*8, most FLOAT to dble;
0c     =                           -TOTAL_NPV_RATEBASE(12,I-1,ASSET_CLASS)
0c     ALLOCATABLE :: CASH_EXPENDITURES
0c     ALLOCATABLE :: PAYABLES_BC_ASSET_CLASS_POINTER,
0c     ALLOCATE(SO_CFRA(NUNITS),STAT=I4ST)
0c     AMIN1 to min, AMAX1 to max; and added copying loops at entry & exit
0c     CALL CHECK_ALLOC_STATUS(I4ST,'OFRA',B0)
0c     ConsMtxOfs(ConsMtSize)=OneBasedOfs
0c     DO I = 1, FINANCIAL_SIMULATION_YEARS 
0c     DO IDA=0,22
0c     DO K2=1,N_ACTIVE_UNITS
0c     DO LAST_UNIT_TO_SCHEDULE=N_ACTIVE_UNITS,1,-1 ! 9/25/98. GAT.
0c     ELSE
0c     END DO
0c     END IF
0c     ENDDO
0c     ENDFILE(11)
0c     ENDIF
0c     ENTRY EXPENSE_REVENUE_ADJUSTMENTS(R_YR,R_PERIOD,R_ZERO_VALUES,
0c     ENTRY EXPENSE_REVENUE_INFO(R_YR,R_PERIOD,R_CLASS,R_CLASS_EXISTS,
0c     ENTRY RETURN_NUM_OF_PAYABLES_CLASSES(R_NUM_OF_PAYABLES_CLASSES,
0c     ENTRY RETURN_PAYABLES_CLASS_POINTER(R_PAYABLES_CLASS_POINTERS)
0c     FileName='Presumed INFEASIBLE solution; retrying with UB=UB*10'
0c     IF(CLASS_TABLE_POINTER(CLASS) /= -1 .AND.
0c     IF(FO_SEED==0) THEN ! use unit's I to compute the seed; FO_SEED remains 0
0c     IF(INTERP_WT(JMO)<WEEK_FR) ! allocate remainder of days to JCM+1
0c     IF(R_ASSET_CLASS < 0.) THEN
0c     INTEGER*2 JCM,LENGCM_DA(*)
0c     INTEGER*2 NUMBER_OF_BC_PAYABLES_CLASSES/0/,
0c     INTEGER*2 NUMBER_OF_OL_PAYABLES_CLASSES/0/,
0c     INTEGER*2 PAYABLES_BC_ASSET_CLASS_POINTER(:),
0c     INTEGER*2 R_NUM_OF_PAYABLES_CLASSES,R_MAX_PAYABLES_CLASS_NUM,
0c     J=NINT(DAVAIL1*10000.0) ! 20030529 GAT added these 2 lines to overcome ...
0c     J=NINT(FLOAT(J)*0.4095) ! ... difference in I4ST from F77L3 to LF95
0c     LOGICAL*1 MONTHLY_MIDAS_ACTIVE/.TRUE./
0c     LOGICAL*1 WRAP_EOY
0c     NominalCap=0.0
0c     Note to GAT from AGT:  this is the driver used to test NonlinearlyMap
0c     OneBasedOfs=OneBasedCol+(OneBasedRow-1)*nVar ! for column=major order
0c     OneBasedOfs=OneBasedRow+(OneBasedCol-1)*mReq ! for row-major order
0c     OrigBounds=B0 ! give PCX one more try at converging to Optimal Feasible solution
0c     OrigBounds=B1
0c     PARAMETER(MAX_ITER=20)
0c     PEAKCP4=sngl(PEAKCP)
0c     PEAKCP=dble(PEAKCP4)
0c     PKENRG=dble(PKENRG4)
0c     PRN8=MixRand32() ! needed to flush near-identical initial vals from sequence
0c     PlotModulus=N_ACTIVE_UNITS/13 ! so that only 15 total plots are output
0c     PrtDetail=1 ! for debugging details (some)
0c     PrtDetail=2 ! for debugging details (more)
0c     REAL ADD_EA_TAX_DEP(*)
0c     REAL TAXDP(0:*),BOKTAX(0:*)
0c     REAL*4 ASSET_DEFERRED_TAX_BASIS(0:*),ASSET_DEFERRED_TAXES(0:*)
0c     REAL*4 CASH_EXPENDITURES(:,:)
0c     REAL*4 PKENRG4,PEAKCP4,WLPROB4(1000,2),WLOADS4(1000,2) ! caller's vars
0c     RETURN
0c     SAVE CASH_EXPENDITURES
0c     SAVE PAYABLES_BC_ASSET_CLASS_POINTER,
0c     SAVE PLANNING_PEAK,PLANNING_PEAK_MONTH_IS,SAVE_NET_PLANNING_PEAK,
0c     SUBROUTINE PKSHIF(PKENRG4,PEAKCP4,WLPROB4,WLOADS4, ! caller's REAL*4 vars
0c     SupValue=aSup
0c     ThisSumPower=0.0d0 ! useful below only during debugging
0c     WRITE(4,'(" ",5I4)') IUNIT,DAY1,DURA_DA,INIT_DA,FINA_DA
0c     WRITE(4,'(2f7.2,2i4,2f7.2,a)') fo_freq,fo_dura,
0c     WRITE(4,'(2i4,3f9.3,f10.6,a)') iState,sFRC,
0c     WRITE(4,'(2i4,f8.1,f8.5,a)') iState,nFRC,EdMean,Lambda,' GTTS'
0c     WRITE(4,'(8i4,a)') day0,day1,day2,day3,day4,N_AVAIL_SEGS,
0c     WRITE(4,'(a,i4,a,i4)')
0c     aSup=-1.0e32
0c     after 20010831, allow for MAX_FO_PER_MONTH>1
0c     call DisplayField(12) ! judged useless after 20070827
0c     call Indexed_Sort_Ascending(ContigPrices,ContigHour,
0c     call Indexed_Sort_Ascending(ContigPrices,ContigHour, ! ContigHour undefined herein
0c     call NonlinearlyMap(x,xMin,xMax,y,100.0,2000.0,20000.0,168)
0c     call NonlinearlyMap(x,xMin,xMax,y,100.0,2000.0,300000.0,168)
0c     call PUT_ANNUAL_MARKET_PRICES(R_ANNUAL_MARKET_PRICES,cYr)
0c     call PlotDiff(LOAD_ACCUM,LENGYR_DA) ! excl. presch. mnt.
0c     call PlotDiff(LOAD_ACCUM,LENGYR_DA) ! incl. presch. mnt.
0c     call READ_USER_MARKET_ANNUAL(R_YEAR, ...
0c     call WriteStrAt(20,5,trim(FileName))
0c     call WriteStrAt(8,5,'after  filling constraint matrix')
0c     call WriteStrAt(8,5,'after  sorting constraint matrix')
0c     character*(*) s
0c     copy values from caller's REAL*4 variables to local REAL*8
0c     copy values from caller's REAL*4 variables to local real*8
0c     copy values to caller's REAL*4 variables from local REAL*8
0c     copy values to caller's REAL*4 variables from local real*8
0c     disabled 20010501 to allow matching clients' targets exactly
0c     do J=1,2
0c     do MidIndex=1,ConsMtSize
0c     do i=1,168
0c     do i=1,n
0c     do i=1,nItems
0c     do j=LengNB(s),1,-1
0c     end
0c     end do
0c     endfile(11)
0c     iLink=0
0c     if((xSpan<=0.0d0).or.(ySpan<=0.0d0)) stop
0c     if(.not.OrigBounds)
0c     if(MidIndex<=ConsMtSize) RCMvalue=ConsMtxNze(MidIndex) ! e;se retain 0.0
0c     if(OneBasedOfs<ConsMtxOfs(1         )) return ! unlikely
0c     if(OneBasedOfs>ConsMtxOfs(ConsMtSize)) return
0c     if(i>n) call ps(1,'specified index not found on list (IndexIn)')
0c     if(iState==0)
0c     if(nFullCapHr>nint(168.0*TimeRatio(0)/(TimeRatio(0)+TimeRatio(1))))
0c     integer*2 i
0c     integer*2 j,LengNB
0c     integer*2 n,i
0c     jLimit=j-1 ! if the above loop exited with error or EoF
0c     kFull=0
0c     nDays=365 ! extend the averages to cover a whole year
0c     program RescaleTest
0c     real*4 aSup,a(*)
0c     real*4 function SupValue(n,a)
0c     real*4 x(168),y(168),xMin,xMax
0c     same as INTEG8 except here the array arguments are real*8
0c     stop 'end of Rescale Test'
0c     subroutine ReplacdDelims(s)
0c     with two cases of extreme targets on 20010612:
0c     write(*,'(i3,2(1x,a))') LengNB(FileName),trim(FileName),FileName
0c     write(*,'(i5,3(i3,1x,a),a)') iUnit,LengNB(FileName),FileName,
0c     write(4,'(2i4,3f10.3,a)') jIntermediate,iIntermediate,
0c     write(4,'(5e14.6,i6,a)') xMin,xMax,yMin,yMax,ySum,nCases,' NLM'
0c     write(DbgU,'(1x,a)') trim(FileName)
0c     write(DbgU,'(2e12.5,a)') 0.0001,SupLinkQty,' SupLinkQty'
0c     xMax=1000.0
0c     xMin=100.0
0c    +	                             MAX_BC_PAYABLES_CLASS_ID_NUM,
0c    +	                          MAX_OL_PAYABLES_CLASS_ID_NUM,
0c    +                                                         TEMP_CWIP
0c    +                                                     VARIABLE(359)
0c    +                                                 SBU_VARIABLES(47)
0c    +                                                SBU_VARIABLES(380)
0c    +                                              SBU_VARIABLES(212))/ 
0c    +                                           ADJUSTMENT_2_OP_REV_TAX
0c    +                                           OTHER_LT_LIABILITY(2,0)
0c    +                                           TOTAL_EXPENSE_AND_TAXES
0c    +                                          .OR. REPORT_ALL_ACCOUNTS
0c    +                                          CASH_EXPENDITURES)
0c    +                                        EXP_PURCHASE_POWER_EXPENSE
0c    +                                        SUBSIDARY_VARIABLES(212))/ 
0c    +                                        USE_STATE_TAX_BENEFITS_NOW
0c    +                                       .NOT. TABLE_NOT_FOUND) THEN
0c    +                                       CONSOLIDATED_TAX_ADJUSTMENT
0c    +                                       MAX_BC_INIT_CLASS_ID_NUM,
0c    +                                       R_MAX_PAYABLES_CLASS_NUM)
0c    +                                      AINTDB(YR,ASSET_CLASS)
0c    +                                      AINTDB(YR,ASSET_CLASS)/12.
0c    +                                      AINTPS(YR,ASSET_CLASS)
0c    +                                      AINTPS(YR,ASSET_CLASS)/12.
0c    +                                      CLASS_REVENUE_TAX_REVENUES +
0c    +                                      DUMMY_TYPE,ASSET_CLASS_LIST)
0c    +                                      NUM_OF_BC_INIT_CLASSES,
0c    +                                      TEMP_ASSET_CLASS_POINTER)
0c    +                                     + INCOME_TAX_TIMING_ADJS
0c    +                                     + LTD_PS_DEFERRED_TAX_CR
0c    +                                     ACCT_SUBCLASS)
0c    +                                     EATAXBOKDEP(YR,ASSET_CLASS)
0c    +                                     INTRA_ACCOUNT_CLASSIFICATION,
0c    +                                     INTRA_EXPENSE_COLLECTION,
0c    +                                     MONTHLY_ALLOCATED_VALUES,
0c    +                                     TAX_TYPE,
0c    +                                     TREND_NORM
0c    +                                    COMMON_SHARES(2,CLASS_POS))/2.
0c    +                                    EXCLUDE_SUB_INVESTMENT
0c    +                                    EXCLUDE_SUB_RETAINED_EARNINGS+
0c    +                                   (MAX_BC_PAYABLES_CLASS_ID_NUM))
0c    +                                   AINTDB(YR,ASSET_CLASS)
0c    +                                   AINTPS(YR,ASSET_CLASS) +
0c    +                                   CONSOLD_FED_TAXES_B4_CREDITS) -
0c    +                                   CONSOLIDATED_FED_CREDITS_USED -
0c    +                                   CONSOLIDATED_FED_TAX_ADJ -
0c    +                                   CONSOLID_SEC_29_CREDITS_USED
0c    +                                  100.*(SUBSIDARY_VARIABLES(134) +
0c    +                                  CLASS_BASE_REVENUE
0c    +                                  CLASS_FORECAST_REVENUES
0c    +                                  LEVEL_SUMATION(,CLASS_LEVEL-1)
0c    +                                  LEVEL_SUMATION(0,CLASS_LEVEL-1))
0c    +                                  MARKET_BASE_REVENUES +
0c    +                                  VARIABLE,
0c    +                                 + BTL_AMORTIZATION
0c    +                                 + PS_PREM_ISSUE_EXP_AMORT
0c    +                                 - BTL_NUC_FUEL_DECOM_LIABILITY
0c    +                                 AINTDB(YR,ASSET_CLASS))/12.
0c    +                                 DUMMY_TYPE,ASSET_ALLOCATION_LIST)
0c    +                                 EATAXBOKDEP(YR,ASSET_CLASS)/12.
0c    +                                 LEVEL_SUMATION(126,CLASS_LEVEL-1)
0c    +                                (AINTPS(YR,ASSET_CLASS) +
0c    +                                +    EXCLUDE_SUB_COMMON_EQUITY
0c    +                                +    EXCLUDE_SUB_RETAINED_EARNINGS
0c    +                                + LTD_ADDEM_INTEREST
0c    +                                DEFERRED_FUEL_BALANCE(R_CLASS_POS)
0c    +                                EA_DEF_TAX_BASIS(YR,ASSET_CLASS)
0c    +                                NUMBER_OF_BC_PAYABLES_CLASSES,
0c    +                                PROPERTY_TAX_GPV(YR,ASSET_CLASS)
0c    +                                PROPERTY_TAX_NPV(YR,ASSET_CLASS)
0c    +                                R_NOTES_PAYABLE_CLEARED,
0c    +                                R_NOTES_PAYABLE_INTEREST,
0c    +                                R_NOTES_PAYABLE_MADE,
0c    +                                R_NOTES_RECEIVABLE_CLEARED,
0c    +                                R_NOTES_RECEIVABLE_MADE,
0c    +                                R_STATE_TAXABLE_INCOME_B4_NOLS(MO)
0c    +                                SHORT_TERM_DEBT(2,CLASS_POS))/2.
0c    +                                TEMP_ASSET_CLASS_POINTER)
0c    +                               ATL_FEDERAL_TAXES,
0c    +                               ATL_STATE_TAXES,
0c    +                               FEDERAL_TAXES,
0c    +                               STATE_TAXES)
0c    +                              - BTL_AMORT_OF_BOOK
0c    +                              EXCLUDE_SUB_TAX_DEFERRALS_DR
0c    +                              MAX(0.,EARNINGS_AVAILABLE_TO_COMMON)
0c    +                             + BTL_AMORTIZATION
0c    +                             + NUC_DECOM_FUND_LIABILITY(CLASS_POS)
0c    +                             100.*(VARIABLE(134) + VARIABLE(212))/
0c    +                             CLASS_TYPE(CLASS_POS) == PARENT) THEN
0c    +                             INT(2*MAX_BC_PAYABLES_CLASS_ID_NUM))
0c    +                             INT(2*MAX_OL_PAYABLES_CLASS_ID_NUM))
0c    +                             NUMBER_OF_OL_PAYABLES_CLASSES,
0c    +                             TEMP_ASSET_CLASS_POINTER)
0c    +                            (SHORT_TERM_DEBT(1,CLASS_POS) +
0c    +                            + INCOME_TAX_TIMING_ADJS
0c    +                            + WVPA_NON_MEMBER_COST_OF_POWER
0c    +                            DEBT_COMMON_SHARES_BUYBACK /= 0.) THEN
0c    +                            EA_DEF_TAX_BASIS(YR,ASSET_CLASS)/12.
0c    +                            PROPERTY_TAX_GPV(YR,ASSET_CLASS)/12.
0c    +                            PROPERTY_TAX_NPV(YR,ASSET_CLASS)/12.
0c    +                            PS_ISSUE_EXP_BAL(MO,YR,ASSET_CLASS)
0c    +                            VARIABLE_VALUE(227))   ! NF_TAX_EXPENSE
0c    +                           -  BTL_AMORTIZATION
0c    +                           - BTL_NUC_FUEL_DECOM_LIABILITY
0c    +                           FIN_DERIVATIVES_FIX_EXPENSE)
0c    +                           FIN_DERIVATIVES_FIX_REVENUE,
0c    +                           FIN_DERIVATIVES_VAR_EXPENSE,
0c    +                           FIN_DERIVATIVES_VAR_REVENUE,
0c    +                           LTD_ISSUE_EXP_BAL(MO,YR,ASSET_CLASS)
0c    +                           PHYS_DERIVATIVES_FIX_EXPENSE,
0c    +                           PHYS_DERIVATIVES_FIX_REVENUE,
0c    +                           PHYS_DERIVATIVES_VAR_EXPENSE,
0c    +                           PHYS_DERIVATIVES_VAR_REVENUE,
0c    +                           REPORTING_VARIABLES(40)   ! STD_INTEREST
0c    +                          ANNUAL_DEFERRED_CASH_AMORT(0,CLASS_POS))
0c    +                          CUMULATIVE_BOOK_DEP(12,YR,ASSET_CLASS) 
0c    +                          MONTHLY_BOOK_DEP_VECTOR(MO,TREND_YR)/
0c    +                          NET_DEFERRED_EXPENSE_CASH(0,CLASS_POS),
0c    +                          PS_ISSUE_EXP_AMORT(MO,YR,ASSET_CLASS)
0c    +                         INSERVICE*(MAX((CWIP(J-1)-CEP(J)),0.) -
0c    +                         LTD_ISSUE_EXP_AMORT(MO,YR,ASSET_CLASS)
0c    +                         MAX((CEP(J)-CWIP(J-1)),0.)/2.))
0c    +                         OUTSERVICE*CWIP(J-1) + 
0c    +                        + NUC_DECOM_FUND_LIABILITY(CLASS_POS)
0c    +                        R_PAYABLES_CLASS_POINTERS,
0c    +                       (OUTSERVICE*CE(J)/2.+CWIP(J-1))
0c    +                       100.*(SBU_VARIABLES(134) +
0c    +                       CUMULATIVE_BOOK_DEP(MO,YR,ASSET_CLASS) 
0c    +                       DEBT_COMMON_SHARES_ISSUED /= 0. .OR.
0c    +                       ThisExponent>0.0d0) then ! avoid crashing at 0**(ThisExpo<0)
0c    +                      + NUC_DECOM_FUND_LIABILITY(CLASS_POS) !PLANT
0c    +                     MIPS_INCOME_TAX_DEDUCTION(YR,ASSET_CLASS)/12.
0c    +                    .AND. CLASS_TYPE(CLASS_POS) /= REGULATED_GROUP ! PARENT OR SUB
0c    +                    CLASS_TYPE(CLASS_POS) /= REGULATED_GROUP) THEN ! PARENT OR SUB
0c    +                    INCOME_VARIABLES(MO,)
0c    +                   MIPS_INCOME_TAX_DEDUCTION(YR,ASSET_CLASS)
0c    +                   OperCost(2,iMo)*BlockCap(2,iUnit))/
0c    +                   PAYABLES_BC_ASSET_CLASS_POINTER,
0c    +                  (BlockCap(1,iUnit    )+BlockCap(2,iUnit))
0c    +                  .AND.(PARENT_CLASS .OR. REPORT_CLASS(CLASS_POS))
0c    +                  OPT_PAIRJ0,OPT_PAIRJ1,DAY2,OPT_NWKSX7,THIS_WIDTH
0c    +                  STORE_PARM_TABLE_FED_TAX_RATE(0.) ! PARM_TABLE_FED_TAX_RATE)
0c    +                 +DEF_TAXES_FROM_NOLS_AMT_CREDITS
0c    +                 - BTL_AMORTIZATION
0c    +                 BTL_AMORTIZATION -
0c    +                DEBT_COMMON_STOCK_BUYBACK /= 0. .OR.
0c    +               PAYABLES_OL_ASSET_CLASS_POINTER,
0c    +               TEMP_ASSET_CLASS_POINTER
0c    +              LOAD_ACCUM(IDA-LENGYR_DA)
0c    +              LOAD_ACCUM(JDA-LENGYR_DA)-LOAD_ACCUM(0)
0c    +             CASH_EXPENDITURES(0:12,0:FINANCIAL_SIMULATION_YEARS))
0c    +            CostCriterion(1),
0c    +            CostCriterion(2),MktPrice,
0c    +            STORE_PARM_TABLE_FED_TAX_RATE(PARM_TABLE_FED_TAX_RATE)
0c    +            StrikeMMHHH(1,i2,iUnit),
0c    +            ThisMMHHH,' PSFU StartMMHHH bef/aft rev'
0c    +            j,k-1,' LinkNdSN reduced'
0c    +          + CASH_VARIABLES(R_MO,Cash DOE Decommissioning) ! 9/7/00 removed to match annual
0c    +          MAX_BC_PAYABLES_CLASS_ID_NUM/0/
0c    +          MAX_OL_PAYABLES_CLASS_ID_NUM/0/
0c    +          Ofs(j),Ofs(k),a(Ofs(j)),a(Ofs(k))
0c    +          PAYABLES_OL_ASSET_CLASS_POINTER(:),      
0c    +          R_PAYABLES_CLASS_POINTERS(*)
0c    +          SO_BEG_MODA(1,i),SO_END_MODA(1,i),
0c    +          SO_BEG_MODA(2,i),SO_END_MODA(2,i),
0c    +          TEMP_ASSET_CLASS_POINTER(:)
0c    +          i,jcm,jpr,j,day1,prior_day2,day2,
0c    +          maint_scheduled_fract(i,jcm),' MSF'
0c    +          opt_nwksx7,opt_pairj0,opt_pairj1,inf_pairsum,' Div'
0c    +         LM_AS_RESOURCE,LM_AS_PLANNED_CAPACITY,
0c    +         PLANNING_PEAK_AFTER_FEEDBACK,INIT_PLANNING_PEAK
0c    +        ' NP,LC,LCS aft restore'
0c    +        ' cycle orig=0 & testD'
0c    +        ' cycle orig>0 & testD'
0c    +        (LinkQtySeg(iSeg,iLink),iSeg=1,nSegUsd)
0c    +        (hr1+23)/24,(hr1+fo_dur_hr-1+23)/24
0c    +        (iNode),LinkChg(iLink),LnkQCEF(1,0),
0c    +        + CASH_VARIABLES(R_MO,)
0c    +        LinkAvQSeg(iSeg,iLink),' LAQ'
0c    +        MinorKey(j),MajorKey(j),MinorKey(k),MajorKey(k),' SBAKaft'
0c    +        MinorKey(j),MajorKey(j),MinorKey(k),MajorKey(k),' SBAKbef'
0c    +        OPT_PAIRJ0,           OPT_NWKSX7,   Z2,' 1 of 2'
0c    +        OPT_PAIRJ1,THIS_WIDTH-OPT_NWKSX7,Z1-Z2,' 2 of 2'
0c    +        SO_BEG_MODA(1,i),SO_END_MODA(1,i),
0c    +        SO_BEG_MODA(2,i),SO_END_MODA(2,i),
0c    +        UbValu(iUbV),'UbValu',trim(VarDesc(jVar))
0c    +        avail_da,day0,cm_dur_hr,fo_dur_hr,slack_hr,z1,
0c    +        hr1,hr1+fo_dur_hr-1,
0c    +        i,jcm,jpr,j,day1,prior_day2,day2,
0c    +        iLink,kLink,InfCycOrg,CycOrg,MinTestDepth,InfRation,
0c    +        iUbV=jVar-nSegUsd+1,jVar),' cVect'
0c    +        jVar,YearStr,DayStr,AComma
0c    +        maint_scheduled_fract(i,jcm),' MSF'
0c    +        r4,NodeQtyHardLim(iNode),
0c    +        z(iCase),PrevSumPower,' PSP'
0c    +       CPL_TAX__VARIABLES(MO,,ATL)  
0c    +       CPL_TAX__VARIABLES(MO,,ATL) -
0c    +      '-sigma TTS-outlier rejected in GetTimesToState'
0c    +      (100.0*UNIT_OUT_FRAC(J,K,I),K=1,5),' WYCF'
0c    +      (LinkAvC(iLink)+NodePri(iNode)*1000.)                ! Taudit 22.5342
0c    +      (LinkAvC(iLink)+NodePri(iNode)*1000.)/LinkEff(iLink) ! Taudit  0.1553
0c    +      (LinkAvC(iLink)/LinkEff(iLink)+NodePri(iNode)*1000.) ! Taudit 22.4479
0c    +      (LinkNdSN(j,iNode),j=0,1),r4,' FinalSegAMtxCoef'
0c    +      (UNIT_OUT_FRAC(JCM,K,I),K=1,4),Z2,' ANNUAL_OUTAGE'
0c    +      .or.(nBiU<0) ! decision is on aggregate
0c    +      BEG_O_DATE,END_O_DATE,
0c    +      BlockCap(iBiU,iMo),
0c    +      CostCriterion(1),
0c    +      CostCriterion(2),MktPrice,
0c    +      GBEG_DD(GMDR_JPAIR),GEND_DD(GMDR_JPAIR),' GMDR' ! ,GMDR_CFRA_OUT
0c    +      GMDR_JPAIR,GMDR_MO,GMDR_INDEX,GMDR_ORG_UNIT,
0c    +      LinkChg(iLink),' LinkChg after NodePri zeroing'
0c    +      MAINT_SCHEDULED_FRACT(K2, 13),' YTD'
0c    +      MAINT_SCHEDULED_FRACT(K2,JCM)
0c    +      MAINT_SCHEDULED_FRACT(K2,JCM),
0c    +      OperCost(iBiU,iMo),
0c    +      PrevExponent,ThisExponent,
0c    +      PrevSumPower,ThisSumPower,ErrorSumPowr,' SumPow error'
0c    +      PricesHDM(iHr,iDa,iMo),
0c    +      SO_BEG_MODA(1,i),SO_END_MODA(1,i),inf_pairsum,' Ind'
0c    +      SpyQCEF(j,k),LnkQCEF(j,k),DmdQCEF(j,k)
0c    +      StrikeMMHHH(1,i,iUnit),
0c    +      StrikeMMHHH(1,i,iUnit),' PSFU'
0c    +      StrikeMMHHH(2,i,iUnit),' PSFU'
0c    +      StrikeValue,OptionValue,' GSS'
0c    +      bda,eda,THIS_DIFF,LOAD_ACCUM(EDA),LOAD_ACCUM(BDA),' OD1b'
0c    +      beg_in_mo(jcm),k*24+hr_in_da,' bfh'
0c    +      call AppendFloat9(LkvU,QtySum)
0c    +      duration,ida,jda,lengyr_da,ida-lengyr_da,jda-lengyr_da
0c    +      end_in_mo(jcm),k*24+hr_in_da,' efh',HrsToState(1,j2)
0c    +      i,MinorKey(i),MajorKey(i),kFull,jFull,' SBAK final'
0c    +      iUnit,i,iBiU,iMo,iDa,iHr,
0c    +      ida,jda,INF_DIFFER,' OD1'
0c    +      ida,jda,THIS_DIFF,LOAD_ACCUM(JDA),LOAD_ACCUM(IDA),' OD1a'
0c    +     PAYABLES_OL_ASSET_CLASS_POINTER
0c    +     write(4,'(4i5,2L2)')iUnit,i,nBiU,HrInYr,PredStruck,SuccStruck
0c    +    ' UOFj4i'
0c    +    (100.0*UNIT_OUT_FRAC(J,K,I),J=1,13),K=1,5)  ! report as percentages
0c    +    (CMURec,K,ISC,cYear,UnitNameAndNumber,
0c    +    (SumGenMWH-TgtGenMWH)/((OriginalLoad-ShoulderLoad)*float(iHr))
0c    +    ,(' A',jVar,jVar=1,jCol)
0c    +    -dble(nz1)
0c    +    CALWEEK_DA
0c    +    DmdQCEF(:,2),' DS'
0c    +    GFHT_K2,R_YEAR_OR_SCEN,R_MONTH,J,I,GFHT_SEQN_USED,' GFHT'
0c    +    LinkEff(iLink) ! formula used in DerivePriceFromSources() for SourMgCst
0c    +    LinkEff(iLink) ! same form as above
0c    +    ThisAccum,HrsToState(iState,iFRC),' m_cTTS'
0c    +    ThisAccum,HrsToState(iState,iFRC),CdSDev,' rawTTS'
0c    +    ThisSumPower,' aft MNonlMap'
0c    +    ThisSumPower,ThisSumPower-ySum,' after MNonlMap'
0c    +    VarDesc(jVar),NodeName(iNode)
0c    +    call AppendFloat7(SnvU,cVect(jVar)/1000.) ! NodePri(iNode)
0c    +    call AppendFloat9(SnvU,r4)
0c    +    nint(cVect(jVar)),VarDesc(jVar),NodeName(iNode)
0c    +    x(jCase),x(iCase),pDiff,xDiff,' p/xDiff'
0c    +    y(iCase),ThisSumPower,ThisSumPower-ySum,' after NonlMap'
0c    +    yMin,yMax,ySpan,ySum,TargSumPower,' SumPow target'
0c    +    yMin,ySpan,ySum,TargSumPower,' SumPow target'
0c    +   NominalCap,
0c    +   PASS_THROUGH_VALUES(4:10),
0c    +   ReducedCap,
0c    +  ' in GetTimesToState, mean-corrected set of TTS rejected at',
0c    +  'Domain or range is void or zero in NonlinearlyMap'
0c    +  (7.*WEEK_FR-ADDEND)/FLOAT(LENGCM_DA(JCM+1))
0c    +  (NodeQty(NodeSNofDFRank(j)),j=1,SupDFRank)
0c    +  AV_DAYS_SEG(1),AV_DAYS_SEG(2),
0c    +  AV_DAYS_SEG(1),AV_DAYS_SEG(2),' avail days'
0c    +  HrInYr,L1_FALSE) ! for descending order
0c    +  MOFRACT_MT(JCM+1)=MOFRACT_MT(JCM+1)+
0c    +  SAVE_HrInYr,L1_FALSE) ! for descending order
0c    +  ThisAccum,TargAccum,EdMean,MeanCorr,' mcorr'
0c    +  iFRC,' of',nFRC
0c    +  iFS,FSType(iFS),iCC,CCType(iCC),' before open()'
0c    +  nfo_seg(1),nfo_seg(2),' # FO events'
0c    +  y(iIntermediate),ySum,ThisySum,' penultimate ySum'
0c   ! first we test with ySum a little greater than nCases*yMin
0c   ! for repeatability, seed the pseudo-random number generator
0c   ! next we test with ySum a little less than nCases*yMax
0c   ! returns the largest algebraic value in array a
0c   ! sorted order in ContigHour is preserved
0c   ! verify ascending order of Key array
0c   20030410 AGT changed local REALs to REAL*8, FLOAT to dble,
0c   20030422 AGT changed caller's REALs to REAL*8
0c  200 CALL LOCATE(20,0)
0c  300 CALL LOCATE(20,0)
0c  Deferred Debits
0c 10/1/02               CAPITIALZIED_LEASES(2,CLASS_POS) = SBU_VARIABLES(92) +
0c 10/1/02            CAPITIALZIED_LEASES(2,CLASS_POS) =
0c 10/1/02     +                                 - CONSOLIDATED_TAX_ADJUSTMENT
0c 2/2/05 the following lines adjust the annual cash flow statement to accout
0c 220 PKENRG4=sngl(PKENRG)
0c 442   if(r4<0.0) r4=0.0
0c 443   if(r4<0.0) r4=0.0 ! negative value implies 'revert to mominal capacity'
0c 444   if(r4<0.0) r4=0.0 ! negative value implies 'revert to nominal capacity'
0c 7/11/02     +                       INTEREST_AMORTIZATION_BAL(MO,0,ASSET_CLASS,DEBIT)
0c 9/28/98 fix which still has common dividends wrong.
0c 9/29/02            FEDERAL_TAXES_ACCRUAL_ADJ = FEDERAL_TAXES_ACCRUAL_ADJ
0c 9/29/02     +                                 - CONSOLID_FED_INCOME_TAX_ACCRUAL
0c 9/29/02     +                                 CONSOLIDATED_TAX_LIB_ADJUSTMENT ! FUNDS_CONSOLIDATING_ADJUSTMENT
0c 9/29/02     +                                + CONSOLIDATED_TAX_LIB_ADJUSTMENT ! CONSOLIDATED_TAX_ADJUSTMENT+
0c 9/30/02                  CALL COMMON_STOCK_DIVIDEND_ACCRUAL(
0c AFUDC
0c ANNUAL TOTALS
0c ANNUAL TOTALS FOR ALL CLASSES
0c B2LogRF is the base-2 logarithm of the max allowable bounds-relaxation factor
0c Cash Additions to xxxx
0c EBITAD and EBIT
0c END OF MORTGAGE
0c Expense Section
0c Greg, the above has a problem when three or more LPROBs are the same
0c KA suggestion MSG 1/6/04
0c MIDAS Gold Analyst 2000.03         Simulation Module         Transact Analyst "
0c Manufactured Gas Production Plant 141-149 sum in 150
0c NEEDE FOR PURCHASED rm EXPENSE 11/12/07 DrG
0c RATE BASE
0c Recomputed variable numbers 12/21/06 TMS
0c Revenue Section
0c SP CapEx Variables added 11/17/05 MSG
0c added 1/24/97 Cash Flow Statement
0c added 11/6/02 MSG for FE
0c atl tax expense
0c because of the year check. The year check isn't needed. For this
0c direct account reporting
0c for intra-company notes receivable income.  
0c moved to eliminate adding SUB to SUB 12/30/97
0c now at line 6673            IF(ACCURAL_ACCOUNTING_ACTIVE) THEN
0c nuclear fuel expenses and taxes
0c reason it has been removed. MSG 10/4/02
0c set up report
0c switch isn't available at this point. It's choosen in asset_class_analysis.
0c test of fix cash balance
0c the base year.  When doing overlays the overlay process does not happen
0c the makebin code for this file forces the year variable to be based on
0c this file should be in the project directory LF95's FINDFILE doesn't
0c to cover the excluded items
0c value.  This happened with the WSCC area 12/167/98
0c work 9/8/01 msg
